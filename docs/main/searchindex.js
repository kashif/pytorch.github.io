Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "future_mod", "futures", "fx", "fx.experimental", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/python.object-model", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/exportdb/torch.mutation", "generated/exportdb/torch.operator", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.UnpackedDualTensor", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.enter_dual_level", "generated/torch.autograd.forward_ad.exit_dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.BackwardCFunction", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.function.InplaceFunction", "generated/torch.autograd.function.NestedIOFunction", "generated/torch.autograd.function.once_differentiable", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.grad_mode.inference_mode", "generated/torch.autograd.grad_mode.set_grad_enabled", "generated/torch.autograd.grad_mode.set_multithreading_enabled", "generated/torch.autograd.gradcheck.GradcheckError", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.graph.increment_version", "generated/torch.autograd.profiler.EnforceUnique", "generated/torch.autograd.profiler.KinetoStepTracker", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.parse_nvprof_trace", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.profiler.record_function", "generated/torch.autograd.profiler_util.Interval", "generated/torch.autograd.profiler_util.Kernel", "generated/torch.autograd.profiler_util.MemRecordsAcc", "generated/torch.autograd.profiler_util.StringTable", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "generated/torch.fx.experimental.symbolic_shapes.constrain_range", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify", "generated/torch.fx.experimental.symbolic_shapes.definitely_false", "generated/torch.fx.experimental.symbolic_shapes.definitely_true", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols", "generated/torch.fx.experimental.symbolic_shapes.hint_int", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int", "generated/torch.fx.experimental.symbolic_shapes.parallel_and", "generated/torch.fx.experimental.symbolic_shapes.parallel_or", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true", "generated/torch.fx.experimental.symbolic_shapes.sym_eq", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_device", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.CircularPad1d", "generated/torch.nn.CircularPad2d", "generated/torch.nn.CircularPad3d", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LPPool3d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.attention.SDPBackend", "generated/torch.nn.attention.bias.CausalBias", "generated/torch.nn.attention.bias.CausalVariant", "generated/torch.nn.attention.bias.causal_lower_right", "generated/torch.nn.attention.bias.causal_upper_left", "generated/torch.nn.attention.sdpa_kernel", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.lp_pool3d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.convert_conv3d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrizations.weight_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.utils.swap_tensors", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.xpu.current_device", "generated/torch.xpu.device", "generated/torch.xpu.device_count", "generated/torch.xpu.device_of", "generated/torch.xpu.get_device_capability", "generated/torch.xpu.get_device_name", "generated/torch.xpu.get_device_properties", "generated/torch.xpu.is_available", "generated/torch.xpu.set_device", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "meta", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.attention", "nn.attention.bias", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/fsdp", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_aot_inductor", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils", "xpu"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "future_mod.rst", "futures.rst", "fx.rst", "fx.experimental.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/python.object-model.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/exportdb/torch.mutation.rst", "generated/exportdb/torch.operator.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.UnpackedDualTensor.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.enter_dual_level.rst", "generated/torch.autograd.forward_ad.exit_dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.BackwardCFunction.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.function.InplaceFunction.rst", "generated/torch.autograd.function.NestedIOFunction.rst", "generated/torch.autograd.function.once_differentiable.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.grad_mode.inference_mode.rst", "generated/torch.autograd.grad_mode.set_grad_enabled.rst", "generated/torch.autograd.grad_mode.set_multithreading_enabled.rst", "generated/torch.autograd.gradcheck.GradcheckError.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.graph.increment_version.rst", "generated/torch.autograd.profiler.EnforceUnique.rst", "generated/torch.autograd.profiler.KinetoStepTracker.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.parse_nvprof_trace.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.profiler.record_function.rst", "generated/torch.autograd.profiler_util.Interval.rst", "generated/torch.autograd.profiler_util.Kernel.rst", "generated/torch.autograd.profiler_util.MemRecordsAcc.rst", "generated/torch.autograd.profiler_util.StringTable.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints.rst", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic.rst", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv.rst", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_range.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_false.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_true.rst", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious.rst", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols.rst", "generated/torch.fx.experimental.symbolic_shapes.hint_int.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_and.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_or.rst", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true.rst", "generated/torch.fx.experimental.symbolic_shapes.sym_eq.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_device.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.CircularPad1d.rst", "generated/torch.nn.CircularPad2d.rst", "generated/torch.nn.CircularPad3d.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LPPool3d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.attention.SDPBackend.rst", "generated/torch.nn.attention.bias.CausalBias.rst", "generated/torch.nn.attention.bias.CausalVariant.rst", "generated/torch.nn.attention.bias.causal_lower_right.rst", "generated/torch.nn.attention.bias.causal_upper_left.rst", "generated/torch.nn.attention.sdpa_kernel.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.lp_pool3d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.convert_conv3d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrizations.weight_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.utils.swap_tensors.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.xpu.current_device.rst", "generated/torch.xpu.device.rst", "generated/torch.xpu.device_count.rst", "generated/torch.xpu.device_of.rst", "generated/torch.xpu.get_device_capability.rst", "generated/torch.xpu.get_device_name.rst", "generated/torch.xpu.get_device_properties.rst", "generated/torch.xpu.is_available.rst", "generated/torch.xpu.set_device.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "meta.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.attention.rst", "nn.attention.bias.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/fsdp.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_aot_inductor.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst", "xpu.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.__future__", "torch.futures", "torch.fx", "torch.fx.experimental", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "python.object-model", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "torch.mutation", "torch.operator", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "UnpackedDualTensor", "dual_level", "torch.autograd.forward_ad.enter_dual_level", "torch.autograd.forward_ad.exit_dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "BackwardCFunction", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "InplaceFunction", "NestedIOFunction", "torch.autograd.function.once_differentiable", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "inference_mode", "set_grad_enabled", "set_multithreading_enabled", "torch.autograd.gradcheck.GradcheckError", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.increment_version", "EnforceUnique", "KinetoStepTracker", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.parse_nvprof_trace", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "record_function", "Interval", "Kernel", "MemRecordsAcc", "StringTable", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "DimConstraints", "DimDynamic", "EqualityConstraint", "RelaxedUnspecConstraint", "ShapeEnv", "StatefulSymbolicContext", "StatelessSymbolicContext", "StrictMinMaxConstraint", "SubclassSymbolicContext", "SymbolicContext", "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "torch.fx.experimental.symbolic_shapes.constrain_range", "torch.fx.experimental.symbolic_shapes.constrain_unify", "torch.fx.experimental.symbolic_shapes.definitely_false", "torch.fx.experimental.symbolic_shapes.definitely_true", "torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "torch.fx.experimental.symbolic_shapes.has_free_symbols", "torch.fx.experimental.symbolic_shapes.hint_int", "torch.fx.experimental.symbolic_shapes.is_concrete_bool", "torch.fx.experimental.symbolic_shapes.is_concrete_int", "torch.fx.experimental.symbolic_shapes.parallel_and", "torch.fx.experimental.symbolic_shapes.parallel_or", "torch.fx.experimental.symbolic_shapes.statically_known_true", "torch.fx.experimental.symbolic_shapes.sym_eq", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_device", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "CircularPad1d", "CircularPad2d", "CircularPad3d", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LPPool3d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "SDPBackend", "torch.nn.attention.bias.CausalBias", "CausalVariant", "torch.nn.attention.bias.causal_lower_right", "torch.nn.attention.bias.causal_upper_left", "torch.nn.attention.sdpa_kernel", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.lp_pool3d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.convert_conv3d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrizations.weight_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.utils.swap_tensors", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.xpu.current_device", "device", "torch.xpu.device_count", "device_of", "torch.xpu.get_device_capability", "torch.xpu.get_device_name", "torch.xpu.get_device_properties", "torch.xpu.is_available", "torch.xpu.set_device", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "Meta device", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.attention", "torch.nn.attention.bias", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "FSDP Notes", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils", "torch.xpu"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 53, 57, 58, 59, 60, 70, 71, 146, 481, 598, 675, 684, 730, 733, 734, 735, 740, 741, 743, 751, 752, 755, 759, 783, 784, 794, 795, 809, 819, 836, 853, 888, 904, 906, 907, 908, 923, 934, 946, 951, 954, 973, 987, 1008, 1054, 1097, 1117, 1154, 1166, 1178, 1203, 1211, 1212, 1246, 1249, 1256, 1257, 1261, 1263, 1265, 1280, 1297, 1322, 1354, 1417, 1418, 1419, 1422, 1438, 1439, 1447, 1452, 1457, 1458, 1483, 1484, 1485, 1487, 1493, 1494, 1497, 1502, 1504, 1515, 1530, 1531, 1532, 1533, 1534, 1564, 1565, 1643, 1662, 1674, 1681, 1682, 1696, 1716, 1724, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1766, 1769, 1774, 1810, 1820, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1911, 1913, 1923, 1934, 1950, 1952, 1954, 1955, 1959, 1961, 1962, 1964, 1966, 1968, 1969, 1970, 1981, 1982, 1983, 1984, 1987, 1990, 1991, 1993, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2039, 2043, 2044, 2045, 2047, 2048], "conveni": [0, 3, 7, 14, 25, 39, 42, 43, 49, 55, 1166, 1171, 1307, 1665, 1828, 1923, 1925, 1934, 1950, 1954, 1963, 1977, 1978, 1981, 1983, 1989, 1990, 2003, 2010, 2030, 2032, 2033, 2038, 2039], "method": [0, 3, 7, 9, 14, 15, 18, 21, 25, 26, 27, 29, 31, 32, 33, 34, 40, 42, 46, 49, 56, 57, 58, 60, 62, 68, 69, 76, 217, 218, 319, 481, 482, 483, 492, 493, 494, 515, 609, 788, 792, 794, 810, 811, 812, 833, 836, 849, 869, 870, 871, 887, 888, 895, 896, 897, 898, 899, 900, 901, 919, 920, 934, 1034, 1148, 1203, 1247, 1249, 1250, 1252, 1253, 1254, 1260, 1261, 1265, 1266, 1267, 1295, 1313, 1314, 1321, 1322, 1380, 1383, 1391, 1399, 1401, 1402, 1428, 1429, 1444, 1487, 1488, 1489, 1493, 1497, 1498, 1503, 1505, 1515, 1592, 1665, 1674, 1678, 1689, 1691, 1694, 1696, 1698, 1701, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1718, 1723, 1739, 1740, 1741, 1743, 1753, 1785, 1866, 1881, 1885, 1923, 1950, 1951, 1952, 1955, 1956, 1959, 1963, 1964, 1966, 1968, 1969, 1970, 1976, 1977, 1978, 1981, 1983, 1984, 1985, 1987, 1990, 1992, 1995, 1998, 2002, 2003, 2006, 2008, 2011, 2013, 2017, 2018, 2020, 2021, 2023, 2026, 2031, 2032, 2035, 2038, 2043, 2045, 2046], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 29, 30, 31, 33, 35, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 58, 82, 149, 219, 250, 396, 398, 481, 675, 688, 690, 691, 694, 730, 753, 755, 776, 815, 816, 828, 872, 890, 894, 903, 905, 926, 936, 945, 951, 958, 959, 960, 967, 983, 987, 1001, 1003, 1012, 1014, 1076, 1077, 1080, 1084, 1102, 1113, 1114, 1116, 1119, 1120, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1132, 1134, 1159, 1160, 1161, 1165, 1166, 1170, 1193, 1206, 1207, 1208, 1209, 1238, 1239, 1241, 1242, 1245, 1246, 1247, 1250, 1263, 1269, 1270, 1271, 1274, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1318, 1319, 1321, 1322, 1327, 1330, 1337, 1338, 1339, 1340, 1344, 1347, 1349, 1350, 1351, 1352, 1355, 1373, 1378, 1379, 1381, 1384, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1563, 1565, 1575, 1576, 1583, 1588, 1590, 1591, 1609, 1610, 1628, 1630, 1631, 1634, 1635, 1637, 1643, 1646, 1674, 1676, 1677, 1681, 1682, 1688, 1716, 1717, 1718, 1719, 1728, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1772, 1782, 1784, 1785, 1805, 1806, 1841, 1847, 1848, 1853, 1857, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1885, 1900, 1909, 1910, 1911, 1912, 1913, 1918, 1919, 1929, 1930, 1931, 1932, 1933, 1934, 1952, 1953, 1955, 1956, 1961, 1962, 1963, 1965, 1968, 1971, 1976, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2011, 2013, 2015, 2016, 2018, 2020, 2025, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2040, 2043, 2045, 2046, 2047], "some": [0, 1, 3, 7, 8, 9, 14, 20, 21, 22, 25, 27, 30, 31, 33, 35, 43, 44, 46, 47, 49, 52, 54, 55, 57, 58, 81, 83, 472, 481, 491, 562, 684, 743, 910, 930, 967, 998, 1032, 1050, 1054, 1057, 1097, 1118, 1120, 1128, 1129, 1130, 1145, 1155, 1166, 1171, 1180, 1181, 1246, 1247, 1249, 1250, 1260, 1263, 1265, 1295, 1313, 1319, 1344, 1351, 1354, 1391, 1395, 1399, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1446, 1449, 1450, 1451, 1452, 1453, 1457, 1478, 1479, 1487, 1490, 1491, 1492, 1494, 1501, 1502, 1503, 1518, 1519, 1535, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1604, 1609, 1628, 1631, 1636, 1643, 1665, 1674, 1675, 1676, 1677, 1688, 1722, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1784, 1804, 1828, 1834, 1848, 1885, 1925, 1934, 1950, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1961, 1962, 1963, 1964, 1968, 1969, 1970, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2000, 2002, 2003, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2020, 2026, 2032, 2033, 2034, 2036, 2037, 2038, 2041, 2042, 2043, 2044, 2045], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 21, 24, 27, 30, 31, 32, 39, 40, 42, 43, 47, 50, 55, 57, 58, 59, 60, 75, 76, 78, 79, 80, 81, 82, 250, 309, 317, 331, 348, 398, 440, 441, 442, 443, 444, 481, 483, 488, 491, 494, 508, 510, 512, 584, 675, 681, 684, 736, 737, 738, 742, 743, 752, 753, 763, 764, 774, 780, 787, 788, 790, 791, 794, 818, 821, 854, 856, 857, 860, 884, 886, 895, 896, 898, 900, 901, 910, 921, 935, 936, 938, 940, 943, 945, 947, 949, 954, 957, 964, 967, 975, 979, 981, 1001, 1003, 1031, 1040, 1071, 1076, 1077, 1078, 1079, 1092, 1097, 1098, 1099, 1100, 1110, 1115, 1133, 1145, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1166, 1167, 1198, 1201, 1207, 1208, 1249, 1260, 1261, 1265, 1266, 1269, 1279, 1292, 1302, 1305, 1306, 1319, 1320, 1329, 1336, 1344, 1349, 1354, 1364, 1365, 1378, 1381, 1395, 1400, 1405, 1406, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1459, 1473, 1478, 1483, 1484, 1485, 1487, 1500, 1505, 1506, 1507, 1514, 1529, 1530, 1532, 1534, 1538, 1560, 1561, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1580, 1584, 1585, 1587, 1588, 1592, 1596, 1603, 1609, 1611, 1618, 1619, 1629, 1631, 1635, 1643, 1649, 1650, 1661, 1662, 1663, 1664, 1674, 1676, 1677, 1718, 1724, 1729, 1733, 1734, 1752, 1758, 1768, 1772, 1781, 1782, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1810, 1827, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1859, 1861, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1884, 1900, 1918, 1922, 1923, 1925, 1934, 1937, 1948, 1949, 1951, 1952, 1956, 1959, 1963, 1977, 1979, 1980, 1981, 1982, 1984, 1985, 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2002, 2005, 2007, 2009, 2010, 2011, 2012, 2016, 2018, 2019, 2022, 2030, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2044, 2045], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 68, 69, 70, 71, 78, 79, 80, 82, 84, 93, 115, 146, 150, 169, 187, 204, 315, 317, 331, 338, 339, 402, 430, 443, 453, 481, 482, 483, 491, 494, 508, 512, 515, 539, 552, 578, 579, 580, 582, 583, 612, 675, 681, 684, 707, 708, 709, 710, 711, 712, 715, 724, 725, 726, 727, 728, 730, 743, 752, 755, 763, 764, 767, 768, 769, 774, 776, 780, 781, 782, 785, 788, 789, 790, 791, 794, 797, 802, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 826, 827, 828, 829, 832, 849, 853, 854, 856, 857, 860, 873, 874, 875, 884, 885, 886, 888, 890, 891, 892, 893, 894, 895, 897, 898, 900, 901, 903, 904, 905, 906, 909, 910, 911, 912, 914, 915, 919, 920, 923, 927, 930, 935, 936, 937, 945, 947, 948, 955, 957, 967, 970, 975, 979, 980, 983, 985, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1011, 1021, 1022, 1025, 1026, 1032, 1036, 1040, 1042, 1043, 1044, 1046, 1048, 1049, 1054, 1055, 1064, 1066, 1067, 1073, 1078, 1079, 1080, 1089, 1097, 1098, 1099, 1100, 1110, 1111, 1112, 1115, 1117, 1125, 1127, 1131, 1133, 1140, 1142, 1145, 1149, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1170, 1171, 1176, 1178, 1181, 1182, 1184, 1190, 1194, 1195, 1200, 1201, 1203, 1207, 1208, 1209, 1210, 1224, 1236, 1246, 1247, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1271, 1273, 1281, 1285, 1286, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1302, 1303, 1304, 1306, 1307, 1313, 1314, 1315, 1319, 1320, 1321, 1322, 1327, 1330, 1336, 1339, 1340, 1343, 1344, 1349, 1350, 1351, 1354, 1360, 1361, 1373, 1378, 1380, 1381, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1473, 1474, 1475, 1480, 1481, 1482, 1483, 1484, 1487, 1489, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1520, 1523, 1526, 1534, 1535, 1536, 1537, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1557, 1559, 1560, 1561, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1592, 1594, 1601, 1603, 1604, 1611, 1617, 1618, 1619, 1629, 1631, 1637, 1643, 1647, 1649, 1650, 1658, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1716, 1717, 1718, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1733, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1782, 1784, 1785, 1786, 1789, 1790, 1791, 1793, 1795, 1797, 1799, 1800, 1806, 1813, 1816, 1821, 1822, 1824, 1825, 1826, 1828, 1830, 1831, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1852, 1857, 1860, 1861, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1884, 1885, 1886, 1900, 1904, 1907, 1911, 1913, 1918, 1921, 1922, 1923, 1925, 1931, 1934, 1942, 1943, 1944, 1948, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1975, 1976, 1977, 1980, 1982, 1984, 1985, 1986, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 2005, 2007, 2009, 2010, 2011, 2012, 2013, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2050], "float": [0, 1, 3, 11, 21, 22, 24, 25, 27, 29, 31, 33, 36, 44, 46, 47, 49, 56, 58, 149, 150, 215, 309, 311, 313, 317, 329, 396, 470, 476, 494, 508, 680, 682, 687, 689, 693, 727, 730, 733, 734, 735, 739, 740, 741, 743, 750, 751, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 772, 774, 775, 776, 780, 787, 788, 789, 794, 812, 814, 825, 833, 834, 847, 852, 853, 856, 857, 860, 875, 914, 915, 936, 937, 945, 952, 955, 959, 960, 976, 982, 983, 987, 997, 1067, 1080, 1091, 1092, 1098, 1099, 1100, 1102, 1115, 1133, 1142, 1143, 1144, 1145, 1147, 1171, 1193, 1197, 1206, 1207, 1208, 1211, 1212, 1231, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1249, 1265, 1266, 1269, 1273, 1275, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1327, 1336, 1338, 1340, 1368, 1372, 1373, 1377, 1379, 1380, 1381, 1384, 1387, 1391, 1395, 1401, 1402, 1403, 1405, 1408, 1409, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1440, 1441, 1442, 1445, 1446, 1447, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1473, 1475, 1479, 1487, 1492, 1493, 1495, 1496, 1501, 1505, 1508, 1509, 1510, 1511, 1512, 1518, 1524, 1526, 1529, 1530, 1532, 1534, 1535, 1536, 1539, 1540, 1541, 1574, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1594, 1603, 1629, 1631, 1636, 1643, 1662, 1674, 1679, 1680, 1684, 1686, 1689, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1718, 1719, 1723, 1729, 1730, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1766, 1767, 1768, 1770, 1772, 1778, 1781, 1785, 1786, 1787, 1788, 1800, 1804, 1805, 1825, 1826, 1829, 1832, 1841, 1842, 1844, 1845, 1847, 1882, 1885, 1889, 1907, 1909, 1922, 1952, 1953, 1954, 1955, 1956, 1962, 1966, 1968, 1969, 1971, 1972, 1976, 1977, 1981, 1983, 1985, 1990, 1993, 1998, 2000, 2001, 2003, 2005, 2006, 2007, 2011, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2033, 2035, 2037, 2040, 2044, 2048], "datatyp": [0, 58, 875, 1246, 1249, 1487, 1676, 1677, 1828, 1993, 2000, 2015], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 21, 22, 26, 27, 29, 31, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 50, 52, 54, 55, 57, 58, 93, 94, 109, 125, 126, 129, 141, 142, 145, 146, 155, 156, 161, 162, 192, 193, 194, 203, 230, 235, 239, 240, 241, 251, 270, 271, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 299, 300, 303, 304, 305, 306, 309, 311, 317, 320, 340, 348, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 374, 375, 390, 391, 404, 408, 433, 434, 445, 446, 450, 451, 482, 483, 493, 515, 556, 557, 558, 559, 575, 578, 611, 612, 613, 616, 617, 675, 680, 689, 733, 734, 735, 736, 737, 738, 755, 809, 821, 856, 860, 866, 873, 874, 879, 885, 888, 890, 891, 892, 900, 909, 910, 911, 912, 914, 915, 919, 920, 939, 940, 942, 943, 944, 946, 951, 967, 982, 997, 998, 1001, 1003, 1005, 1012, 1022, 1032, 1043, 1085, 1091, 1092, 1093, 1094, 1101, 1102, 1103, 1117, 1124, 1142, 1143, 1144, 1145, 1148, 1155, 1156, 1157, 1158, 1161, 1165, 1170, 1171, 1172, 1191, 1192, 1193, 1204, 1205, 1206, 1215, 1216, 1218, 1219, 1224, 1226, 1238, 1247, 1249, 1253, 1261, 1270, 1272, 1273, 1274, 1276, 1277, 1282, 1286, 1300, 1302, 1305, 1306, 1319, 1327, 1328, 1329, 1331, 1333, 1334, 1337, 1338, 1344, 1347, 1348, 1352, 1353, 1357, 1360, 1372, 1374, 1384, 1387, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1433, 1438, 1440, 1452, 1487, 1488, 1497, 1515, 1530, 1534, 1538, 1547, 1567, 1568, 1569, 1594, 1603, 1643, 1662, 1665, 1674, 1679, 1680, 1681, 1682, 1705, 1727, 1731, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1763, 1764, 1770, 1772, 1800, 1804, 1820, 1825, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1882, 1883, 1900, 1906, 1910, 1912, 1918, 1931, 1932, 1937, 1938, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1964, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1998, 2000, 2002, 2006, 2007, 2011, 2012, 2013, 2016, 2017, 2020, 2021, 2022, 2027, 2030, 2032, 2033, 2035, 2036, 2038, 2040, 2043, 2044, 2045, 2046], "lower": [0, 1, 8, 12, 22, 25, 31, 46, 47, 60, 68, 69, 70, 71, 788, 790, 854, 946, 951, 958, 959, 960, 962, 1111, 1112, 1167, 1174, 1210, 1211, 1279, 1286, 1288, 1296, 1297, 1304, 1307, 1312, 1350, 1373, 1380, 1391, 1505, 1546, 1547, 1548, 1567, 1568, 1569, 1641, 1642, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1768, 1783, 1785, 1805, 1820, 1828, 1865, 1909, 1910, 1911, 1952, 1953, 1955, 1963, 1972, 1976, 1978, 1990, 1995, 2001, 2006, 2016, 2022, 2040, 2045], "point": [0, 1, 7, 8, 9, 11, 21, 22, 24, 26, 29, 33, 39, 42, 43, 47, 49, 58, 84, 149, 150, 317, 329, 335, 476, 481, 494, 693, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 756, 757, 758, 759, 760, 770, 772, 774, 775, 776, 780, 790, 794, 814, 815, 816, 817, 820, 825, 847, 856, 857, 860, 875, 904, 906, 907, 908, 914, 915, 936, 937, 945, 967, 982, 983, 987, 1046, 1048, 1057, 1061, 1062, 1098, 1099, 1100, 1143, 1144, 1145, 1197, 1203, 1207, 1208, 1212, 1231, 1246, 1249, 1265, 1266, 1273, 1275, 1296, 1297, 1320, 1322, 1327, 1336, 1380, 1387, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1433, 1480, 1481, 1482, 1487, 1538, 1539, 1557, 1583, 1592, 1603, 1643, 1662, 1674, 1681, 1682, 1729, 1738, 1769, 1785, 1786, 1787, 1791, 1800, 1813, 1825, 1826, 1832, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1922, 1923, 1951, 1952, 1954, 1955, 1956, 1959, 1966, 1972, 1976, 1977, 1978, 1981, 1982, 1986, 1987, 1990, 1993, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2015, 2018, 2020, 2021, 2022, 2024, 2031, 2032, 2035, 2037, 2038, 2041, 2044, 2047, 2048], "lower_precision_fp": 0, "half": [0, 1, 10, 22, 31, 612, 976, 1111, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1249, 1312, 1318, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1435, 1437, 1487, 1587, 1588, 1591, 1681, 1682, 1735, 1760, 1813, 1881, 1969, 1990, 1993, 1998, 2015, 2017, 2018, 2021], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 27, 30, 31, 40, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 332, 481, 584, 612, 755, 788, 836, 855, 873, 895, 898, 900, 914, 915, 934, 936, 945, 969, 975, 979, 1040, 1041, 1050, 1092, 1097, 1098, 1118, 1140, 1143, 1144, 1151, 1155, 1158, 1159, 1160, 1166, 1172, 1178, 1181, 1190, 1207, 1208, 1247, 1249, 1250, 1257, 1260, 1265, 1269, 1296, 1297, 1308, 1321, 1391, 1399, 1430, 1433, 1449, 1450, 1451, 1487, 1488, 1489, 1497, 1498, 1515, 1538, 1545, 1586, 1604, 1661, 1665, 1674, 1675, 1676, 1677, 1689, 1715, 1733, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1778, 1793, 1797, 1816, 1824, 1825, 1828, 1885, 1897, 1923, 1934, 1948, 1950, 1951, 1952, 1954, 1955, 1959, 1962, 1963, 1968, 1969, 1970, 1977, 1978, 1981, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2004, 2005, 2006, 2009, 2011, 2012, 2015, 2017, 2018, 2022, 2023, 2025, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2046, 2047], "linear": [0, 2, 9, 22, 25, 26, 29, 30, 31, 46, 47, 49, 51, 53, 55, 58, 60, 426, 467, 468, 469, 470, 471, 474, 706, 715, 723, 724, 760, 787, 788, 789, 791, 809, 849, 853, 854, 856, 857, 905, 960, 1003, 1097, 1154, 1156, 1164, 1166, 1203, 1249, 1253, 1261, 1275, 1281, 1286, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1310, 1312, 1340, 1380, 1399, 1405, 1428, 1436, 1437, 1445, 1472, 1487, 1489, 1502, 1504, 1505, 1506, 1514, 1516, 1523, 1526, 1530, 1532, 1534, 1537, 1539, 1581, 1590, 1591, 1603, 1638, 1646, 1651, 1662, 1665, 1674, 1685, 1686, 1688, 1689, 1690, 1694, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1714, 1722, 1723, 1726, 1763, 1766, 1774, 1785, 1922, 1934, 1951, 1953, 1954, 1960, 1963, 1964, 1971, 1976, 1981, 1982, 1983, 1985, 1986, 1990, 1995, 1998, 2000, 2001, 2002, 2004, 2006, 2007, 2008, 2009, 2011, 2027, 2043, 2045], "layer": [0, 8, 22, 25, 27, 29, 30, 49, 52, 729, 730, 755, 836, 853, 923, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1431, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1472, 1474, 1480, 1481, 1482, 1493, 1494, 1502, 1504, 1515, 1526, 1530, 1531, 1532, 1533, 1534, 1606, 1674, 1681, 1682, 1688, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1951, 1976, 1981, 1983, 1985, 1986, 1989, 1990, 1995, 1998, 2000, 2002, 2004, 2006, 2007, 2009, 2015, 2025], "convolut": [0, 1, 2, 46, 733, 734, 735, 736, 737, 738, 767, 768, 769, 967, 1259, 1414, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1431, 1463, 1464, 1465, 1466, 1467, 1468, 1499, 1500, 1505, 1535, 1536, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1591, 1592, 1681, 1682, 1683, 1684, 1828, 1951, 1953, 1964, 1976, 1980, 1981, 1987, 1990, 2001, 2005, 2006, 2009, 2040], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 65, 66, 69, 77, 80, 81, 82, 83, 84, 93, 146, 229, 250, 315, 317, 331, 332, 335, 373, 398, 443, 466, 476, 481, 494, 508, 512, 539, 575, 584, 612, 675, 684, 685, 686, 692, 730, 751, 755, 756, 758, 759, 760, 774, 777, 778, 780, 781, 782, 787, 788, 789, 790, 791, 794, 809, 810, 811, 812, 814, 815, 816, 817, 820, 835, 849, 853, 854, 855, 856, 857, 860, 869, 870, 881, 882, 883, 885, 888, 895, 898, 900, 901, 903, 904, 905, 906, 907, 908, 910, 914, 915, 921, 923, 934, 936, 945, 946, 948, 949, 951, 954, 967, 976, 979, 982, 983, 986, 987, 1000, 1001, 1003, 1004, 1006, 1011, 1023, 1034, 1040, 1043, 1044, 1054, 1064, 1071, 1080, 1085, 1089, 1092, 1097, 1098, 1099, 1100, 1113, 1114, 1115, 1116, 1118, 1120, 1125, 1127, 1133, 1136, 1138, 1139, 1143, 1144, 1145, 1149, 1154, 1155, 1160, 1162, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1174, 1176, 1178, 1181, 1194, 1203, 1207, 1208, 1210, 1212, 1226, 1238, 1239, 1241, 1242, 1245, 1246, 1247, 1249, 1250, 1253, 1256, 1257, 1260, 1263, 1265, 1266, 1271, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1316, 1319, 1320, 1321, 1322, 1331, 1332, 1333, 1334, 1336, 1337, 1339, 1341, 1342, 1344, 1347, 1350, 1351, 1352, 1355, 1357, 1361, 1373, 1377, 1378, 1379, 1380, 1381, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1409, 1410, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1433, 1438, 1439, 1440, 1441, 1446, 1449, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1504, 1515, 1518, 1519, 1520, 1526, 1530, 1532, 1534, 1535, 1536, 1538, 1539, 1547, 1548, 1549, 1557, 1563, 1564, 1565, 1575, 1576, 1583, 1584, 1585, 1586, 1592, 1603, 1604, 1628, 1631, 1633, 1636, 1643, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1692, 1694, 1701, 1715, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1762, 1765, 1766, 1778, 1784, 1785, 1791, 1800, 1803, 1804, 1811, 1813, 1824, 1825, 1828, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1880, 1881, 1884, 1885, 1895, 1897, 1901, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1918, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1972, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048], "much": [0, 4, 7, 9, 15, 21, 22, 46, 146, 888, 904, 909, 1054, 1170, 1285, 1286, 1313, 1322, 1430, 1674, 1705, 1766, 1952, 1978, 1981, 1986, 1987, 1990, 1995, 2003, 2004, 2011, 2012, 2015, 2033, 2035, 2038], "faster": [0, 2, 8, 11, 21, 22, 25, 904, 914, 915, 1154, 1183, 1279, 1280, 1285, 1286, 1290, 1295, 1303, 1305, 1307, 1310, 1313, 1315, 1319, 1322, 1503, 1520, 1633, 1643, 1649, 1674, 1679, 1680, 1688, 1741, 1742, 1753, 1754, 1828, 1867, 1868, 1869, 1871, 1872, 1963, 1964, 1978, 1981, 1987, 2002, 2006, 2015, 2020, 2026, 2032, 2035, 2041], "reduct": [0, 2, 25, 49, 317, 508, 512, 967, 1295, 1327, 1380, 1399, 1400, 1406, 1420, 1422, 1430, 1440, 1446, 1447, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1536, 1564, 1565, 1573, 1575, 1576, 1584, 1589, 1600, 1601, 1604, 1605, 1616, 1624, 1625, 1626, 1627, 1628, 1636, 1647, 1648, 1659, 1660, 1674, 1785, 1862, 1953, 1969, 1982, 1987, 2003, 2006, 2039, 2045], "often": [0, 2, 4, 7, 8, 14, 21, 25, 31, 43, 49, 52, 58, 146, 888, 909, 1174, 1181, 1265, 1296, 1297, 1306, 1355, 1429, 1449, 1450, 1451, 1557, 1565, 1583, 1592, 1665, 1688, 1768, 1955, 1963, 1978, 1981, 1985, 1989, 1990, 1992, 1993, 1994, 1998, 2003, 2011, 2020, 2034, 2035, 2043, 2045], "requir": [0, 1, 5, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 41, 42, 46, 47, 49, 52, 54, 57, 58, 115, 146, 217, 331, 453, 481, 483, 491, 508, 510, 512, 555, 788, 790, 818, 821, 875, 884, 888, 895, 897, 900, 901, 903, 904, 905, 906, 907, 908, 909, 967, 998, 1053, 1097, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1138, 1139, 1162, 1166, 1191, 1246, 1263, 1289, 1320, 1322, 1336, 1422, 1429, 1430, 1530, 1531, 1532, 1533, 1534, 1536, 1584, 1643, 1665, 1674, 1675, 1692, 1694, 1696, 1744, 1772, 1869, 1881, 1922, 1934, 1950, 1952, 1955, 1957, 1959, 1962, 1964, 1968, 1970, 1971, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1998, 1999, 2000, 2003, 2004, 2006, 2007, 2011, 2012, 2013, 2015, 2020, 2022, 2025, 2026, 2027, 2030, 2031, 2032, 2034, 2035, 2041, 2043, 2046], "dynam": [0, 12, 14, 15, 21, 47, 59, 60, 61, 62, 65, 66, 68, 71, 72, 675, 724, 728, 755, 756, 757, 758, 759, 760, 789, 794, 810, 819, 821, 824, 839, 845, 846, 847, 848, 853, 854, 967, 1167, 1168, 1169, 1170, 1176, 1257, 1263, 1265, 1321, 1688, 1954, 1955, 1956, 1976, 1981, 1990, 1993, 1997, 1998, 2000, 2002, 2003, 2007, 2026, 2027, 2032, 2035, 2042, 2045], "rang": [0, 1, 3, 21, 25, 26, 29, 31, 42, 43, 45, 46, 47, 53, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 84, 297, 476, 679, 756, 758, 760, 790, 814, 815, 816, 817, 818, 820, 821, 822, 880, 937, 962, 972, 1058, 1059, 1067, 1097, 1147, 1164, 1174, 1178, 1210, 1211, 1212, 1316, 1327, 1342, 1351, 1368, 1380, 1391, 1422, 1432, 1434, 1435, 1439, 1445, 1458, 1477, 1489, 1494, 1498, 1502, 1504, 1520, 1521, 1522, 1526, 1587, 1588, 1592, 1649, 1674, 1680, 1756, 1757, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1785, 1864, 1920, 1921, 1952, 1953, 1955, 1978, 1980, 1981, 1985, 1990, 1992, 1993, 2000, 2001, 2002, 2005, 2006, 2009, 2010, 2016, 2018, 2020, 2021, 2022, 2023, 2031, 2032, 2033, 2038, 2043, 2045], "tri": [0, 2, 3, 7, 21, 31, 35, 58, 83, 575, 1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1954, 1955, 1981, 1985, 2000, 2003, 2034, 2035, 2037], "match": [0, 1, 3, 12, 25, 27, 29, 31, 42, 46, 49, 58, 60, 68, 69, 80, 146, 309, 311, 317, 468, 469, 494, 495, 575, 578, 688, 694, 774, 788, 789, 790, 849, 873, 888, 909, 914, 915, 979, 997, 1000, 1012, 1013, 1014, 1043, 1089, 1097, 1154, 1166, 1171, 1226, 1249, 1263, 1265, 1282, 1321, 1343, 1421, 1430, 1487, 1493, 1539, 1564, 1565, 1603, 1630, 1637, 1643, 1662, 1674, 1694, 1724, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1786, 1820, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1902, 1918, 1934, 1952, 1955, 1962, 1969, 1971, 1978, 1979, 1981, 1983, 1990, 1995, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2008, 2011, 2018, 2022, 2024, 2035, 2038, 2044], "each": [0, 1, 2, 5, 9, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 58, 76, 77, 79, 82, 93, 115, 149, 150, 394, 398, 488, 508, 510, 512, 540, 602, 612, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 681, 688, 690, 691, 694, 730, 755, 787, 835, 836, 854, 856, 857, 860, 872, 881, 882, 883, 884, 886, 887, 888, 895, 897, 900, 901, 909, 935, 938, 947, 951, 955, 956, 958, 961, 965, 967, 969, 972, 987, 1009, 1010, 1014, 1043, 1046, 1048, 1054, 1056, 1060, 1063, 1069, 1074, 1075, 1076, 1077, 1080, 1081, 1092, 1095, 1097, 1114, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1132, 1134, 1138, 1139, 1141, 1146, 1151, 1156, 1157, 1161, 1165, 1166, 1171, 1191, 1203, 1209, 1211, 1212, 1213, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1249, 1265, 1266, 1271, 1303, 1321, 1322, 1337, 1339, 1347, 1349, 1350, 1351, 1352, 1355, 1357, 1364, 1365, 1373, 1379, 1381, 1391, 1396, 1399, 1400, 1404, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1438, 1439, 1441, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1467, 1468, 1472, 1474, 1478, 1479, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1504, 1515, 1518, 1519, 1521, 1526, 1529, 1535, 1536, 1538, 1547, 1562, 1564, 1565, 1570, 1571, 1572, 1575, 1576, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1592, 1602, 1604, 1628, 1629, 1631, 1633, 1636, 1643, 1656, 1665, 1670, 1671, 1674, 1681, 1682, 1715, 1716, 1718, 1728, 1729, 1730, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1777, 1781, 1782, 1785, 1792, 1800, 1805, 1806, 1811, 1815, 1820, 1828, 1832, 1843, 1849, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1884, 1885, 1901, 1903, 1904, 1907, 1918, 1919, 1920, 1928, 1934, 1935, 1950, 1954, 1955, 1961, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1998, 2000, 2002, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2029, 2030, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2047], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 42, 43, 44, 47, 49, 57, 58, 60, 62, 77, 78, 79, 146, 254, 453, 482, 483, 499, 508, 510, 512, 578, 579, 580, 612, 675, 818, 821, 869, 870, 871, 873, 874, 875, 888, 893, 894, 911, 912, 919, 920, 959, 960, 975, 976, 983, 987, 1004, 1032, 1034, 1043, 1080, 1084, 1087, 1097, 1100, 1145, 1151, 1155, 1156, 1157, 1160, 1165, 1171, 1211, 1212, 1216, 1229, 1249, 1260, 1285, 1286, 1290, 1295, 1302, 1304, 1307, 1308, 1313, 1319, 1344, 1371, 1399, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1449, 1450, 1451, 1487, 1488, 1497, 1518, 1526, 1534, 1592, 1603, 1631, 1637, 1665, 1670, 1671, 1675, 1676, 1677, 1681, 1682, 1683, 1685, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1716, 1722, 1726, 1730, 1736, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1775, 1800, 1804, 1808, 1809, 1825, 1826, 1849, 1859, 1886, 1906, 1907, 1909, 1917, 1927, 1932, 1952, 1954, 1955, 1959, 1964, 1966, 1968, 1977, 1978, 1979, 1981, 1982, 1983, 1985, 1986, 1987, 1990, 1992, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2011, 2012, 2013, 2015, 2018, 2019, 2021, 2024, 2025, 2026, 2027, 2030, 2032, 2033, 2034, 2035, 2038, 2039, 2041, 2047], "appropri": [0, 7, 8, 9, 25, 26, 31, 49, 57, 58, 59, 481, 890, 921, 987, 1043, 1181, 1265, 1828, 1955, 1956, 1970, 1981, 1987, 1992, 1995, 1998, 2004, 2006, 2009, 2011, 2012, 2013, 2017, 2035, 2038, 2041, 2046], "ordinarili": [0, 1178, 1977], "train": [0, 1, 12, 15, 21, 22, 25, 26, 28, 29, 33, 40, 41, 42, 43, 49, 52, 53, 58, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 794, 796, 833, 834, 850, 851, 852, 854, 856, 857, 858, 910, 972, 979, 1042, 1043, 1046, 1048, 1055, 1164, 1249, 1254, 1261, 1264, 1265, 1391, 1395, 1401, 1402, 1403, 1422, 1423, 1424, 1429, 1430, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1493, 1494, 1505, 1526, 1534, 1558, 1562, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1641, 1642, 1643, 1674, 1689, 1692, 1694, 1723, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1950, 1952, 1953, 1964, 1966, 1976, 1978, 1981, 1982, 1985, 1991, 1993, 1995, 1997, 2000, 2002, 2003, 2004, 2005, 2009, 2011, 2013, 2020, 2026, 2029, 2030, 2031, 2032, 2037, 2039, 2040, 2042, 2045], "gradscal": [0, 1977, 1981], "togeth": [0, 3, 9, 21, 25, 30, 31, 50, 55, 58, 755, 1040, 1097, 1154, 1156, 1160, 1164, 1165, 1190, 1194, 1289, 1438, 1457, 1502, 1603, 1674, 1679, 1907, 1964, 1977, 1983, 1984, 1985, 1986, 1989, 1990, 2006, 2011, 2012, 2013, 2015, 2020, 2031, 2034, 2035, 2041], "shown": [0, 12, 22, 34, 43, 1040, 1050, 1459, 1694, 1736, 1766, 1832, 1952, 1955, 1977, 1981, 1983, 1985, 1990, 1998, 2004, 2006, 2015, 2027, 2031, 2032, 2036], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 57, 60, 62, 68, 69, 84, 187, 204, 229, 238, 250, 256, 285, 307, 309, 311, 313, 317, 331, 348, 397, 398, 440, 441, 442, 443, 444, 466, 476, 478, 481, 482, 483, 488, 491, 494, 508, 510, 512, 518, 532, 539, 553, 555, 575, 576, 578, 579, 580, 581, 582, 583, 584, 602, 612, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 715, 723, 724, 729, 733, 734, 735, 736, 737, 738, 740, 741, 743, 751, 752, 753, 755, 756, 757, 758, 759, 760, 767, 768, 769, 780, 787, 788, 789, 791, 792, 805, 806, 807, 808, 809, 810, 811, 812, 819, 833, 849, 854, 855, 856, 857, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 890, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 917, 919, 920, 921, 923, 930, 935, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 967, 972, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 997, 1040, 1041, 1046, 1048, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1162, 1164, 1166, 1170, 1171, 1178, 1181, 1191, 1192, 1193, 1197, 1203, 1206, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1220, 1224, 1226, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1557, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1592, 1594, 1628, 1630, 1631, 1634, 1635, 1643, 1662, 1665, 1674, 1681, 1682, 1688, 1689, 1690, 1692, 1694, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1773, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1795, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1822, 1823, 1824, 1825, 1826, 1829, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1857, 1859, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1882, 1884, 1885, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1959, 1961, 1962, 1965, 1966, 1969, 1970, 1971, 1976, 1978, 1979, 1980, 1981, 1985, 1986, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1999, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2046], "recip": [0, 3, 29, 1487, 1674, 1696, 1977, 1990, 2034], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 29, 31, 33, 39, 42, 46, 47, 49, 50, 51, 53, 54, 57, 58, 60, 65, 69, 77, 80, 81, 82, 254, 476, 540, 890, 903, 1000, 1022, 1043, 1085, 1087, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1154, 1155, 1159, 1160, 1162, 1165, 1166, 1170, 1178, 1249, 1252, 1253, 1260, 1262, 1289, 1304, 1305, 1307, 1321, 1322, 1339, 1399, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1430, 1487, 1567, 1568, 1569, 1592, 1665, 1674, 1715, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1934, 1951, 1955, 1971, 1977, 1978, 1981, 1983, 1988, 1990, 1992, 1994, 1995, 1996, 1997, 2000, 2003, 2004, 2011, 2013, 2015, 2021, 2030, 2032, 2033, 2034, 2035, 2036], "modular": [0, 1977, 1998], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 20, 21, 22, 25, 27, 29, 31, 32, 33, 35, 39, 41, 42, 46, 49, 50, 54, 57, 58, 59, 80, 192, 217, 250, 309, 317, 453, 481, 510, 512, 551, 598, 612, 675, 684, 810, 811, 812, 856, 887, 895, 898, 900, 901, 903, 905, 909, 914, 927, 938, 949, 961, 967, 980, 981, 983, 985, 998, 1000, 1001, 1009, 1022, 1032, 1033, 1034, 1040, 1041, 1043, 1054, 1056, 1060, 1074, 1075, 1097, 1136, 1140, 1145, 1148, 1151, 1158, 1159, 1161, 1170, 1171, 1175, 1178, 1180, 1181, 1182, 1189, 1212, 1246, 1249, 1252, 1253, 1259, 1260, 1262, 1263, 1265, 1271, 1280, 1281, 1285, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1305, 1307, 1308, 1311, 1312, 1313, 1319, 1321, 1322, 1327, 1344, 1354, 1368, 1391, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1452, 1457, 1483, 1484, 1485, 1487, 1494, 1502, 1532, 1534, 1539, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1592, 1594, 1603, 1609, 1631, 1643, 1661, 1662, 1663, 1664, 1665, 1674, 1688, 1691, 1692, 1694, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1784, 1804, 1807, 1825, 1828, 1834, 1852, 1865, 1881, 1885, 1909, 1922, 1950, 1951, 1952, 1954, 1955, 1959, 1961, 1962, 1963, 1964, 1966, 1970, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1990, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2005, 2006, 2007, 2009, 2011, 2013, 2015, 2017, 2023, 2027, 2030, 2033, 2034, 2035, 2038, 2039, 2043, 2045, 2046, 2047], "separ": [0, 1, 3, 9, 14, 21, 25, 29, 42, 43, 49, 50, 52, 55, 57, 58, 730, 755, 885, 900, 1097, 1114, 1116, 1122, 1123, 1126, 1127, 1132, 1134, 1154, 1167, 1260, 1295, 1310, 1441, 1449, 1450, 1451, 1493, 1495, 1611, 1730, 1797, 1950, 1953, 1955, 1961, 1977, 1978, 1980, 1981, 1984, 1986, 1995, 1998, 2002, 2003, 2012, 2015, 2016, 2020, 2030, 2045], "desir": [0, 1, 3, 21, 25, 30, 31, 49, 58, 84, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 250, 263, 293, 321, 389, 440, 441, 442, 443, 444, 492, 494, 495, 515, 520, 539, 540, 541, 555, 575, 578, 598, 599, 612, 788, 860, 874, 936, 945, 964, 1044, 1045, 1068, 1069, 1078, 1079, 1098, 1099, 1100, 1110, 1115, 1133, 1149, 1151, 1152, 1153, 1207, 1208, 1249, 1269, 1320, 1336, 1342, 1349, 1363, 1369, 1378, 1380, 1381, 1399, 1400, 1487, 1537, 1565, 1611, 1649, 1650, 1665, 1715, 1729, 1733, 1734, 1775, 1782, 1785, 1786, 1787, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1833, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1884, 1900, 1911, 1913, 1948, 1949, 1969, 1970, 1971, 1977, 1978, 1981, 1984, 1988, 1990, 1995, 2004, 2010, 2011, 2016, 2017, 2018, 2045], "As": [0, 1, 8, 22, 25, 27, 31, 46, 47, 49, 52, 53, 58, 250, 481, 949, 1097, 1253, 1281, 1285, 1286, 1296, 1297, 1308, 1313, 1391, 1425, 1426, 1427, 1431, 1452, 1487, 1518, 1661, 1681, 1682, 1728, 1734, 1949, 1952, 1954, 1955, 1962, 1971, 1978, 1981, 1983, 1985, 1986, 1990, 1993, 1995, 1996, 1997, 1998, 2000, 2003, 2004, 2010, 2011, 2012, 2013, 2015, 2026, 2029, 2031, 2035, 2036, 2037, 2038, 2045], "section": [0, 1, 7, 21, 31, 33, 34, 47, 53, 58, 82, 115, 1054, 1097, 1203, 1423, 1438, 1457, 1485, 1502, 1575, 1718, 1901, 1952, 1953, 1954, 1955, 1956, 1968, 1970, 1971, 1977, 1978, 1981, 1982, 1983, 1984, 1987, 1988, 1990, 1992, 2012, 2020, 2031, 2032, 2035, 2036, 2037, 2038, 2039, 2043, 2045], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 27, 31, 42, 49, 575, 612, 856, 857, 860, 874, 875, 910, 972, 979, 1014, 1151, 1152, 1170, 1212, 1233, 1247, 1250, 1259, 1264, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1493, 1539, 1603, 1630, 1665, 1727, 1755, 1766, 1800, 1807, 1825, 1826, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1917, 1951, 1952, 1954, 1955, 1959, 1969, 1971, 1981, 1990, 2000, 2005, 2006, 2007, 2009, 2015, 2026, 2029, 2030, 2033, 2035, 2037, 2042], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 40, 42, 43, 46, 47, 49, 53, 54, 57, 58, 78, 79, 80, 115, 250, 307, 317, 319, 331, 348, 440, 441, 442, 443, 444, 453, 476, 481, 483, 508, 510, 512, 552, 578, 579, 580, 582, 583, 609, 612, 675, 690, 691, 730, 733, 734, 735, 736, 738, 767, 768, 769, 774, 780, 781, 782, 786, 788, 796, 809, 812, 815, 816, 819, 823, 837, 844, 853, 873, 890, 892, 895, 896, 897, 898, 899, 900, 901, 903, 905, 914, 921, 923, 936, 937, 945, 967, 979, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 1000, 1001, 1003, 1010, 1012, 1014, 1032, 1040, 1041, 1043, 1064, 1094, 1098, 1100, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1143, 1144, 1148, 1149, 1150, 1155, 1166, 1171, 1180, 1181, 1203, 1207, 1208, 1212, 1220, 1230, 1238, 1247, 1249, 1252, 1253, 1261, 1265, 1266, 1269, 1280, 1285, 1286, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1308, 1310, 1311, 1313, 1314, 1321, 1322, 1339, 1344, 1391, 1417, 1418, 1419, 1422, 1423, 1429, 1430, 1433, 1457, 1459, 1487, 1490, 1492, 1493, 1495, 1503, 1526, 1534, 1538, 1539, 1575, 1584, 1586, 1592, 1603, 1631, 1643, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1674, 1676, 1677, 1681, 1682, 1695, 1715, 1716, 1717, 1729, 1737, 1738, 1741, 1742, 1744, 1751, 1754, 1755, 1758, 1762, 1765, 1766, 1768, 1772, 1784, 1793, 1797, 1799, 1801, 1824, 1828, 1829, 1830, 1834, 1859, 1862, 1866, 1876, 1881, 1885, 1900, 1911, 1913, 1918, 1919, 1922, 1923, 1925, 1931, 1932, 1933, 1934, 1950, 1953, 1954, 1955, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2026, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2044, 2045, 2047], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 30, 31, 33, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 75, 76, 77, 192, 250, 285, 309, 311, 317, 331, 348, 466, 476, 481, 488, 494, 508, 510, 512, 578, 584, 598, 612, 681, 682, 683, 684, 685, 688, 694, 729, 733, 734, 735, 736, 737, 738, 755, 787, 788, 789, 809, 853, 854, 887, 900, 901, 914, 921, 935, 939, 941, 942, 944, 947, 956, 967, 972, 1032, 1046, 1048, 1054, 1078, 1079, 1080, 1097, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1141, 1149, 1164, 1166, 1170, 1171, 1174, 1182, 1191, 1203, 1212, 1226, 1249, 1260, 1261, 1263, 1265, 1266, 1281, 1285, 1286, 1289, 1292, 1293, 1294, 1295, 1297, 1306, 1307, 1309, 1313, 1322, 1329, 1337, 1344, 1350, 1354, 1391, 1395, 1399, 1400, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1430, 1432, 1433, 1438, 1440, 1447, 1452, 1457, 1459, 1487, 1490, 1491, 1492, 1493, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1523, 1537, 1538, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1565, 1567, 1568, 1569, 1578, 1579, 1580, 1585, 1592, 1603, 1629, 1631, 1643, 1651, 1665, 1670, 1671, 1674, 1692, 1715, 1716, 1717, 1719, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1768, 1797, 1813, 1822, 1859, 1860, 1870, 1876, 1885, 1901, 1903, 1907, 1915, 1918, 1923, 1925, 1932, 1933, 1934, 1950, 1951, 1952, 1955, 1957, 1959, 1961, 1962, 1964, 1966, 1969, 1970, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2026, 2027, 2028, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2041, 2042, 2044, 2045, 2046], "api": [0, 2, 3, 5, 8, 9, 14, 22, 25, 26, 27, 30, 33, 34, 35, 39, 40, 41, 42, 43, 49, 50, 53, 57, 59, 60, 65, 69, 70, 71, 229, 795, 819, 856, 890, 891, 892, 893, 894, 906, 911, 912, 956, 972, 998, 1032, 1033, 1034, 1040, 1041, 1043, 1070, 1101, 1141, 1155, 1158, 1159, 1161, 1166, 1178, 1260, 1261, 1263, 1368, 1674, 1724, 1726, 1727, 1735, 1813, 1824, 1915, 1925, 1934, 1950, 1961, 1962, 1963, 1964, 1967, 1968, 1969, 1971, 1978, 1982, 1995, 1997, 2007, 2011, 2012, 2015, 2018, 2020, 2023, 2026, 2027, 2032, 2037, 2046], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 27, 29, 30, 31, 32, 33, 39, 42, 46, 47, 49, 53, 54, 55, 57, 58, 60, 68, 69, 83, 150, 214, 217, 218, 250, 319, 508, 510, 512, 518, 538, 609, 736, 737, 738, 755, 795, 809, 856, 875, 884, 885, 891, 892, 895, 898, 900, 901, 910, 923, 936, 945, 959, 960, 967, 973, 997, 1040, 1043, 1054, 1078, 1079, 1097, 1101, 1117, 1148, 1155, 1161, 1165, 1166, 1171, 1178, 1185, 1186, 1191, 1194, 1207, 1208, 1212, 1249, 1252, 1253, 1256, 1259, 1263, 1265, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1318, 1351, 1357, 1371, 1379, 1391, 1399, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1430, 1433, 1438, 1452, 1457, 1487, 1494, 1502, 1516, 1518, 1526, 1535, 1536, 1538, 1570, 1571, 1572, 1592, 1630, 1646, 1665, 1674, 1692, 1694, 1704, 1706, 1708, 1709, 1710, 1711, 1727, 1741, 1742, 1756, 1762, 1766, 1769, 1772, 1797, 1804, 1816, 1826, 1840, 1841, 1858, 1862, 1876, 1885, 1895, 1897, 1900, 1906, 1907, 1918, 1919, 1934, 1937, 1950, 1951, 1952, 1954, 1955, 1961, 1962, 1964, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047], "arg": [0, 1, 3, 4, 5, 14, 21, 22, 25, 27, 29, 31, 33, 34, 40, 41, 43, 44, 45, 46, 47, 49, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 575, 598, 675, 727, 742, 744, 746, 747, 748, 749, 755, 757, 758, 819, 856, 885, 887, 895, 896, 897, 900, 901, 930, 971, 1043, 1154, 1158, 1159, 1160, 1166, 1171, 1187, 1188, 1249, 1252, 1339, 1399, 1400, 1420, 1422, 1446, 1448, 1453, 1476, 1478, 1479, 1487, 1490, 1491, 1492, 1494, 1501, 1515, 1517, 1518, 1519, 1521, 1525, 1526, 1527, 1528, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1665, 1674, 1696, 1701, 1715, 1722, 1724, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1886, 1919, 1931, 1934, 1950, 1953, 1955, 1956, 1968, 1970, 1978, 1981, 1982, 1983, 1984, 1992, 1998, 2000, 2003, 2004, 2011, 2012, 2013, 2017, 2025, 2031, 2032, 2034, 2035, 2038, 2044, 2045, 2046], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 93, 146, 149, 150, 151, 166, 168, 169, 171, 174, 175, 176, 186, 187, 191, 192, 202, 204, 205, 214, 219, 229, 236, 250, 251, 254, 263, 282, 286, 293, 307, 309, 311, 315, 317, 319, 321, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 338, 339, 348, 389, 396, 398, 402, 443, 453, 466, 467, 476, 478, 481, 482, 483, 488, 490, 491, 492, 493, 494, 495, 498, 499, 508, 510, 512, 515, 519, 520, 532, 538, 539, 540, 552, 555, 575, 576, 578, 579, 580, 582, 583, 584, 598, 599, 602, 609, 612, 613, 615, 619, 675, 676, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 794, 796, 797, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 819, 821, 822, 828, 833, 834, 835, 852, 853, 854, 856, 857, 860, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 919, 920, 921, 922, 923, 927, 928, 930, 932, 934, 935, 936, 937, 938, 940, 943, 945, 947, 948, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 972, 975, 979, 980, 981, 982, 983, 984, 985, 986, 987, 993, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1014, 1017, 1018, 1019, 1021, 1025, 1026, 1029, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1107, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1194, 1195, 1197, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1332, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1371, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1518, 1519, 1520, 1522, 1523, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1557, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1601, 1603, 1604, 1609, 1610, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1643, 1646, 1649, 1650, 1658, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1793, 1794, 1795, 1797, 1798, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1815, 1816, 1820, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1852, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1876, 1877, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1917, 1918, 1919, 1920, 1922, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1946, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2033, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048], "equival": [0, 1, 3, 5, 12, 21, 22, 29, 31, 35, 42, 43, 49, 53, 54, 58, 78, 151, 166, 168, 171, 174, 175, 176, 236, 251, 263, 293, 315, 321, 389, 443, 453, 481, 493, 495, 520, 599, 605, 612, 613, 615, 687, 739, 743, 750, 752, 754, 780, 781, 782, 871, 884, 885, 900, 901, 948, 950, 953, 955, 958, 965, 966, 979, 1085, 1089, 1092, 1095, 1096, 1097, 1099, 1114, 1116, 1119, 1122, 1123, 1126, 1127, 1129, 1132, 1134, 1153, 1155, 1158, 1160, 1166, 1171, 1181, 1213, 1215, 1226, 1248, 1249, 1260, 1265, 1266, 1269, 1281, 1302, 1306, 1314, 1319, 1351, 1356, 1371, 1378, 1391, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1429, 1430, 1441, 1447, 1449, 1450, 1451, 1452, 1457, 1459, 1487, 1502, 1518, 1526, 1538, 1540, 1547, 1548, 1549, 1601, 1611, 1633, 1643, 1662, 1663, 1664, 1674, 1734, 1755, 1791, 1794, 1797, 1798, 1822, 1828, 1835, 1857, 1864, 1877, 1887, 1888, 1895, 1900, 1919, 1934, 1935, 1936, 1949, 1952, 1954, 1955, 1963, 1978, 1998, 2000, 2003, 2007, 2015, 2016, 2018, 2021, 2022, 2031, 2032, 2038, 2046, 2048], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 42, 43, 46, 47, 49, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 82, 83, 254, 307, 317, 453, 578, 612, 680, 681, 682, 684, 688, 690, 691, 694, 724, 733, 734, 735, 767, 768, 769, 774, 780, 781, 782, 787, 788, 789, 790, 796, 812, 828, 854, 856, 857, 887, 890, 895, 898, 900, 901, 914, 915, 935, 936, 940, 943, 945, 947, 959, 960, 967, 979, 982, 997, 1040, 1041, 1043, 1060, 1092, 1094, 1097, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1142, 1143, 1144, 1145, 1147, 1148, 1150, 1161, 1165, 1207, 1208, 1220, 1246, 1253, 1261, 1265, 1269, 1270, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1340, 1344, 1348, 1353, 1354, 1372, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1429, 1430, 1433, 1453, 1474, 1492, 1493, 1526, 1534, 1536, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1584, 1586, 1592, 1603, 1609, 1643, 1661, 1662, 1664, 1674, 1681, 1682, 1729, 1734, 1738, 1741, 1742, 1744, 1751, 1754, 1772, 1784, 1803, 1804, 1825, 1828, 1829, 1858, 1859, 1862, 1865, 1882, 1885, 1909, 1911, 1913, 1923, 1925, 1931, 1932, 1933, 1949, 1950, 1951, 1952, 1954, 1956, 1957, 1959, 1964, 1966, 1968, 1972, 1978, 1979, 1980, 1981, 1983, 1988, 1990, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2002, 2003, 2004, 2005, 2009, 2010, 2011, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2044, 2045, 2046, 2050], "now": [0, 1, 12, 25, 32, 39, 43, 44, 46, 49, 54, 58, 491, 895, 899, 900, 901, 909, 923, 979, 1012, 1040, 1061, 1062, 1148, 1149, 1197, 1246, 1247, 1253, 1265, 1299, 1484, 1503, 1539, 1665, 1678, 1694, 1705, 1726, 1744, 1825, 1876, 1881, 1925, 1952, 1962, 1969, 1970, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1990, 1991, 2000, 2003, 2006, 2012, 2013, 2015, 2030, 2033, 2034, 2035, 2036, 2038, 2039, 2044, 2045, 2046, 2047], "new": [0, 1, 5, 8, 14, 18, 21, 23, 25, 27, 31, 33, 42, 43, 46, 49, 50, 53, 54, 55, 56, 57, 58, 82, 217, 250, 307, 443, 478, 481, 482, 491, 494, 539, 575, 578, 612, 675, 679, 755, 786, 809, 814, 849, 874, 876, 877, 878, 879, 880, 891, 893, 900, 901, 910, 919, 920, 934, 950, 951, 954, 956, 965, 969, 972, 982, 984, 985, 1001, 1003, 1081, 1085, 1107, 1111, 1112, 1138, 1139, 1141, 1155, 1164, 1166, 1171, 1189, 1220, 1224, 1238, 1239, 1242, 1245, 1249, 1256, 1261, 1263, 1323, 1324, 1325, 1326, 1343, 1382, 1385, 1401, 1402, 1403, 1438, 1449, 1450, 1451, 1487, 1488, 1493, 1497, 1526, 1537, 1539, 1603, 1667, 1670, 1671, 1672, 1673, 1674, 1683, 1684, 1685, 1686, 1689, 1694, 1696, 1700, 1701, 1702, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1719, 1723, 1726, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1768, 1792, 1802, 1803, 1807, 1808, 1809, 1815, 1816, 1820, 1825, 1826, 1835, 1837, 1848, 1850, 1852, 1874, 1875, 1878, 1896, 1898, 1899, 1915, 1917, 1921, 1932, 1933, 1934, 1950, 1952, 1954, 1955, 1959, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1972, 1978, 1981, 1983, 1984, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2005, 2006, 2009, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2022, 2025, 2030, 2032, 2033, 2035, 2038, 2044, 2045], "version": [0, 1, 2, 5, 8, 12, 14, 20, 22, 25, 27, 31, 43, 46, 49, 52, 53, 58, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 227, 232, 234, 240, 243, 245, 247, 249, 253, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 308, 310, 312, 314, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 395, 397, 415, 418, 421, 423, 434, 436, 438, 446, 451, 461, 464, 480, 485, 487, 503, 506, 507, 509, 511, 517, 522, 524, 527, 529, 531, 544, 546, 548, 551, 557, 559, 566, 570, 572, 588, 591, 593, 595, 597, 607, 617, 730, 731, 732, 744, 745, 746, 747, 748, 749, 770, 771, 772, 773, 775, 779, 780, 799, 800, 801, 834, 842, 850, 851, 853, 910, 921, 979, 1043, 1154, 1174, 1176, 1183, 1207, 1246, 1249, 1252, 1253, 1257, 1260, 1279, 1286, 1292, 1293, 1297, 1298, 1311, 1344, 1382, 1400, 1457, 1487, 1488, 1502, 1539, 1557, 1582, 1592, 1599, 1608, 1640, 1642, 1657, 1658, 1662, 1666, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1723, 1724, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1817, 1818, 1819, 1876, 1879, 1880, 1881, 1885, 1906, 1920, 1922, 1929, 1930, 1950, 1969, 1970, 1978, 1979, 1981, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996, 1998, 2000, 2002, 2003, 2005, 2009, 2015, 2022, 2023, 2027, 2033, 2035, 2036, 2043, 2045, 2047], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 45, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 132, 147, 148, 169, 187, 201, 204, 221, 223, 224, 225, 229, 238, 250, 254, 259, 282, 285, 307, 308, 309, 311, 313, 317, 348, 373, 397, 398, 440, 442, 443, 449, 466, 476, 478, 482, 483, 488, 491, 494, 508, 510, 512, 532, 533, 537, 539, 549, 550, 551, 553, 555, 556, 557, 558, 559, 576, 578, 579, 580, 582, 583, 602, 603, 610, 612, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 725, 726, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 746, 747, 748, 751, 752, 753, 755, 765, 767, 768, 769, 770, 773, 777, 778, 780, 791, 803, 804, 814, 815, 816, 817, 820, 822, 850, 856, 857, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 889, 890, 895, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 919, 920, 923, 930, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 968, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 992, 997, 1009, 1040, 1041, 1056, 1060, 1067, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1103, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1174, 1178, 1191, 1192, 1193, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1220, 1221, 1224, 1226, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1253, 1255, 1260, 1261, 1265, 1266, 1269, 1270, 1271, 1273, 1274, 1275, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1368, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1529, 1530, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1557, 1559, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1590, 1591, 1592, 1594, 1596, 1598, 1599, 1600, 1601, 1602, 1610, 1612, 1617, 1618, 1619, 1625, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1637, 1641, 1642, 1643, 1644, 1645, 1647, 1649, 1650, 1651, 1653, 1658, 1659, 1660, 1661, 1662, 1665, 1674, 1681, 1682, 1688, 1689, 1690, 1694, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1777, 1778, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1953, 1954, 1955, 1956, 1959, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2039, 2040, 2043, 2044, 2045, 2046, 2048], "10": [0, 1, 3, 12, 20, 21, 22, 25, 26, 31, 32, 42, 44, 46, 60, 65, 68, 69, 309, 317, 331, 466, 508, 555, 576, 578, 579, 580, 680, 681, 692, 729, 740, 741, 755, 756, 757, 758, 760, 935, 947, 957, 960, 961, 965, 979, 987, 1076, 1077, 1078, 1079, 1080, 1095, 1097, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1140, 1148, 1149, 1192, 1203, 1213, 1238, 1254, 1260, 1261, 1267, 1272, 1275, 1302, 1304, 1305, 1320, 1322, 1324, 1329, 1331, 1332, 1333, 1334, 1336, 1344, 1373, 1389, 1390, 1391, 1393, 1394, 1400, 1403, 1406, 1407, 1413, 1416, 1419, 1429, 1430, 1438, 1439, 1440, 1441, 1451, 1457, 1458, 1459, 1484, 1488, 1489, 1494, 1497, 1498, 1502, 1504, 1526, 1530, 1531, 1532, 1533, 1534, 1538, 1544, 1569, 1572, 1576, 1583, 1584, 1594, 1665, 1674, 1681, 1682, 1705, 1713, 1727, 1730, 1736, 1740, 1760, 1766, 1768, 1786, 1787, 1795, 1820, 1828, 1832, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1857, 1873, 1885, 1886, 1897, 1901, 1902, 1905, 1907, 1920, 1922, 1935, 1950, 1952, 1953, 1954, 1955, 1956, 1962, 1978, 1981, 1982, 1983, 1986, 1990, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2006, 2015, 2016, 2018, 2020, 2021, 2022, 2027, 2030, 2031, 2032, 2035, 2037, 2038, 2043, 2045, 2048], "class": [0, 1, 2, 3, 12, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 36, 39, 40, 42, 44, 46, 47, 49, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 552, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 831, 832, 833, 834, 835, 836, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 889, 890, 895, 896, 897, 898, 899, 900, 901, 910, 911, 912, 922, 923, 930, 931, 932, 933, 934, 988, 989, 998, 999, 1000, 1001, 1003, 1004, 1019, 1021, 1032, 1072, 1101, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1247, 1248, 1249, 1252, 1254, 1255, 1256, 1260, 1261, 1264, 1265, 1266, 1267, 1361, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1565, 1575, 1583, 1628, 1630, 1665, 1674, 1675, 1676, 1677, 1691, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1715, 1722, 1727, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1791, 1860, 1923, 1940, 1942, 1951, 1953, 1956, 1959, 1962, 1966, 1968, 1970, 1972, 1973, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1990, 1992, 1995, 1998, 2004, 2005, 2006, 2008, 2009, 2011, 2012, 2015, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2027, 2031, 2032, 2033, 2038, 2041, 2043, 2044, 2045, 2046, 2047, 2048], "device_typ": [0, 1, 25, 1977, 2010], "dtype": [0, 1, 5, 11, 12, 18, 19, 21, 22, 25, 27, 46, 47, 49, 56, 58, 60, 68, 69, 81, 149, 150, 187, 204, 208, 209, 210, 211, 238, 307, 309, 311, 313, 315, 317, 405, 424, 427, 440, 441, 442, 443, 444, 448, 453, 465, 476, 478, 508, 510, 560, 575, 576, 598, 612, 682, 684, 687, 688, 692, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 759, 760, 767, 768, 769, 789, 790, 794, 814, 815, 816, 817, 818, 819, 820, 821, 822, 836, 853, 854, 856, 857, 860, 874, 875, 895, 896, 898, 900, 901, 903, 905, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 952, 959, 960, 976, 979, 980, 981, 987, 997, 1013, 1078, 1079, 1098, 1099, 1100, 1110, 1114, 1115, 1116, 1122, 1123, 1133, 1140, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1197, 1207, 1208, 1220, 1249, 1253, 1263, 1269, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1331, 1332, 1333, 1334, 1336, 1339, 1340, 1344, 1348, 1349, 1350, 1353, 1354, 1373, 1377, 1378, 1379, 1381, 1391, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1429, 1430, 1433, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1493, 1494, 1495, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1526, 1530, 1532, 1534, 1538, 1539, 1540, 1541, 1546, 1547, 1548, 1549, 1559, 1575, 1576, 1603, 1609, 1611, 1643, 1649, 1650, 1665, 1676, 1677, 1681, 1682, 1691, 1694, 1695, 1715, 1729, 1733, 1734, 1735, 1737, 1772, 1778, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1810, 1813, 1825, 1826, 1828, 1829, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1856, 1859, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1884, 1885, 1897, 1900, 1911, 1913, 1918, 1922, 1923, 1925, 1932, 1933, 1937, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1962, 1970, 1971, 1981, 1983, 1990, 1993, 1998, 2000, 2001, 2006, 2007, 2008, 2015, 2016, 2017, 2020, 2021, 2022, 2032, 2034, 2035, 2040, 2045, 2048], "none": [0, 1, 2, 3, 5, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 40, 42, 44, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 108, 110, 111, 112, 114, 130, 131, 134, 146, 149, 150, 152, 169, 181, 182, 183, 184, 200, 201, 203, 205, 208, 209, 210, 211, 225, 229, 231, 232, 233, 234, 254, 282, 286, 297, 331, 347, 350, 373, 403, 405, 406, 407, 410, 416, 422, 423, 424, 425, 426, 427, 440, 441, 442, 443, 444, 448, 449, 465, 474, 476, 482, 483, 489, 498, 508, 515, 532, 533, 547, 548, 550, 551, 560, 575, 576, 578, 583, 585, 598, 603, 604, 605, 610, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 650, 652, 654, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 744, 745, 746, 747, 748, 749, 750, 761, 762, 763, 764, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 788, 789, 790, 792, 794, 809, 812, 814, 815, 816, 817, 820, 821, 833, 834, 835, 852, 853, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 873, 874, 875, 876, 877, 878, 879, 880, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 898, 899, 900, 901, 904, 906, 907, 908, 909, 914, 915, 919, 920, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 951, 954, 956, 957, 958, 959, 960, 962, 963, 965, 967, 973, 976, 977, 978, 981, 982, 984, 985, 986, 987, 991, 996, 997, 998, 1000, 1001, 1003, 1004, 1005, 1009, 1010, 1012, 1013, 1014, 1017, 1018, 1019, 1025, 1026, 1032, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1067, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1089, 1090, 1092, 1093, 1094, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1152, 1153, 1154, 1155, 1156, 1160, 1163, 1164, 1166, 1167, 1171, 1172, 1173, 1175, 1178, 1184, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1243, 1244, 1246, 1248, 1249, 1253, 1257, 1259, 1260, 1261, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1432, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1501, 1502, 1503, 1504, 1518, 1519, 1520, 1521, 1522, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1552, 1553, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1583, 1584, 1587, 1588, 1589, 1590, 1592, 1593, 1600, 1602, 1603, 1604, 1605, 1606, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1636, 1643, 1647, 1648, 1649, 1650, 1658, 1659, 1660, 1662, 1663, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1715, 1717, 1718, 1719, 1720, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1777, 1778, 1779, 1781, 1782, 1784, 1785, 1788, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1811, 1813, 1814, 1815, 1820, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1856, 1857, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1897, 1898, 1899, 1900, 1902, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1923, 1925, 1928, 1929, 1930, 1931, 1934, 1936, 1937, 1938, 1940, 1943, 1944, 1945, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1959, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1976, 1978, 1981, 1983, 1984, 1990, 1992, 1995, 1998, 2000, 2003, 2004, 2005, 2006, 2008, 2010, 2011, 2016, 2017, 2018, 2020, 2022, 2024, 2025, 2031, 2032, 2035, 2038, 2040, 2045, 2046, 2047], "enabl": [0, 1, 2, 5, 8, 12, 18, 19, 21, 22, 25, 26, 27, 29, 31, 33, 43, 46, 49, 56, 75, 81, 83, 483, 498, 499, 675, 755, 807, 808, 895, 898, 900, 910, 911, 912, 921, 967, 979, 998, 1043, 1097, 1101, 1232, 1233, 1251, 1258, 1364, 1365, 1438, 1457, 1502, 1503, 1533, 1550, 1643, 1674, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1727, 1754, 1829, 1832, 1860, 1922, 1925, 1955, 1961, 1962, 1964, 1967, 1971, 1977, 1978, 1979, 1980, 1981, 1983, 1986, 1989, 1991, 1993, 1994, 1998, 2000, 2004, 2005, 2010, 2011, 2012, 2015, 2023, 2025, 2026, 2027, 2029, 2031, 2032, 2034, 2035, 2038, 2039, 2043, 2045, 2046, 2047], "true": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 44, 46, 49, 54, 55, 56, 57, 58, 60, 68, 69, 146, 192, 205, 256, 315, 317, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 392, 396, 398, 443, 453, 455, 466, 472, 482, 483, 490, 491, 494, 499, 511, 512, 551, 562, 575, 576, 585, 589, 598, 604, 612, 675, 682, 687, 688, 689, 690, 691, 692, 694, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 741, 744, 749, 751, 755, 756, 759, 760, 763, 764, 774, 780, 781, 792, 809, 821, 854, 868, 870, 871, 875, 884, 887, 888, 890, 895, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 917, 919, 920, 930, 936, 939, 942, 944, 945, 951, 952, 958, 966, 967, 970, 973, 979, 980, 1000, 1038, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1119, 1120, 1126, 1127, 1149, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1165, 1166, 1167, 1171, 1178, 1180, 1181, 1185, 1186, 1188, 1189, 1191, 1193, 1206, 1207, 1208, 1211, 1212, 1223, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1253, 1254, 1256, 1259, 1265, 1266, 1267, 1269, 1271, 1274, 1279, 1280, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1302, 1304, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1316, 1319, 1321, 1322, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1341, 1343, 1347, 1349, 1350, 1351, 1352, 1355, 1361, 1373, 1378, 1381, 1384, 1387, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1434, 1435, 1438, 1439, 1440, 1441, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1496, 1501, 1502, 1503, 1504, 1518, 1519, 1526, 1530, 1532, 1533, 1534, 1535, 1536, 1539, 1540, 1549, 1557, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1592, 1594, 1596, 1602, 1603, 1604, 1617, 1618, 1619, 1628, 1636, 1643, 1662, 1663, 1665, 1668, 1674, 1675, 1677, 1679, 1683, 1684, 1686, 1688, 1689, 1690, 1693, 1694, 1695, 1707, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1772, 1774, 1782, 1784, 1785, 1789, 1790, 1791, 1808, 1809, 1816, 1819, 1820, 1828, 1829, 1832, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1857, 1859, 1860, 1862, 1870, 1879, 1880, 1881, 1884, 1885, 1900, 1904, 1909, 1918, 1919, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1937, 1950, 1953, 1954, 1955, 1959, 1962, 1963, 1965, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1993, 1994, 1995, 1998, 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2032, 2033, 2035, 2037, 2038, 2040, 2041, 2043, 2044, 2045, 2046], "cache_en": [0, 1043], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 49, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 146, 192, 205, 229, 308, 309, 317, 336, 347, 392, 397, 398, 411, 412, 448, 466, 482, 483, 508, 510, 512, 515, 519, 542, 551, 552, 554, 581, 598, 601, 604, 605, 619, 675, 690, 691, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 831, 832, 833, 834, 835, 836, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 868, 881, 882, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 933, 934, 946, 948, 949, 953, 955, 957, 967, 968, 969, 970, 971, 972, 973, 974, 975, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1097, 1101, 1148, 1151, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1196, 1198, 1199, 1202, 1221, 1222, 1223, 1225, 1230, 1235, 1236, 1237, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1321, 1322, 1342, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1557, 1558, 1562, 1564, 1565, 1566, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1613, 1614, 1615, 1616, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1636, 1638, 1639, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1653, 1654, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1774, 1791, 1816, 1821, 1824, 1825, 1826, 1827, 1828, 1832, 1833, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1859, 1860, 1866, 1873, 1881, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1902, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1952, 1953, 1954, 1959, 1961, 1962, 1964, 1965, 1966, 1968, 1970, 1971, 1976, 1985, 1988, 1989, 1993, 1995, 1998, 2000, 2002, 2004, 2005, 2006, 2010, 2011, 2012, 2017, 2020, 2022, 2023, 2024, 2025, 2032, 2035, 2036, 2038, 2045, 2046, 2047], "instanc": [0, 2, 3, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 39, 42, 43, 44, 46, 49, 54, 58, 135, 612, 675, 729, 743, 752, 788, 791, 819, 821, 836, 853, 998, 1097, 1148, 1247, 1249, 1261, 1265, 1322, 1429, 1430, 1433, 1449, 1450, 1451, 1459, 1487, 1497, 1531, 1533, 1534, 1538, 1547, 1548, 1549, 1602, 1674, 1689, 1701, 1715, 1723, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1870, 1901, 1952, 1954, 1956, 1961, 1964, 1968, 1970, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1990, 1994, 1998, 2003, 2006, 2011, 2012, 2013, 2015, 2017, 2022, 2030, 2038, 2044, 2046], "serv": [0, 7, 8, 15, 25, 83, 1962, 1998, 2002, 2011, 2012, 2031, 2035, 2040], "context": [0, 2, 5, 21, 25, 29, 33, 42, 43, 49, 58, 60, 146, 787, 884, 885, 886, 888, 890, 900, 901, 909, 910, 911, 912, 914, 930, 973, 989, 995, 1004, 1019, 1021, 1032, 1038, 1043, 1050, 1070, 1072, 1101, 1156, 1160, 1165, 1171, 1175, 1249, 1364, 1487, 1545, 1550, 1643, 1665, 1674, 1675, 1692, 1694, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1860, 1940, 1942, 1951, 1955, 1956, 1963, 1968, 1977, 1978, 1981, 1983, 1988, 1989, 1992, 1998, 2000, 2003, 2005, 2010, 2011, 2013, 2015, 2018, 2023, 2033, 2034, 2035, 2038, 2043, 2047], "manag": [0, 1, 2, 5, 7, 25, 29, 31, 33, 40, 42, 43, 44, 49, 58, 60, 84, 481, 890, 910, 911, 912, 930, 973, 989, 995, 998, 1001, 1004, 1005, 1006, 1008, 1019, 1021, 1022, 1023, 1032, 1033, 1043, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1061, 1062, 1063, 1070, 1072, 1101, 1156, 1160, 1165, 1171, 1364, 1503, 1545, 1550, 1643, 1674, 1691, 1692, 1694, 1727, 1860, 1940, 1942, 1951, 1955, 1956, 1963, 1978, 1983, 1985, 1986, 1989, 1998, 2000, 2004, 2005, 2010, 2011, 2012, 2015, 2018, 2023, 2033, 2034, 2035, 2038], "decor": [0, 1, 31, 35, 39, 43, 58, 71, 895, 898, 900, 910, 930, 969, 973, 1101, 1254, 1255, 1261, 1267, 1727, 1859, 1860, 1952, 1954, 1955, 1959, 1977, 1978, 1983, 2004, 2011, 2031, 2032, 2035, 2036, 2046], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 26, 31, 33, 34, 42, 43, 46, 49, 50, 52, 53, 54, 55, 58, 60, 62, 146, 508, 675, 730, 788, 792, 794, 819, 888, 892, 893, 909, 952, 966, 970, 979, 1040, 1043, 1067, 1097, 1159, 1171, 1175, 1249, 1254, 1267, 1305, 1327, 1368, 1382, 1396, 1397, 1398, 1422, 1423, 1440, 1480, 1481, 1482, 1487, 1490, 1493, 1515, 1530, 1674, 1680, 1728, 1737, 1753, 1862, 1922, 1950, 1954, 1955, 1962, 1963, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1995, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2011, 2015, 2018, 2019, 2020, 2022, 2032, 2033, 2034, 2035, 2038, 2041, 2044, 2045], "region": [0, 3, 5, 31, 39, 763, 764, 967, 1396, 1397, 1398, 1434, 1435, 1445, 1447, 1480, 1481, 1482, 1560, 1561, 1587, 1588, 1618, 1619, 1952, 1968, 1977, 1981, 2034, 2035, 2043], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 21, 24, 25, 29, 30, 31, 34, 35, 39, 41, 42, 43, 44, 45, 46, 49, 53, 54, 57, 58, 481, 888, 895, 898, 900, 903, 904, 909, 910, 967, 970, 1168, 1170, 1171, 1249, 1253, 1254, 1259, 1262, 1265, 1266, 1267, 1487, 1494, 1534, 1674, 1691, 1694, 1727, 1755, 1829, 1918, 1923, 1925, 1952, 1954, 1955, 1959, 1961, 1963, 1968, 1969, 1970, 1972, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1988, 1989, 1990, 1991, 1993, 1994, 1996, 2000, 2002, 2004, 2007, 2010, 2012, 2015, 2020, 2021, 2023, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2039, 2041, 2042, 2043, 2045, 2046, 2047, 2050], "script": [0, 2, 4, 18, 21, 25, 28, 33, 35, 41, 43, 44, 46, 1250, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1262, 1264, 1265, 1267, 1950, 1951, 1954, 1955, 1964, 1980, 1989, 1991, 1995, 1997, 1998, 2003, 2006, 2011, 2026, 2029, 2031, 2037, 2039, 2042], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 21, 22, 25, 26, 29, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 146, 481, 483, 675, 787, 793, 812, 814, 815, 816, 817, 820, 852, 856, 857, 858, 888, 909, 910, 914, 915, 930, 967, 1042, 1043, 1155, 1160, 1166, 1190, 1249, 1250, 1252, 1253, 1255, 1257, 1259, 1261, 1263, 1265, 1266, 1286, 1295, 1321, 1322, 1350, 1401, 1402, 1403, 1423, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1515, 1526, 1643, 1665, 1668, 1674, 1681, 1682, 1683, 1684, 1685, 1686, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1828, 1831, 1864, 1911, 1913, 1922, 1934, 1951, 1952, 1955, 1959, 1964, 1966, 1967, 1968, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2009, 2010, 2011, 2012, 2013, 2015, 2020, 2023, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2043, 2044, 2045, 2047], "In": [0, 2, 3, 4, 5, 7, 9, 15, 18, 21, 25, 27, 29, 31, 35, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 57, 58, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 150, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 217, 227, 232, 234, 240, 243, 245, 247, 249, 253, 254, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 415, 418, 421, 423, 434, 436, 438, 446, 451, 461, 464, 480, 481, 485, 487, 503, 506, 517, 522, 524, 527, 529, 531, 544, 546, 548, 557, 559, 566, 570, 572, 588, 591, 593, 595, 597, 607, 617, 675, 755, 795, 819, 849, 895, 898, 900, 901, 934, 943, 951, 980, 981, 997, 1043, 1054, 1066, 1067, 1071, 1072, 1097, 1118, 1120, 1128, 1129, 1130, 1145, 1156, 1160, 1163, 1165, 1168, 1170, 1178, 1246, 1247, 1249, 1259, 1262, 1263, 1265, 1281, 1290, 1295, 1296, 1297, 1305, 1308, 1313, 1318, 1322, 1327, 1330, 1339, 1344, 1350, 1351, 1378, 1396, 1397, 1398, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1425, 1426, 1427, 1431, 1433, 1438, 1447, 1457, 1472, 1480, 1481, 1482, 1487, 1493, 1530, 1532, 1534, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1582, 1592, 1599, 1601, 1608, 1637, 1640, 1642, 1643, 1657, 1674, 1681, 1682, 1688, 1694, 1695, 1727, 1755, 1766, 1768, 1804, 1820, 1822, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1881, 1885, 1886, 1909, 1922, 1923, 1925, 1931, 1932, 1950, 1951, 1952, 1954, 1955, 1959, 1961, 1962, 1963, 1968, 1969, 1970, 1971, 1976, 1977, 1980, 1981, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 2000, 2002, 2003, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2015, 2020, 2022, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 75, 76, 77, 79, 81, 82, 84, 146, 150, 186, 238, 250, 309, 311, 317, 319, 324, 331, 481, 494, 508, 510, 512, 532, 540, 555, 602, 609, 612, 675, 682, 683, 730, 736, 737, 738, 751, 755, 760, 774, 780, 782, 784, 787, 791, 810, 812, 818, 821, 849, 856, 857, 859, 873, 874, 875, 884, 886, 887, 888, 893, 895, 896, 898, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 922, 923, 924, 926, 927, 934, 938, 954, 964, 967, 980, 981, 983, 998, 1000, 1001, 1003, 1010, 1011, 1012, 1013, 1014, 1032, 1033, 1040, 1041, 1043, 1055, 1057, 1067, 1071, 1072, 1082, 1095, 1097, 1098, 1099, 1100, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1140, 1148, 1151, 1154, 1155, 1158, 1159, 1160, 1162, 1164, 1166, 1167, 1168, 1170, 1171, 1174, 1176, 1178, 1184, 1191, 1194, 1203, 1211, 1212, 1213, 1246, 1247, 1249, 1252, 1253, 1255, 1257, 1260, 1261, 1263, 1265, 1266, 1267, 1268, 1279, 1280, 1285, 1286, 1291, 1293, 1295, 1298, 1299, 1303, 1306, 1308, 1311, 1312, 1319, 1321, 1322, 1339, 1341, 1344, 1350, 1361, 1368, 1373, 1382, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1446, 1450, 1451, 1454, 1455, 1456, 1457, 1459, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1504, 1506, 1515, 1518, 1520, 1521, 1522, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1540, 1541, 1545, 1546, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1567, 1568, 1569, 1570, 1571, 1572, 1577, 1583, 1584, 1586, 1587, 1588, 1592, 1603, 1610, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1643, 1647, 1662, 1664, 1665, 1668, 1674, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1692, 1694, 1701, 1718, 1725, 1727, 1729, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1784, 1789, 1790, 1791, 1810, 1812, 1816, 1824, 1827, 1835, 1841, 1862, 1865, 1866, 1870, 1873, 1878, 1881, 1885, 1900, 1901, 1917, 1918, 1919, 1920, 1922, 1925, 1932, 1933, 1934, 1935, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048], "chosen": [0, 54, 1085, 1271, 1424, 1643, 1832, 1857, 1904, 1971, 1977, 1981, 1983, 1992, 2000, 2006, 2045], "improv": [0, 1, 3, 9, 14, 19, 22, 25, 46, 49, 58, 755, 799, 800, 801, 903, 905, 909, 983, 1203, 1424, 1438, 1457, 1502, 1533, 1643, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1768, 1951, 1952, 1977, 1982, 1983, 1984, 1993, 1994, 1998, 2006, 2007, 2011, 2035, 2039, 2041, 2043, 2045, 2047], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 42, 43, 46, 49, 53, 57, 58, 77, 115, 202, 205, 453, 481, 575, 598, 612, 681, 682, 683, 684, 685, 686, 755, 776, 799, 800, 801, 842, 853, 856, 895, 898, 900, 903, 905, 906, 909, 910, 914, 935, 947, 967, 980, 981, 1005, 1054, 1078, 1079, 1092, 1117, 1140, 1142, 1154, 1155, 1158, 1168, 1182, 1214, 1249, 1259, 1260, 1265, 1293, 1295, 1298, 1302, 1305, 1306, 1310, 1311, 1319, 1320, 1322, 1327, 1336, 1349, 1354, 1364, 1365, 1375, 1378, 1381, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1426, 1429, 1430, 1438, 1457, 1487, 1493, 1495, 1502, 1515, 1530, 1533, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1611, 1629, 1643, 1649, 1650, 1665, 1674, 1676, 1677, 1689, 1694, 1715, 1722, 1724, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1774, 1782, 1810, 1824, 1828, 1855, 1861, 1862, 1863, 1864, 1884, 1886, 1922, 1951, 1952, 1955, 1959, 1963, 1966, 1967, 1968, 1969, 1970, 1972, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1991, 1992, 1993, 1994, 2000, 2002, 2003, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2026, 2029, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2041, 2046, 2047], "while": [0, 2, 3, 5, 7, 8, 11, 14, 21, 22, 25, 26, 27, 31, 44, 46, 47, 49, 54, 57, 58, 81, 690, 691, 730, 849, 879, 887, 900, 901, 1001, 1072, 1155, 1167, 1212, 1249, 1252, 1265, 1266, 1322, 1379, 1391, 1407, 1447, 1449, 1450, 1451, 1457, 1487, 1493, 1505, 1518, 1526, 1530, 1534, 1611, 1668, 1674, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1729, 1820, 1828, 1927, 1956, 1961, 1962, 1970, 1971, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1994, 1995, 2000, 2002, 2004, 2006, 2009, 2011, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2034, 2035, 2036, 2038, 2039, 2045], "maintain": [0, 7, 8, 21, 22, 25, 31, 46, 49, 53, 58, 923, 1172, 1395, 1426, 1431, 1585, 1674, 1715, 1729, 1951, 1971, 1977, 1978, 1981, 1983, 1990, 1998, 2006, 2033, 2034, 2038], "accuraci": [0, 22, 967, 1171, 1313, 1643, 1828, 1951, 1966, 1977, 1990, 2020, 2024, 2035], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 17, 20, 21, 25, 26, 27, 31, 34, 42, 43, 45, 46, 49, 54, 55, 56, 57, 58, 85, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 124, 125, 128, 130, 131, 132, 133, 134, 136, 138, 140, 141, 144, 146, 147, 149, 150, 151, 152, 153, 155, 157, 159, 161, 163, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 189, 193, 195, 196, 198, 200, 201, 203, 206, 207, 208, 210, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 230, 231, 233, 235, 236, 237, 239, 241, 242, 244, 246, 248, 251, 252, 257, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 274, 276, 277, 278, 280, 283, 284, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 309, 317, 318, 319, 320, 321, 323, 324, 330, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 357, 359, 361, 363, 365, 366, 368, 370, 374, 375, 376, 377, 378, 380, 382, 384, 386, 388, 389, 390, 392, 393, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 433, 435, 437, 445, 447, 448, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 465, 472, 474, 475, 477, 479, 481, 482, 483, 484, 486, 488, 489, 490, 492, 493, 494, 496, 497, 500, 501, 502, 505, 510, 512, 513, 514, 516, 518, 519, 520, 521, 523, 525, 526, 528, 530, 533, 534, 535, 537, 538, 542, 543, 545, 547, 549, 550, 551, 556, 558, 560, 562, 563, 564, 565, 567, 568, 569, 571, 573, 574, 585, 586, 587, 589, 590, 592, 594, 596, 600, 601, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 675, 688, 690, 691, 694, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 740, 741, 743, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 766, 767, 768, 769, 774, 775, 776, 777, 778, 779, 780, 788, 835, 854, 855, 856, 857, 860, 869, 870, 871, 874, 885, 887, 888, 889, 890, 893, 894, 895, 897, 898, 900, 901, 905, 909, 910, 911, 914, 919, 920, 922, 927, 936, 938, 945, 947, 950, 964, 967, 971, 972, 985, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1022, 1023, 1032, 1033, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1061, 1062, 1063, 1092, 1095, 1097, 1098, 1100, 1101, 1110, 1115, 1133, 1136, 1149, 1152, 1157, 1158, 1159, 1161, 1167, 1171, 1174, 1180, 1182, 1194, 1203, 1207, 1208, 1212, 1213, 1221, 1222, 1223, 1249, 1253, 1261, 1265, 1266, 1268, 1269, 1271, 1281, 1286, 1289, 1292, 1295, 1297, 1304, 1306, 1307, 1315, 1319, 1320, 1322, 1328, 1330, 1336, 1337, 1339, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1364, 1365, 1371, 1378, 1380, 1381, 1391, 1399, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1432, 1438, 1440, 1446, 1447, 1452, 1453, 1457, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1501, 1502, 1514, 1516, 1518, 1519, 1531, 1532, 1533, 1534, 1535, 1536, 1539, 1545, 1546, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1663, 1664, 1674, 1675, 1688, 1689, 1690, 1694, 1700, 1709, 1718, 1723, 1726, 1727, 1728, 1729, 1733, 1772, 1782, 1783, 1793, 1795, 1797, 1799, 1800, 1804, 1807, 1810, 1816, 1825, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1852, 1860, 1861, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1895, 1897, 1900, 1906, 1907, 1911, 1913, 1918, 1922, 1925, 1929, 1930, 1935, 1937, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1961, 1962, 1965, 1967, 1968, 1969, 1970, 1971, 1972, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2004, 2005, 2006, 2007, 2010, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2026, 2028, 2031, 2032, 2033, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 21, 25, 26, 27, 31, 33, 43, 47, 49, 55, 58, 75, 76, 77, 146, 319, 490, 519, 609, 675, 730, 733, 734, 735, 736, 737, 738, 755, 761, 762, 763, 766, 767, 768, 769, 774, 775, 777, 778, 779, 780, 788, 854, 855, 856, 857, 868, 885, 887, 888, 889, 890, 893, 894, 895, 898, 900, 901, 914, 950, 971, 972, 985, 1003, 1005, 1006, 1008, 1022, 1023, 1032, 1043, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1061, 1062, 1063, 1080, 1097, 1136, 1159, 1194, 1198, 1199, 1203, 1230, 1237, 1249, 1253, 1265, 1286, 1289, 1307, 1314, 1322, 1328, 1330, 1350, 1373, 1391, 1395, 1405, 1417, 1418, 1419, 1423, 1429, 1430, 1431, 1432, 1434, 1435, 1438, 1457, 1487, 1493, 1499, 1500, 1502, 1514, 1535, 1545, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1593, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1665, 1674, 1675, 1718, 1728, 1736, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1755, 1760, 1772, 1784, 1816, 1827, 1852, 1861, 1907, 1918, 1922, 1925, 1950, 1952, 1953, 1954, 1955, 1959, 1962, 1965, 1967, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1993, 1994, 1995, 2000, 2003, 2004, 2005, 2006, 2008, 2010, 2011, 2012, 2013, 2015, 2017, 2019, 2020, 2021, 2022, 2023, 2027, 2038, 2042, 2045, 2046, 2047], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 58, 59, 78, 80, 81, 93, 146, 187, 204, 256, 309, 317, 443, 481, 482, 483, 492, 493, 508, 510, 512, 539, 555, 575, 612, 675, 681, 684, 730, 763, 764, 774, 780, 786, 788, 819, 835, 853, 860, 872, 875, 888, 895, 903, 904, 905, 906, 907, 908, 909, 910, 914, 915, 919, 920, 921, 923, 930, 935, 938, 947, 955, 958, 959, 960, 966, 967, 980, 981, 985, 1000, 1002, 1012, 1014, 1036, 1042, 1043, 1055, 1080, 1097, 1136, 1140, 1145, 1151, 1155, 1156, 1161, 1164, 1165, 1166, 1171, 1178, 1181, 1182, 1190, 1203, 1238, 1239, 1241, 1242, 1245, 1249, 1250, 1252, 1261, 1262, 1263, 1265, 1266, 1270, 1271, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1319, 1320, 1321, 1322, 1330, 1336, 1339, 1344, 1350, 1351, 1354, 1373, 1378, 1379, 1380, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1433, 1436, 1438, 1439, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1514, 1515, 1518, 1519, 1520, 1521, 1523, 1526, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1547, 1557, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1584, 1590, 1592, 1601, 1603, 1604, 1628, 1631, 1633, 1636, 1637, 1643, 1651, 1662, 1663, 1664, 1665, 1670, 1671, 1674, 1675, 1676, 1677, 1681, 1682, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1718, 1723, 1727, 1728, 1729, 1730, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1772, 1774, 1781, 1784, 1785, 1807, 1813, 1820, 1825, 1828, 1834, 1852, 1858, 1862, 1864, 1865, 1866, 1870, 1876, 1881, 1885, 1895, 1900, 1902, 1907, 1911, 1913, 1922, 1923, 1934, 1937, 1950, 1951, 1952, 1954, 1959, 1961, 1964, 1966, 1968, 1969, 1970, 1976, 1979, 1980, 1981, 1982, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 2002, 2003, 2004, 2005, 2010, 2011, 2012, 2013, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2027, 2031, 2032, 2033, 2034, 2036, 2038, 2039, 2041, 2043, 2044, 2045, 2047], "enter": [0, 25, 890, 891, 892, 910, 1983], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 21, 22, 24, 25, 26, 27, 29, 31, 32, 47, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 84, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 715, 727, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 745, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 783, 784, 785, 789, 793, 794, 795, 796, 797, 814, 815, 816, 817, 819, 820, 822, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 915, 917, 919, 920, 921, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 972, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 997, 1010, 1011, 1012, 1013, 1014, 1021, 1029, 1030, 1036, 1040, 1043, 1046, 1050, 1061, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1175, 1191, 1192, 1193, 1194, 1195, 1196, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1252, 1253, 1255, 1256, 1257, 1260, 1261, 1263, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1391, 1395, 1396, 1399, 1400, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1438, 1439, 1440, 1446, 1452, 1453, 1457, 1458, 1474, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1519, 1520, 1521, 1522, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1551, 1552, 1553, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1829, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1942, 1948, 1949, 1951, 1952, 1954, 1955, 1959, 1962, 1972, 1976, 1977, 1979, 1980, 1981, 1982, 1984, 1985, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1996, 1998, 2001, 2002, 2003, 2004, 2005, 2007, 2010, 2011, 2012, 2016, 2017, 2020, 2022, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2040, 2044, 2045, 2046, 2047], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 21, 22, 25, 26, 27, 29, 31, 33, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 54, 57, 58, 84, 146, 250, 481, 494, 540, 612, 692, 753, 776, 787, 788, 789, 795, 805, 806, 807, 808, 810, 811, 812, 813, 818, 819, 821, 849, 860, 884, 885, 886, 888, 895, 898, 900, 901, 903, 909, 914, 915, 923, 943, 949, 953, 954, 980, 1000, 1036, 1043, 1054, 1098, 1099, 1100, 1113, 1114, 1116, 1117, 1118, 1120, 1124, 1128, 1129, 1130, 1145, 1154, 1155, 1162, 1163, 1164, 1166, 1171, 1174, 1178, 1212, 1248, 1249, 1253, 1256, 1260, 1261, 1263, 1265, 1271, 1279, 1281, 1285, 1286, 1290, 1295, 1296, 1297, 1302, 1303, 1306, 1310, 1313, 1319, 1321, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1399, 1400, 1404, 1405, 1414, 1415, 1416, 1423, 1424, 1428, 1432, 1433, 1436, 1437, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1452, 1453, 1473, 1474, 1476, 1477, 1478, 1486, 1487, 1495, 1497, 1498, 1501, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1537, 1538, 1563, 1567, 1568, 1569, 1609, 1629, 1630, 1643, 1665, 1674, 1681, 1682, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1706, 1716, 1717, 1719, 1722, 1724, 1729, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1800, 1816, 1830, 1832, 1885, 1934, 1943, 1950, 1952, 1953, 1954, 1959, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2017, 2020, 2022, 2024, 2025, 2029, 2030, 2031, 2032, 2033, 2034, 2037, 2038, 2040, 2041, 2043, 2044, 2045, 2046, 2047], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 25, 29, 30, 31, 33, 34, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 70, 71, 78, 79, 146, 250, 331, 443, 481, 483, 494, 675, 684, 729, 730, 743, 752, 776, 884, 885, 886, 887, 888, 895, 897, 898, 900, 901, 903, 904, 905, 909, 910, 921, 949, 967, 998, 1021, 1032, 1034, 1043, 1044, 1064, 1097, 1154, 1155, 1158, 1159, 1160, 1161, 1166, 1168, 1170, 1171, 1181, 1249, 1253, 1254, 1262, 1265, 1266, 1267, 1295, 1313, 1321, 1344, 1351, 1354, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1457, 1483, 1484, 1485, 1487, 1492, 1493, 1494, 1502, 1521, 1530, 1532, 1534, 1539, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1603, 1609, 1643, 1661, 1662, 1665, 1674, 1689, 1716, 1724, 1726, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1766, 1784, 1807, 1816, 1824, 1867, 1868, 1869, 1871, 1872, 1876, 1923, 1925, 1934, 1942, 1950, 1952, 1954, 1955, 1957, 1959, 1962, 1963, 1964, 1966, 1968, 1969, 1971, 1976, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2050], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 65, 66, 69, 80, 115, 146, 150, 309, 317, 394, 398, 440, 441, 442, 443, 444, 482, 483, 491, 508, 510, 512, 578, 579, 580, 582, 583, 681, 684, 685, 730, 755, 767, 768, 769, 788, 791, 795, 812, 819, 833, 834, 849, 850, 851, 854, 860, 884, 885, 886, 887, 888, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 909, 919, 920, 935, 936, 937, 938, 945, 958, 973, 987, 1000, 1003, 1013, 1014, 1032, 1034, 1043, 1088, 1098, 1099, 1100, 1110, 1115, 1118, 1119, 1120, 1128, 1129, 1130, 1133, 1148, 1151, 1152, 1153, 1155, 1156, 1160, 1164, 1165, 1166, 1170, 1174, 1176, 1207, 1208, 1211, 1212, 1246, 1247, 1249, 1250, 1254, 1259, 1261, 1262, 1265, 1266, 1267, 1269, 1294, 1319, 1320, 1321, 1327, 1336, 1339, 1340, 1341, 1361, 1391, 1399, 1400, 1404, 1420, 1422, 1423, 1425, 1426, 1427, 1430, 1431, 1452, 1457, 1479, 1487, 1493, 1494, 1495, 1509, 1514, 1535, 1539, 1557, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1584, 1592, 1643, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1715, 1716, 1717, 1720, 1722, 1733, 1734, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1784, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1823, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1885, 1900, 1909, 1934, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1959, 1961, 1962, 1963, 1965, 1966, 1968, 1970, 1971, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1990, 1992, 1993, 1994, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2015, 2019, 2020, 2022, 2027, 2029, 2031, 2032, 2034, 2035, 2037, 2038, 2039, 2041, 2043, 2044, 2045, 2046], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 60, 62, 69, 76, 82, 146, 286, 319, 331, 453, 481, 482, 483, 551, 575, 609, 612, 675, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 776, 785, 792, 819, 852, 856, 857, 888, 895, 896, 897, 898, 899, 900, 901, 903, 905, 906, 909, 910, 919, 920, 921, 923, 930, 934, 950, 967, 972, 973, 975, 998, 1001, 1003, 1032, 1034, 1044, 1045, 1054, 1061, 1062, 1064, 1065, 1095, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1149, 1154, 1155, 1166, 1194, 1213, 1234, 1246, 1249, 1252, 1254, 1260, 1261, 1262, 1269, 1305, 1313, 1317, 1319, 1321, 1322, 1351, 1395, 1401, 1402, 1403, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1433, 1472, 1483, 1484, 1485, 1487, 1494, 1495, 1515, 1526, 1538, 1570, 1571, 1572, 1578, 1579, 1580, 1585, 1603, 1643, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1681, 1682, 1691, 1694, 1701, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1717, 1723, 1724, 1726, 1727, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1797, 1824, 1830, 1831, 1860, 1879, 1880, 1881, 1902, 1918, 1922, 1923, 1925, 1929, 1930, 1934, 1935, 1950, 1952, 1956, 1959, 1963, 1966, 1968, 1970, 1971, 1972, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2026, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2044, 2045, 2046, 2047, 2048], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 22, 25, 26, 27, 29, 30, 31, 41, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 78, 79, 787, 788, 789, 792, 793, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 819, 820, 821, 831, 832, 833, 834, 849, 852, 853, 854, 855, 856, 857, 858, 910, 923, 967, 1044, 1064, 1154, 1155, 1156, 1164, 1166, 1249, 1253, 1254, 1259, 1261, 1265, 1267, 1321, 1391, 1423, 1440, 1451, 1452, 1487, 1493, 1515, 1526, 1530, 1532, 1533, 1534, 1591, 1674, 1675, 1681, 1682, 1687, 1689, 1692, 1705, 1724, 1725, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1768, 1881, 1934, 1951, 1952, 1954, 1955, 1956, 1963, 1964, 1965, 1971, 1978, 1980, 1981, 1982, 1983, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1997, 2000, 2005, 2007, 2011, 2012, 2014, 2015, 2016, 2020, 2024, 2025, 2026, 2029, 2030, 2031, 2034, 2035, 2036, 2038, 2041, 2043, 2045], "": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 43, 46, 47, 49, 51, 53, 54, 57, 58, 76, 77, 82, 83, 458, 476, 488, 491, 508, 539, 553, 576, 619, 675, 684, 688, 689, 690, 691, 694, 730, 755, 788, 789, 790, 796, 810, 811, 812, 815, 818, 821, 849, 856, 857, 870, 872, 873, 874, 875, 894, 895, 896, 897, 900, 904, 905, 907, 915, 934, 951, 953, 966, 979, 980, 981, 982, 987, 996, 998, 1000, 1004, 1019, 1023, 1032, 1034, 1039, 1040, 1043, 1044, 1045, 1064, 1065, 1066, 1072, 1089, 1092, 1094, 1095, 1097, 1111, 1112, 1114, 1115, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1166, 1167, 1171, 1194, 1203, 1211, 1212, 1213, 1236, 1238, 1246, 1247, 1249, 1253, 1260, 1261, 1265, 1280, 1281, 1291, 1292, 1293, 1295, 1298, 1302, 1304, 1306, 1307, 1311, 1312, 1313, 1314, 1319, 1321, 1322, 1337, 1344, 1349, 1351, 1354, 1356, 1357, 1361, 1364, 1365, 1368, 1377, 1378, 1381, 1383, 1389, 1390, 1391, 1399, 1400, 1401, 1402, 1403, 1406, 1423, 1429, 1440, 1487, 1488, 1493, 1497, 1503, 1515, 1518, 1520, 1526, 1530, 1532, 1534, 1540, 1541, 1564, 1565, 1576, 1589, 1592, 1603, 1604, 1609, 1643, 1649, 1662, 1665, 1670, 1671, 1674, 1675, 1681, 1682, 1694, 1705, 1718, 1722, 1729, 1730, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1760, 1772, 1774, 1778, 1785, 1800, 1803, 1804, 1807, 1808, 1809, 1811, 1813, 1820, 1827, 1828, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1897, 1901, 1903, 1909, 1925, 1929, 1930, 1931, 1934, 1935, 1940, 1950, 1952, 1953, 1954, 1955, 1956, 1959, 1961, 1962, 1965, 1966, 1967, 1968, 1969, 1970, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2004, 2005, 2006, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2027, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046], "wrap": [0, 1, 15, 21, 22, 25, 29, 35, 44, 46, 49, 53, 54, 58, 60, 256, 785, 786, 1001, 1072, 1155, 1171, 1249, 1265, 1423, 1487, 1526, 1669, 1674, 1692, 1718, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1952, 1953, 1955, 1962, 1977, 1978, 1981, 1982, 1983, 1984, 1990, 1996, 2000, 2004, 2005, 2006, 2011, 2012, 2023, 2025, 2031, 2032, 2035, 2038, 2045, 2046], "forward": [0, 5, 7, 8, 12, 14, 22, 25, 26, 29, 31, 46, 47, 49, 50, 51, 53, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 146, 217, 218, 675, 730, 743, 752, 755, 795, 810, 811, 812, 815, 819, 856, 857, 884, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 905, 906, 909, 910, 911, 912, 914, 979, 1043, 1089, 1101, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1155, 1157, 1158, 1159, 1161, 1164, 1249, 1252, 1253, 1254, 1256, 1260, 1261, 1265, 1266, 1267, 1395, 1399, 1401, 1402, 1403, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1438, 1457, 1472, 1483, 1484, 1485, 1487, 1488, 1489, 1493, 1494, 1497, 1498, 1502, 1503, 1515, 1530, 1531, 1532, 1533, 1534, 1578, 1579, 1580, 1585, 1631, 1665, 1668, 1669, 1670, 1671, 1674, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1723, 1726, 1727, 1791, 1858, 1922, 1951, 1952, 1954, 1955, 1961, 1964, 1968, 1970, 1976, 1977, 1978, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1989, 1990, 1993, 1995, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2023, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2035, 2038, 2039, 2040, 2041, 2043, 2044, 2045], "pass": [0, 1, 3, 5, 6, 7, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 57, 58, 60, 68, 69, 75, 82, 146, 250, 443, 483, 508, 510, 512, 539, 555, 675, 788, 789, 818, 821, 854, 856, 875, 884, 885, 886, 887, 888, 895, 898, 900, 901, 909, 951, 967, 974, 998, 1032, 1043, 1087, 1118, 1119, 1120, 1128, 1129, 1130, 1136, 1149, 1151, 1154, 1155, 1159, 1160, 1161, 1164, 1165, 1171, 1178, 1185, 1186, 1212, 1247, 1249, 1250, 1253, 1255, 1259, 1261, 1265, 1266, 1294, 1310, 1312, 1321, 1368, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1423, 1429, 1430, 1434, 1435, 1487, 1492, 1493, 1515, 1531, 1532, 1533, 1534, 1539, 1557, 1587, 1588, 1592, 1603, 1604, 1631, 1643, 1665, 1668, 1669, 1670, 1671, 1674, 1692, 1694, 1696, 1701, 1715, 1718, 1722, 1724, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1816, 1820, 1824, 1885, 1950, 1952, 1956, 1959, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1980, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1993, 1995, 1998, 2000, 2002, 2003, 2004, 2011, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2025, 2026, 2031, 2032, 2033, 2034, 2035, 2038, 2042, 2045, 2046], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 56, 57, 58, 59, 60, 68, 69, 146, 254, 331, 373, 481, 575, 612, 730, 743, 752, 755, 788, 789, 810, 812, 849, 853, 854, 856, 857, 875, 884, 888, 895, 897, 900, 901, 910, 914, 915, 934, 946, 948, 951, 979, 1029, 1043, 1068, 1097, 1107, 1148, 1155, 1160, 1164, 1167, 1171, 1176, 1181, 1184, 1200, 1228, 1229, 1231, 1234, 1246, 1249, 1256, 1257, 1265, 1285, 1286, 1301, 1313, 1321, 1322, 1323, 1325, 1327, 1344, 1355, 1399, 1400, 1401, 1402, 1403, 1406, 1414, 1415, 1416, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1438, 1441, 1446, 1449, 1450, 1451, 1452, 1453, 1457, 1459, 1460, 1461, 1462, 1478, 1487, 1488, 1493, 1494, 1496, 1497, 1501, 1502, 1518, 1526, 1530, 1534, 1535, 1536, 1538, 1567, 1568, 1569, 1576, 1583, 1584, 1592, 1603, 1636, 1643, 1662, 1664, 1665, 1670, 1674, 1675, 1676, 1677, 1681, 1682, 1689, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1715, 1716, 1722, 1726, 1729, 1741, 1742, 1754, 1777, 1788, 1806, 1813, 1820, 1824, 1828, 1830, 1835, 1870, 1881, 1885, 1950, 1952, 1954, 1955, 1956, 1959, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1993, 1995, 1998, 2000, 2002, 2003, 2005, 2006, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2020, 2022, 2030, 2033, 2034, 2035, 2038, 2043, 2045, 2046, 2048], "network": [0, 1, 7, 8, 15, 29, 31, 42, 836, 1043, 1249, 1265, 1266, 1395, 1401, 1402, 1403, 1406, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1440, 1452, 1457, 1487, 1494, 1499, 1500, 1505, 1514, 1516, 1526, 1530, 1532, 1534, 1557, 1591, 1592, 1646, 1665, 1689, 1692, 1718, 1723, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1952, 1954, 1955, 1976, 1977, 1983, 1993, 1994, 1997, 2000, 2002, 2006, 2011, 2012, 2013, 2033], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 27, 39, 42, 43, 46, 47, 49, 58, 77, 79, 317, 483, 512, 578, 763, 764, 854, 856, 969, 1125, 1127, 1211, 1247, 1249, 1250, 1279, 1358, 1359, 1396, 1397, 1398, 1404, 1406, 1423, 1432, 1440, 1474, 1483, 1484, 1485, 1487, 1493, 1530, 1531, 1532, 1533, 1534, 1537, 1547, 1559, 1560, 1561, 1576, 1589, 1609, 1674, 1681, 1682, 1716, 1717, 1719, 1848, 1910, 1911, 1912, 1913, 1950, 1952, 1954, 1955, 1962, 1964, 1966, 1968, 1978, 1980, 1981, 1985, 1986, 1989, 1990, 1995, 1997, 2000, 2002, 2005, 2006, 2011, 2013, 2020, 2023, 2026, 2027, 2029, 2031, 2032, 2034, 2035, 2036, 2041, 2042, 2043, 2045, 2046, 2047], "loss": [0, 1, 22, 25, 26, 29, 31, 49, 1156, 1246, 1285, 1286, 1295, 1313, 1391, 1399, 1400, 1406, 1420, 1422, 1429, 1440, 1446, 1447, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1536, 1564, 1565, 1575, 1576, 1589, 1601, 1604, 1628, 1636, 1647, 1659, 1660, 1674, 1716, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1759, 1768, 1828, 1950, 1951, 1966, 1970, 1978, 1981, 1982, 1985, 1987, 1990, 2002, 2006, 2007, 2011, 2012, 2020], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 21, 22, 25, 27, 30, 31, 33, 35, 46, 47, 49, 50, 51, 53, 146, 286, 481, 482, 490, 675, 676, 678, 692, 693, 755, 763, 764, 795, 797, 814, 815, 816, 817, 819, 820, 884, 888, 890, 891, 893, 895, 896, 897, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 919, 920, 939, 940, 941, 942, 943, 944, 955, 957, 958, 959, 960, 966, 981, 983, 997, 1040, 1043, 1074, 1080, 1089, 1091, 1094, 1097, 1101, 1102, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1142, 1143, 1144, 1146, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1192, 1193, 1194, 1203, 1206, 1209, 1210, 1211, 1212, 1226, 1249, 1252, 1261, 1269, 1270, 1272, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1322, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1348, 1349, 1350, 1353, 1378, 1380, 1384, 1391, 1395, 1396, 1397, 1398, 1401, 1402, 1403, 1417, 1418, 1419, 1421, 1422, 1424, 1429, 1430, 1438, 1441, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1493, 1494, 1496, 1501, 1502, 1520, 1522, 1526, 1535, 1536, 1539, 1559, 1560, 1561, 1574, 1575, 1583, 1584, 1591, 1592, 1594, 1601, 1603, 1604, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1628, 1633, 1636, 1643, 1647, 1649, 1650, 1659, 1660, 1665, 1668, 1670, 1671, 1674, 1675, 1679, 1681, 1682, 1683, 1685, 1688, 1690, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1716, 1722, 1726, 1727, 1729, 1739, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1778, 1784, 1785, 1789, 1790, 1804, 1805, 1828, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1858, 1861, 1862, 1863, 1864, 1881, 1885, 1886, 1902, 1907, 1931, 1934, 1951, 1952, 1955, 1962, 1963, 1966, 1969, 1970, 1972, 1977, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1991, 1997, 1998, 2000, 2002, 2006, 2009, 2011, 2015, 2016, 2021, 2024, 2027, 2029, 2030, 2032, 2033, 2034, 2037, 2044, 2047], "backward": [0, 1, 5, 9, 25, 26, 27, 29, 31, 46, 49, 53, 54, 58, 60, 286, 331, 482, 483, 491, 498, 499, 508, 510, 512, 576, 675, 681, 684, 755, 810, 811, 812, 885, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 906, 909, 912, 914, 919, 920, 930, 935, 947, 972, 1043, 1101, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1154, 1155, 1249, 1322, 1330, 1344, 1354, 1399, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1429, 1438, 1439, 1440, 1453, 1457, 1458, 1474, 1478, 1479, 1487, 1493, 1494, 1501, 1502, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1564, 1565, 1575, 1576, 1592, 1603, 1628, 1631, 1666, 1670, 1671, 1674, 1694, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1759, 1772, 1784, 1858, 1862, 1866, 1885, 1922, 1950, 1951, 1953, 1955, 1961, 1970, 1971, 1976, 1977, 1982, 1983, 1984, 1985, 1986, 1989, 1990, 1992, 1993, 1998, 2002, 2003, 2005, 2006, 2011, 2015, 2016, 2021, 2026, 2027, 2030, 2031, 2035, 2039, 2041, 2043, 2044, 2045], "under": [0, 1, 3, 4, 5, 9, 21, 25, 42, 46, 49, 50, 52, 54, 57, 77, 910, 914, 926, 952, 1170, 1249, 1406, 1487, 1557, 1583, 1584, 1688, 1691, 1694, 1736, 1805, 1959, 1968, 1977, 1978, 1981, 1982, 1984, 1986, 1987, 1992, 1998, 2003, 2004, 2006, 2009, 2010, 2013, 2016, 2020, 2023, 2025, 2032, 2033, 2034, 2038, 2040, 2043, 2045], "recommend": [0, 1, 5, 21, 22, 25, 27, 30, 31, 33, 42, 43, 49, 53, 57, 58, 60, 80, 81, 83, 443, 888, 975, 980, 981, 1118, 1119, 1120, 1128, 1129, 1130, 1236, 1252, 1295, 1322, 1368, 1391, 1423, 1604, 1674, 1791, 1918, 1923, 1950, 1952, 1959, 1965, 1968, 1970, 1976, 1977, 1978, 1980, 1981, 1983, 1984, 1990, 1992, 1993, 1995, 1998, 2000, 2003, 2006, 2021, 2036], "same": [0, 1, 3, 7, 12, 14, 15, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 57, 58, 60, 68, 69, 135, 149, 191, 217, 251, 307, 309, 311, 315, 317, 335, 440, 441, 442, 443, 444, 466, 478, 481, 492, 493, 495, 508, 510, 512, 515, 539, 575, 612, 613, 681, 684, 688, 690, 691, 692, 694, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 740, 741, 751, 753, 756, 757, 758, 759, 760, 774, 780, 783, 784, 788, 789, 791, 795, 797, 809, 814, 817, 819, 820, 854, 856, 873, 874, 875, 887, 893, 895, 897, 900, 901, 903, 904, 905, 906, 907, 908, 914, 915, 935, 937, 938, 947, 949, 951, 954, 959, 960, 961, 967, 970, 976, 979, 997, 998, 1000, 1011, 1013, 1032, 1043, 1080, 1085, 1087, 1088, 1094, 1097, 1099, 1100, 1103, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1145, 1150, 1151, 1153, 1154, 1155, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1191, 1194, 1203, 1211, 1212, 1220, 1224, 1240, 1246, 1249, 1255, 1260, 1261, 1265, 1266, 1270, 1271, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1317, 1337, 1341, 1343, 1344, 1347, 1349, 1350, 1351, 1352, 1355, 1378, 1381, 1382, 1383, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1459, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1495, 1496, 1501, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1538, 1539, 1542, 1543, 1544, 1557, 1563, 1564, 1565, 1567, 1568, 1569, 1575, 1584, 1592, 1594, 1603, 1604, 1643, 1662, 1674, 1681, 1682, 1688, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1715, 1719, 1724, 1729, 1730, 1734, 1737, 1772, 1777, 1778, 1781, 1782, 1794, 1796, 1798, 1802, 1804, 1806, 1807, 1811, 1813, 1820, 1823, 1824, 1828, 1835, 1858, 1867, 1868, 1869, 1871, 1872, 1878, 1879, 1880, 1884, 1885, 1896, 1907, 1918, 1919, 1920, 1921, 1922, 1929, 1930, 1931, 1934, 1949, 1950, 1952, 1954, 1955, 1959, 1963, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1998, 2000, 2002, 2003, 2004, 2006, 2009, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2029, 2030, 2031, 2033, 2034, 2035, 2038, 2041, 2043, 2044, 2045, 2046], "correspond": [0, 1, 7, 18, 21, 22, 25, 27, 29, 30, 31, 42, 46, 49, 58, 78, 468, 469, 508, 510, 512, 539, 540, 675, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 730, 788, 792, 831, 833, 852, 853, 854, 859, 875, 884, 886, 887, 888, 895, 897, 900, 901, 903, 905, 914, 934, 982, 1043, 1063, 1092, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1169, 1171, 1203, 1212, 1238, 1249, 1266, 1280, 1285, 1286, 1291, 1294, 1313, 1320, 1322, 1336, 1351, 1373, 1400, 1423, 1429, 1457, 1487, 1493, 1509, 1533, 1583, 1592, 1630, 1670, 1674, 1689, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1723, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1777, 1778, 1788, 1811, 1820, 1835, 1870, 1879, 1880, 1885, 1917, 1920, 1921, 1929, 1930, 1950, 1952, 1953, 1955, 1959, 1966, 1969, 1970, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1994, 1998, 2000, 2003, 2005, 2006, 2011, 2012, 2015, 2016, 2017, 2020, 2022, 2024, 2025, 2036, 2042, 2043, 2045], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 21, 22, 25, 26, 27, 29, 30, 43, 44, 47, 49, 53, 56, 57, 58, 60, 65, 69, 70, 71, 84, 192, 202, 205, 285, 309, 317, 331, 440, 441, 442, 443, 444, 510, 512, 575, 681, 684, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 744, 745, 746, 747, 748, 749, 750, 860, 872, 874, 875, 903, 905, 932, 935, 936, 938, 945, 947, 972, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1021, 1025, 1026, 1027, 1029, 1030, 1038, 1040, 1041, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1098, 1099, 1100, 1110, 1115, 1133, 1149, 1152, 1153, 1196, 1207, 1208, 1249, 1253, 1257, 1260, 1263, 1269, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1304, 1307, 1308, 1310, 1311, 1313, 1314, 1320, 1321, 1336, 1339, 1344, 1350, 1354, 1361, 1368, 1370, 1391, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1430, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1493, 1495, 1502, 1503, 1504, 1526, 1530, 1532, 1534, 1546, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1603, 1609, 1643, 1658, 1662, 1663, 1664, 1665, 1674, 1676, 1677, 1679, 1680, 1681, 1682, 1715, 1722, 1728, 1730, 1733, 1734, 1744, 1784, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1824, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1885, 1900, 1902, 1911, 1913, 1922, 1923, 1925, 1939, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1964, 1969, 1971, 1977, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1992, 1994, 1995, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2010, 2011, 2015, 2017, 2021, 2022, 2027, 2030, 2032, 2034, 2035, 2037, 2040, 2042, 2043, 2045, 2047], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 21, 22, 25, 27, 29, 31, 33, 34, 40, 42, 43, 44, 45, 46, 47, 49, 57, 58, 60, 80, 81, 83, 84, 146, 218, 250, 331, 481, 575, 576, 578, 579, 580, 582, 583, 675, 727, 733, 734, 735, 740, 741, 751, 759, 787, 788, 789, 809, 810, 811, 812, 814, 819, 849, 873, 874, 875, 888, 893, 909, 910, 911, 912, 934, 946, 948, 959, 960, 964, 965, 967, 982, 1008, 1040, 1041, 1050, 1085, 1100, 1149, 1150, 1151, 1152, 1171, 1172, 1173, 1176, 1246, 1249, 1252, 1262, 1268, 1273, 1279, 1280, 1286, 1288, 1307, 1320, 1336, 1351, 1373, 1399, 1420, 1429, 1430, 1433, 1447, 1453, 1478, 1479, 1487, 1490, 1491, 1492, 1515, 1518, 1519, 1526, 1535, 1536, 1538, 1546, 1548, 1549, 1674, 1694, 1715, 1722, 1727, 1735, 1736, 1755, 1823, 1824, 1853, 1865, 1870, 1900, 1907, 1951, 1955, 1956, 1959, 1964, 1968, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1991, 1992, 1995, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2017, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2030, 2031, 2032, 2033, 2034, 2035, 2038, 2044, 2045, 2047, 2048], "optim": [0, 1, 2, 7, 8, 11, 14, 15, 22, 25, 26, 27, 31, 47, 49, 58, 814, 914, 923, 927, 967, 970, 1097, 1164, 1171, 1249, 1253, 1259, 1261, 1265, 1266, 1305, 1322, 1401, 1402, 1403, 1422, 1429, 1449, 1450, 1451, 1487, 1490, 1491, 1492, 1493, 1519, 1526, 1534, 1643, 1665, 1674, 1681, 1682, 1688, 1694, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1774, 1951, 1952, 1954, 1964, 1970, 1976, 1980, 1982, 1983, 1985, 1987, 1990, 1992, 2000, 2005, 2006, 2015, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2045, 2050], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 24, 25, 26, 27, 29, 30, 31, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 54, 55, 56, 58, 60, 64, 65, 68, 69, 70, 71, 73, 77, 80, 81, 83, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 286, 293, 321, 327, 389, 440, 441, 442, 443, 444, 453, 491, 494, 495, 515, 520, 575, 576, 578, 675, 689, 692, 707, 708, 709, 710, 711, 712, 715, 725, 726, 727, 728, 730, 750, 753, 755, 763, 764, 765, 767, 768, 769, 774, 780, 788, 793, 798, 803, 804, 809, 812, 814, 815, 816, 817, 820, 823, 824, 825, 826, 827, 828, 829, 830, 836, 837, 838, 839, 840, 841, 843, 844, 849, 850, 851, 853, 860, 874, 875, 888, 890, 891, 892, 895, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 934, 936, 945, 951, 955, 958, 959, 960, 964, 967, 987, 997, 1000, 1003, 1005, 1009, 1012, 1013, 1014, 1017, 1018, 1025, 1026, 1029, 1040, 1042, 1043, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1067, 1068, 1071, 1073, 1074, 1075, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1092, 1097, 1098, 1099, 1100, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1167, 1168, 1194, 1196, 1197, 1203, 1207, 1208, 1211, 1212, 1238, 1240, 1246, 1249, 1250, 1253, 1261, 1265, 1266, 1269, 1270, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1336, 1339, 1341, 1347, 1349, 1350, 1351, 1355, 1361, 1377, 1378, 1380, 1381, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1502, 1504, 1505, 1506, 1507, 1514, 1518, 1519, 1523, 1524, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1539, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1591, 1592, 1594, 1596, 1603, 1604, 1611, 1617, 1618, 1619, 1628, 1629, 1631, 1636, 1643, 1649, 1650, 1658, 1662, 1668, 1674, 1675, 1676, 1677, 1679, 1680, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1716, 1717, 1719, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1774, 1782, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1806, 1812, 1813, 1816, 1820, 1824, 1825, 1826, 1827, 1828, 1832, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1885, 1886, 1900, 1901, 1907, 1909, 1911, 1913, 1918, 1919, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1955, 1959, 1961, 1964, 1965, 1968, 1971, 1976, 1977, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2010, 2011, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2026, 2031, 2033, 2034, 2035, 2039, 2041, 2042, 2044, 2045, 2047, 2048], "net": [0, 6, 15, 33, 52, 58, 1249, 1265, 1266, 1423, 1487, 1674, 1705, 1759, 1954, 1955, 1977, 1978, 1981, 1990, 2020], "sgd": [0, 21, 22, 29, 483, 923, 1429, 1665, 1674, 1760, 1766, 1768, 1977, 1981, 1982, 1990, 1992, 2002, 2011, 2012], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 44, 46, 47, 49, 51, 53, 56, 57, 58, 60, 84, 146, 151, 166, 168, 169, 171, 174, 175, 176, 191, 192, 202, 205, 229, 236, 250, 251, 256, 263, 293, 309, 311, 313, 315, 317, 321, 327, 389, 396, 398, 440, 441, 442, 443, 444, 453, 466, 488, 491, 492, 493, 494, 495, 508, 510, 512, 515, 520, 532, 539, 540, 541, 555, 561, 578, 579, 580, 582, 583, 598, 599, 602, 612, 613, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 750, 751, 753, 754, 755, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 786, 788, 790, 792, 794, 795, 796, 809, 814, 815, 816, 817, 818, 819, 820, 821, 822, 833, 834, 835, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 888, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 924, 926, 927, 930, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 973, 974, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 991, 996, 997, 998, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1021, 1025, 1026, 1027, 1029, 1032, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1171, 1177, 1186, 1189, 1191, 1192, 1193, 1194, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1220, 1224, 1226, 1228, 1229, 1231, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1260, 1261, 1262, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1361, 1363, 1364, 1365, 1368, 1369, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1589, 1591, 1592, 1594, 1596, 1603, 1604, 1611, 1617, 1618, 1619, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1643, 1649, 1650, 1658, 1662, 1663, 1664, 1665, 1668, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1777, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855, 1857, 1858, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1889, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1959, 1963, 1964, 1965, 1968, 1970, 1971, 1972, 1976, 1977, 1978, 1981, 1982, 1983, 1986, 1988, 1989, 1990, 1992, 1994, 1995, 1998, 2000, 2003, 2004, 2005, 2006, 2010, 2011, 2012, 2015, 2016, 2017, 2020, 2022, 2024, 2025, 2027, 2035, 2044, 2046, 2047], "target": [0, 14, 29, 46, 47, 49, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 494, 730, 761, 762, 787, 792, 854, 856, 857, 952, 1156, 1249, 1259, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1399, 1400, 1406, 1420, 1422, 1434, 1435, 1440, 1446, 1447, 1452, 1453, 1478, 1479, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1518, 1519, 1530, 1539, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1564, 1565, 1573, 1575, 1576, 1587, 1588, 1589, 1600, 1601, 1604, 1605, 1616, 1624, 1625, 1626, 1627, 1628, 1636, 1643, 1647, 1648, 1674, 1754, 1922, 1953, 1955, 1977, 1978, 1981, 1992, 1998, 2000, 2002, 2003, 2006, 2007, 2011, 2020, 2024, 2027, 2031, 2032, 2033, 2038, 2044, 2045], "data": [0, 1, 2, 3, 7, 11, 12, 18, 19, 22, 25, 27, 29, 31, 32, 33, 36, 39, 42, 44, 47, 49, 53, 56, 58, 60, 61, 65, 69, 135, 146, 191, 192, 322, 325, 329, 332, 337, 440, 443, 476, 488, 492, 494, 612, 733, 734, 735, 755, 767, 768, 769, 776, 787, 788, 789, 793, 814, 815, 816, 817, 818, 820, 822, 860, 874, 875, 885, 888, 900, 921, 936, 945, 951, 1001, 1078, 1079, 1098, 1099, 1100, 1110, 1111, 1112, 1115, 1117, 1118, 1120, 1128, 1129, 1130, 1133, 1136, 1137, 1138, 1139, 1148, 1149, 1151, 1152, 1153, 1155, 1164, 1169, 1176, 1178, 1182, 1184, 1207, 1208, 1210, 1228, 1231, 1257, 1261, 1265, 1269, 1320, 1321, 1322, 1336, 1341, 1349, 1351, 1364, 1365, 1378, 1380, 1381, 1404, 1406, 1414, 1415, 1416, 1423, 1438, 1441, 1449, 1450, 1451, 1457, 1459, 1474, 1494, 1502, 1503, 1539, 1557, 1562, 1563, 1567, 1568, 1569, 1602, 1609, 1611, 1649, 1650, 1674, 1675, 1676, 1677, 1681, 1682, 1715, 1716, 1717, 1718, 1720, 1729, 1733, 1734, 1735, 1736, 1760, 1766, 1774, 1782, 1785, 1786, 1787, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1807, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1884, 1885, 1900, 1909, 1911, 1913, 1921, 1922, 1923, 1948, 1949, 1951, 1952, 1953, 1956, 1959, 1962, 1963, 1964, 1966, 1968, 1971, 1977, 1978, 1979, 1981, 1983, 1984, 1989, 1992, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2004, 2006, 2009, 2011, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2029, 2033, 2034, 2035, 2037, 2038, 2043, 2047], "zero_grad": [0, 1, 29, 1249, 1487, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1759, 1977, 1981, 1985, 1990, 1992, 2002], "output": [0, 1, 4, 5, 7, 12, 18, 21, 22, 25, 27, 29, 30, 31, 33, 39, 40, 46, 53, 54, 55, 58, 60, 69, 76, 135, 309, 317, 440, 441, 442, 444, 508, 512, 561, 612, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 715, 723, 724, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 780, 781, 782, 787, 788, 789, 791, 794, 797, 809, 812, 853, 856, 857, 858, 860, 869, 870, 873, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 895, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 935, 937, 938, 939, 940, 941, 942, 943, 944, 947, 951, 954, 955, 956, 957, 958, 959, 960, 962, 965, 979, 981, 982, 984, 985, 997, 1010, 1012, 1013, 1014, 1040, 1041, 1043, 1053, 1054, 1076, 1077, 1078, 1079, 1081, 1084, 1085, 1087, 1089, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1152, 1153, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1171, 1191, 1192, 1193, 1194, 1203, 1206, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1224, 1226, 1243, 1244, 1246, 1249, 1253, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1583, 1584, 1586, 1587, 1588, 1589, 1592, 1594, 1603, 1604, 1609, 1611, 1617, 1618, 1619, 1628, 1629, 1633, 1634, 1635, 1636, 1643, 1658, 1662, 1663, 1664, 1668, 1670, 1671, 1674, 1689, 1690, 1691, 1692, 1695, 1716, 1718, 1719, 1723, 1726, 1728, 1729, 1730, 1733, 1734, 1736, 1737, 1755, 1759, 1772, 1773, 1781, 1782, 1785, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1815, 1820, 1828, 1832, 1835, 1837, 1849, 1850, 1852, 1857, 1862, 1863, 1865, 1866, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1897, 1898, 1899, 1904, 1907, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1922, 1928, 1929, 1930, 1931, 1934, 1936, 1937, 1948, 1949, 1950, 1952, 1953, 1955, 1959, 1961, 1963, 1964, 1969, 1970, 1971, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1990, 1993, 1994, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2012, 2015, 2016, 2018, 2019, 2020, 2022, 2024, 2025, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2044, 2045], "loss_fn": [0, 29, 1754, 1977, 1981, 1982, 1992, 2002], "exit": [0, 1, 2, 4, 18, 25, 33, 42, 49, 57, 58, 890, 892, 1550, 1674, 1955, 1968, 1978, 1983, 1992, 2000, 2013, 2017, 2038], "befor": [0, 1, 3, 6, 7, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 34, 39, 41, 42, 43, 44, 46, 47, 49, 58, 93, 146, 481, 742, 755, 783, 784, 785, 888, 895, 896, 898, 900, 923, 965, 975, 1000, 1078, 1079, 1080, 1089, 1097, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1138, 1139, 1142, 1151, 1154, 1249, 1261, 1263, 1286, 1302, 1306, 1319, 1349, 1361, 1378, 1381, 1423, 1429, 1430, 1433, 1438, 1487, 1488, 1489, 1526, 1530, 1538, 1592, 1611, 1649, 1650, 1665, 1668, 1669, 1670, 1671, 1674, 1681, 1682, 1689, 1723, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1768, 1782, 1785, 1811, 1820, 1830, 1831, 1861, 1864, 1867, 1868, 1869, 1871, 1872, 1881, 1884, 1907, 1918, 1952, 1954, 1955, 1959, 1963, 1968, 1977, 1978, 1981, 1982, 1983, 1986, 1987, 1989, 1990, 1993, 1995, 1996, 1997, 1998, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2016, 2020, 2022, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2041], "step": [0, 1, 2, 4, 9, 14, 21, 22, 25, 26, 27, 29, 31, 43, 46, 49, 53, 58, 75, 533, 602, 681, 763, 764, 852, 860, 890, 893, 894, 923, 938, 962, 1209, 1297, 1320, 1321, 1322, 1336, 1339, 1351, 1434, 1435, 1457, 1560, 1561, 1587, 1588, 1674, 1715, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1791, 1800, 1828, 1853, 1925, 1952, 1953, 1959, 1970, 1977, 1978, 1981, 1982, 1983, 1985, 1990, 1992, 1994, 1996, 1998, 2000, 2003, 2005, 2006, 2011, 2012, 2015, 2020, 2027, 2035, 2038, 2039, 2040, 2043, 2045], "usag": [0, 1, 4, 7, 9, 12, 15, 21, 25, 27, 29, 31, 32, 33, 36, 39, 40, 42, 44, 49, 58, 60, 61, 743, 752, 787, 788, 789, 805, 806, 807, 808, 810, 811, 812, 849, 853, 885, 900, 967, 1046, 1066, 1070, 1097, 1148, 1154, 1158, 1159, 1160, 1180, 1263, 1322, 1674, 1951, 1952, 1955, 1959, 1966, 1970, 1977, 1978, 1983, 1985, 1986, 1998, 2000, 2005, 2013, 2020, 2021, 2023, 2024, 2025, 2033, 2034, 2035, 2036, 2045], "along": [0, 14, 18, 21, 25, 31, 35, 42, 46, 60, 66, 309, 311, 313, 317, 488, 508, 510, 512, 681, 692, 814, 870, 871, 954, 961, 986, 997, 1012, 1014, 1080, 1088, 1089, 1096, 1097, 1113, 1118, 1121, 1125, 1128, 1131, 1137, 1166, 1191, 1215, 1224, 1226, 1271, 1282, 1318, 1371, 1378, 1382, 1383, 1392, 1393, 1394, 1400, 1421, 1434, 1435, 1477, 1480, 1481, 1482, 1520, 1522, 1557, 1565, 1574, 1587, 1588, 1591, 1594, 1611, 1617, 1618, 1619, 1629, 1649, 1650, 1700, 1702, 1709, 1710, 1719, 1728, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1766, 1785, 1805, 1806, 1811, 1822, 1857, 1861, 1864, 1865, 1873, 1878, 1897, 1901, 1904, 1907, 1916, 1931, 1934, 1936, 1950, 1954, 1959, 1971, 1979, 1983, 1985, 1989, 1990, 1998, 2003, 2006, 2016], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 25, 26, 27, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 47, 49, 52, 53, 54, 55, 56, 58, 77, 79, 81, 82, 146, 250, 251, 309, 317, 481, 482, 483, 488, 490, 493, 508, 510, 512, 519, 540, 613, 675, 730, 766, 775, 779, 788, 849, 854, 855, 856, 868, 881, 882, 883, 885, 887, 888, 889, 895, 898, 900, 901, 903, 905, 909, 910, 911, 914, 915, 919, 920, 921, 922, 923, 938, 946, 949, 951, 957, 958, 959, 960, 967, 972, 979, 1000, 1001, 1003, 1005, 1006, 1022, 1041, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1061, 1062, 1063, 1067, 1075, 1080, 1086, 1095, 1097, 1101, 1113, 1114, 1116, 1118, 1137, 1138, 1139, 1140, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1168, 1180, 1181, 1182, 1198, 1199, 1203, 1212, 1213, 1230, 1234, 1236, 1237, 1249, 1263, 1266, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1319, 1322, 1325, 1328, 1330, 1340, 1341, 1364, 1365, 1368, 1373, 1379, 1391, 1395, 1400, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1429, 1430, 1431, 1447, 1457, 1483, 1484, 1485, 1487, 1493, 1499, 1500, 1501, 1502, 1514, 1526, 1534, 1545, 1557, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1581, 1583, 1584, 1592, 1595, 1596, 1597, 1598, 1603, 1607, 1611, 1612, 1623, 1630, 1637, 1638, 1639, 1641, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1661, 1662, 1663, 1664, 1665, 1674, 1675, 1681, 1682, 1688, 1691, 1692, 1727, 1728, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1772, 1783, 1784, 1810, 1816, 1820, 1828, 1860, 1861, 1885, 1907, 1909, 1918, 1922, 1925, 1934, 1935, 1950, 1951, 1952, 1954, 1955, 1959, 1961, 1962, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1976, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1993, 1995, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2012, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2027, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2043, 2045, 2046, 2047, 2048], "complex": [0, 1, 3, 7, 8, 21, 22, 24, 25, 30, 58, 307, 325, 478, 494, 680, 687, 914, 915, 959, 960, 980, 981, 1092, 1098, 1099, 1100, 1118, 1140, 1145, 1203, 1220, 1228, 1239, 1241, 1242, 1245, 1246, 1249, 1270, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1299, 1302, 1304, 1306, 1307, 1308, 1309, 1313, 1314, 1318, 1319, 1320, 1322, 1330, 1336, 1348, 1353, 1372, 1414, 1415, 1416, 1453, 1487, 1567, 1568, 1569, 1688, 1729, 1778, 1791, 1797, 1798, 1804, 1825, 1835, 1881, 1882, 1885, 1922, 1931, 1932, 1933, 1950, 1951, 1953, 1955, 1956, 1965, 1992, 1998, 2001, 2017, 2018, 2021, 2022, 2035, 2036, 2037], "scenario": [0, 21, 25, 42, 1400, 1735, 1923, 1981, 1987, 1992, 1998, 2000, 2005, 2011, 2035, 2036], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 49, 52, 54, 56, 57, 58, 59, 60, 68, 69, 481, 575, 612, 743, 752, 755, 788, 789, 810, 812, 849, 854, 856, 857, 884, 895, 897, 900, 901, 910, 914, 915, 948, 979, 1043, 1097, 1148, 1155, 1159, 1160, 1176, 1181, 1184, 1200, 1203, 1246, 1249, 1256, 1257, 1265, 1321, 1406, 1407, 1423, 1425, 1426, 1427, 1431, 1433, 1438, 1446, 1452, 1457, 1458, 1487, 1488, 1497, 1502, 1518, 1576, 1592, 1674, 1675, 1676, 1677, 1681, 1682, 1690, 1726, 1729, 1739, 1740, 1741, 1742, 1745, 1751, 1752, 1753, 1754, 1806, 1813, 1824, 1828, 1830, 1848, 1870, 1881, 1950, 1952, 1954, 1955, 1956, 1959, 1962, 1963, 1968, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1993, 1994, 1998, 2000, 2002, 2003, 2005, 2006, 2011, 2015, 2018, 2019, 2020, 2031, 2033, 2034, 2035, 2043, 2045, 2046], "penalti": [0, 776, 1054, 1738, 1739, 1740, 1741, 1743, 1745, 1751, 1752, 1754, 2007, 2041], "multipl": [0, 1, 2, 3, 5, 21, 22, 25, 26, 27, 31, 32, 35, 42, 43, 44, 46, 49, 54, 57, 58, 75, 187, 204, 311, 508, 681, 683, 684, 690, 691, 755, 836, 869, 870, 873, 909, 921, 922, 923, 955, 957, 967, 983, 987, 1012, 1013, 1014, 1040, 1095, 1097, 1100, 1151, 1154, 1159, 1160, 1161, 1162, 1165, 1166, 1194, 1199, 1213, 1214, 1263, 1266, 1271, 1272, 1287, 1288, 1289, 1305, 1310, 1315, 1316, 1344, 1347, 1352, 1354, 1399, 1400, 1417, 1418, 1419, 1420, 1422, 1430, 1433, 1438, 1446, 1452, 1453, 1475, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1538, 1564, 1565, 1575, 1584, 1604, 1628, 1636, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1753, 1761, 1762, 1763, 1764, 1765, 1770, 1772, 1828, 1855, 1862, 1863, 1867, 1868, 1869, 1871, 1872, 1901, 1902, 1909, 1917, 1922, 1934, 1935, 1950, 1951, 1954, 1955, 1968, 1969, 1970, 1971, 1978, 1980, 1982, 1984, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2000, 2002, 2003, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2017, 2025, 2026, 2029, 2030, 2034, 2035, 2044], "custom": [0, 3, 5, 14, 15, 21, 25, 26, 27, 28, 29, 33, 35, 38, 39, 41, 46, 47, 49, 59, 60, 62, 76, 78, 79, 80, 81, 83, 494, 788, 792, 809, 810, 811, 812, 833, 835, 854, 855, 856, 857, 885, 895, 898, 900, 921, 967, 969, 1008, 1072, 1167, 1249, 1487, 1530, 1534, 1535, 1536, 1660, 1696, 1705, 1722, 1760, 1923, 1925, 1951, 1956, 1959, 1961, 1968, 1969, 1978, 1989, 1994, 1995, 1996, 1998, 2009, 2010, 2024, 2026, 2034, 2036, 2038], "autograd": [0, 4, 5, 7, 8, 12, 25, 29, 31, 46, 49, 50, 53, 60, 135, 331, 440, 441, 442, 443, 444, 481, 483, 491, 675, 684, 860, 874, 875, 889, 890, 895, 900, 901, 910, 911, 912, 922, 923, 930, 931, 932, 933, 934, 936, 945, 964, 969, 979, 1043, 1098, 1099, 1100, 1110, 1115, 1133, 1151, 1152, 1153, 1154, 1155, 1164, 1166, 1207, 1208, 1249, 1269, 1289, 1320, 1336, 1344, 1354, 1440, 1487, 1493, 1534, 1594, 1609, 1674, 1733, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1831, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1859, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1934, 1948, 1949, 1951, 1953, 1957, 1959, 1962, 1971, 1976, 1981, 1982, 1985, 1986, 1987, 1989, 1990, 2005, 2021, 2022, 2026, 2035, 2036, 2041, 2045, 2046], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 26, 27, 29, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 52, 54, 57, 60, 63, 68, 69, 72, 74, 76, 77, 79, 80, 83, 84, 115, 146, 191, 254, 256, 285, 294, 317, 481, 482, 483, 488, 491, 512, 536, 551, 675, 684, 688, 689, 693, 694, 743, 752, 753, 755, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 787, 788, 792, 793, 795, 809, 810, 811, 812, 819, 821, 833, 836, 849, 852, 854, 856, 857, 858, 872, 873, 888, 890, 891, 892, 893, 894, 895, 900, 901, 909, 910, 911, 912, 914, 915, 919, 920, 921, 923, 927, 930, 936, 945, 947, 955, 957, 961, 964, 967, 969, 970, 971, 973, 975, 979, 980, 981, 990, 991, 992, 993, 994, 995, 996, 998, 1001, 1003, 1005, 1008, 1025, 1026, 1029, 1034, 1035, 1040, 1041, 1043, 1044, 1045, 1046, 1048, 1053, 1054, 1061, 1062, 1064, 1065, 1066, 1070, 1080, 1085, 1087, 1088, 1095, 1097, 1101, 1113, 1114, 1116, 1136, 1140, 1143, 1144, 1145, 1148, 1151, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1189, 1194, 1195, 1203, 1207, 1208, 1209, 1211, 1213, 1221, 1222, 1223, 1236, 1246, 1247, 1248, 1249, 1250, 1252, 1254, 1255, 1260, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1271, 1273, 1278, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1301, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1325, 1327, 1336, 1339, 1340, 1344, 1347, 1350, 1352, 1354, 1355, 1356, 1375, 1378, 1379, 1395, 1399, 1400, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1420, 1424, 1428, 1431, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1452, 1454, 1455, 1456, 1457, 1458, 1473, 1476, 1477, 1479, 1486, 1487, 1492, 1493, 1495, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1522, 1523, 1524, 1525, 1527, 1528, 1530, 1532, 1534, 1535, 1536, 1538, 1540, 1542, 1543, 1544, 1546, 1548, 1549, 1550, 1666, 1670, 1671, 1674, 1681, 1682, 1688, 1689, 1694, 1705, 1715, 1716, 1717, 1719, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1756, 1759, 1760, 1762, 1765, 1766, 1767, 1772, 1773, 1774, 1778, 1784, 1791, 1795, 1800, 1813, 1822, 1823, 1824, 1826, 1827, 1835, 1843, 1847, 1848, 1853, 1856, 1858, 1859, 1860, 1861, 1862, 1864, 1870, 1877, 1881, 1887, 1888, 1897, 1901, 1903, 1907, 1917, 1918, 1919, 1922, 1923, 1927, 1931, 1932, 1933, 1934, 1935, 1943, 1944, 1947, 1949, 1950, 1951, 1956, 1959, 1961, 1963, 1965, 1966, 1968, 1970, 1973, 1976, 1979, 1981, 1982, 1983, 1985, 1989, 1990, 1992, 1993, 1998, 2002, 2003, 2004, 2005, 2006, 2008, 2010, 2011, 2012, 2013, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2030, 2031, 2032, 2033, 2034, 2036, 2038, 2040, 2041, 2042, 2044, 2045], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 21, 22, 25, 26, 27, 29, 30, 43, 46, 47, 49, 50, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 294, 536, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 787, 788, 809, 849, 854, 855, 856, 857, 859, 1040, 1043, 1097, 1154, 1163, 1164, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1265, 1266, 1267, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1665, 1674, 1675, 1676, 1677, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1715, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1856, 1881, 1922, 1923, 1950, 1951, 1952, 1953, 1957, 1963, 1970, 1971, 1977, 1982, 1985, 1986, 1990, 1992, 1993, 1994, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2011, 2020, 2022, 2025, 2027, 2031, 2034, 2035, 2038, 2043, 2044, 2045], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 22, 25, 27, 29, 30, 34, 36, 39, 42, 43, 46, 47, 49, 50, 52, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 482, 483, 675, 681, 684, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 733, 734, 735, 740, 741, 742, 751, 756, 757, 758, 759, 760, 783, 784, 785, 786, 787, 788, 792, 794, 795, 797, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 833, 834, 835, 849, 852, 853, 854, 855, 856, 857, 859, 910, 919, 920, 923, 935, 947, 967, 1043, 1154, 1163, 1164, 1166, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1321, 1344, 1354, 1391, 1395, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1439, 1441, 1449, 1450, 1451, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1488, 1489, 1497, 1498, 1503, 1515, 1520, 1526, 1530, 1534, 1583, 1584, 1658, 1665, 1674, 1675, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1722, 1723, 1724, 1726, 1755, 1816, 1860, 1923, 1925, 1926, 1934, 1950, 1951, 1956, 1959, 1961, 1963, 1964, 1966, 1968, 1970, 1971, 1973, 1975, 1976, 1980, 1981, 1982, 1985, 1986, 1989, 1991, 1992, 1994, 1996, 1997, 1998, 2000, 2002, 2004, 2005, 2008, 2009, 2011, 2014, 2015, 2016, 2020, 2023, 2024, 2025, 2027, 2031, 2032, 2034, 2035, 2039, 2043, 2044, 2045, 2046], "def": [0, 1, 12, 21, 22, 25, 26, 27, 31, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 394, 787, 788, 856, 857, 885, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 967, 972, 979, 1101, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1164, 1165, 1166, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1264, 1265, 1266, 1267, 1487, 1488, 1489, 1497, 1498, 1502, 1536, 1643, 1665, 1674, 1694, 1727, 1860, 1934, 1950, 1952, 1954, 1955, 1959, 1970, 1977, 1978, 1980, 1982, 1983, 1984, 1985, 1990, 1992, 1994, 1995, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2013, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2043, 2044, 2045, 2046], "self": [0, 1, 9, 12, 18, 21, 22, 25, 27, 33, 34, 39, 44, 46, 47, 49, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 93, 135, 146, 149, 150, 151, 166, 168, 171, 174, 175, 176, 186, 187, 191, 192, 204, 212, 214, 228, 229, 236, 250, 251, 254, 255, 263, 282, 286, 293, 307, 309, 311, 313, 315, 317, 319, 321, 322, 324, 325, 326, 327, 329, 337, 373, 389, 394, 396, 397, 398, 449, 466, 476, 478, 492, 493, 494, 495, 508, 510, 512, 515, 518, 520, 532, 538, 539, 540, 541, 553, 555, 575, 576, 578, 579, 580, 582, 583, 599, 602, 603, 609, 612, 613, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 856, 857, 928, 930, 1154, 1155, 1164, 1171, 1220, 1247, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1265, 1266, 1267, 1391, 1395, 1431, 1486, 1487, 1488, 1489, 1493, 1497, 1498, 1514, 1516, 1526, 1532, 1534, 1623, 1646, 1665, 1691, 1692, 1694, 1700, 1702, 1715, 1724, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1781, 1802, 1952, 1953, 1954, 1955, 1959, 1966, 1969, 1970, 1976, 1978, 1979, 1980, 1983, 1985, 1990, 1995, 1998, 2000, 2002, 2003, 2004, 2006, 2011, 2017, 2027, 2031, 2032, 2038, 2040, 2043, 2044, 2045], "produc": [0, 7, 14, 21, 25, 27, 32, 34, 36, 39, 44, 46, 47, 54, 55, 57, 58, 75, 84, 481, 727, 733, 734, 735, 740, 741, 751, 759, 787, 788, 938, 958, 1036, 1128, 1129, 1130, 1148, 1159, 1160, 1166, 1171, 1174, 1178, 1203, 1261, 1265, 1266, 1269, 1285, 1286, 1289, 1296, 1297, 1308, 1313, 1347, 1350, 1351, 1352, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468, 1493, 1576, 1584, 1592, 1603, 1662, 1663, 1664, 1729, 1755, 1784, 1791, 1800, 1885, 1922, 1934, 1952, 1954, 1955, 1963, 1968, 1969, 1977, 1978, 1979, 1981, 1983, 1986, 1988, 1989, 1990, 1993, 1994, 1995, 1996, 1998, 2000, 2015, 2019, 2027, 2031, 2033, 2035, 2038, 2041, 2045], "after": [0, 1, 7, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 42, 44, 49, 57, 58, 60, 65, 66, 256, 481, 483, 675, 755, 785, 852, 854, 856, 857, 888, 890, 895, 896, 900, 967, 975, 998, 1000, 1036, 1043, 1096, 1155, 1234, 1249, 1253, 1305, 1321, 1344, 1361, 1387, 1423, 1438, 1472, 1487, 1490, 1530, 1532, 1534, 1557, 1592, 1665, 1668, 1674, 1694, 1696, 1700, 1702, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1759, 1760, 1766, 1768, 1824, 1881, 1907, 1923, 1925, 1936, 1950, 1954, 1955, 1966, 1968, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 2000, 2002, 2003, 2005, 2006, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2020, 2027, 2030, 2032, 2035, 2036, 2038, 2039, 2041, 2043, 2044, 2045], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 115, 149, 151, 166, 168, 171, 174, 175, 176, 186, 187, 191, 192, 202, 204, 205, 212, 214, 215, 217, 228, 229, 236, 238, 250, 256, 263, 285, 293, 307, 315, 319, 321, 322, 324, 325, 326, 327, 329, 333, 335, 337, 348, 373, 389, 430, 440, 441, 442, 443, 444, 453, 467, 468, 469, 470, 471, 473, 478, 482, 483, 491, 492, 493, 508, 510, 518, 520, 532, 538, 539, 551, 552, 553, 554, 555, 575, 576, 577, 578, 584, 598, 599, 602, 604, 608, 609, 612, 679, 687, 688, 690, 691, 692, 693, 694, 730, 761, 762, 765, 766, 770, 771, 772, 773, 776, 779, 786, 787, 788, 789, 809, 810, 811, 812, 831, 835, 836, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 923, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 945, 946, 948, 951, 953, 955, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 970, 972, 974, 979, 980, 981, 983, 984, 985, 987, 990, 991, 992, 993, 995, 997, 998, 1000, 1001, 1003, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1091, 1097, 1098, 1099, 1100, 1101, 1102, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1171, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1193, 1194, 1196, 1198, 1199, 1200, 1201, 1202, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1220, 1224, 1225, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1245, 1246, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1274, 1275, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1358, 1359, 1361, 1362, 1368, 1373, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1387, 1391, 1392, 1393, 1394, 1399, 1400, 1420, 1421, 1422, 1423, 1430, 1434, 1435, 1446, 1452, 1453, 1477, 1478, 1479, 1480, 1481, 1482, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1498, 1501, 1502, 1515, 1518, 1519, 1520, 1521, 1522, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1548, 1549, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1562, 1564, 1565, 1566, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1638, 1639, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1656, 1658, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1774, 1775, 1777, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1815, 1820, 1821, 1822, 1823, 1829, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1857, 1859, 1860, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1884, 1885, 1886, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1925, 1928, 1930, 1932, 1933, 1934, 1937, 1939, 1941, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1952, 1956, 1959, 1964, 1965, 1966, 1968, 1970, 1971, 1976, 1977, 1978, 1980, 1981, 1983, 1984, 1987, 1988, 1989, 1990, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2010, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2043, 2044, 2045, 2046, 2047, 2048], "disabl": [0, 2, 5, 26, 31, 49, 58, 805, 806, 910, 911, 912, 967, 1043, 1097, 1101, 1154, 1249, 1251, 1265, 1266, 1487, 1493, 1526, 1534, 1643, 1674, 1675, 1724, 1727, 1829, 1832, 1860, 1951, 1954, 1961, 1977, 1980, 1981, 1982, 1983, 1988, 1993, 1994, 2000, 2004, 2010, 2015, 2022, 2034, 2039, 2042, 2045, 2047], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 21, 25, 27, 33, 34, 39, 42, 44, 46, 49, 53, 54, 57, 58, 146, 217, 250, 481, 729, 888, 895, 898, 900, 905, 949, 1043, 1082, 1085, 1097, 1169, 1171, 1179, 1249, 1271, 1280, 1291, 1305, 1317, 1321, 1349, 1381, 1407, 1429, 1487, 1520, 1522, 1649, 1701, 1716, 1719, 1756, 1864, 1866, 1884, 1918, 1923, 1925, 1950, 1954, 1955, 1962, 1964, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1994, 1996, 2002, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2016, 2020, 2021, 2024, 2027, 2032, 2033, 2034, 2035, 2038, 2041, 2042, 2044, 2045], "differ": [0, 1, 3, 5, 8, 14, 18, 21, 25, 27, 29, 30, 31, 33, 34, 35, 39, 40, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 56, 58, 192, 481, 488, 612, 675, 681, 684, 690, 691, 730, 755, 788, 791, 792, 817, 819, 820, 856, 857, 860, 874, 875, 914, 915, 935, 947, 948, 987, 1080, 1085, 1087, 1089, 1097, 1137, 1138, 1139, 1143, 1144, 1151, 1154, 1159, 1160, 1166, 1171, 1172, 1175, 1203, 1224, 1249, 1255, 1260, 1265, 1279, 1285, 1286, 1296, 1297, 1305, 1308, 1313, 1317, 1344, 1354, 1391, 1400, 1401, 1402, 1403, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1438, 1439, 1447, 1449, 1450, 1451, 1452, 1457, 1458, 1474, 1487, 1490, 1493, 1508, 1509, 1511, 1512, 1513, 1515, 1518, 1526, 1532, 1534, 1536, 1539, 1542, 1543, 1544, 1545, 1557, 1565, 1583, 1592, 1601, 1603, 1605, 1617, 1618, 1619, 1643, 1665, 1674, 1676, 1677, 1688, 1724, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1760, 1768, 1774, 1784, 1806, 1879, 1880, 1885, 1907, 1918, 1919, 1922, 1927, 1929, 1930, 1934, 1950, 1952, 1954, 1955, 1957, 1961, 1962, 1968, 1969, 1971, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1987, 1990, 1992, 1993, 1994, 1996, 1998, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2015, 2017, 2018, 2020, 2021, 2022, 2025, 2026, 2027, 2029, 2032, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2045], "caus": [0, 1, 2, 3, 5, 14, 18, 21, 24, 25, 29, 35, 41, 42, 43, 46, 54, 58, 80, 551, 612, 872, 875, 888, 970, 1151, 1173, 1180, 1181, 1261, 1265, 1285, 1286, 1313, 1368, 1603, 1604, 1662, 1665, 1674, 1728, 1737, 1824, 1834, 1881, 1922, 1952, 1955, 1968, 1979, 1981, 1983, 1985, 1992, 1994, 1996, 2000, 2003, 2006, 2007, 2013, 2015, 2018, 2030, 2034, 2036], "mismatch": [0, 25, 58, 81, 83, 875, 1250, 1736, 1737, 1954, 1977, 1982, 1983, 1985, 2000, 2022], "error": [0, 1, 5, 8, 14, 17, 18, 21, 22, 25, 26, 28, 31, 40, 42, 43, 46, 49, 52, 54, 57, 58, 60, 61, 78, 79, 80, 81, 83, 186, 217, 309, 311, 317, 319, 324, 483, 540, 551, 609, 612, 675, 814, 860, 873, 875, 895, 898, 900, 903, 904, 905, 906, 907, 908, 909, 913, 921, 922, 967, 998, 1008, 1032, 1043, 1054, 1067, 1071, 1095, 1154, 1158, 1159, 1161, 1166, 1181, 1184, 1213, 1249, 1254, 1264, 1279, 1280, 1289, 1291, 1293, 1296, 1297, 1298, 1308, 1311, 1321, 1339, 1368, 1373, 1399, 1400, 1436, 1447, 1453, 1478, 1487, 1516, 1518, 1590, 1601, 1624, 1643, 1646, 1647, 1674, 1676, 1677, 1679, 1724, 1729, 1736, 1737, 1780, 1820, 1827, 1870, 1876, 1881, 1922, 1925, 1934, 1935, 1950, 1951, 1952, 1954, 1955, 1961, 1962, 1968, 1969, 1970, 1971, 1977, 1978, 1981, 1983, 1984, 1987, 1988, 1994, 1998, 2000, 2003, 2009, 2011, 2016, 2021, 2022, 2024, 2025, 2030, 2033, 2034, 2035, 2047], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 68, 69, 70, 71, 78, 79, 80, 81, 83, 93, 146, 150, 191, 202, 205, 250, 311, 315, 317, 440, 441, 442, 443, 444, 453, 466, 476, 481, 491, 494, 512, 515, 532, 540, 575, 576, 578, 579, 580, 582, 583, 598, 602, 612, 675, 681, 684, 685, 686, 688, 690, 691, 692, 694, 730, 751, 755, 759, 774, 776, 780, 789, 790, 812, 815, 816, 817, 820, 849, 853, 856, 860, 869, 870, 871, 872, 873, 874, 875, 884, 886, 887, 888, 895, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 923, 934, 935, 936, 938, 945, 947, 948, 949, 951, 955, 957, 958, 961, 962, 967, 969, 972, 976, 980, 981, 982, 986, 987, 997, 1000, 1001, 1003, 1005, 1008, 1010, 1012, 1014, 1021, 1032, 1038, 1043, 1044, 1064, 1067, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1097, 1098, 1099, 1100, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1140, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1168, 1170, 1171, 1178, 1180, 1181, 1184, 1191, 1203, 1207, 1208, 1210, 1211, 1212, 1213, 1224, 1226, 1240, 1246, 1249, 1252, 1253, 1254, 1257, 1259, 1261, 1262, 1265, 1266, 1269, 1270, 1271, 1275, 1279, 1280, 1285, 1286, 1288, 1289, 1291, 1292, 1293, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1332, 1336, 1337, 1339, 1341, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1368, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1439, 1440, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1472, 1474, 1478, 1479, 1480, 1481, 1482, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1519, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1539, 1542, 1543, 1544, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1592, 1594, 1596, 1603, 1604, 1609, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1628, 1629, 1630, 1633, 1636, 1637, 1643, 1649, 1650, 1661, 1662, 1668, 1674, 1675, 1679, 1680, 1683, 1684, 1686, 1688, 1689, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1715, 1716, 1717, 1718, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1772, 1773, 1778, 1782, 1784, 1785, 1789, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1806, 1811, 1813, 1816, 1820, 1822, 1824, 1827, 1828, 1832, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1857, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1879, 1880, 1881, 1884, 1885, 1897, 1900, 1901, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1918, 1919, 1922, 1925, 1928, 1929, 1930, 1934, 1942, 1948, 1949, 1950, 1952, 1955, 1957, 1959, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2044, 2045, 2046, 2047], "so": [0, 1, 2, 3, 7, 9, 14, 17, 21, 22, 24, 25, 26, 27, 29, 31, 32, 34, 35, 42, 43, 45, 46, 47, 49, 52, 53, 54, 57, 58, 60, 70, 71, 331, 453, 481, 491, 675, 854, 890, 895, 898, 900, 903, 904, 909, 921, 964, 967, 972, 999, 1022, 1085, 1087, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1148, 1151, 1154, 1158, 1159, 1161, 1162, 1169, 1171, 1179, 1181, 1189, 1236, 1246, 1249, 1252, 1253, 1259, 1261, 1263, 1305, 1307, 1317, 1322, 1327, 1339, 1360, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1430, 1433, 1440, 1487, 1503, 1520, 1522, 1538, 1548, 1549, 1557, 1567, 1568, 1569, 1592, 1649, 1650, 1665, 1674, 1728, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1849, 1864, 1876, 1881, 1885, 1906, 1918, 1923, 1928, 1952, 1954, 1955, 1961, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2002, 2003, 2006, 2010, 2011, 2015, 2016, 2018, 2020, 2021, 2023, 2027, 2030, 2033, 2034, 2035, 2036, 2038, 2039, 2041, 2044, 2045, 2047], "cast": [0, 6, 22, 40, 49, 82, 331, 598, 599, 952, 1078, 1079, 1249, 1302, 1306, 1319, 1349, 1378, 1381, 1487, 1611, 1649, 1650, 1729, 1782, 1861, 1864, 1870, 1884, 1889, 1890, 1952, 1977, 1993, 2000, 2016, 2017, 2018, 2035], "back": [0, 1, 2, 14, 21, 22, 25, 27, 31, 42, 46, 49, 54, 58, 60, 65, 69, 481, 730, 832, 914, 964, 967, 1117, 1149, 1155, 1250, 1263, 1315, 1321, 1533, 1679, 1680, 1681, 1682, 1866, 1950, 1952, 1955, 1978, 1983, 1984, 1986, 1992, 1993, 1994, 2000, 2002, 2003, 2006, 2011, 2015, 2017, 2030, 2035, 2037, 2038, 2046], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 44, 45, 46, 47, 49, 50, 52, 54, 55, 57, 60, 62, 63, 65, 66, 68, 69, 72, 75, 76, 77, 80, 84, 149, 150, 169, 192, 217, 218, 229, 254, 282, 309, 311, 315, 317, 373, 398, 443, 449, 466, 468, 469, 476, 481, 482, 483, 488, 494, 508, 510, 512, 539, 541, 555, 575, 602, 603, 605, 612, 675, 707, 708, 709, 710, 711, 712, 715, 723, 724, 727, 730, 733, 734, 735, 736, 737, 738, 740, 741, 751, 755, 759, 767, 768, 769, 776, 783, 784, 787, 788, 789, 792, 795, 810, 811, 812, 819, 821, 835, 849, 853, 855, 856, 857, 859, 860, 874, 875, 886, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 914, 915, 919, 920, 934, 936, 937, 945, 946, 951, 952, 964, 999, 1000, 1003, 1012, 1013, 1014, 1032, 1036, 1054, 1081, 1097, 1098, 1099, 1100, 1117, 1119, 1120, 1125, 1126, 1127, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1170, 1171, 1175, 1182, 1207, 1208, 1212, 1226, 1246, 1247, 1249, 1250, 1252, 1254, 1255, 1256, 1257, 1260, 1261, 1273, 1289, 1293, 1302, 1305, 1306, 1319, 1320, 1321, 1322, 1336, 1340, 1341, 1354, 1359, 1361, 1364, 1365, 1366, 1368, 1373, 1382, 1383, 1391, 1395, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1438, 1439, 1440, 1441, 1447, 1449, 1450, 1451, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1488, 1489, 1493, 1497, 1498, 1502, 1504, 1505, 1526, 1531, 1532, 1534, 1536, 1538, 1539, 1546, 1557, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1592, 1594, 1601, 1603, 1617, 1618, 1619, 1631, 1661, 1665, 1674, 1679, 1681, 1682, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1726, 1730, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1774, 1777, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1806, 1807, 1810, 1812, 1813, 1820, 1832, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1882, 1886, 1897, 1900, 1909, 1911, 1913, 1918, 1919, 1922, 1924, 1925, 1928, 1937, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1972, 1976, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 2002, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2042, 2043, 2044, 2045, 2046, 2047], "alreadi": [0, 1, 11, 21, 22, 25, 26, 30, 42, 43, 49, 57, 58, 191, 202, 205, 458, 481, 519, 575, 598, 599, 787, 835, 849, 853, 874, 921, 923, 1008, 1034, 1171, 1249, 1259, 1321, 1487, 1669, 1674, 1715, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1916, 1918, 1925, 1950, 1952, 1962, 1965, 1969, 1970, 1977, 1978, 1981, 1983, 1986, 1987, 1992, 2000, 2002, 2003, 2006, 2012, 2013, 2015, 2017, 2019, 2030, 2032, 2034], "incur": [0, 5, 22, 25, 49, 957, 1992, 2011], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 21, 25, 26, 27, 31, 36, 42, 43, 47, 49, 57, 58, 60, 69, 331, 508, 602, 744, 746, 747, 748, 749, 753, 755, 776, 790, 809, 854, 1054, 1246, 1249, 1253, 1259, 1264, 1391, 1402, 1403, 1404, 1417, 1418, 1419, 1430, 1437, 1438, 1440, 1447, 1450, 1451, 1459, 1466, 1467, 1468, 1472, 1473, 1474, 1475, 1477, 1483, 1484, 1485, 1487, 1493, 1495, 1520, 1522, 1526, 1530, 1532, 1534, 1536, 1563, 1570, 1571, 1572, 1609, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1828, 1918, 1919, 1922, 1932, 1952, 1954, 1955, 1961, 1966, 1969, 1970, 1971, 1978, 1980, 1981, 1983, 1984, 1986, 1989, 1992, 1993, 1996, 1998, 2000, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2019, 2022, 2030, 2033, 2035, 2041, 2042, 2045, 2047], "overhead": [0, 1, 3, 4, 8, 22, 25, 49, 776, 967, 972, 1054, 1261, 1674, 1681, 1682, 1978, 1980, 1981, 1982, 1988, 1989, 1992, 2004, 2005, 2012, 2015, 2021, 2030, 2034, 2035, 2037, 2038, 2039], "here": [0, 1, 7, 8, 9, 12, 15, 18, 21, 22, 25, 26, 31, 41, 43, 46, 47, 51, 52, 53, 54, 57, 58, 81, 83, 575, 788, 789, 900, 901, 985, 1006, 1097, 1114, 1116, 1117, 1122, 1123, 1124, 1126, 1127, 1132, 1134, 1154, 1164, 1247, 1261, 1401, 1402, 1403, 1417, 1418, 1419, 1449, 1450, 1451, 1495, 1526, 1592, 1594, 1681, 1682, 1691, 1752, 1755, 1766, 1828, 1852, 1950, 1952, 1954, 1955, 1957, 1969, 1970, 1971, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1996, 2000, 2002, 2003, 2004, 2006, 2009, 2015, 2019, 2020, 2022, 2027, 2030, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2045], "assum": [0, 11, 12, 21, 25, 30, 31, 33, 35, 42, 43, 46, 47, 49, 52, 55, 58, 812, 979, 1080, 1115, 1118, 1120, 1128, 1129, 1130, 1133, 1171, 1174, 1178, 1240, 1246, 1247, 1250, 1265, 1285, 1286, 1288, 1295, 1304, 1307, 1310, 1312, 1322, 1406, 1479, 1539, 1576, 1643, 1674, 1691, 1694, 1719, 1756, 1757, 1762, 1763, 1764, 1767, 1769, 1770, 1774, 1886, 1907, 1909, 1925, 1950, 1952, 1954, 1955, 1959, 1969, 1978, 1981, 1983, 1984, 1987, 1989, 1992, 1993, 2000, 2002, 2003, 2004, 2011, 2012, 2013, 2015, 2027, 2032, 2033, 2041], "a_float32": 0, "rand": [0, 1, 18, 31, 46, 58, 331, 688, 694, 903, 904, 905, 906, 907, 908, 972, 987, 1040, 1041, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1156, 1255, 1256, 1261, 1265, 1266, 1267, 1323, 1324, 1326, 1399, 1452, 1530, 1531, 1532, 1533, 1534, 1564, 1583, 1584, 1643, 1674, 1694, 1727, 1777, 1788, 1789, 1790, 1794, 1952, 1953, 1954, 1955, 1957, 1969, 1970, 1983, 1998, 2000, 2001, 2004, 2006, 2011, 2012, 2015, 2016, 2019, 2020, 2023, 2040, 2043], "8": [0, 1, 14, 20, 21, 22, 25, 30, 31, 33, 46, 60, 65, 309, 311, 313, 317, 397, 398, 466, 508, 512, 555, 602, 612, 680, 681, 692, 693, 740, 741, 756, 758, 760, 768, 769, 815, 816, 817, 820, 906, 938, 946, 957, 960, 961, 965, 1040, 1041, 1076, 1080, 1095, 1100, 1113, 1129, 1130, 1136, 1137, 1140, 1147, 1203, 1212, 1213, 1273, 1302, 1305, 1306, 1307, 1315, 1317, 1320, 1321, 1382, 1383, 1388, 1389, 1390, 1392, 1393, 1394, 1407, 1408, 1409, 1410, 1421, 1457, 1483, 1484, 1490, 1492, 1494, 1501, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1526, 1530, 1531, 1532, 1533, 1534, 1538, 1546, 1568, 1571, 1574, 1631, 1636, 1641, 1642, 1643, 1681, 1682, 1729, 1730, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1760, 1768, 1773, 1777, 1781, 1801, 1811, 1812, 1813, 1820, 1828, 1832, 1839, 1842, 1847, 1853, 1857, 1865, 1867, 1868, 1873, 1881, 1885, 1896, 1901, 1902, 1903, 1905, 1907, 1916, 1920, 1922, 1928, 1935, 1952, 1956, 1962, 1981, 1983, 1986, 1995, 1998, 2000, 2001, 2003, 2004, 2005, 2006, 2009, 2011, 2015, 2016, 2018, 2019, 2021, 2027, 2032, 2038, 2045], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1253, 1305, 1344, 1497, 1498, 1784, 1885, 1922, 1953, 1954, 1969, 1977, 1980, 1983, 1993, 2001, 2015, 2039, 2040], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 42, 44, 46, 47, 49, 54, 57, 58, 60, 61, 65, 66, 68, 69, 79, 180, 237, 298, 440, 442, 444, 573, 578, 579, 580, 584, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 787, 788, 793, 809, 810, 811, 812, 833, 849, 856, 874, 881, 882, 883, 949, 950, 953, 957, 961, 966, 967, 969, 974, 979, 1024, 1030, 1082, 1095, 1097, 1098, 1137, 1152, 1164, 1171, 1190, 1203, 1213, 1249, 1253, 1255, 1256, 1261, 1263, 1265, 1266, 1349, 1351, 1381, 1423, 1429, 1459, 1487, 1489, 1498, 1515, 1526, 1537, 1550, 1583, 1658, 1674, 1675, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1729, 1733, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1760, 1762, 1764, 1765, 1766, 1768, 1769, 1787, 1789, 1790, 1793, 1797, 1812, 1848, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1879, 1880, 1884, 1900, 1901, 1902, 1918, 1919, 1922, 1923, 1925, 1929, 1930, 1935, 1948, 1950, 1952, 1953, 1956, 1957, 1961, 1964, 1966, 1969, 1970, 1971, 1983, 1988, 1990, 1993, 1994, 1995, 1997, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2015, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2043, 2044, 2045, 2046, 2047], "No": [0, 9, 12, 27, 45, 47, 57, 60, 69, 895, 899, 900, 901, 1674, 1681, 1682, 1727, 1954, 1981, 2000, 2009, 2019, 2022, 2030], "manual": [0, 21, 25, 40, 42, 43, 45, 49, 58, 481, 792, 833, 873, 909, 972, 1171, 1212, 1253, 1399, 1400, 1422, 1491, 1492, 1494, 1515, 1534, 1564, 1565, 1575, 1628, 1694, 1715, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1952, 1955, 1963, 1968, 1977, 1981, 1983, 1984, 1985, 1987, 1990, 1996, 2000, 2006, 2007, 2020, 2033, 2042], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 21, 22, 25, 26, 27, 29, 33, 34, 35, 42, 43, 49, 57, 58, 482, 483, 835, 885, 895, 899, 900, 901, 919, 920, 969, 982, 1000, 1015, 1042, 1055, 1097, 1143, 1144, 1166, 1167, 1249, 1280, 1423, 1487, 1534, 1536, 1592, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1804, 1849, 1886, 1934, 1950, 1966, 1968, 1970, 1981, 1983, 1984, 1985, 1987, 1992, 1997, 1998, 2000, 2003, 2006, 2011, 2013, 2022, 2023, 2030, 2034, 2036, 2038, 2041], "f_float16": 0, "g_float32": 0, "epoch": [0, 21, 35, 45, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1966, 1977, 1992, 2002, 2020], "eval": [0, 58, 809, 855, 856, 1164, 1249, 1253, 1259, 1265, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1493, 1526, 1534, 1683, 1685, 1689, 1955, 1964, 1990, 1997, 2000, 2006, 2025, 2033, 2046], "jit": [0, 2, 11, 14, 46, 1040, 1041, 1072, 1200, 1247, 1248, 1249, 1264, 1735, 1736, 1830, 1831, 1951, 1954, 1957, 1964, 1970, 1980, 1989, 1995, 1997, 2000, 2006, 2011, 2020, 2031, 2032, 2033, 2035, 2037], "trace": [0, 1, 5, 12, 15, 18, 21, 22, 25, 35, 46, 47, 60, 63, 64, 65, 66, 67, 70, 71, 75, 481, 675, 924, 926, 927, 930, 967, 979, 1097, 1168, 1170, 1174, 1252, 1261, 1262, 1266, 1322, 1364, 1365, 1366, 1737, 1924, 1951, 1953, 1954, 1955, 1957, 1961, 1978, 1981, 1986, 1995, 1997, 1998, 2001, 2003, 2020, 2026, 2031, 2033, 2034, 2037, 2038, 2039, 2041, 2045, 2047], "testmodel": 0, "__init__": [0, 1, 12, 21, 22, 25, 31, 46, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 856, 857, 1164, 1247, 1250, 1252, 1255, 1256, 1261, 1265, 1266, 1267, 1487, 1488, 1489, 1497, 1498, 1665, 1952, 1954, 1955, 1966, 1978, 1983, 1985, 1990, 1995, 1998, 2000, 2003, 2006, 2020, 2027, 2031, 2033, 2043, 2044, 2045], "input_s": [0, 729, 755, 756, 760, 1438, 1439, 1457, 1458, 1502, 1503, 1504, 1953], "num_class": [0, 1630, 1953, 2037], "super": [0, 9, 12, 21, 22, 25, 27, 46, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 856, 857, 1164, 1247, 1252, 1255, 1256, 1261, 1265, 1266, 1267, 1487, 1488, 1489, 1497, 1498, 1499, 1500, 1665, 1766, 1952, 1954, 1955, 1956, 1978, 1983, 1990, 1995, 1998, 2000, 2003, 2006, 2027, 2031, 2043, 2044, 2045], "fc1": [0, 22, 1665, 1998, 2004, 2027], "x": [0, 1, 3, 11, 12, 14, 21, 22, 25, 31, 33, 39, 46, 47, 49, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 169, 250, 254, 282, 285, 307, 309, 311, 313, 317, 348, 373, 443, 478, 481, 488, 494, 553, 555, 578, 602, 603, 612, 687, 753, 755, 765, 774, 775, 779, 780, 791, 794, 797, 815, 816, 856, 857, 873, 879, 881, 882, 883, 890, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 930, 949, 950, 951, 954, 955, 960, 967, 979, 980, 983, 986, 987, 1040, 1041, 1080, 1087, 1091, 1092, 1097, 1101, 1111, 1112, 1113, 1114, 1116, 1117, 1122, 1123, 1125, 1127, 1131, 1132, 1134, 1137, 1138, 1139, 1147, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1178, 1189, 1190, 1203, 1220, 1224, 1236, 1254, 1255, 1256, 1260, 1261, 1264, 1265, 1266, 1267, 1271, 1281, 1294, 1295, 1299, 1302, 1306, 1310, 1312, 1315, 1316, 1317, 1318, 1319, 1322, 1327, 1328, 1329, 1337, 1340, 1343, 1344, 1351, 1377, 1378, 1382, 1383, 1389, 1390, 1399, 1400, 1401, 1402, 1403, 1405, 1420, 1422, 1428, 1434, 1435, 1436, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1473, 1476, 1477, 1478, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1502, 1504, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1535, 1536, 1539, 1566, 1590, 1592, 1596, 1597, 1603, 1607, 1611, 1623, 1628, 1633, 1637, 1639, 1644, 1645, 1646, 1650, 1651, 1653, 1654, 1655, 1662, 1665, 1689, 1692, 1694, 1715, 1716, 1717, 1718, 1719, 1724, 1727, 1728, 1729, 1736, 1739, 1760, 1774, 1775, 1786, 1788, 1802, 1805, 1806, 1808, 1809, 1811, 1812, 1816, 1820, 1857, 1859, 1862, 1876, 1879, 1880, 1881, 1887, 1888, 1895, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1919, 1921, 1928, 1929, 1930, 1932, 1933, 1934, 1937, 1950, 1952, 1953, 1954, 1955, 1956, 1959, 1968, 1969, 1970, 1976, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1987, 1988, 1990, 1991, 1996, 1998, 1999, 2000, 2003, 2006, 2011, 2015, 2016, 2018, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2043, 2045], "2": [0, 1, 3, 5, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 40, 42, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 169, 187, 204, 221, 229, 230, 250, 256, 282, 309, 311, 313, 317, 331, 373, 397, 398, 440, 441, 442, 443, 444, 476, 482, 483, 488, 491, 494, 508, 510, 512, 539, 553, 555, 575, 576, 578, 579, 580, 582, 583, 584, 602, 612, 675, 676, 678, 679, 680, 681, 684, 685, 686, 687, 688, 690, 692, 693, 694, 729, 733, 734, 735, 736, 737, 738, 740, 741, 750, 753, 755, 757, 788, 791, 815, 860, 869, 870, 871, 872, 873, 874, 875, 879, 881, 882, 883, 885, 895, 898, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 919, 920, 923, 930, 932, 934, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 957, 958, 959, 960, 961, 965, 966, 976, 980, 981, 982, 983, 986, 987, 997, 1071, 1076, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1159, 1160, 1161, 1165, 1166, 1167, 1171, 1178, 1191, 1192, 1193, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1224, 1226, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1252, 1253, 1259, 1261, 1263, 1265, 1269, 1270, 1271, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1326, 1327, 1328, 1329, 1336, 1338, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1390, 1395, 1396, 1397, 1398, 1399, 1400, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1445, 1447, 1454, 1455, 1456, 1457, 1458, 1459, 1473, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1492, 1493, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1557, 1559, 1564, 1565, 1576, 1583, 1584, 1590, 1592, 1594, 1596, 1603, 1609, 1617, 1618, 1619, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1643, 1659, 1665, 1674, 1678, 1679, 1681, 1682, 1688, 1689, 1694, 1706, 1707, 1708, 1709, 1711, 1712, 1715, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1773, 1774, 1775, 1777, 1778, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1797, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1816, 1820, 1822, 1823, 1825, 1826, 1827, 1828, 1832, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1853, 1857, 1858, 1859, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1948, 1949, 1953, 1954, 1955, 1956, 1959, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1986, 1987, 1988, 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2008, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2043, 2044], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 27, 29, 30, 31, 32, 33, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 70, 71, 82, 481, 491, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 774, 780, 783, 784, 786, 788, 789, 833, 852, 854, 856, 857, 860, 888, 890, 895, 896, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 923, 936, 945, 967, 994, 1054, 1097, 1115, 1117, 1118, 1119, 1120, 1127, 1132, 1133, 1134, 1148, 1158, 1159, 1161, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1203, 1207, 1208, 1224, 1247, 1249, 1252, 1253, 1261, 1263, 1265, 1305, 1308, 1313, 1321, 1322, 1341, 1373, 1391, 1399, 1400, 1434, 1452, 1487, 1539, 1592, 1594, 1603, 1662, 1669, 1674, 1681, 1682, 1688, 1691, 1700, 1702, 1705, 1709, 1710, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1763, 1768, 1785, 1828, 1918, 1923, 1934, 1950, 1951, 1952, 1954, 1955, 1957, 1959, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2018, 2020, 2021, 2024, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045], "suggest": [0, 9, 22, 46, 50, 78, 79, 81, 83, 1420, 1950, 1957, 1977, 1978, 1985, 2015, 2039, 2045], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 20, 21, 25, 31, 32, 46, 49, 50, 52, 54, 58, 60, 80, 81, 903, 909, 923, 967, 969, 970, 1148, 1160, 1162, 1166, 1177, 1295, 1339, 1351, 1452, 1457, 1483, 1484, 1485, 1502, 1539, 1603, 1604, 1726, 1824, 1934, 1950, 1951, 1955, 1957, 1962, 1968, 1969, 1970, 1971, 1977, 1978, 1981, 1983, 1986, 1992, 1993, 1994, 1996, 2000, 2003, 2006, 2007, 2011, 2015, 2016, 2017, 2018, 2021, 2030, 2032, 2035, 2036, 2045, 2047], "http": [0, 2, 3, 4, 7, 9, 12, 14, 15, 22, 23, 25, 31, 42, 43, 49, 146, 675, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 787, 788, 888, 923, 967, 979, 1097, 1155, 1177, 1182, 1322, 1351, 1406, 1457, 1483, 1484, 1485, 1506, 1530, 1533, 1536, 1690, 1726, 1774, 1791, 1824, 1828, 1848, 1922, 1925, 1950, 1956, 1959, 1965, 1967, 1978, 1979, 1987, 1988, 1990, 1994, 1996, 2000, 2003, 2005, 2018, 2020, 2021, 2032, 2037, 2039, 2044, 2048], "github": [0, 7, 9, 14, 23, 25, 38, 49, 50, 54, 146, 787, 788, 888, 909, 923, 1155, 1177, 1182, 1351, 1483, 1484, 1485, 1530, 1726, 1760, 1824, 1925, 1950, 1957, 1962, 1987, 1994, 2000, 2005, 2006, 2015, 2016, 2018, 2021, 2032, 2035, 2039, 2044], "com": [0, 7, 14, 23, 25, 41, 43, 49, 146, 787, 788, 888, 923, 1155, 1177, 1182, 1351, 1483, 1484, 1485, 1530, 1726, 1824, 1922, 1925, 1950, 1959, 1965, 1967, 1987, 1988, 1994, 1996, 2000, 2005, 2018, 2021, 2032, 2039, 2044], "pytorch": [0, 1, 2, 3, 4, 11, 12, 13, 14, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 47, 49, 50, 53, 55, 58, 59, 60, 78, 79, 80, 81, 82, 83, 146, 508, 578, 675, 693, 725, 726, 727, 728, 740, 741, 751, 755, 756, 757, 758, 759, 760, 787, 788, 805, 806, 807, 808, 875, 888, 921, 923, 952, 957, 958, 967, 968, 979, 1022, 1023, 1034, 1039, 1097, 1142, 1148, 1155, 1156, 1160, 1165, 1166, 1182, 1195, 1235, 1236, 1260, 1280, 1286, 1291, 1293, 1294, 1295, 1298, 1311, 1320, 1336, 1339, 1340, 1351, 1399, 1400, 1406, 1438, 1452, 1483, 1484, 1485, 1530, 1547, 1548, 1549, 1565, 1643, 1674, 1681, 1682, 1715, 1723, 1724, 1726, 1729, 1737, 1784, 1816, 1824, 1825, 1826, 1834, 1881, 1885, 1909, 1922, 1925, 1934, 1950, 1954, 1955, 1959, 1961, 1962, 1965, 1966, 1970, 1971, 1972, 1979, 1980, 1984, 1985, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998, 2002, 2003, 2005, 2007, 2008, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2027, 2029, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2043, 2044, 2046, 2047, 2048], "75956": 0, "_c": [0, 21, 22, 25, 57, 903, 909, 1248, 1261, 1735, 1953, 1955, 1966, 1981, 1989, 1993, 1996, 2000, 2011], "_jit_set_autocast_mod": 0, "fals": [0, 1, 2, 3, 5, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 46, 49, 52, 56, 58, 60, 65, 68, 69, 70, 71, 108, 109, 110, 111, 112, 114, 130, 131, 132, 146, 177, 178, 179, 192, 205, 256, 297, 314, 315, 317, 324, 328, 331, 332, 334, 338, 339, 340, 347, 350, 388, 392, 403, 405, 406, 407, 410, 416, 424, 425, 426, 427, 440, 441, 442, 443, 444, 448, 453, 455, 465, 466, 474, 490, 491, 499, 512, 537, 550, 551, 560, 575, 589, 598, 604, 605, 610, 612, 675, 688, 689, 690, 691, 692, 694, 707, 708, 709, 710, 711, 712, 729, 730, 740, 741, 746, 747, 748, 750, 753, 755, 763, 764, 771, 773, 774, 775, 777, 778, 780, 792, 794, 809, 814, 815, 816, 817, 819, 820, 821, 833, 834, 852, 853, 858, 860, 869, 870, 871, 875, 888, 890, 895, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 927, 936, 939, 942, 944, 945, 951, 952, 958, 959, 960, 966, 967, 979, 980, 1000, 1038, 1043, 1055, 1097, 1098, 1099, 1100, 1102, 1103, 1110, 1114, 1115, 1116, 1117, 1122, 1123, 1128, 1129, 1130, 1132, 1133, 1134, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1159, 1160, 1161, 1163, 1165, 1171, 1180, 1181, 1187, 1189, 1191, 1193, 1206, 1207, 1208, 1211, 1212, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1254, 1256, 1257, 1265, 1266, 1267, 1269, 1271, 1274, 1279, 1280, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1302, 1304, 1306, 1307, 1310, 1311, 1312, 1313, 1314, 1319, 1320, 1321, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1343, 1347, 1349, 1350, 1352, 1355, 1361, 1364, 1365, 1373, 1378, 1379, 1380, 1381, 1384, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1482, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1496, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1516, 1518, 1519, 1526, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1539, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1587, 1588, 1589, 1592, 1594, 1596, 1597, 1598, 1603, 1604, 1607, 1613, 1614, 1615, 1617, 1618, 1619, 1623, 1628, 1632, 1636, 1638, 1639, 1641, 1642, 1643, 1644, 1646, 1656, 1659, 1660, 1662, 1668, 1674, 1676, 1678, 1679, 1683, 1684, 1686, 1688, 1691, 1693, 1694, 1695, 1707, 1716, 1717, 1718, 1719, 1721, 1724, 1727, 1728, 1729, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1772, 1782, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1808, 1809, 1816, 1820, 1828, 1829, 1832, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1857, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1885, 1900, 1904, 1909, 1918, 1922, 1923, 1925, 1928, 1929, 1930, 1937, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1961, 1962, 1964, 1965, 1968, 1970, 1971, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1990, 1993, 1994, 1995, 1998, 1999, 2000, 2003, 2004, 2005, 2007, 2010, 2011, 2015, 2016, 2017, 2019, 2020, 2022, 2023, 2025, 2030, 2032, 2033, 2035, 2038, 2040, 2041, 2044, 2045, 2046], "randn": [0, 1, 11, 12, 25, 31, 46, 51, 53, 54, 55, 58, 60, 62, 68, 69, 285, 307, 478, 539, 575, 579, 580, 581, 582, 583, 584, 612, 678, 679, 680, 681, 682, 683, 684, 685, 690, 691, 694, 715, 723, 724, 729, 733, 734, 735, 736, 737, 738, 751, 753, 755, 756, 757, 758, 759, 760, 767, 768, 769, 856, 857, 869, 870, 871, 873, 876, 877, 878, 879, 880, 930, 935, 947, 954, 956, 957, 958, 959, 960, 962, 982, 983, 984, 985, 986, 997, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1091, 1097, 1111, 1112, 1141, 1149, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1220, 1224, 1226, 1261, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1303, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1325, 1329, 1330, 1337, 1339, 1340, 1341, 1343, 1344, 1347, 1349, 1350, 1352, 1354, 1356, 1357, 1371, 1372, 1375, 1385, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1486, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1513, 1514, 1516, 1517, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1535, 1537, 1538, 1542, 1543, 1544, 1546, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1587, 1588, 1594, 1628, 1634, 1635, 1732, 1775, 1780, 1781, 1782, 1784, 1785, 1798, 1802, 1803, 1815, 1850, 1852, 1857, 1863, 1866, 1874, 1875, 1884, 1885, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 1912, 1915, 1917, 1922, 1932, 1933, 1934, 1937, 1953, 1954, 1955, 1957, 1959, 1963, 1969, 1970, 1971, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1988, 1990, 1994, 1995, 1998, 1999, 2000, 2001, 2003, 2006, 2011, 2015, 2016, 2018, 2020, 2023, 2025, 2027, 2030, 2031, 2032, 2035, 2037, 2038, 2040, 2043, 2045], "freez": [0, 49, 1171, 1249, 1259, 1429, 1430, 1487, 1978], "_": [0, 1, 3, 21, 22, 25, 26, 29, 35, 55, 58, 676, 678, 679, 693, 860, 876, 877, 878, 879, 880, 890, 895, 899, 900, 901, 911, 937, 956, 972, 981, 982, 984, 985, 987, 1141, 1146, 1161, 1165, 1216, 1270, 1278, 1329, 1337, 1401, 1402, 1403, 1449, 1450, 1451, 1502, 1526, 1674, 1689, 1723, 1752, 1754, 1774, 1797, 1800, 1803, 1815, 1835, 1837, 1843, 1850, 1852, 1874, 1885, 1898, 1899, 1959, 1978, 1981, 1984, 1985, 1990, 1996, 2002, 2003, 2005, 2016, 2031, 2032, 2038, 2039, 2043, 2045], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 35, 40, 42, 46, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 187, 204, 229, 250, 256, 285, 309, 311, 313, 317, 397, 398, 440, 441, 442, 443, 444, 466, 482, 483, 488, 491, 494, 508, 510, 512, 518, 532, 539, 553, 555, 576, 578, 579, 580, 582, 583, 602, 612, 675, 676, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 693, 694, 729, 733, 734, 735, 736, 737, 738, 741, 743, 752, 755, 756, 757, 758, 760, 767, 768, 769, 780, 788, 819, 856, 857, 860, 870, 871, 873, 874, 875, 882, 883, 903, 904, 905, 906, 907, 908, 910, 930, 935, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 953, 954, 955, 957, 958, 959, 960, 961, 965, 966, 976, 980, 981, 986, 987, 997, 1040, 1041, 1043, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1110, 1113, 1118, 1121, 1125, 1131, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1156, 1161, 1162, 1164, 1166, 1191, 1192, 1193, 1203, 1206, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1224, 1226, 1234, 1236, 1238, 1240, 1249, 1253, 1256, 1259, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1279, 1281, 1282, 1283, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1327, 1330, 1332, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1441, 1443, 1444, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1494, 1499, 1500, 1502, 1504, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1520, 1521, 1522, 1526, 1534, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1557, 1559, 1564, 1565, 1568, 1569, 1571, 1572, 1575, 1583, 1584, 1587, 1588, 1590, 1592, 1596, 1597, 1603, 1611, 1628, 1630, 1631, 1634, 1635, 1641, 1642, 1649, 1650, 1662, 1674, 1681, 1682, 1689, 1704, 1706, 1708, 1709, 1710, 1711, 1715, 1717, 1718, 1719, 1720, 1723, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1763, 1766, 1767, 1769, 1773, 1775, 1777, 1781, 1782, 1784, 1785, 1788, 1789, 1790, 1791, 1792, 1793, 1795, 1797, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1816, 1820, 1825, 1826, 1832, 1835, 1837, 1839, 1841, 1842, 1843, 1847, 1848, 1849, 1857, 1859, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1884, 1885, 1887, 1888, 1895, 1896, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1928, 1931, 1934, 1935, 1936, 1937, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1959, 1962, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1991, 1995, 1996, 1998, 2000, 2002, 2003, 2005, 2006, 2008, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2027, 2030, 2032, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045], "bug": [0, 14, 18, 25, 46, 58, 1158, 1159, 1161, 1339, 1977, 1992, 2015, 2035, 2045], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 57, 58, 59, 60, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 115, 146, 150, 191, 192, 202, 205, 217, 218, 219, 251, 256, 285, 286, 309, 317, 319, 331, 333, 336, 348, 440, 441, 442, 443, 444, 453, 481, 482, 483, 488, 490, 491, 492, 493, 494, 495, 498, 499, 508, 510, 512, 519, 551, 561, 578, 579, 580, 582, 583, 584, 598, 599, 609, 612, 613, 675, 679, 681, 684, 688, 689, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 730, 731, 732, 739, 743, 744, 745, 746, 747, 748, 749, 750, 752, 754, 755, 770, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 794, 795, 797, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 849, 854, 856, 857, 869, 870, 871, 872, 873, 880, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 919, 920, 921, 923, 927, 934, 935, 938, 940, 943, 947, 948, 951, 955, 957, 958, 961, 962, 964, 967, 969, 970, 971, 972, 973, 975, 980, 981, 983, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1003, 1004, 1005, 1008, 1019, 1021, 1024, 1025, 1026, 1028, 1029, 1032, 1033, 1034, 1035, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1053, 1054, 1055, 1061, 1062, 1064, 1065, 1066, 1070, 1071, 1072, 1078, 1079, 1080, 1085, 1087, 1088, 1092, 1095, 1096, 1097, 1101, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1151, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1181, 1182, 1189, 1192, 1194, 1195, 1203, 1207, 1213, 1215, 1236, 1246, 1247, 1249, 1250, 1252, 1254, 1255, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1325, 1327, 1330, 1339, 1340, 1344, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1361, 1364, 1365, 1375, 1378, 1379, 1380, 1381, 1383, 1391, 1395, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1439, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1474, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1493, 1494, 1497, 1499, 1502, 1503, 1515, 1518, 1520, 1523, 1526, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1557, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1592, 1594, 1596, 1601, 1603, 1609, 1611, 1617, 1618, 1619, 1629, 1631, 1633, 1643, 1649, 1650, 1658, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1715, 1716, 1717, 1718, 1719, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1763, 1764, 1766, 1768, 1770, 1772, 1773, 1774, 1778, 1782, 1784, 1791, 1795, 1797, 1800, 1804, 1806, 1813, 1820, 1822, 1823, 1824, 1826, 1827, 1828, 1832, 1834, 1835, 1853, 1858, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1879, 1880, 1881, 1884, 1885, 1887, 1888, 1895, 1897, 1901, 1903, 1907, 1909, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1940, 1942, 1943, 1944, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1973, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050], "what": [0, 1, 3, 5, 7, 8, 9, 25, 27, 31, 35, 39, 40, 46, 49, 51, 53, 54, 58, 60, 887, 900, 901, 1159, 1170, 1171, 1178, 1265, 1266, 1339, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1481, 1482, 1515, 1538, 1617, 1618, 1619, 1643, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1785, 1950, 1951, 1952, 1954, 1955, 1959, 1963, 1969, 1981, 1983, 1984, 1986, 1987, 1990, 1992, 2000, 2002, 2005, 2006, 2011, 2012, 2015, 2030, 2031, 2033, 2034, 2036, 2037, 2038, 2045, 2047], "observ": [0, 22, 33, 42, 481, 751, 784, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 803, 804, 806, 808, 810, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 836, 854, 856, 857, 859, 922, 983, 987, 1184, 1263, 1351, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1446, 1449, 1450, 1451, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1526, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1977, 1978, 1981, 1989, 1992, 2007, 2025, 2029, 2030, 2035, 2043, 2045, 2047], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 25, 27, 31, 34, 37, 38, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 60, 70, 71, 77, 82, 250, 251, 493, 508, 613, 684, 725, 726, 727, 728, 729, 730, 736, 737, 738, 740, 741, 751, 756, 757, 758, 759, 760, 856, 857, 887, 890, 893, 894, 900, 901, 903, 905, 906, 909, 923, 949, 979, 1080, 1154, 1158, 1159, 1160, 1161, 1162, 1166, 1246, 1249, 1313, 1344, 1354, 1406, 1417, 1452, 1487, 1592, 1603, 1604, 1609, 1631, 1643, 1661, 1674, 1723, 1724, 1726, 1741, 1742, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1798, 1824, 1826, 1870, 1934, 1957, 1959, 1962, 1969, 1970, 1971, 1972, 1977, 1978, 1983, 1984, 1986, 1988, 1993, 1994, 1996, 2000, 2002, 2003, 2006, 2009, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2027, 2031, 2032, 2034, 2035, 2042, 2045], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 21, 27, 33, 35, 40, 42, 44, 46, 47, 52, 54, 58, 903, 909, 910, 924, 926, 999, 1036, 1149, 1158, 1159, 1161, 1162, 1249, 1257, 1260, 1321, 1736, 1816, 1860, 1950, 1952, 1955, 1956, 1957, 1963, 1965, 1969, 1970, 1971, 1978, 1981, 1983, 1989, 1992, 1994, 1996, 1998, 2000, 2005, 2009, 2012, 2015, 2017, 2020, 2027, 2031, 2033, 2035, 2037, 2039, 2042, 2043, 2045, 2047], "subregion": 0, "nest": [0, 1, 5, 12, 14, 27, 46, 49, 58, 60, 63, 68, 69, 584, 788, 810, 812, 890, 905, 979, 1058, 1059, 1156, 1166, 1249, 1252, 1265, 1487, 1493, 1533, 1534, 1681, 1682, 1737, 1934, 1951, 1984, 1986, 1998, 2000, 2005, 2011], "local": [0, 5, 25, 27, 29, 30, 33, 40, 42, 43, 44, 45, 49, 58, 910, 911, 912, 1040, 1101, 1155, 1249, 1322, 1425, 1426, 1427, 1431, 1433, 1475, 1487, 1538, 1586, 1610, 1661, 1674, 1675, 1727, 1860, 1950, 1951, 1954, 1968, 1977, 1981, 1982, 1985, 1995, 2000, 2003, 2004, 2008, 2011, 2012, 2013, 2020, 2032, 2035, 2038, 2045, 2047], "want": [0, 1, 7, 8, 9, 14, 21, 25, 30, 31, 39, 46, 49, 51, 52, 53, 54, 57, 58, 60, 443, 481, 491, 494, 776, 786, 833, 1036, 1154, 1155, 1170, 1171, 1262, 1265, 1266, 1351, 1434, 1435, 1539, 1587, 1588, 1603, 1662, 1674, 1675, 1724, 1727, 1741, 1742, 1754, 1755, 1816, 1925, 1950, 1959, 1962, 1977, 1978, 1980, 1981, 1983, 1984, 1986, 1987, 1990, 2000, 2002, 2003, 2006, 2015, 2020, 2021, 2024, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2041, 2044], "forc": [0, 1, 14, 18, 49, 453, 875, 967, 1036, 1168, 1252, 1264, 1268, 1834, 1870, 1950, 1952, 1955, 1977, 1981, 2020, 2023, 2030, 2032], "particular": [0, 1, 3, 7, 21, 27, 33, 39, 42, 43, 46, 47, 49, 58, 60, 65, 69, 481, 555, 675, 856, 857, 1071, 1166, 1167, 1249, 1344, 1423, 1487, 1934, 1952, 1954, 1962, 1971, 1981, 1983, 1985, 1986, 1989, 1990, 1993, 1998, 2000, 2002, 2015, 2017, 2023, 2030, 2034, 2035, 2036, 2045, 2046, 2047], "give": [0, 3, 4, 7, 9, 12, 18, 21, 22, 27, 29, 41, 46, 49, 58, 914, 915, 987, 1115, 1117, 1118, 1120, 1124, 1133, 1158, 1159, 1160, 1171, 1250, 1263, 1264, 1279, 1286, 1414, 1415, 1416, 1492, 1538, 1539, 1688, 1728, 1741, 1742, 1754, 1881, 1922, 1950, 1952, 1968, 1970, 1976, 1978, 1981, 1983, 1984, 1986, 1987, 1988, 1990, 1994, 2000, 2002, 2004, 2015, 2030, 2033, 2034, 2042, 2045, 2046], "explicit": [0, 8, 12, 25, 46, 49, 53, 58, 1032, 1170, 1203, 1236, 1604, 1824, 1902, 1950, 1951, 1955, 1956, 1969, 1977, 1981, 1983, 1986, 2003, 2018, 2019, 2040], "control": [0, 1, 2, 14, 21, 22, 25, 26, 27, 31, 33, 38, 41, 42, 47, 60, 66, 69, 750, 794, 853, 856, 871, 875, 890, 936, 945, 979, 1084, 1085, 1086, 1087, 1088, 1168, 1207, 1208, 1261, 1262, 1263, 1265, 1280, 1286, 1288, 1291, 1293, 1296, 1298, 1302, 1308, 1311, 1313, 1319, 1339, 1391, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1473, 1481, 1482, 1538, 1643, 1674, 1772, 1828, 1829, 1842, 1857, 1860, 1865, 1881, 1885, 1904, 1910, 1911, 1912, 1913, 1951, 1952, 1961, 1978, 1980, 1981, 1982, 1990, 1992, 1993, 1995, 1997, 1998, 2000, 2002, 2005, 2006, 2013, 2015, 2030, 2031, 2033, 2035, 2038], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 21, 25, 27, 29, 33, 34, 36, 43, 46, 47, 49, 54, 57, 58, 77, 482, 483, 895, 919, 920, 967, 1003, 1014, 1075, 1155, 1249, 1250, 1252, 1265, 1266, 1321, 1364, 1365, 1423, 1487, 1493, 1530, 1531, 1532, 1533, 1534, 1668, 1670, 1674, 1830, 1951, 1952, 1954, 1956, 1964, 1977, 1979, 1980, 1985, 1986, 1989, 1990, 1992, 1994, 1996, 1998, 2000, 2005, 2006, 2011, 2012, 2015, 2027, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2044, 2045], "surround": [0, 58, 785, 1954, 1977, 1981], "ensur": [0, 1, 4, 6, 7, 9, 21, 25, 26, 27, 29, 30, 33, 42, 43, 45, 46, 49, 57, 58, 476, 481, 730, 814, 895, 896, 898, 900, 975, 1155, 1249, 1395, 1400, 1480, 1487, 1490, 1530, 1592, 1617, 1618, 1619, 1643, 1674, 1681, 1682, 1831, 1950, 1952, 1954, 1962, 1965, 1968, 1977, 1978, 1981, 1983, 1984, 1987, 1992, 1994, 1995, 2003, 2006, 2007, 2011, 2012, 2017, 2030, 2034, 2035, 2045], "necessari": [0, 1, 3, 9, 14, 21, 27, 30, 33, 42, 43, 46, 49, 57, 84, 187, 204, 481, 555, 584, 895, 899, 900, 901, 1155, 1171, 1224, 1261, 1493, 1716, 1717, 1952, 1955, 1970, 1976, 1978, 1979, 1981, 1982, 1988, 1990, 1993, 1996, 2003, 2006, 2011, 2012, 2013, 2018, 2027, 2035, 2045], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 21, 22, 25, 27, 29, 31, 35, 46, 47, 49, 53, 54, 57, 58, 60, 68, 69, 481, 491, 905, 914, 915, 1118, 1119, 1120, 1128, 1129, 1130, 1156, 1160, 1165, 1166, 1170, 1171, 1176, 1178, 1184, 1246, 1250, 1253, 1257, 1296, 1297, 1321, 1339, 1401, 1402, 1403, 1423, 1526, 1665, 1674, 1675, 1758, 1800, 1828, 1881, 1934, 1951, 1952, 1955, 1957, 1963, 1968, 1969, 1970, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 1998, 2000, 2003, 2006, 2007, 2011, 2013, 2015, 2020, 2022, 2025, 2027, 2030, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2045, 2046, 2047], "wa": [0, 1, 3, 7, 18, 22, 25, 40, 41, 42, 43, 46, 47, 49, 57, 58, 331, 481, 491, 675, 780, 787, 849, 921, 957, 968, 1000, 1001, 1024, 1028, 1043, 1056, 1075, 1117, 1166, 1246, 1256, 1265, 1280, 1291, 1293, 1297, 1321, 1339, 1361, 1373, 1457, 1483, 1484, 1485, 1516, 1539, 1557, 1592, 1646, 1662, 1674, 1675, 1718, 1760, 1766, 1879, 1880, 1918, 1919, 1929, 1930, 1934, 1950, 1952, 1954, 1955, 1956, 1959, 1961, 1962, 1966, 1968, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1989, 1991, 1998, 2000, 2002, 2004, 2006, 2010, 2011, 2015, 2017, 2022, 2027, 2033, 2034, 2035, 2038, 2044, 2047], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 21, 25, 29, 30, 32, 39, 42, 46, 49, 50, 51, 52, 53, 54, 57, 58, 483, 947, 998, 1032, 1148, 1249, 1253, 1487, 1649, 1675, 1718, 1797, 1811, 1864, 1952, 1955, 1959, 1962, 1968, 1977, 1978, 1981, 1983, 1984, 1987, 1992, 2006, 2012, 2013, 2016, 2030, 2032, 2033, 2034, 2035, 2044, 2045, 2046], "again": [0, 18, 21, 25, 29, 33, 46, 52, 1373, 1978, 1983, 1984, 1990, 2030, 2034, 2038, 2039], "regardless": [0, 3, 21, 25, 41, 46, 49, 981, 1174, 1249, 1253, 1259, 1487, 1668, 1918, 1977, 1981, 1995, 2011, 2022, 2035], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 57, 60, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 146, 187, 192, 204, 205, 217, 229, 251, 286, 307, 309, 311, 315, 317, 394, 396, 397, 398, 443, 453, 478, 481, 482, 483, 488, 490, 493, 494, 508, 510, 512, 532, 539, 578, 598, 612, 613, 675, 679, 682, 683, 684, 685, 689, 690, 691, 692, 730, 743, 752, 755, 761, 762, 763, 764, 767, 768, 769, 774, 775, 777, 778, 780, 781, 782, 787, 788, 789, 790, 794, 797, 810, 812, 814, 815, 816, 817, 820, 822, 832, 833, 849, 854, 859, 872, 873, 875, 879, 880, 884, 885, 887, 888, 890, 893, 894, 900, 901, 903, 904, 906, 907, 908, 909, 914, 915, 919, 920, 923, 926, 928, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 952, 953, 966, 970, 973, 976, 979, 983, 987, 1000, 1006, 1013, 1029, 1040, 1041, 1043, 1044, 1045, 1054, 1067, 1068, 1069, 1074, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1097, 1098, 1102, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1145, 1147, 1148, 1150, 1151, 1152, 1155, 1158, 1161, 1164, 1165, 1166, 1168, 1174, 1175, 1189, 1193, 1194, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1220, 1224, 1226, 1246, 1249, 1252, 1254, 1257, 1260, 1261, 1263, 1265, 1266, 1269, 1270, 1274, 1275, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1296, 1297, 1299, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1313, 1314, 1316, 1319, 1321, 1322, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1350, 1358, 1359, 1363, 1364, 1365, 1368, 1369, 1373, 1379, 1382, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1487, 1490, 1492, 1494, 1501, 1502, 1503, 1504, 1505, 1515, 1516, 1518, 1526, 1529, 1530, 1535, 1536, 1538, 1539, 1547, 1548, 1549, 1557, 1560, 1561, 1575, 1576, 1583, 1584, 1585, 1587, 1588, 1591, 1592, 1594, 1603, 1604, 1610, 1617, 1618, 1619, 1631, 1643, 1646, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1708, 1709, 1712, 1718, 1722, 1723, 1726, 1728, 1729, 1730, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1774, 1775, 1778, 1781, 1784, 1789, 1790, 1791, 1793, 1795, 1797, 1802, 1804, 1806, 1808, 1809, 1811, 1813, 1816, 1823, 1824, 1825, 1826, 1828, 1832, 1833, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1859, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1879, 1880, 1881, 1885, 1886, 1896, 1902, 1903, 1904, 1906, 1907, 1910, 1911, 1912, 1913, 1920, 1921, 1922, 1925, 1928, 1929, 1930, 1932, 1934, 1937, 1950, 1952, 1953, 1954, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1975, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048], "state": [0, 1, 2, 5, 9, 21, 25, 27, 29, 31, 33, 35, 42, 45, 46, 47, 49, 58, 84, 743, 755, 831, 975, 1029, 1030, 1034, 1039, 1043, 1053, 1068, 1069, 1155, 1164, 1202, 1249, 1252, 1265, 1322, 1362, 1369, 1438, 1439, 1457, 1458, 1487, 1502, 1504, 1534, 1550, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1791, 1833, 1860, 1925, 1951, 1964, 1977, 1978, 1981, 1982, 1983, 1988, 1992, 1995, 1998, 2000, 2002, 2010, 2024, 2030, 2032, 2033, 2034, 2035, 2041], "thread": [0, 1, 3, 21, 25, 27, 33, 44, 49, 57, 910, 911, 912, 998, 1000, 1032, 1101, 1200, 1201, 1361, 1423, 1727, 1830, 1831, 1924, 1951, 1952, 1966, 1977, 1981, 1986, 1989, 1992, 2011, 2013, 2017, 2023, 2032, 2035], "must": [0, 3, 5, 6, 9, 12, 14, 21, 25, 27, 29, 31, 32, 33, 40, 43, 44, 46, 47, 49, 52, 54, 57, 58, 60, 68, 69, 84, 93, 135, 149, 150, 192, 256, 309, 311, 317, 394, 396, 398, 481, 508, 539, 540, 561, 578, 579, 580, 582, 583, 612, 681, 682, 683, 684, 685, 686, 692, 743, 752, 767, 768, 769, 788, 810, 812, 854, 855, 873, 879, 884, 885, 886, 887, 890, 895, 899, 900, 901, 904, 906, 907, 908, 914, 915, 935, 937, 939, 940, 941, 942, 943, 944, 947, 951, 954, 976, 979, 987, 1000, 1010, 1011, 1012, 1014, 1040, 1041, 1043, 1085, 1087, 1088, 1089, 1091, 1094, 1095, 1097, 1118, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1131, 1138, 1139, 1148, 1149, 1151, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1170, 1174, 1178, 1179, 1191, 1192, 1203, 1212, 1213, 1216, 1226, 1246, 1249, 1260, 1265, 1272, 1275, 1304, 1305, 1306, 1307, 1313, 1315, 1316, 1319, 1320, 1322, 1336, 1340, 1342, 1343, 1344, 1350, 1357, 1373, 1379, 1382, 1383, 1387, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1430, 1433, 1434, 1435, 1440, 1441, 1447, 1480, 1487, 1490, 1491, 1493, 1518, 1524, 1539, 1565, 1574, 1576, 1584, 1603, 1617, 1618, 1619, 1637, 1674, 1683, 1685, 1705, 1715, 1716, 1722, 1724, 1729, 1744, 1764, 1766, 1773, 1774, 1777, 1778, 1781, 1789, 1790, 1811, 1820, 1823, 1831, 1847, 1858, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1886, 1897, 1901, 1902, 1906, 1911, 1913, 1917, 1920, 1922, 1925, 1931, 1932, 1934, 1935, 1937, 1952, 1953, 1954, 1955, 1959, 1962, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1988, 1992, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2022, 2030, 2031, 2033, 2035, 2036, 2038, 2044, 2045, 2046], "invok": [0, 2, 8, 15, 18, 21, 25, 40, 42, 43, 57, 58, 903, 905, 1040, 1041, 1249, 1252, 1259, 1423, 1487, 1667, 1669, 1672, 1673, 1726, 1760, 1766, 1952, 1955, 1956, 1964, 1977, 1980, 1981, 1982, 1983, 1984, 1989, 1990, 2003, 2011, 2012, 2027, 2030, 2034, 2035, 2036, 2038], "affect": [0, 1, 2, 7, 9, 18, 20, 32, 46, 49, 217, 218, 780, 910, 911, 912, 1001, 1003, 1101, 1148, 1149, 1249, 1364, 1365, 1457, 1487, 1502, 1539, 1662, 1675, 1681, 1682, 1727, 1824, 1827, 1828, 1977, 1978, 1981, 1986, 1987, 1990, 1993, 1994, 2017, 2041, 2043], "dataparallel": [0, 25, 1658, 1674, 1718, 1951, 1978, 1985, 1992, 2011], "parallel": [0, 13, 14, 21, 22, 25, 26, 27, 29, 42, 43, 49, 1200, 1201, 1252, 1423, 1493, 1526, 1592, 1643, 1674, 1830, 1831, 1951, 1955, 1977, 1978, 1980, 1992, 1996, 2011, 2013, 2029, 2035], "distributeddataparallel": [0, 21, 22, 25, 26, 27, 29, 43, 49, 675, 1423, 1526, 1992, 2004, 2011, 2035], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 21, 22, 25, 26, 27, 31, 32, 33, 35, 39, 42, 43, 44, 46, 49, 54, 58, 60, 61, 69, 146, 250, 481, 494, 540, 612, 675, 774, 780, 888, 904, 905, 922, 927, 938, 949, 956, 957, 961, 962, 1012, 1050, 1054, 1067, 1085, 1086, 1137, 1138, 1139, 1141, 1145, 1151, 1162, 1181, 1193, 1206, 1210, 1224, 1234, 1246, 1247, 1250, 1261, 1270, 1271, 1274, 1279, 1280, 1286, 1290, 1295, 1303, 1304, 1306, 1307, 1310, 1315, 1321, 1325, 1338, 1341, 1347, 1350, 1352, 1355, 1368, 1373, 1383, 1399, 1400, 1414, 1415, 1416, 1423, 1429, 1430, 1447, 1457, 1479, 1493, 1501, 1509, 1518, 1524, 1534, 1535, 1536, 1557, 1567, 1568, 1569, 1583, 1584, 1592, 1603, 1630, 1643, 1659, 1661, 1662, 1665, 1674, 1681, 1682, 1688, 1689, 1691, 1692, 1718, 1723, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1766, 1768, 1782, 1783, 1804, 1805, 1828, 1832, 1866, 1867, 1868, 1869, 1871, 1872, 1903, 1911, 1913, 1922, 1950, 1952, 1954, 1955, 1957, 1963, 1970, 1971, 1972, 1976, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 2000, 2002, 2003, 2004, 2006, 2007, 2011, 2015, 2016, 2018, 2020, 2021, 2022, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2043, 2045, 2047], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 44, 45, 46, 47, 49, 53, 54, 55, 57, 58, 60, 65, 68, 69, 78, 79, 80, 81, 83, 146, 217, 250, 348, 398, 481, 508, 515, 540, 555, 692, 743, 752, 788, 849, 850, 851, 875, 881, 887, 888, 890, 893, 895, 896, 900, 901, 905, 910, 911, 923, 938, 949, 951, 961, 965, 969, 979, 996, 1001, 1003, 1008, 1010, 1014, 1041, 1064, 1075, 1086, 1097, 1101, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1136, 1140, 1143, 1144, 1145, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1203, 1212, 1213, 1228, 1231, 1234, 1253, 1259, 1263, 1269, 1270, 1280, 1281, 1291, 1294, 1295, 1297, 1302, 1306, 1308, 1310, 1313, 1319, 1320, 1336, 1344, 1348, 1353, 1373, 1379, 1391, 1396, 1399, 1400, 1401, 1402, 1403, 1406, 1414, 1417, 1418, 1419, 1430, 1434, 1435, 1440, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1466, 1467, 1468, 1478, 1487, 1491, 1493, 1526, 1534, 1539, 1557, 1567, 1570, 1571, 1572, 1587, 1588, 1589, 1594, 1630, 1643, 1661, 1665, 1674, 1675, 1689, 1690, 1691, 1695, 1705, 1716, 1726, 1727, 1728, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1764, 1765, 1766, 1786, 1787, 1804, 1820, 1828, 1832, 1835, 1876, 1885, 1901, 1906, 1907, 1909, 1917, 1918, 1920, 1921, 1922, 1925, 1934, 1951, 1952, 1955, 1959, 1961, 1964, 1966, 1968, 1969, 1970, 1971, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1992, 1994, 1995, 1996, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2042, 2044, 2045, 2047], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 21, 22, 27, 33, 43, 44, 49, 57, 192, 205, 285, 328, 598, 755, 967, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1020, 1021, 1022, 1029, 1035, 1036, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1074, 1075, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1145, 1249, 1259, 1296, 1321, 1350, 1358, 1359, 1360, 1364, 1365, 1391, 1423, 1438, 1457, 1487, 1502, 1503, 1526, 1658, 1674, 1715, 1885, 1951, 1952, 1964, 1967, 1981, 1983, 1986, 1988, 1990, 1991, 1993, 1994, 1996, 2006, 2011, 2015, 2017, 2021, 2023, 2026, 2027, 2030, 2032, 2034, 2037, 2042, 2043, 2045, 2047, 2050], "per": [0, 14, 21, 22, 25, 26, 27, 29, 30, 32, 33, 35, 41, 43, 44, 49, 50, 55, 467, 468, 469, 729, 730, 796, 803, 814, 817, 820, 828, 840, 848, 887, 900, 901, 903, 905, 923, 967, 1004, 1080, 1111, 1156, 1166, 1322, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1423, 1430, 1441, 1446, 1449, 1450, 1451, 1452, 1453, 1459, 1478, 1479, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1518, 1519, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1674, 1690, 1726, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1774, 1786, 1832, 1834, 1886, 1903, 1907, 1925, 1934, 1966, 1970, 1972, 1980, 1981, 1982, 1984, 1986, 1989, 2004, 2006, 2007, 2009, 2012, 2015, 2020, 2033, 2047], "process": [0, 1, 3, 11, 14, 22, 25, 26, 27, 29, 31, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 58, 75, 76, 77, 80, 82, 1000, 1036, 1042, 1067, 1149, 1180, 1181, 1249, 1260, 1322, 1359, 1368, 1399, 1400, 1420, 1422, 1429, 1430, 1446, 1453, 1478, 1479, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1526, 1530, 1532, 1534, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1763, 1769, 1798, 1834, 1848, 1925, 1950, 1951, 1952, 1959, 1966, 1968, 1969, 1970, 1978, 1980, 1981, 1982, 1983, 1986, 1989, 1990, 1992, 1994, 1996, 1998, 2000, 2003, 2004, 2005, 2006, 2009, 2011, 2013, 2015, 2017, 2024, 2027, 2029, 2033, 2035, 2038, 2043, 2045], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 25, 26, 27, 29, 31, 32, 33, 42, 43, 44, 45, 46, 49, 50, 54, 58, 60, 68, 69, 77, 115, 146, 348, 440, 441, 442, 443, 444, 481, 582, 583, 816, 856, 857, 888, 895, 909, 967, 998, 1000, 1001, 1003, 1032, 1043, 1044, 1064, 1098, 1100, 1117, 1137, 1138, 1139, 1149, 1155, 1174, 1179, 1249, 1253, 1261, 1262, 1285, 1286, 1313, 1314, 1322, 1361, 1423, 1484, 1487, 1503, 1520, 1631, 1643, 1649, 1674, 1736, 1766, 1793, 1797, 1799, 1825, 1830, 1897, 1900, 1925, 1927, 1950, 1951, 1952, 1955, 1956, 1967, 1968, 1969, 1970, 1971, 1974, 1976, 1978, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1990, 1992, 1995, 1996, 2000, 2003, 2004, 2006, 2009, 2011, 2012, 2021, 2023, 2027, 2031, 2032, 2033, 2036, 2037, 2038, 2041, 2042, 2045, 2046, 2047], "str": [0, 1, 2, 3, 5, 14, 21, 22, 25, 27, 29, 30, 31, 33, 36, 40, 42, 44, 46, 47, 49, 58, 317, 508, 512, 598, 774, 780, 787, 788, 789, 810, 811, 812, 849, 903, 905, 917, 924, 926, 930, 955, 967, 974, 990, 998, 1010, 1011, 1012, 1014, 1023, 1024, 1026, 1027, 1028, 1032, 1040, 1041, 1042, 1054, 1055, 1057, 1059, 1071, 1092, 1097, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1149, 1154, 1155, 1159, 1164, 1166, 1171, 1199, 1247, 1248, 1249, 1250, 1252, 1253, 1256, 1259, 1295, 1308, 1313, 1314, 1321, 1322, 1351, 1364, 1365, 1380, 1399, 1400, 1406, 1414, 1415, 1416, 1420, 1422, 1430, 1436, 1440, 1446, 1447, 1452, 1453, 1463, 1464, 1465, 1478, 1479, 1487, 1488, 1490, 1491, 1492, 1494, 1497, 1501, 1504, 1515, 1518, 1519, 1530, 1532, 1534, 1535, 1536, 1537, 1539, 1564, 1565, 1575, 1576, 1584, 1589, 1592, 1603, 1604, 1628, 1631, 1636, 1662, 1674, 1688, 1689, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1723, 1724, 1726, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1768, 1785, 1816, 1820, 1827, 1828, 1862, 1881, 1924, 1925, 1934, 1940, 1943, 1944, 1945, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1959, 1964, 1965, 1966, 1968, 1970, 1976, 1978, 1995, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2010, 2011, 2017, 2020, 2022, 2024, 2025, 2035, 2038, 2040, 2044, 2045, 2046, 2047], "possibl": [0, 2, 9, 14, 15, 18, 25, 27, 31, 46, 53, 54, 58, 492, 493, 575, 612, 853, 874, 875, 961, 967, 1007, 1098, 1099, 1100, 1145, 1158, 1170, 1178, 1180, 1181, 1249, 1263, 1290, 1303, 1306, 1307, 1310, 1315, 1321, 1400, 1406, 1487, 1493, 1583, 1584, 1603, 1637, 1662, 1694, 1695, 1804, 1807, 1822, 1873, 1881, 1900, 1952, 1954, 1955, 1959, 1968, 1969, 1976, 1978, 1980, 1981, 1982, 1983, 1986, 1987, 1992, 1993, 1994, 1996, 2003, 2006, 2011, 2013, 2018, 2022, 2026, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2041, 2045], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 21, 22, 24, 26, 27, 29, 31, 33, 34, 36, 39, 40, 42, 43, 46, 47, 49, 51, 54, 56, 57, 58, 60, 62, 65, 69, 71, 84, 97, 98, 99, 100, 115, 146, 150, 231, 232, 233, 234, 250, 255, 256, 268, 269, 295, 307, 309, 311, 312, 313, 314, 315, 317, 319, 322, 348, 395, 396, 414, 415, 417, 418, 466, 476, 478, 494, 508, 510, 512, 532, 539, 555, 578, 579, 580, 582, 583, 594, 595, 675, 676, 679, 682, 683, 686, 690, 691, 692, 730, 751, 759, 765, 766, 774, 779, 780, 782, 788, 790, 791, 794, 797, 814, 815, 816, 817, 820, 821, 822, 849, 854, 860, 869, 870, 871, 875, 880, 884, 886, 888, 889, 893, 894, 895, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 923, 932, 934, 936, 937, 938, 943, 945, 951, 955, 959, 960, 962, 973, 982, 983, 986, 1001, 1031, 1040, 1041, 1054, 1067, 1076, 1077, 1080, 1088, 1089, 1098, 1099, 1100, 1102, 1111, 1112, 1114, 1116, 1118, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1131, 1140, 1145, 1152, 1154, 1155, 1156, 1157, 1161, 1162, 1164, 1165, 1167, 1168, 1170, 1171, 1172, 1174, 1178, 1180, 1181, 1182, 1184, 1185, 1186, 1191, 1193, 1198, 1199, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1220, 1234, 1239, 1240, 1241, 1242, 1245, 1246, 1247, 1249, 1250, 1252, 1256, 1257, 1265, 1268, 1270, 1271, 1274, 1278, 1279, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1295, 1299, 1302, 1304, 1306, 1307, 1309, 1313, 1314, 1319, 1320, 1321, 1322, 1325, 1330, 1336, 1338, 1339, 1342, 1347, 1349, 1350, 1352, 1355, 1368, 1371, 1373, 1377, 1378, 1379, 1380, 1383, 1384, 1387, 1391, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1431, 1433, 1440, 1441, 1442, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1515, 1518, 1520, 1521, 1522, 1523, 1524, 1526, 1529, 1530, 1532, 1534, 1535, 1536, 1538, 1539, 1547, 1548, 1549, 1564, 1565, 1567, 1568, 1569, 1574, 1575, 1584, 1585, 1589, 1592, 1594, 1603, 1604, 1605, 1617, 1618, 1619, 1628, 1629, 1630, 1631, 1633, 1636, 1643, 1656, 1657, 1662, 1664, 1665, 1667, 1669, 1672, 1673, 1674, 1680, 1688, 1689, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1715, 1718, 1719, 1722, 1724, 1728, 1729, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1774, 1778, 1781, 1785, 1787, 1788, 1800, 1802, 1804, 1805, 1806, 1811, 1812, 1813, 1820, 1823, 1832, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1857, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1885, 1886, 1897, 1901, 1904, 1907, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1921, 1937, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1962, 1963, 1965, 1966, 1968, 1971, 1976, 1977, 1978, 1980, 1981, 1983, 1984, 1985, 1987, 1988, 1990, 1992, 1994, 1995, 1998, 2000, 2001, 2002, 2003, 2005, 2006, 2009, 2010, 2011, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2030, 2032, 2033, 2035, 2038, 2039, 2040, 2044, 2045], "xpu": [0, 1249, 1487, 1940, 1942, 1951, 1959, 2005, 2018], "hpu": [0, 2017], "attribut": [0, 1, 11, 12, 21, 22, 25, 26, 32, 47, 58, 60, 62, 67, 76, 81, 146, 286, 490, 491, 722, 733, 734, 735, 736, 737, 738, 740, 741, 751, 759, 786, 796, 797, 810, 811, 812, 833, 834, 835, 853, 854, 884, 888, 893, 895, 898, 900, 901, 1148, 1246, 1248, 1249, 1250, 1252, 1253, 1255, 1260, 1261, 1322, 1423, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1487, 1530, 1674, 1675, 1694, 1695, 1716, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1881, 1922, 1923, 1926, 1951, 1953, 1956, 1971, 1977, 1978, 1981, 1983, 1984, 1990, 1995, 2000, 2003, 2006, 2011, 2021, 2022, 2035, 2038, 2044, 2046, 2048], "thu": [0, 1, 11, 21, 25, 31, 43, 47, 49, 58, 780, 817, 820, 849, 1097, 1118, 1313, 1344, 1426, 1539, 1662, 1674, 1741, 1742, 1752, 1754, 1870, 1952, 1955, 1962, 1964, 1978, 1980, 1983, 1985, 1987, 1989, 1990, 2000, 2006, 2011, 2015, 2019, 2021, 2022], "obtain": [0, 3, 21, 25, 31, 35, 57, 58, 491, 1194, 1368, 1406, 1494, 1576, 1674, 1745, 1751, 1774, 1791, 1886, 1955, 1968, 1969, 1980, 1994, 2000, 2002, 2005, 2006, 2043], "bool": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 44, 46, 47, 49, 56, 57, 58, 146, 192, 205, 241, 256, 315, 317, 324, 325, 326, 327, 329, 330, 335, 337, 440, 441, 442, 443, 444, 453, 466, 491, 512, 576, 598, 675, 688, 689, 690, 691, 692, 694, 730, 753, 774, 775, 780, 789, 809, 860, 868, 869, 870, 871, 875, 888, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 923, 936, 939, 941, 942, 944, 945, 951, 952, 958, 959, 960, 966, 967, 968, 979, 993, 1000, 1007, 1037, 1043, 1055, 1098, 1099, 1100, 1103, 1110, 1115, 1133, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1159, 1160, 1161, 1165, 1167, 1171, 1182, 1183, 1185, 1186, 1189, 1191, 1207, 1208, 1211, 1212, 1230, 1234, 1237, 1238, 1240, 1246, 1249, 1253, 1256, 1257, 1265, 1266, 1269, 1271, 1279, 1280, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1302, 1304, 1306, 1307, 1310, 1311, 1312, 1313, 1319, 1320, 1321, 1322, 1331, 1332, 1333, 1334, 1336, 1337, 1339, 1341, 1347, 1349, 1350, 1352, 1355, 1361, 1364, 1365, 1373, 1378, 1379, 1380, 1381, 1382, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1478, 1479, 1480, 1481, 1482, 1487, 1490, 1491, 1492, 1493, 1494, 1496, 1501, 1504, 1505, 1506, 1507, 1514, 1518, 1519, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1539, 1547, 1548, 1549, 1557, 1564, 1565, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1592, 1594, 1596, 1603, 1604, 1628, 1636, 1643, 1662, 1668, 1674, 1675, 1679, 1680, 1683, 1684, 1686, 1688, 1691, 1693, 1694, 1695, 1716, 1717, 1718, 1719, 1721, 1724, 1729, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1774, 1780, 1782, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1820, 1825, 1829, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1857, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1885, 1894, 1900, 1904, 1909, 1918, 1919, 1922, 1923, 1925, 1928, 1929, 1930, 1946, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1965, 1966, 1968, 1969, 1970, 1971, 1988, 1995, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2010, 2011, 2015, 2017, 2018, 2020, 2021, 2022, 2023, 2025, 2033, 2035, 2040, 2044, 2046], "option": [0, 1, 2, 3, 5, 14, 21, 25, 27, 29, 30, 31, 33, 36, 40, 41, 42, 44, 45, 46, 49, 58, 60, 67, 77, 79, 84, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 293, 321, 327, 389, 440, 441, 442, 443, 444, 482, 494, 495, 508, 515, 520, 532, 555, 575, 576, 578, 579, 580, 582, 583, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 730, 753, 774, 775, 780, 787, 789, 794, 813, 849, 854, 857, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 887, 888, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 918, 919, 920, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 951, 954, 956, 957, 958, 959, 960, 962, 964, 965, 966, 967, 973, 974, 981, 982, 984, 985, 986, 987, 991, 996, 997, 998, 1000, 1001, 1003, 1005, 1009, 1010, 1012, 1013, 1014, 1017, 1018, 1025, 1026, 1029, 1032, 1040, 1041, 1042, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1067, 1068, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1107, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1171, 1191, 1192, 1193, 1194, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1214, 1215, 1216, 1224, 1226, 1238, 1240, 1243, 1244, 1246, 1247, 1249, 1250, 1253, 1256, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1361, 1364, 1365, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1387, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1440, 1443, 1444, 1445, 1446, 1447, 1452, 1453, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1505, 1506, 1507, 1514, 1518, 1519, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1557, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1583, 1584, 1587, 1588, 1589, 1592, 1594, 1603, 1604, 1611, 1617, 1618, 1619, 1628, 1629, 1631, 1636, 1643, 1649, 1650, 1662, 1670, 1671, 1674, 1675, 1683, 1684, 1686, 1688, 1689, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1724, 1726, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1759, 1772, 1773, 1774, 1777, 1781, 1782, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1813, 1815, 1820, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1857, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1922, 1928, 1929, 1930, 1931, 1936, 1937, 1943, 1944, 1948, 1949, 1950, 1952, 1953, 1955, 1957, 1959, 1961, 1964, 1965, 1966, 1971, 1976, 1981, 1983, 1984, 1985, 1986, 1989, 1990, 1994, 1995, 1998, 2000, 2003, 2005, 2006, 2011, 2015, 2016, 2017, 2018, 2020, 2022, 2025, 2026, 2027, 2035, 2038, 2042, 2044, 2045, 2047], "whether": [0, 1, 2, 5, 7, 14, 21, 22, 25, 26, 27, 30, 31, 33, 41, 42, 49, 56, 58, 83, 315, 317, 466, 512, 612, 675, 688, 690, 691, 694, 794, 819, 869, 870, 875, 884, 895, 896, 899, 900, 901, 903, 905, 910, 911, 912, 914, 915, 921, 936, 945, 958, 959, 960, 966, 968, 970, 973, 1039, 1055, 1149, 1154, 1166, 1167, 1169, 1207, 1208, 1246, 1249, 1257, 1258, 1266, 1271, 1279, 1280, 1286, 1288, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1304, 1306, 1307, 1310, 1311, 1312, 1313, 1321, 1337, 1339, 1347, 1349, 1350, 1352, 1355, 1373, 1378, 1379, 1380, 1381, 1406, 1446, 1452, 1487, 1496, 1501, 1536, 1554, 1555, 1556, 1576, 1604, 1636, 1668, 1674, 1688, 1691, 1694, 1707, 1721, 1724, 1729, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1760, 1772, 1782, 1785, 1829, 1879, 1880, 1881, 1884, 1885, 1904, 1909, 1918, 1919, 1922, 1923, 1929, 1930, 1934, 1950, 1955, 1961, 1962, 1965, 1971, 1977, 1981, 1983, 1986, 1988, 1998, 2000, 2004, 2006, 2011, 2015, 2017, 2019, 2020, 2025, 2032, 2035, 2038, 2045], "torch_dtyp": 0, "weight": [0, 21, 25, 27, 31, 46, 47, 49, 55, 58, 60, 152, 297, 357, 358, 491, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 740, 741, 744, 746, 747, 748, 749, 751, 755, 756, 758, 759, 760, 767, 768, 769, 776, 787, 788, 789, 803, 804, 828, 830, 836, 840, 844, 845, 846, 847, 848, 853, 854, 856, 857, 938, 987, 1154, 1156, 1164, 1166, 1211, 1212, 1249, 1253, 1259, 1261, 1266, 1275, 1373, 1399, 1400, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1429, 1430, 1438, 1439, 1441, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1491, 1492, 1493, 1494, 1495, 1502, 1504, 1516, 1530, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1583, 1584, 1593, 1602, 1606, 1609, 1625, 1627, 1628, 1637, 1646, 1665, 1674, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1692, 1694, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1722, 1723, 1724, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1788, 1922, 1934, 1950, 1951, 1953, 1954, 1955, 1959, 1964, 1965, 1970, 1971, 1976, 1983, 1985, 1986, 1990, 1995, 1998, 2006, 2007, 2008, 2009, 2015, 2020, 2024, 2025, 2035, 2040], "cach": [0, 2, 3, 31, 58, 481, 967, 975, 1022, 1023, 1040, 1043, 1048, 1050, 1052, 1054, 1062, 1067, 1172, 1358, 1359, 1360, 1675, 1694, 1726, 1968, 1985, 2030, 2032, 2035, 2039, 2043, 2045, 2047], "insid": [0, 1, 7, 21, 42, 47, 49, 54, 57, 58, 895, 896, 897, 898, 899, 900, 901, 1006, 1043, 1156, 1160, 1165, 1171, 1261, 1674, 1952, 1954, 1955, 1959, 1964, 1977, 1981, 1983, 1984, 1989, 2000, 2015, 2024, 2034, 2038, 2045], "custom_fwd": [0, 1977], "fwd": [0, 2039], "cast_input": [0, 1977], "helper": [0, 3, 25, 53, 58, 1950, 1951, 1954, 1981, 1982, 2000, 2003, 2011, 2044, 2046], "subclass": [0, 1, 14, 21, 27, 31, 35, 54, 58, 135, 532, 884, 885, 886, 900, 901, 1175, 1247, 1250, 1260, 1487, 1675, 1696, 1701, 1722, 1952, 1955, 1956, 1962, 1974, 1977, 1990, 2000, 2011, 2015, 2032, 2035, 2038, 2046], "page": [0, 6, 7, 9, 21, 26, 43, 45, 1322, 1530, 1532, 1534, 1981, 1982, 1990, 2001, 2011, 2042], "incom": [0, 25, 44, 776, 814, 815, 816, 817, 820, 1404, 1474, 1563, 1609, 1968, 1978], "non": [0, 1, 2, 3, 5, 14, 20, 22, 25, 26, 27, 31, 33, 35, 42, 44, 45, 47, 49, 57, 60, 71, 74, 80, 84, 146, 331, 481, 483, 499, 508, 512, 540, 693, 729, 734, 735, 736, 737, 738, 740, 741, 751, 755, 759, 760, 767, 768, 769, 833, 860, 872, 884, 886, 888, 895, 897, 899, 900, 901, 914, 915, 930, 938, 951, 954, 967, 980, 981, 986, 1054, 1143, 1144, 1151, 1155, 1160, 1166, 1174, 1177, 1182, 1226, 1249, 1252, 1262, 1265, 1266, 1285, 1286, 1293, 1297, 1298, 1311, 1313, 1322, 1332, 1339, 1344, 1349, 1373, 1378, 1379, 1383, 1396, 1397, 1398, 1415, 1416, 1418, 1419, 1422, 1432, 1438, 1455, 1456, 1457, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1492, 1494, 1502, 1504, 1518, 1575, 1594, 1623, 1628, 1670, 1671, 1674, 1728, 1755, 1777, 1820, 1821, 1835, 1847, 1862, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1902, 1918, 1920, 1934, 1950, 1951, 1952, 1954, 1955, 1957, 1968, 1971, 1976, 1979, 1983, 1984, 1985, 1986, 1990, 1994, 2000, 2002, 2004, 2005, 2010, 2011, 2013, 2015, 2016, 2018, 2019, 2020, 2022, 2027, 2030, 2033, 2034, 2035, 2036, 2043, 2044, 2046], "intern": [0, 3, 8, 9, 14, 21, 22, 25, 27, 31, 33, 39, 46, 49, 54, 58, 895, 998, 1032, 1053, 1155, 1249, 1286, 1288, 1304, 1307, 1330, 1401, 1402, 1403, 1440, 1526, 1567, 1568, 1569, 1592, 1691, 1735, 1828, 1870, 1922, 1956, 1977, 1978, 1980, 1981, 1986, 1987, 1993, 1994, 1998, 2012, 2013, 2017, 2019, 2026, 2035, 2038, 2045], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 21, 25, 27, 29, 30, 31, 33, 35, 42, 43, 46, 47, 49, 50, 57, 58, 76, 84, 146, 205, 217, 492, 493, 494, 736, 738, 776, 788, 790, 812, 854, 856, 857, 860, 874, 875, 885, 888, 890, 891, 892, 900, 903, 904, 905, 914, 936, 945, 979, 990, 991, 993, 994, 998, 1000, 1001, 1003, 1008, 1009, 1012, 1013, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1025, 1026, 1029, 1031, 1032, 1035, 1037, 1038, 1042, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1066, 1068, 1070, 1073, 1074, 1075, 1098, 1100, 1110, 1115, 1133, 1149, 1150, 1152, 1168, 1171, 1178, 1197, 1198, 1199, 1207, 1208, 1232, 1233, 1249, 1253, 1265, 1269, 1320, 1322, 1336, 1351, 1358, 1360, 1361, 1426, 1429, 1433, 1487, 1526, 1534, 1538, 1586, 1592, 1603, 1643, 1661, 1662, 1664, 1674, 1695, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1710, 1711, 1733, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1784, 1793, 1795, 1797, 1799, 1800, 1824, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1900, 1911, 1913, 1918, 1924, 1925, 1939, 1942, 1943, 1944, 1946, 1947, 1948, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1962, 1966, 1968, 1971, 1977, 1978, 1981, 1986, 1988, 1989, 1990, 1991, 1992, 1995, 1996, 2000, 2002, 2003, 2004, 2006, 2009, 2011, 2012, 2015, 2017, 2018, 2020, 2021, 2024, 2034, 2035, 2038, 2041, 2042, 2045, 2046, 2047], "outsid": [0, 5, 9, 21, 35, 46, 47, 49, 54, 60, 70, 71, 679, 790, 880, 1154, 1156, 1160, 1165, 1250, 1592, 1674, 1757, 1758, 1763, 1764, 1770, 1954, 1955, 1976, 1978, 1981, 1984, 1985, 2022, 2030, 2035, 2041], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 146, 192, 205, 251, 256, 331, 440, 441, 442, 443, 444, 468, 469, 481, 483, 491, 493, 539, 575, 576, 598, 599, 613, 675, 684, 688, 690, 691, 692, 694, 730, 755, 774, 776, 780, 782, 786, 792, 833, 835, 842, 853, 859, 869, 870, 872, 884, 887, 888, 893, 895, 896, 900, 901, 905, 914, 915, 923, 934, 937, 955, 958, 959, 960, 967, 969, 972, 979, 980, 981, 982, 997, 1000, 1001, 1003, 1008, 1036, 1039, 1040, 1085, 1087, 1101, 1133, 1145, 1154, 1155, 1158, 1159, 1162, 1166, 1203, 1212, 1213, 1224, 1246, 1249, 1253, 1257, 1260, 1261, 1262, 1265, 1270, 1271, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1303, 1304, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1316, 1317, 1321, 1330, 1337, 1339, 1344, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1361, 1378, 1379, 1380, 1381, 1399, 1400, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1430, 1433, 1434, 1435, 1438, 1441, 1446, 1449, 1450, 1451, 1457, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1491, 1492, 1493, 1494, 1495, 1502, 1518, 1520, 1526, 1534, 1538, 1539, 1557, 1567, 1568, 1569, 1575, 1584, 1587, 1588, 1592, 1603, 1628, 1630, 1631, 1633, 1637, 1643, 1649, 1662, 1664, 1665, 1668, 1669, 1674, 1688, 1691, 1693, 1696, 1700, 1702, 1705, 1715, 1716, 1723, 1724, 1728, 1730, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1762, 1766, 1768, 1772, 1782, 1784, 1785, 1786, 1787, 1804, 1806, 1816, 1828, 1849, 1863, 1864, 1865, 1870, 1876, 1878, 1879, 1880, 1881, 1884, 1885, 1897, 1903, 1909, 1920, 1929, 1930, 1934, 1952, 1954, 1955, 1959, 1961, 1962, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1988, 1989, 1990, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011, 2012, 2013, 2015, 2017, 2018, 2020, 2021, 2022, 2023, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2041, 2045], "effect": [0, 3, 5, 7, 14, 21, 22, 25, 31, 44, 46, 47, 49, 54, 58, 60, 63, 192, 205, 598, 730, 774, 780, 1032, 1080, 1166, 1249, 1292, 1293, 1294, 1295, 1351, 1391, 1406, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1431, 1487, 1493, 1539, 1603, 1631, 1662, 1668, 1674, 1675, 1701, 1752, 1760, 1860, 1865, 1885, 1907, 1923, 1934, 1950, 1952, 1959, 1964, 1976, 1977, 1978, 1981, 1983, 1986, 2006, 2009, 2017, 2018, 2020, 2030, 2035], "custom_bwd": [0, 1977], "bwd": 0, "small": [0, 3, 7, 9, 21, 22, 25, 31, 42, 46, 860, 914, 915, 967, 1011, 1054, 1312, 1313, 1325, 1327, 1391, 1421, 1496, 1501, 1515, 1535, 1539, 1574, 1629, 1636, 1674, 1757, 1763, 1772, 1885, 1952, 1954, 1955, 1963, 1981, 1983, 1985, 1990, 1993, 1995, 2000, 2003, 2006, 2007, 2015, 2016, 2022, 2030, 2033, 2034, 2035, 2036, 2039, 2043, 2045, 2047], "magnitud": [0, 982, 1690, 1726, 1835, 1976, 1977, 1981], "represent": [0, 3, 14, 21, 25, 27, 40, 46, 47, 58, 77, 476, 753, 796, 821, 1001, 1113, 1114, 1116, 1140, 1194, 1249, 1289, 1292, 1294, 1297, 1377, 1487, 1493, 1772, 1951, 1952, 1955, 1963, 1971, 1983, 1993, 1998, 2000, 2003, 2006, 2015, 2022, 2033, 2035, 2045, 2048], "These": [0, 1, 2, 3, 8, 14, 15, 21, 25, 26, 31, 50, 52, 55, 58, 59, 481, 789, 875, 987, 1097, 1162, 1246, 1249, 1292, 1357, 1391, 1487, 1665, 1689, 1951, 1952, 1953, 1954, 1955, 1963, 1966, 1969, 1970, 1972, 1977, 1978, 1981, 1982, 1983, 1990, 1993, 1995, 2000, 2003, 2004, 2009, 2011, 2012, 2018, 2023, 2027, 2030, 2032, 2033, 2035, 2038, 2041, 2045, 2046], "flush": [0, 1, 27, 46, 1054, 1260, 1816, 1829, 1993, 2020], "zero": [0, 1, 2, 22, 25, 26, 29, 31, 44, 47, 49, 54, 58, 60, 67, 146, 254, 256, 311, 481, 508, 510, 539, 540, 579, 580, 582, 583, 618, 674, 686, 693, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 759, 763, 764, 767, 768, 769, 770, 772, 775, 776, 790, 794, 814, 815, 816, 817, 820, 825, 872, 881, 882, 883, 888, 895, 897, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 937, 938, 958, 959, 960, 965, 982, 986, 1043, 1054, 1058, 1059, 1088, 1092, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1145, 1151, 1154, 1162, 1171, 1209, 1210, 1213, 1234, 1246, 1249, 1261, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1322, 1330, 1331, 1332, 1333, 1334, 1339, 1340, 1373, 1377, 1381, 1395, 1396, 1397, 1398, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1438, 1439, 1441, 1454, 1455, 1456, 1457, 1458, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1493, 1496, 1499, 1500, 1501, 1502, 1504, 1524, 1538, 1539, 1542, 1543, 1544, 1559, 1560, 1561, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1592, 1613, 1614, 1615, 1629, 1630, 1631, 1643, 1699, 1700, 1701, 1702, 1717, 1724, 1728, 1732, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1772, 1784, 1786, 1787, 1788, 1797, 1804, 1813, 1823, 1849, 1853, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1885, 1900, 1901, 1903, 1909, 1949, 1952, 1953, 1955, 1957, 1966, 1968, 1969, 1970, 1971, 1976, 1978, 1981, 1983, 1990, 1993, 1996, 2000, 2001, 2003, 2005, 2006, 2009, 2011, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2034, 2037], "underflow": [0, 1452, 1977], "updat": [0, 9, 11, 21, 22, 29, 33, 42, 46, 49, 52, 53, 58, 82, 483, 508, 510, 755, 794, 795, 819, 891, 892, 921, 934, 1154, 1163, 1249, 1286, 1401, 1402, 1403, 1423, 1429, 1430, 1438, 1449, 1450, 1451, 1487, 1488, 1497, 1526, 1583, 1584, 1681, 1682, 1689, 1694, 1724, 1738, 1744, 1749, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1950, 1952, 1964, 1977, 1978, 1981, 1982, 1983, 1990, 1992, 1995, 1996, 1998, 2000, 2001, 2002, 2004, 2006, 2011, 2012, 2013, 2020, 2030, 2044], "lost": [0, 33, 43, 45, 1423, 1483, 1484, 1485, 2035], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 43, 44, 46, 47, 49, 54, 58, 75, 78, 79, 82, 331, 494, 552, 729, 890, 909, 923, 964, 967, 1044, 1064, 1085, 1087, 1097, 1125, 1127, 1131, 1142, 1249, 1250, 1252, 1253, 1260, 1261, 1295, 1317, 1322, 1350, 1391, 1400, 1426, 1452, 1483, 1484, 1485, 1487, 1540, 1541, 1565, 1674, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1726, 1766, 1774, 1785, 1824, 1828, 1831, 1870, 1886, 1950, 1952, 1954, 1955, 1959, 1968, 1969, 1970, 1972, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1995, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2018, 2019, 2020, 2021, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2043, 2044, 2045, 2047], "prevent": [0, 7, 8, 21, 22, 25, 26, 27, 33, 49, 58, 481, 494, 730, 895, 898, 900, 1000, 1078, 1079, 1098, 1099, 1100, 1246, 1349, 1361, 1378, 1381, 1424, 1493, 1518, 1611, 1649, 1650, 1665, 1674, 1739, 1782, 1861, 1864, 1884, 1911, 1913, 1922, 1968, 1977, 1978, 1981, 1982, 1985, 1986, 1990, 1994, 2003, 2005, 2013, 2015, 2016, 2030, 2034, 2035, 2038], "multipli": [0, 25, 309, 317, 418, 508, 680, 681, 682, 683, 684, 685, 686, 755, 774, 780, 781, 782, 935, 947, 1067, 1080, 1097, 1203, 1214, 1273, 1285, 1286, 1290, 1303, 1305, 1307, 1313, 1315, 1344, 1354, 1368, 1372, 1375, 1399, 1414, 1415, 1416, 1419, 1438, 1457, 1539, 1540, 1541, 1603, 1662, 1663, 1664, 1694, 1757, 1763, 1765, 1772, 1828, 1855, 1858, 1862, 1863, 1877, 1881, 1882, 1885, 1907, 1953, 1969, 1981, 1987, 1990, 1993, 2001, 2015, 2016, 2035], "factor": [0, 3, 22, 31, 58, 684, 685, 686, 794, 814, 935, 958, 1292, 1293, 1294, 1297, 1299, 1339, 1340, 1341, 1424, 1447, 1475, 1499, 1500, 1601, 1634, 1635, 1643, 1752, 1753, 1754, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1768, 1769, 1770, 1784, 1841, 1863, 1885, 1976, 1977, 2006, 2015, 2035], "flow": [0, 47, 60, 66, 69, 964, 979, 1262, 1265, 1557, 1592, 1674, 1951, 1952, 1976, 1978, 1981, 1983, 1995, 1997, 2000, 2013, 2030, 2031, 2033, 2035, 2038, 2043], "through": [0, 5, 7, 9, 15, 21, 25, 27, 31, 35, 46, 47, 49, 54, 57, 58, 60, 63, 65, 67, 75, 491, 787, 835, 849, 856, 857, 895, 898, 900, 901, 914, 915, 1005, 1043, 1124, 1158, 1166, 1247, 1250, 1252, 1265, 1266, 1268, 1285, 1286, 1307, 1313, 1330, 1494, 1531, 1532, 1533, 1534, 1594, 1665, 1674, 1681, 1682, 1694, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1784, 1934, 1950, 1951, 1954, 1955, 1959, 1961, 1966, 1968, 1969, 1970, 1978, 1981, 1983, 1985, 1987, 1989, 1990, 1996, 1997, 1998, 2000, 2003, 2004, 2006, 2009, 2011, 2012, 2013, 2015, 2019, 2023, 2025, 2026, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2048], "word": [0, 1, 8, 25, 42, 43, 47, 52, 57, 58, 951, 1170, 1391, 1414, 1415, 1416, 1429, 1430, 1530, 1583, 1584, 1603, 1662, 1674, 1688, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1954, 1978, 1985, 1986, 2003, 2012], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 58, 60, 68, 69, 80, 149, 150, 217, 218, 309, 311, 317, 331, 394, 398, 443, 453, 466, 481, 482, 483, 498, 508, 510, 512, 515, 539, 612, 675, 684, 688, 690, 691, 692, 694, 810, 812, 836, 875, 884, 888, 900, 901, 903, 905, 910, 919, 920, 923, 936, 937, 945, 954, 955, 967, 970, 979, 987, 1003, 1012, 1013, 1043, 1054, 1088, 1096, 1103, 1117, 1127, 1132, 1134, 1148, 1154, 1155, 1166, 1171, 1178, 1191, 1192, 1207, 1208, 1211, 1212, 1224, 1246, 1248, 1249, 1252, 1253, 1255, 1257, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1271, 1272, 1281, 1285, 1286, 1302, 1309, 1310, 1313, 1315, 1321, 1330, 1332, 1337, 1344, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1373, 1378, 1379, 1381, 1383, 1391, 1395, 1399, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1429, 1430, 1434, 1435, 1440, 1445, 1449, 1450, 1451, 1479, 1487, 1490, 1491, 1492, 1493, 1494, 1534, 1536, 1574, 1583, 1584, 1587, 1588, 1592, 1609, 1628, 1630, 1633, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1685, 1688, 1691, 1694, 1718, 1722, 1727, 1729, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1782, 1808, 1809, 1823, 1828, 1835, 1858, 1862, 1866, 1867, 1868, 1869, 1871, 1872, 1879, 1880, 1881, 1884, 1885, 1897, 1901, 1907, 1909, 1922, 1925, 1927, 1929, 1930, 1932, 1934, 1936, 1950, 1952, 1953, 1954, 1955, 1957, 1959, 1961, 1962, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2010, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2044, 2045, 2046, 2047], "larger": [0, 9, 25, 31, 58, 250, 494, 915, 938, 1054, 1155, 1304, 1307, 1391, 1423, 1429, 1430, 1479, 1536, 1539, 1583, 1584, 1978, 1981, 1985, 1987, 1989, 1993, 1995, 2015, 2020, 2038, 2039, 2042, 2043, 2044], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 21, 25, 27, 30, 31, 32, 42, 46, 47, 49, 52, 53, 57, 58, 80, 317, 331, 332, 481, 681, 684, 685, 692, 795, 810, 811, 812, 819, 836, 849, 854, 885, 895, 898, 900, 910, 911, 915, 935, 967, 1043, 1101, 1148, 1154, 1164, 1168, 1171, 1176, 1179, 1181, 1238, 1239, 1246, 1249, 1257, 1262, 1271, 1285, 1286, 1292, 1313, 1321, 1343, 1347, 1350, 1352, 1355, 1373, 1396, 1397, 1398, 1417, 1418, 1419, 1433, 1472, 1480, 1481, 1482, 1487, 1493, 1503, 1515, 1538, 1592, 1594, 1665, 1674, 1675, 1679, 1688, 1692, 1715, 1718, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1762, 1765, 1824, 1881, 1885, 1922, 1923, 1928, 1950, 1952, 1954, 1955, 1957, 1959, 1961, 1962, 1964, 1966, 1968, 1969, 1970, 1971, 1972, 1976, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1988, 1990, 1992, 1993, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2011, 2015, 2020, 2021, 2022, 2023, 2024, 2030, 2033, 2034, 2035, 2036, 2037, 2041, 2045, 2046], "don": [0, 1, 4, 7, 9, 11, 25, 27, 41, 50, 52, 54, 58, 60, 70, 71, 146, 780, 790, 888, 890, 909, 1071, 1154, 1170, 1171, 1176, 1178, 1182, 1265, 1343, 1449, 1450, 1451, 1539, 1662, 1665, 1674, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1827, 1950, 1952, 1956, 1968, 1969, 1970, 1978, 1981, 1983, 1985, 1990, 1992, 1996, 2000, 2002, 2003, 2004, 2006, 2011, 2012, 2015, 2030, 2032, 2033, 2034, 2035, 2036, 2038, 2046], "t": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 21, 22, 25, 27, 31, 32, 35, 39, 41, 42, 46, 47, 50, 52, 54, 55, 57, 58, 60, 70, 71, 77, 80, 146, 309, 311, 317, 453, 481, 518, 532, 566, 682, 683, 692, 755, 776, 780, 790, 818, 821, 872, 873, 874, 875, 884, 886, 888, 890, 895, 896, 898, 900, 901, 904, 909, 921, 958, 959, 960, 965, 979, 987, 998, 1001, 1022, 1040, 1041, 1071, 1095, 1113, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1166, 1170, 1171, 1172, 1176, 1178, 1181, 1182, 1189, 1191, 1203, 1213, 1246, 1247, 1249, 1250, 1252, 1256, 1257, 1261, 1263, 1265, 1268, 1270, 1279, 1280, 1286, 1288, 1289, 1292, 1299, 1307, 1308, 1313, 1321, 1322, 1330, 1343, 1356, 1357, 1371, 1380, 1400, 1404, 1406, 1414, 1415, 1416, 1423, 1429, 1430, 1438, 1447, 1449, 1450, 1451, 1452, 1457, 1474, 1487, 1502, 1518, 1520, 1530, 1538, 1539, 1563, 1567, 1568, 1569, 1576, 1583, 1584, 1604, 1609, 1629, 1649, 1662, 1665, 1668, 1669, 1674, 1675, 1688, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1716, 1718, 1719, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1758, 1768, 1774, 1780, 1784, 1801, 1824, 1826, 1827, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1858, 1862, 1881, 1885, 1886, 1891, 1897, 1900, 1906, 1909, 1934, 1935, 1950, 1952, 1953, 1954, 1956, 1959, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1986, 1987, 1989, 1990, 1992, 1995, 1996, 2000, 2001, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2030, 2032, 2033, 2034, 2036, 2038, 2040, 2043, 2045, 2046], "grad": [0, 1, 5, 25, 31, 50, 53, 54, 58, 146, 331, 453, 482, 483, 490, 491, 498, 499, 576, 675, 875, 884, 888, 890, 891, 892, 895, 899, 900, 901, 903, 905, 910, 911, 914, 915, 919, 920, 1043, 1101, 1154, 1155, 1157, 1161, 1165, 1166, 1232, 1249, 1322, 1487, 1674, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1862, 1922, 1934, 1951, 1952, 1953, 1969, 1970, 1971, 1977, 1982, 1983, 1984, 1987, 1990, 1992, 2001, 2011, 2012, 2015, 2021, 2041], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 24, 25, 29, 31, 33, 35, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 57, 58, 60, 146, 250, 254, 331, 430, 453, 578, 612, 675, 690, 691, 743, 752, 755, 785, 789, 856, 875, 911, 912, 934, 947, 1034, 1038, 1088, 1097, 1101, 1151, 1154, 1166, 1171, 1224, 1248, 1250, 1253, 1260, 1265, 1275, 1280, 1292, 1293, 1297, 1298, 1305, 1311, 1313, 1319, 1322, 1339, 1343, 1344, 1350, 1354, 1358, 1375, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1426, 1429, 1430, 1433, 1438, 1439, 1449, 1450, 1451, 1457, 1458, 1460, 1461, 1462, 1469, 1470, 1471, 1481, 1482, 1488, 1494, 1497, 1502, 1504, 1526, 1538, 1575, 1628, 1674, 1675, 1681, 1682, 1691, 1694, 1698, 1724, 1727, 1729, 1734, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1769, 1773, 1778, 1820, 1823, 1824, 1828, 1853, 1858, 1885, 1906, 1909, 1922, 1923, 1934, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1959, 1964, 1968, 1969, 1970, 1971, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1992, 1993, 1994, 1997, 1998, 2000, 2003, 2004, 2006, 2011, 2013, 2015, 2017, 2018, 2022, 2030, 2033, 2038, 2045, 2047], "interfer": [0, 1966, 1981, 2000, 2035], "learn": [0, 7, 8, 15, 31, 41, 46, 49, 58, 82, 1404, 1420, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1446, 1459, 1472, 1474, 1495, 1516, 1530, 1532, 1534, 1535, 1536, 1646, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1951, 1959, 1972, 1976, 1981, 1988, 1990, 1991, 1997, 2003, 2006, 2011, 2013, 2026, 2029, 2031, 2033, 2038], "rate": [0, 2, 8, 22, 31, 49, 1425, 1426, 1427, 1431, 1533, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1777, 1951, 1989, 2020, 2035, 2042], "fp16": [0, 2, 724, 1674, 1681, 1682, 2006, 2007], "everi": [0, 1, 2, 8, 9, 21, 22, 25, 27, 29, 31, 33, 47, 49, 54, 58, 476, 482, 605, 675, 776, 814, 895, 896, 900, 919, 920, 923, 967, 1080, 1097, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1155, 1203, 1212, 1249, 1281, 1295, 1305, 1308, 1339, 1395, 1424, 1425, 1426, 1427, 1431, 1480, 1487, 1520, 1522, 1526, 1578, 1579, 1580, 1585, 1602, 1617, 1618, 1619, 1633, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1689, 1723, 1726, 1727, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1824, 1885, 1919, 1955, 1961, 1966, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1991, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2017, 2018, 2020, 2022, 2033, 2034, 2038, 2042, 2043, 2044, 2045], "most": [0, 1, 3, 4, 7, 8, 15, 21, 25, 27, 29, 31, 32, 33, 34, 41, 42, 44, 45, 49, 54, 55, 57, 58, 60, 481, 494, 788, 895, 896, 897, 898, 900, 906, 910, 914, 927, 967, 1066, 1080, 1097, 1155, 1234, 1247, 1250, 1355, 1391, 1534, 1592, 1643, 1674, 1681, 1682, 1694, 1749, 1828, 1860, 1907, 1950, 1952, 1954, 1955, 1957, 1962, 1963, 1968, 1970, 1971, 1978, 1981, 1983, 1986, 1992, 1993, 1994, 1998, 2002, 2005, 2006, 2012, 2013, 2015, 2018, 2020, 2022, 2026, 2029, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2044, 2045], "bf16": [0, 2], "pretrain": [0, 27, 857, 1429, 1430, 1950, 1978, 2000], "cannot": [0, 3, 8, 9, 12, 21, 22, 25, 27, 31, 32, 35, 42, 46, 49, 50, 54, 55, 57, 58, 218, 250, 519, 540, 875, 979, 1118, 1120, 1128, 1129, 1130, 1136, 1149, 1154, 1246, 1254, 1373, 1406, 1429, 1539, 1576, 1643, 1674, 1735, 1886, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1963, 1966, 1970, 1971, 1978, 1982, 1983, 1995, 1996, 2000, 2006, 2011, 2013, 2015, 2017, 2018, 2030, 2032, 2035, 2036, 2046], "numer": [0, 21, 31, 47, 50, 55, 682, 788, 914, 915, 951, 1253, 1265, 1266, 1281, 1285, 1286, 1290, 1295, 1303, 1304, 1307, 1310, 1313, 1315, 1337, 1339, 1400, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1520, 1523, 1526, 1535, 1583, 1604, 1611, 1643, 1649, 1651, 1689, 1723, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1788, 1820, 1885, 1951, 1955, 1956, 1960, 1964, 1981, 1983, 1984, 2000, 2006, 2016, 2021, 2035, 2045, 2048], "max": [0, 21, 25, 33, 35, 41, 42, 44, 46, 49, 58, 60, 70, 71, 112, 181, 182, 183, 184, 296, 690, 691, 692, 753, 765, 766, 775, 777, 778, 797, 814, 815, 816, 817, 820, 869, 923, 938, 955, 962, 963, 967, 987, 1076, 1111, 1112, 1178, 1210, 1261, 1281, 1295, 1302, 1304, 1306, 1307, 1319, 1392, 1393, 1394, 1405, 1406, 1420, 1421, 1430, 1434, 1435, 1440, 1445, 1446, 1454, 1455, 1456, 1473, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1490, 1491, 1492, 1495, 1506, 1507, 1514, 1535, 1536, 1538, 1554, 1555, 1556, 1566, 1574, 1584, 1587, 1588, 1603, 1607, 1617, 1618, 1619, 1629, 1633, 1637, 1639, 1644, 1662, 1679, 1718, 1741, 1742, 1743, 1753, 1758, 1759, 1768, 1789, 1790, 1862, 1879, 1880, 1892, 1893, 1922, 1929, 1930, 1952, 1953, 1962, 1966, 1971, 1979, 1981, 1985, 2001, 2006, 2009, 2027, 2034, 2039, 2040, 2048], "65504": 0, "overflow": [0, 1078, 1079, 1349, 1378, 1381, 1611, 1649, 1650, 1782, 1813, 1861, 1864, 1884, 1911, 1913, 1981, 1993, 2016], "instead": [0, 1, 3, 5, 8, 9, 14, 21, 22, 25, 27, 30, 31, 33, 39, 42, 43, 46, 47, 49, 52, 53, 54, 56, 58, 60, 69, 402, 453, 481, 494, 508, 743, 752, 763, 764, 788, 812, 821, 875, 885, 900, 901, 903, 904, 905, 906, 909, 914, 951, 957, 1132, 1134, 1159, 1160, 1161, 1162, 1165, 1166, 1181, 1184, 1195, 1236, 1247, 1249, 1250, 1254, 1279, 1280, 1286, 1288, 1304, 1307, 1313, 1319, 1321, 1350, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1423, 1425, 1426, 1427, 1431, 1438, 1446, 1452, 1453, 1454, 1455, 1456, 1457, 1478, 1479, 1480, 1481, 1482, 1487, 1490, 1491, 1492, 1494, 1501, 1502, 1514, 1518, 1519, 1520, 1526, 1535, 1559, 1560, 1561, 1564, 1565, 1575, 1585, 1592, 1604, 1617, 1618, 1619, 1628, 1636, 1649, 1674, 1724, 1726, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1759, 1760, 1766, 1789, 1790, 1800, 1820, 1824, 1866, 1881, 1885, 1922, 1934, 1952, 1954, 1955, 1962, 1963, 1970, 1976, 1977, 1978, 1982, 1983, 1984, 1985, 1987, 1988, 1992, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2005, 2006, 2009, 2012, 2015, 2021, 2022, 2023, 2025, 2030, 2031, 2033, 2034, 2035, 2038, 2041, 2044, 2045, 2046], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 30, 31, 33, 34, 35, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 60, 80, 146, 150, 192, 348, 481, 491, 494, 675, 755, 779, 786, 789, 815, 816, 818, 821, 853, 860, 888, 900, 901, 903, 905, 909, 930, 934, 936, 938, 943, 982, 997, 1022, 1044, 1045, 1064, 1065, 1066, 1097, 1118, 1120, 1128, 1129, 1130, 1145, 1156, 1160, 1165, 1171, 1178, 1181, 1209, 1234, 1247, 1250, 1259, 1262, 1263, 1265, 1279, 1281, 1285, 1286, 1290, 1295, 1296, 1297, 1299, 1305, 1308, 1313, 1315, 1319, 1321, 1322, 1327, 1330, 1339, 1350, 1373, 1391, 1396, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1442, 1443, 1444, 1445, 1446, 1447, 1453, 1454, 1455, 1456, 1473, 1478, 1480, 1481, 1482, 1493, 1494, 1495, 1505, 1518, 1524, 1529, 1534, 1536, 1538, 1557, 1575, 1584, 1592, 1596, 1597, 1628, 1630, 1637, 1674, 1676, 1677, 1681, 1682, 1688, 1691, 1694, 1695, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1766, 1804, 1807, 1820, 1822, 1835, 1838, 1870, 1885, 1886, 1917, 1918, 1922, 1937, 1950, 1955, 1960, 1963, 1968, 1969, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1993, 1995, 2000, 2002, 2003, 2004, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2022, 2026, 2033, 2034, 2035, 2036, 2038, 2041, 2043, 2044, 2045, 2046, 2048], "decreas": [0, 31, 1054, 1295, 1425, 1426, 1427, 1431, 1500, 1716, 1717, 1753, 1760, 1768, 1961, 1964, 1992, 1994, 2015, 2018], "attempt": [0, 1, 8, 14, 25, 27, 42, 43, 49, 54, 81, 961, 967, 970, 983, 1253, 1260, 1339, 1643, 1676, 1677, 1741, 1742, 1754, 1922, 1925, 1952, 1955, 1968, 1969, 1970, 1977, 1981, 1983, 1996, 1997, 2002, 2003, 2011, 2033, 2034, 2035, 2045], "bring": [0, 50, 58, 1118, 1557, 1592, 2004, 2039, 2042], "number": [0, 1, 2, 3, 4, 5, 7, 14, 21, 22, 25, 27, 29, 31, 33, 40, 41, 42, 45, 46, 50, 52, 55, 58, 60, 65, 81, 84, 150, 169, 214, 228, 250, 309, 348, 373, 394, 398, 430, 441, 466, 468, 469, 476, 488, 492, 494, 508, 510, 512, 538, 540, 541, 553, 578, 579, 580, 582, 583, 584, 603, 612, 680, 681, 682, 683, 684, 685, 686, 693, 753, 755, 763, 764, 767, 768, 769, 776, 814, 860, 872, 885, 889, 900, 914, 930, 932, 935, 937, 938, 943, 947, 949, 953, 961, 962, 966, 982, 986, 987, 992, 1003, 1005, 1011, 1020, 1029, 1030, 1041, 1043, 1044, 1045, 1054, 1064, 1065, 1068, 1069, 1089, 1092, 1094, 1097, 1098, 1102, 1110, 1140, 1142, 1145, 1149, 1151, 1153, 1168, 1191, 1193, 1200, 1201, 1202, 1206, 1210, 1211, 1212, 1224, 1225, 1246, 1247, 1249, 1263, 1270, 1273, 1274, 1281, 1295, 1304, 1313, 1317, 1322, 1327, 1338, 1342, 1350, 1362, 1363, 1367, 1369, 1372, 1373, 1377, 1381, 1384, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1457, 1458, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1504, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1559, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1583, 1584, 1587, 1588, 1593, 1603, 1604, 1606, 1609, 1617, 1618, 1619, 1628, 1630, 1636, 1637, 1643, 1665, 1674, 1689, 1694, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1715, 1716, 1717, 1719, 1723, 1728, 1729, 1730, 1732, 1733, 1736, 1744, 1757, 1758, 1759, 1760, 1763, 1764, 1766, 1767, 1768, 1774, 1777, 1781, 1791, 1793, 1794, 1795, 1797, 1798, 1799, 1804, 1806, 1807, 1810, 1811, 1812, 1813, 1821, 1825, 1828, 1829, 1830, 1831, 1832, 1833, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1858, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1901, 1902, 1903, 1911, 1913, 1918, 1919, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1941, 1948, 1951, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1966, 1968, 1971, 1976, 1979, 1981, 1983, 1987, 1990, 1992, 1993, 1995, 2000, 2002, 2003, 2004, 2005, 2007, 2010, 2011, 2012, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2030, 2033, 2034, 2035, 2042, 2045, 2047, 2048], "expect": [0, 1, 3, 5, 7, 9, 12, 21, 22, 25, 27, 29, 33, 40, 42, 44, 46, 47, 49, 54, 55, 58, 76, 481, 675, 692, 755, 849, 903, 904, 905, 906, 907, 908, 1043, 1118, 1120, 1137, 1138, 1139, 1159, 1160, 1171, 1178, 1224, 1246, 1249, 1265, 1266, 1294, 1315, 1316, 1350, 1402, 1403, 1422, 1438, 1439, 1440, 1441, 1450, 1451, 1452, 1457, 1458, 1459, 1469, 1470, 1471, 1487, 1493, 1494, 1502, 1504, 1520, 1526, 1530, 1532, 1534, 1539, 1583, 1589, 1603, 1628, 1636, 1637, 1649, 1662, 1663, 1664, 1665, 1674, 1716, 1769, 1825, 1895, 1932, 1950, 1951, 1957, 1963, 1978, 1982, 1985, 1986, 1987, 1990, 2000, 2002, 2003, 2006, 2007, 2008, 2011, 2015, 2020, 2022, 2031, 2034, 2035, 2039, 2041], "alwai": [0, 5, 7, 14, 17, 21, 22, 25, 31, 40, 44, 46, 47, 49, 53, 58, 336, 443, 453, 789, 875, 895, 897, 900, 903, 909, 936, 945, 955, 961, 967, 990, 992, 1043, 1054, 1084, 1092, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1128, 1129, 1130, 1131, 1133, 1136, 1140, 1168, 1181, 1207, 1208, 1249, 1260, 1265, 1280, 1285, 1286, 1287, 1288, 1290, 1291, 1303, 1306, 1307, 1308, 1309, 1313, 1315, 1379, 1399, 1401, 1402, 1403, 1423, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1523, 1526, 1665, 1674, 1715, 1808, 1809, 1834, 1881, 1885, 1918, 1922, 1955, 1956, 1963, 1968, 1971, 1978, 1979, 1980, 1981, 1982, 1983, 1986, 1987, 1989, 1990, 2003, 2004, 2010, 2011, 2013, 2015, 2018, 2021, 2022, 2030, 2033, 2034], "abov": [0, 1, 3, 12, 15, 25, 27, 30, 31, 35, 42, 44, 46, 47, 49, 50, 55, 58, 60, 62, 612, 675, 787, 788, 875, 936, 945, 1054, 1080, 1084, 1085, 1086, 1087, 1088, 1097, 1194, 1207, 1208, 1249, 1250, 1270, 1281, 1285, 1286, 1304, 1306, 1307, 1310, 1313, 1316, 1319, 1322, 1399, 1400, 1433, 1487, 1515, 1523, 1538, 1643, 1665, 1730, 1760, 1784, 1795, 1796, 1828, 1832, 1845, 1865, 1907, 1910, 1911, 1912, 1913, 1950, 1952, 1954, 1955, 1959, 1962, 1978, 1979, 1980, 1981, 1983, 1984, 1987, 1990, 1992, 1994, 1995, 1998, 2000, 2003, 2006, 2011, 2012, 2013, 2015, 2016, 2022, 2026, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2045], "our": [0, 3, 7, 8, 38, 41, 42, 43, 45, 53, 54, 55, 58, 59, 895, 896, 900, 1117, 1155, 1167, 1171, 1399, 1681, 1682, 1741, 1742, 1828, 1978, 1983, 1986, 1987, 1992, 1997, 2000, 2002, 2006, 2012, 2015, 2026, 2030, 2033, 2034, 2035, 2037, 2038, 2039, 2044, 2045], "NOT": [0, 21, 25, 33, 42, 43, 44, 46, 58, 941, 998, 1032, 1249, 1332, 1426, 1674, 1675, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1727, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1978, 1998, 2013, 2015, 2017], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 21, 22, 25, 27, 28, 31, 33, 34, 39, 42, 43, 44, 45, 46, 53, 54, 58, 59, 60, 71, 135, 218, 481, 491, 774, 780, 856, 857, 888, 891, 958, 1000, 1001, 1003, 1085, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1138, 1139, 1168, 1170, 1171, 1249, 1253, 1259, 1260, 1279, 1280, 1292, 1293, 1294, 1322, 1361, 1399, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1447, 1487, 1497, 1534, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1592, 1594, 1603, 1643, 1662, 1674, 1688, 1705, 1722, 1762, 1825, 1857, 1867, 1868, 1869, 1871, 1872, 1904, 1922, 1925, 1927, 1950, 1952, 1954, 1955, 1963, 1966, 1968, 1969, 1971, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1987, 1990, 1992, 1994, 1996, 2000, 2002, 2003, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2017, 2018, 2020, 2024, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2039, 2041, 2044, 2045, 2046], "guarante": [0, 1, 5, 9, 21, 25, 27, 29, 31, 42, 44, 46, 47, 54, 57, 58, 60, 481, 871, 967, 1171, 1178, 1249, 1259, 1423, 1487, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1857, 1859, 1922, 1978, 1980, 1981, 1993, 1994, 2003, 2005, 2007, 2011, 2013, 2033], "encount": [0, 5, 25, 46, 54, 57, 58, 675, 1674, 1681, 1682, 1952, 1955, 1957, 1961, 1980, 1993, 2003, 2006, 2031, 2035, 2038, 2041, 2043, 2045], "nan": [0, 1, 24, 31, 422, 423, 494, 679, 681, 684, 685, 686, 689, 692, 693, 876, 880, 935, 951, 1098, 1099, 1100, 1143, 1144, 1145, 1210, 1238, 1239, 1241, 1242, 1289, 1296, 1309, 1312, 1325, 1330, 1348, 1349, 1353, 1377, 1378, 1379, 1380, 1381, 1592, 1679, 1778, 1815, 1820, 1874, 1909, 1953, 1962, 1977, 1978, 1984, 1993, 2016, 2022], "verifi": [0, 25, 46, 58, 83, 914, 1080, 1736, 1737, 1755, 1907, 1950, 1952, 1965, 1983, 1987, 2000, 2004, 2037], "compat": [0, 1, 14, 21, 27, 30, 31, 33, 46, 49, 53, 54, 58, 60, 492, 493, 598, 612, 675, 810, 811, 812, 885, 900, 901, 948, 980, 981, 1249, 1254, 1267, 1280, 1291, 1304, 1307, 1487, 1493, 1530, 1531, 1532, 1533, 1534, 1603, 1681, 1682, 1726, 1735, 1807, 1950, 1951, 1954, 1955, 1961, 1968, 1969, 1977, 1983, 1995, 1998, 2003, 2005, 2006, 2009, 2011, 2015, 2017, 2021, 2023, 2027], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 150, 152, 169, 180, 187, 204, 220, 221, 222, 223, 224, 229, 250, 254, 256, 259, 282, 285, 294, 296, 307, 309, 311, 313, 317, 348, 397, 398, 422, 423, 440, 443, 444, 449, 476, 478, 482, 483, 491, 502, 503, 508, 510, 512, 515, 533, 538, 539, 542, 551, 553, 555, 573, 575, 576, 578, 579, 580, 582, 583, 584, 590, 591, 592, 593, 600, 602, 603, 612, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 707, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 746, 747, 748, 750, 751, 752, 753, 755, 763, 764, 765, 767, 768, 769, 770, 773, 775, 777, 778, 780, 789, 791, 794, 797, 812, 815, 816, 817, 820, 849, 851, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 889, 895, 897, 900, 901, 903, 904, 905, 907, 914, 915, 917, 919, 920, 927, 930, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 951, 954, 955, 956, 957, 958, 959, 961, 962, 965, 977, 978, 979, 982, 983, 984, 985, 986, 987, 997, 1003, 1012, 1014, 1040, 1041, 1067, 1071, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1095, 1097, 1099, 1100, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1171, 1174, 1178, 1191, 1192, 1203, 1207, 1209, 1210, 1211, 1212, 1213, 1216, 1220, 1224, 1226, 1234, 1245, 1246, 1247, 1249, 1253, 1255, 1256, 1257, 1261, 1269, 1270, 1271, 1272, 1273, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1311, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1339, 1343, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1387, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1518, 1520, 1521, 1522, 1524, 1526, 1529, 1530, 1532, 1534, 1535, 1536, 1538, 1539, 1542, 1543, 1544, 1547, 1548, 1549, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1592, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1607, 1608, 1610, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1639, 1643, 1644, 1647, 1649, 1652, 1658, 1659, 1660, 1661, 1662, 1665, 1674, 1678, 1679, 1681, 1682, 1688, 1689, 1690, 1694, 1699, 1700, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1716, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1730, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1775, 1777, 1778, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1822, 1823, 1824, 1827, 1829, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1857, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1924, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1959, 1962, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2011, 2012, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2039, 2040, 2043, 2044, 2046, 2048], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 19, 21, 22, 25, 31, 40, 46, 53, 54, 55, 57, 58, 60, 61, 65, 66, 68, 69, 70, 71, 150, 187, 204, 229, 256, 285, 294, 309, 311, 313, 317, 397, 398, 440, 466, 494, 508, 510, 512, 518, 532, 539, 553, 555, 579, 580, 581, 582, 583, 602, 680, 681, 685, 692, 729, 734, 735, 736, 737, 738, 740, 741, 755, 757, 768, 769, 856, 857, 860, 875, 881, 882, 883, 903, 906, 908, 935, 938, 945, 946, 947, 951, 953, 957, 959, 960, 961, 962, 965, 972, 982, 986, 1076, 1078, 1080, 1087, 1089, 1091, 1092, 1095, 1096, 1097, 1100, 1113, 1115, 1117, 1118, 1124, 1125, 1128, 1133, 1136, 1137, 1140, 1143, 1145, 1146, 1147, 1149, 1156, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1192, 1203, 1209, 1211, 1213, 1215, 1216, 1226, 1234, 1238, 1256, 1260, 1261, 1270, 1271, 1272, 1275, 1278, 1279, 1296, 1299, 1302, 1305, 1306, 1307, 1308, 1313, 1314, 1317, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1332, 1336, 1343, 1344, 1350, 1351, 1380, 1382, 1383, 1385, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1411, 1412, 1413, 1415, 1416, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1447, 1449, 1450, 1451, 1452, 1453, 1457, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1475, 1478, 1483, 1484, 1487, 1494, 1497, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1515, 1518, 1524, 1526, 1530, 1532, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1558, 1559, 1567, 1568, 1570, 1571, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1590, 1592, 1595, 1603, 1628, 1630, 1636, 1652, 1662, 1663, 1664, 1674, 1694, 1704, 1707, 1709, 1710, 1712, 1717, 1718, 1720, 1722, 1728, 1729, 1730, 1732, 1733, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1763, 1767, 1773, 1775, 1777, 1778, 1780, 1781, 1784, 1785, 1788, 1789, 1790, 1791, 1795, 1800, 1801, 1804, 1805, 1811, 1812, 1813, 1820, 1832, 1839, 1841, 1842, 1843, 1844, 1847, 1848, 1857, 1863, 1865, 1866, 1867, 1868, 1870, 1873, 1881, 1884, 1885, 1886, 1887, 1888, 1896, 1898, 1900, 1901, 1902, 1904, 1905, 1907, 1916, 1917, 1920, 1922, 1928, 1934, 1935, 1936, 1948, 1952, 1953, 1954, 1955, 1956, 1962, 1963, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 1983, 1985, 1987, 1990, 1991, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2011, 2015, 2016, 2018, 2020, 2021, 2022, 2032, 2043, 2044, 2045], "growth_interv": 0, "2000": [0, 25, 29, 1115, 1117, 1124, 1133, 1146, 1327, 1539, 1760, 1788, 1837, 1838, 1900], "float64": [0, 11, 236, 441, 444, 575, 875, 976, 1140, 1149, 1150, 1197, 1231, 1249, 1279, 1285, 1286, 1288, 1290, 1306, 1487, 1643, 1741, 1742, 1754, 1778, 1786, 1825, 1826, 1829, 1859, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1932, 1937, 1990, 1993, 2015, 2017, 2018, 2021, 2022, 2048], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 21, 25, 27, 31, 39, 40, 43, 46, 50, 53, 58, 60, 64, 66, 229, 308, 310, 312, 314, 395, 397, 443, 491, 507, 509, 511, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 751, 755, 759, 767, 768, 769, 774, 776, 780, 792, 831, 833, 834, 852, 853, 860, 861, 862, 863, 864, 865, 866, 867, 872, 876, 877, 878, 879, 880, 890, 893, 894, 895, 898, 900, 910, 914, 923, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 947, 951, 954, 956, 957, 958, 959, 960, 962, 963, 965, 967, 976, 977, 978, 981, 982, 984, 985, 997, 1002, 1010, 1012, 1014, 1041, 1042, 1054, 1055, 1067, 1071, 1076, 1077, 1078, 1079, 1081, 1084, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1098, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1151, 1152, 1155, 1156, 1158, 1159, 1161, 1166, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1243, 1244, 1249, 1255, 1261, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1368, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1396, 1397, 1398, 1404, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1429, 1431, 1434, 1435, 1438, 1439, 1454, 1455, 1456, 1457, 1472, 1474, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1499, 1500, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1530, 1531, 1532, 1533, 1534, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1585, 1588, 1592, 1603, 1609, 1629, 1631, 1662, 1674, 1681, 1682, 1699, 1700, 1701, 1702, 1728, 1729, 1730, 1731, 1733, 1734, 1755, 1772, 1773, 1777, 1778, 1779, 1781, 1784, 1785, 1791, 1792, 1793, 1795, 1797, 1799, 1800, 1803, 1804, 1805, 1809, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1835, 1836, 1837, 1849, 1850, 1851, 1852, 1857, 1862, 1863, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1897, 1898, 1899, 1902, 1904, 1906, 1909, 1910, 1912, 1914, 1915, 1922, 1929, 1930, 1931, 1934, 1936, 1937, 1938, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1962, 1963, 1966, 1968, 1970, 1971, 1978, 1979, 1981, 1982, 1983, 1984, 1986, 1990, 1992, 1998, 2000, 2002, 2003, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2020, 2021, 2025, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2043, 2044, 2046, 2047], "place": [0, 3, 7, 11, 12, 21, 22, 25, 27, 32, 33, 46, 49, 52, 53, 56, 58, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 217, 218, 227, 232, 234, 240, 243, 245, 247, 249, 250, 253, 256, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 308, 310, 312, 314, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 395, 397, 415, 418, 421, 423, 434, 436, 438, 446, 451, 461, 464, 480, 481, 482, 483, 485, 487, 491, 494, 503, 506, 507, 509, 511, 517, 522, 524, 527, 529, 531, 544, 546, 548, 557, 559, 566, 570, 572, 588, 591, 593, 595, 597, 598, 607, 617, 753, 788, 792, 809, 833, 834, 852, 853, 895, 896, 898, 900, 919, 920, 921, 923, 949, 979, 1010, 1011, 1013, 1014, 1034, 1097, 1148, 1154, 1155, 1163, 1249, 1294, 1312, 1373, 1395, 1405, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1443, 1444, 1445, 1473, 1487, 1504, 1505, 1506, 1507, 1514, 1529, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1596, 1599, 1608, 1640, 1642, 1657, 1661, 1665, 1670, 1671, 1674, 1679, 1680, 1681, 1682, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1724, 1755, 1811, 1813, 1817, 1818, 1819, 1865, 1902, 1951, 1952, 1954, 1955, 1962, 1970, 1977, 1981, 1983, 1989, 1997, 1998, 2002, 2003, 2004, 2011, 2012, 2017, 2019, 2021, 2033, 2034, 2035, 2038, 2042, 2044], "variant": [0, 5, 22, 853, 1280, 1291, 1304, 1307, 1380, 1383, 1546, 1547, 1548, 1549, 1741, 1742, 1743, 1755, 1859, 1909, 1951, 1989, 2009, 2021, 2040, 2041, 2044], "explicitli": [0, 5, 8, 14, 25, 35, 49, 82, 921, 1034, 1085, 1087, 1097, 1212, 1290, 1303, 1307, 1315, 1357, 1603, 1662, 1766, 1881, 1952, 1954, 1955, 1956, 1961, 1963, 1981, 1983, 1986, 1987, 1989, 1995, 2000, 2003, 2004, 2010, 2011, 2015, 2035], "suppli": [0, 5, 7, 14, 15, 25, 1032, 1493, 1737, 1955, 1981, 2000, 2015, 2035, 2045], "won": [0, 8, 22, 27, 42, 52, 453, 1171, 1249, 1261, 1487, 1629, 1668, 1669, 1950, 1978, 1983, 2011, 2023, 2034, 2035, 2038, 2043, 2045], "go": [0, 1, 7, 15, 21, 25, 27, 39, 44, 53, 58, 494, 495, 555, 895, 897, 900, 919, 923, 1176, 1322, 1396, 1397, 1398, 1480, 1481, 1482, 1681, 1682, 1954, 1955, 1962, 1968, 1969, 1970, 1978, 1980, 1981, 1983, 1984, 1989, 1990, 1992, 1996, 2000, 2003, 2018, 2020, 2031, 2032, 2033, 2034, 2035, 2038], "addmm": [0, 46, 47, 60, 102, 1877, 1953, 1969, 1993, 2001, 2015, 2040, 2044], "b": [0, 1, 3, 11, 12, 21, 25, 27, 31, 40, 46, 58, 60, 63, 81, 83, 256, 331, 394, 612, 680, 681, 743, 752, 776, 819, 875, 895, 896, 898, 899, 900, 901, 917, 919, 920, 935, 946, 947, 949, 953, 955, 957, 960, 965, 979, 982, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1040, 1041, 1089, 1092, 1096, 1097, 1142, 1143, 1144, 1145, 1151, 1155, 1167, 1179, 1192, 1215, 1226, 1246, 1252, 1260, 1261, 1269, 1270, 1272, 1281, 1282, 1290, 1294, 1295, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1315, 1316, 1319, 1322, 1331, 1333, 1334, 1340, 1348, 1353, 1355, 1372, 1400, 1404, 1429, 1430, 1437, 1474, 1563, 1565, 1584, 1591, 1609, 1688, 1716, 1717, 1718, 1719, 1720, 1721, 1729, 1752, 1754, 1785, 1791, 1804, 1807, 1823, 1834, 1853, 1862, 1867, 1868, 1869, 1871, 1872, 1876, 1881, 1882, 1884, 1891, 1892, 1893, 1902, 1909, 1910, 1912, 1931, 1936, 1952, 1953, 1954, 1955, 1969, 1970, 1971, 1976, 1977, 1979, 1981, 1983, 1985, 1987, 1988, 1993, 1995, 1998, 2005, 2006, 2012, 2013, 2015, 2016, 2019, 2020, 2025, 2031, 2032, 2035, 2037, 2038, 2040, 2044, 2045, 2047], "c": [0, 1, 3, 8, 9, 14, 21, 25, 31, 40, 46, 47, 52, 58, 81, 83, 256, 331, 494, 515, 612, 680, 816, 872, 875, 895, 898, 900, 901, 946, 957, 983, 1034, 1040, 1074, 1089, 1092, 1097, 1143, 1144, 1145, 1155, 1156, 1160, 1165, 1192, 1203, 1249, 1260, 1272, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1295, 1296, 1299, 1301, 1305, 1306, 1308, 1310, 1312, 1313, 1372, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1422, 1425, 1426, 1427, 1431, 1433, 1434, 1435, 1441, 1449, 1450, 1451, 1454, 1455, 1456, 1458, 1459, 1469, 1470, 1471, 1475, 1480, 1481, 1482, 1483, 1484, 1485, 1490, 1491, 1492, 1494, 1499, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1521, 1526, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1557, 1565, 1575, 1576, 1588, 1592, 1628, 1634, 1635, 1643, 1688, 1717, 1719, 1720, 1721, 1728, 1729, 1772, 1788, 1804, 1841, 1862, 1876, 1881, 1902, 1919, 1924, 1925, 1951, 1952, 1953, 1954, 1955, 1959, 1963, 1969, 1970, 1980, 1981, 1982, 1984, 1987, 1989, 1996, 2003, 2012, 2013, 2015, 2016, 2019, 2020, 2026, 2032, 2033, 2034, 2035, 2037, 2038, 2040, 2044, 2045, 2046, 2047], "addmm_": [0, 1953, 1969, 2015], "d": [0, 1, 11, 21, 22, 25, 30, 31, 50, 58, 309, 317, 331, 466, 508, 510, 512, 539, 578, 612, 681, 685, 860, 875, 895, 898, 900, 901, 934, 935, 936, 938, 945, 946, 947, 951, 957, 1084, 1086, 1096, 1097, 1110, 1114, 1115, 1116, 1117, 1122, 1123, 1126, 1127, 1132, 1133, 1134, 1137, 1138, 1139, 1166, 1167, 1191, 1207, 1208, 1215, 1224, 1246, 1250, 1254, 1292, 1293, 1343, 1354, 1375, 1390, 1398, 1399, 1403, 1416, 1420, 1421, 1425, 1426, 1427, 1429, 1431, 1433, 1438, 1440, 1451, 1457, 1459, 1471, 1482, 1496, 1502, 1526, 1535, 1536, 1538, 1557, 1592, 1603, 1609, 1637, 1661, 1662, 1689, 1723, 1728, 1729, 1753, 1773, 1791, 1797, 1800, 1812, 1820, 1825, 1876, 1881, 1895, 1896, 1902, 1905, 1910, 1911, 1912, 1913, 1928, 1934, 1936, 1950, 1953, 1959, 1962, 1969, 1970, 1971, 1976, 1978, 1981, 1983, 1984, 1986, 1987, 1988, 1995, 2000, 2011, 2012, 2015, 2016, 2020, 2021, 2034, 2035, 2037, 2043, 2045, 2047], "best": [0, 1, 7, 15, 18, 21, 25, 31, 43, 49, 52, 856, 857, 927, 954, 967, 1171, 1265, 1266, 1295, 1493, 1755, 1768, 1951, 1952, 1954, 1968, 1976, 1977, 1978, 1983, 1985, 2003, 2011, 2015, 2017, 2026, 2032, 2035, 2039], "stabil": [0, 1281, 1286, 1337, 1400, 1401, 1402, 1403, 1440, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1523, 1526, 1535, 1589, 1651, 1689, 1723, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1788, 1984, 2035, 2045], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 21, 25, 26, 27, 29, 30, 31, 33, 40, 43, 45, 46, 47, 49, 53, 54, 57, 58, 60, 66, 68, 69, 80, 84, 146, 192, 205, 309, 317, 440, 441, 442, 443, 444, 482, 483, 508, 512, 555, 575, 576, 578, 579, 580, 582, 583, 598, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 729, 733, 734, 735, 736, 737, 738, 788, 789, 794, 814, 815, 816, 819, 820, 821, 836, 852, 853, 856, 858, 860, 875, 876, 877, 878, 879, 880, 884, 885, 886, 887, 888, 895, 896, 897, 898, 900, 901, 904, 906, 907, 908, 909, 911, 912, 919, 920, 935, 936, 937, 939, 940, 941, 942, 943, 944, 945, 947, 951, 954, 956, 957, 958, 959, 960, 962, 964, 965, 971, 976, 979, 981, 982, 984, 985, 987, 997, 1019, 1021, 1025, 1026, 1032, 1040, 1041, 1043, 1066, 1070, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1102, 1107, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1187, 1188, 1191, 1192, 1193, 1194, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1224, 1226, 1243, 1244, 1246, 1249, 1252, 1261, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1387, 1401, 1402, 1403, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1430, 1433, 1436, 1438, 1445, 1448, 1449, 1450, 1451, 1452, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1483, 1484, 1485, 1487, 1488, 1493, 1494, 1495, 1502, 1526, 1534, 1538, 1540, 1541, 1549, 1590, 1592, 1629, 1643, 1665, 1668, 1669, 1670, 1671, 1674, 1694, 1696, 1700, 1701, 1705, 1709, 1715, 1724, 1728, 1730, 1733, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1760, 1772, 1773, 1777, 1778, 1781, 1782, 1784, 1785, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1813, 1815, 1820, 1824, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1857, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1922, 1929, 1930, 1934, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1957, 1959, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1994, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2030, 2032, 2034, 2035, 2039, 2044, 2046, 2048], "respect": [0, 1, 5, 8, 25, 26, 29, 31, 40, 42, 49, 55, 57, 58, 192, 205, 482, 575, 598, 684, 685, 686, 755, 790, 814, 836, 880, 886, 888, 900, 901, 909, 915, 919, 920, 962, 987, 1085, 1087, 1088, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1203, 1249, 1281, 1285, 1286, 1295, 1305, 1308, 1310, 1313, 1322, 1354, 1377, 1399, 1400, 1406, 1417, 1418, 1419, 1423, 1438, 1440, 1457, 1487, 1488, 1502, 1532, 1534, 1535, 1536, 1537, 1539, 1583, 1592, 1670, 1671, 1696, 1700, 1702, 1724, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1752, 1753, 1754, 1755, 1768, 1858, 1862, 1885, 1902, 1970, 1977, 1978, 1981, 1983, 1987, 1990, 1991, 2004, 2009, 2015, 2016, 2017, 2022, 2034, 2039], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 56, 58, 60, 62, 68, 69, 78, 79, 80, 482, 483, 612, 675, 755, 774, 780, 787, 788, 789, 795, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 849, 856, 857, 884, 885, 886, 893, 900, 901, 919, 920, 934, 951, 956, 960, 972, 979, 1040, 1054, 1097, 1115, 1117, 1141, 1151, 1164, 1178, 1203, 1249, 1250, 1259, 1263, 1270, 1281, 1292, 1302, 1305, 1306, 1319, 1322, 1341, 1344, 1391, 1400, 1406, 1422, 1430, 1433, 1438, 1457, 1487, 1502, 1518, 1534, 1538, 1597, 1611, 1643, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1681, 1682, 1688, 1729, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1763, 1766, 1774, 1785, 1813, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1860, 1861, 1862, 1863, 1870, 1881, 1907, 1915, 1922, 1925, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1964, 1965, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2022, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2045, 2046, 2047, 2048], "describ": [0, 5, 7, 8, 9, 21, 22, 25, 27, 29, 30, 33, 34, 40, 42, 46, 47, 58, 229, 508, 787, 788, 789, 810, 811, 812, 836, 854, 952, 1023, 1040, 1057, 1097, 1203, 1270, 1310, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1424, 1425, 1426, 1427, 1428, 1431, 1433, 1434, 1435, 1441, 1444, 1447, 1449, 1450, 1451, 1453, 1459, 1478, 1480, 1481, 1482, 1493, 1494, 1501, 1505, 1518, 1526, 1534, 1535, 1536, 1538, 1575, 1587, 1588, 1597, 1631, 1766, 1907, 1951, 1952, 1954, 1955, 1963, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1987, 1989, 1990, 1995, 2000, 2003, 2005, 2006, 2009, 2012, 2013, 2022, 2035, 2036, 2041], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 21, 22, 25, 27, 31, 42, 43, 46, 47, 49, 53, 54, 58, 78, 79, 836, 909, 976, 1097, 1239, 1241, 1242, 1245, 1249, 1260, 1262, 1265, 1266, 1280, 1286, 1288, 1297, 1304, 1307, 1487, 1526, 1643, 1674, 1692, 1758, 1785, 1797, 1866, 1907, 1910, 1911, 1912, 1913, 1950, 1951, 1952, 1954, 1955, 1964, 1965, 1977, 1978, 1981, 1983, 1985, 1986, 1987, 1990, 1995, 2000, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2020, 2022, 2031, 2034, 2035, 2036, 2043, 2044, 2045], "expos": [0, 1, 8, 25, 29, 49, 57, 58, 790, 1151, 1978, 1981, 1989, 2003, 2006, 2046], "namespac": [0, 58, 1071, 1952, 1956, 1959, 1983, 1990, 1998, 2000, 2004, 2009, 2026, 2032, 2046], "below": [0, 1, 5, 9, 12, 14, 21, 22, 25, 27, 30, 31, 33, 34, 39, 42, 43, 44, 45, 46, 47, 58, 60, 68, 69, 675, 729, 743, 752, 790, 809, 1040, 1084, 1085, 1086, 1087, 1088, 1097, 1125, 1127, 1131, 1167, 1174, 1194, 1203, 1249, 1266, 1306, 1307, 1312, 1319, 1351, 1417, 1418, 1419, 1438, 1440, 1447, 1457, 1459, 1483, 1484, 1485, 1487, 1502, 1518, 1539, 1575, 1601, 1647, 1674, 1694, 1728, 1755, 1825, 1828, 1865, 1897, 1907, 1910, 1911, 1912, 1913, 1952, 1954, 1955, 1957, 1961, 1962, 1968, 1969, 1977, 1978, 1981, 1982, 1983, 1987, 1988, 1990, 1992, 1994, 1995, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2011, 2012, 2013, 2016, 2019, 2022, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2041, 2043, 2045], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 32, 33, 35, 42, 43, 44, 46, 49, 50, 51, 54, 55, 57, 58, 80, 490, 508, 510, 512, 753, 818, 821, 858, 887, 890, 895, 898, 900, 901, 910, 914, 921, 923, 953, 966, 967, 994, 998, 1032, 1043, 1076, 1077, 1078, 1079, 1148, 1149, 1151, 1160, 1171, 1178, 1191, 1212, 1236, 1246, 1249, 1252, 1261, 1265, 1295, 1313, 1322, 1329, 1339, 1341, 1350, 1373, 1383, 1395, 1405, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1443, 1444, 1445, 1473, 1505, 1506, 1507, 1514, 1529, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1594, 1596, 1611, 1665, 1674, 1681, 1682, 1730, 1735, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1772, 1778, 1828, 1922, 1950, 1951, 1952, 1953, 1955, 1957, 1959, 1963, 1968, 1969, 1970, 1977, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2005, 2006, 2007, 2011, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2030, 2033, 2034, 2037, 2038, 2041, 2042, 2044, 2045, 2047], "defin": [0, 1, 3, 5, 9, 14, 15, 21, 22, 25, 26, 27, 30, 31, 33, 34, 40, 42, 43, 46, 47, 49, 54, 58, 430, 440, 442, 444, 512, 561, 787, 792, 793, 794, 796, 797, 833, 854, 855, 856, 857, 884, 885, 886, 887, 900, 901, 1054, 1080, 1097, 1098, 1117, 1145, 1152, 1171, 1192, 1194, 1209, 1211, 1212, 1238, 1249, 1255, 1272, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1295, 1296, 1299, 1301, 1302, 1306, 1307, 1308, 1310, 1312, 1313, 1319, 1355, 1423, 1428, 1434, 1435, 1442, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1487, 1493, 1505, 1520, 1522, 1527, 1529, 1546, 1547, 1557, 1592, 1643, 1649, 1665, 1668, 1674, 1700, 1702, 1709, 1710, 1730, 1733, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1760, 1763, 1766, 1784, 1793, 1795, 1797, 1804, 1832, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1862, 1864, 1907, 1910, 1911, 1912, 1913, 1937, 1948, 1950, 1951, 1952, 1955, 1957, 1959, 1968, 1969, 1971, 1974, 1978, 1981, 1982, 1986, 1987, 1988, 1990, 1992, 1996, 2000, 2002, 2003, 2004, 2005, 2006, 2009, 2011, 2015, 2016, 2021, 2022, 2023, 2030, 2031, 2034, 2036, 2038, 2042, 2046], "still": [0, 1, 2, 7, 8, 21, 24, 25, 31, 33, 42, 46, 49, 57, 58, 481, 789, 794, 895, 897, 900, 905, 1170, 1171, 1253, 1259, 1267, 1453, 1478, 1674, 1675, 1676, 1677, 1768, 1816, 1952, 1955, 1968, 1969, 1970, 1971, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1988, 1995, 1996, 2000, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2027, 2034, 2038, 2040, 2041, 2045, 2047], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 22, 25, 27, 29, 30, 31, 33, 41, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 135, 229, 250, 317, 453, 491, 494, 512, 515, 551, 612, 675, 814, 872, 914, 915, 967, 979, 980, 981, 997, 998, 1008, 1019, 1021, 1032, 1033, 1040, 1041, 1043, 1085, 1133, 1149, 1154, 1168, 1181, 1197, 1203, 1224, 1246, 1249, 1260, 1261, 1280, 1291, 1293, 1294, 1295, 1298, 1311, 1351, 1426, 1429, 1447, 1457, 1487, 1518, 1539, 1545, 1546, 1547, 1550, 1557, 1592, 1617, 1618, 1619, 1643, 1665, 1666, 1674, 1676, 1677, 1681, 1682, 1691, 1694, 1695, 1724, 1728, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1760, 1763, 1764, 1766, 1768, 1770, 1784, 1824, 1828, 1865, 1876, 1879, 1880, 1881, 1906, 1925, 1929, 1930, 1940, 1942, 1950, 1951, 1952, 1959, 1961, 1962, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1977, 1978, 1979, 1980, 1981, 1983, 1984, 1986, 1987, 1988, 1990, 1992, 1993, 1995, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2027, 2030, 2033, 2034, 2036, 2037, 2038, 2041, 2042, 2045], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 26, 27, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 68, 69, 84, 146, 254, 285, 309, 311, 313, 315, 317, 331, 467, 481, 482, 494, 508, 510, 512, 532, 555, 599, 602, 612, 619, 679, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 755, 759, 776, 785, 786, 792, 794, 814, 818, 821, 833, 849, 852, 853, 854, 856, 871, 875, 880, 887, 888, 890, 900, 901, 903, 904, 905, 906, 907, 908, 909, 919, 920, 927, 938, 951, 954, 957, 961, 967, 969, 979, 985, 986, 987, 997, 998, 1003, 1010, 1011, 1012, 1013, 1014, 1025, 1026, 1027, 1054, 1056, 1061, 1062, 1073, 1075, 1080, 1084, 1085, 1086, 1087, 1088, 1097, 1113, 1118, 1121, 1125, 1128, 1131, 1136, 1137, 1138, 1139, 1140, 1145, 1148, 1154, 1155, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1174, 1178, 1182, 1191, 1194, 1212, 1224, 1234, 1240, 1246, 1247, 1249, 1250, 1252, 1255, 1259, 1260, 1261, 1265, 1282, 1285, 1286, 1295, 1299, 1301, 1302, 1305, 1306, 1310, 1312, 1313, 1315, 1318, 1319, 1321, 1327, 1343, 1350, 1355, 1373, 1379, 1382, 1383, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1401, 1402, 1403, 1406, 1415, 1416, 1418, 1419, 1422, 1423, 1430, 1437, 1438, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1473, 1477, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1492, 1493, 1515, 1518, 1520, 1522, 1526, 1535, 1536, 1550, 1574, 1591, 1592, 1594, 1604, 1611, 1630, 1631, 1649, 1650, 1658, 1665, 1674, 1681, 1682, 1688, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1724, 1726, 1729, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1774, 1786, 1800, 1804, 1806, 1807, 1811, 1813, 1820, 1824, 1828, 1832, 1834, 1852, 1857, 1861, 1862, 1864, 1865, 1873, 1876, 1881, 1901, 1906, 1907, 1910, 1911, 1912, 1913, 1917, 1918, 1921, 1922, 1925, 1934, 1943, 1944, 1945, 1950, 1952, 1954, 1955, 1957, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048], "unlist": 0, "downstream": [0, 3, 1966, 2035, 2036, 2038, 2045], "stabl": [0, 1, 2, 12, 25, 31, 42, 43, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 871, 979, 1097, 1285, 1286, 1290, 1295, 1303, 1307, 1310, 1313, 1315, 1322, 1400, 1857, 1951, 1953, 1976, 1979, 1994, 2011], "believ": [0, 8, 2035], "unstabl": [0, 31, 1285, 1286, 1313, 1330, 1339, 1611, 1885, 2016], "__matmul__": 0, "addbmm": [0, 96, 935, 1953, 1993, 2001], "addmv": [0, 104, 1953, 1969, 2001], "addr": [0, 25, 106, 1953, 2001, 2047], "baddbmm": [0, 148, 1953, 1993, 2001], "bmm": [0, 1922, 1953, 1969, 1971, 1993, 1994, 2001, 2015, 2040], "chain_matmul": [0, 1953, 2001], "multi_dot": [0, 957], "conv1d": [0, 703, 707, 710, 720, 736, 1417, 1425, 1463, 1922, 1953, 2001, 2006, 2008], "conv2d": [0, 46, 704, 708, 711, 713, 721, 737, 787, 809, 1249, 1259, 1261, 1265, 1266, 1418, 1426, 1464, 1487, 1488, 1494, 1515, 1538, 1681, 1709, 1922, 1952, 1953, 1964, 1998, 2000, 2001, 2006, 2008, 2009, 2020, 2025], "conv3d": [0, 705, 709, 712, 714, 722, 738, 1419, 1427, 1465, 1682, 1922, 1953, 2001, 2006, 2008], "conv_transpose1d": [0, 1953, 2001, 2008], "conv_transpose2d": [0, 1953, 2001, 2008], "conv_transpose3d": [0, 1953, 2001, 2008], "grucel": [0, 1993, 2006, 2008, 2009], "lstmcell": [0, 1993, 2006, 2008, 2009], "matmul": [0, 2, 11, 947, 967, 1165, 1354, 1538, 1774, 1784, 1828, 1885, 1953, 1969, 1971, 1981, 1993, 2001, 2008, 2015, 2030], "mv": [0, 11, 1261, 1922, 1953, 1969, 2001, 2015], "prelu": [0, 1488, 1953, 2001, 2008], "rnncell": [0, 2006, 2008, 2009], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 90, 622, 623, 861, 1953, 1969, 2001, 2022, 2040], "asin": [0, 137, 624, 625, 863, 1953, 1969, 2001, 2015, 2040], "cosh": [0, 199, 632, 633, 679, 1953, 1969, 2001, 2040], "cosine_embedding_loss": [0, 1953, 2001], "cdist": [0, 1981, 2001], "cosine_similar": [0, 1536, 1953, 2001], "cross_entropi": [0, 1953], "cumprod": [0, 209, 1953, 1969, 2001], "cumsum": [0, 211, 1080, 1922, 1953, 1969, 2001, 2040], "dist": [0, 22, 25, 26, 29, 31, 43, 49, 958, 959, 960, 1279, 1285, 1286, 1287, 1289, 1290, 1291, 1295, 1296, 1307, 1308, 1311, 1313, 1314, 1337, 1340, 1496, 1526, 1674, 1688, 1885, 1953, 1982, 2001, 2011, 2013], "erfinv": [0, 247, 1953, 1969, 2001, 2015, 2016], "exp": [0, 1, 31, 249, 638, 639, 765, 905, 906, 908, 1140, 1309, 1329, 1337, 1400, 1405, 1422, 1428, 1452, 1476, 1477, 1491, 1501, 1514, 1517, 1519, 1520, 1522, 1523, 1527, 1566, 1612, 1636, 1644, 1645, 1649, 1651, 1654, 1688, 1781, 1841, 1842, 1864, 1881, 1953, 1969, 1978, 2000, 2001, 2016, 2040], "expm1": [0, 253, 640, 641, 1953, 1969, 2001, 2015, 2016, 2040], "group_norm": [0, 1953, 2001, 2008], "hinge_embedding_loss": [0, 1953, 2001], "kl_div": [0, 1953, 2001], "l1_loss": [0, 1953, 2001], "layer_norm": [0, 1459, 1953, 2001, 2008], "log": [0, 2, 14, 21, 22, 31, 33, 35, 36, 39, 40, 44, 75, 77, 372, 373, 648, 655, 675, 1107, 1325, 1327, 1329, 1330, 1337, 1365, 1391, 1399, 1400, 1422, 1440, 1452, 1476, 1477, 1491, 1494, 1501, 1519, 1520, 1523, 1589, 1594, 1604, 1611, 1612, 1628, 1636, 1649, 1651, 1674, 1951, 1953, 1961, 1966, 1969, 1978, 1981, 1982, 1983, 1998, 2000, 2001, 2005, 2016, 2020, 2023, 2024, 2025, 2037, 2038, 2039, 2040, 2042, 2043, 2045], "log_softmax": [0, 1406, 1452, 1576, 1628, 1649, 1953, 1970, 1998, 2001, 2016], "log10": [0, 367, 649, 650, 1953, 1969, 2001, 2040], "log1p": [0, 369, 651, 652, 1953, 1969, 2001, 2015, 2016, 2040], "log2": [0, 371, 653, 654, 1953, 1969, 2001, 2016, 2040], "margin_ranking_loss": [0, 1953, 2001], "mse_loss": [0, 53, 1154, 1953, 2001], "multilabel_margin_loss": [0, 1953, 2001], "multi_margin_loss": [0, 1953, 2001], "nll_loss": [0, 1953, 2001], "norm": [0, 31, 49, 51, 58, 697, 698, 699, 700, 701, 702, 955, 1091, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1281, 1285, 1294, 1295, 1302, 1307, 1319, 1429, 1430, 1478, 1496, 1531, 1532, 1533, 1534, 1535, 1583, 1584, 1629, 1633, 1678, 1679, 1689, 1690, 1699, 1700, 1705, 1708, 1709, 1723, 1726, 1743, 1805, 1953, 1957, 1977, 1978, 1987, 1990, 1993, 2001], "normal": [0, 1, 22, 25, 29, 42, 46, 49, 58, 78, 332, 347, 373, 449, 551, 987, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1171, 1211, 1246, 1249, 1254, 1285, 1327, 1395, 1401, 1402, 1403, 1425, 1426, 1427, 1431, 1441, 1449, 1450, 1451, 1459, 1469, 1470, 1471, 1475, 1514, 1526, 1530, 1531, 1532, 1533, 1534, 1562, 1592, 1593, 1602, 1606, 1610, 1637, 1679, 1680, 1689, 1690, 1705, 1713, 1714, 1723, 1726, 1752, 1768, 1788, 1797, 1798, 1805, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1881, 1922, 1950, 1951, 1952, 1953, 1957, 1969, 1971, 1976, 1978, 1981, 1984, 2000, 2001, 2003, 2008, 2011, 2016, 2020, 2022, 2023, 2029, 2040, 2048], "pdist": [0, 1496, 1953, 2001], "poisson_nll_loss": [0, 1953, 2001], "pow": [0, 1, 464, 491, 903, 904, 907, 930, 1140, 1953, 1955, 1969, 1977, 1978, 2001, 2015, 2021, 2040], "prod": [0, 39, 317, 512, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1315, 1316, 1429, 1433, 1538, 1920, 1922, 1953, 1969, 2001, 2015, 2035, 2040], "reciproc": [0, 480, 658, 659, 1815, 1953, 1969, 2001, 2040], "rsqrt": [0, 506, 1953, 1969, 2001, 2040], "sinh": [0, 531, 666, 667, 877, 1953, 1969, 2001, 2015, 2040], "smooth_l1_loss": [0, 1953, 2001], "soft_margin_loss": [0, 1953, 2001], "softmax": [0, 31, 791, 1391, 1422, 1452, 1477, 1521, 1575, 1594, 1604, 1611, 1643, 1650, 1861, 1953, 1969, 1970, 1971, 1981, 2001, 2008, 2015, 2016], "softmin": [0, 1953], "softplu": [0, 31, 1486, 1623, 1953, 2001], "sum": [0, 1, 3, 12, 21, 25, 26, 29, 31, 33, 49, 54, 55, 58, 60, 67, 74, 491, 512, 561, 741, 888, 903, 904, 905, 906, 907, 908, 909, 919, 920, 928, 987, 1012, 1013, 1014, 1079, 1080, 1097, 1158, 1159, 1160, 1165, 1226, 1281, 1302, 1306, 1319, 1327, 1328, 1329, 1337, 1373, 1381, 1399, 1400, 1406, 1419, 1420, 1422, 1423, 1430, 1433, 1440, 1446, 1447, 1452, 1453, 1454, 1455, 1456, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1520, 1522, 1535, 1536, 1538, 1564, 1565, 1575, 1576, 1584, 1589, 1594, 1604, 1613, 1614, 1615, 1628, 1636, 1649, 1650, 1674, 1705, 1710, 1711, 1729, 1760, 1806, 1828, 1843, 1862, 1864, 1905, 1907, 1922, 1951, 1953, 1955, 1959, 1966, 1969, 1977, 1978, 1981, 1982, 1983, 1984, 1990, 1993, 2000, 2001, 2011, 2012, 2015, 2016, 2021, 2030, 2031, 2032, 2035, 2038, 2040, 2043, 2045, 2047], "renorm": [0, 487, 1429, 1430, 1583, 1584, 1953, 2001], "tan": [0, 570, 670, 671, 878, 1953, 1969, 2001, 2015, 2020, 2040], "triplet_margin_loss": [0, 1953, 2001], "take": [0, 1, 2, 3, 4, 5, 7, 9, 14, 21, 22, 25, 27, 29, 31, 33, 41, 42, 43, 44, 46, 49, 51, 52, 54, 55, 57, 58, 60, 68, 69, 83, 755, 788, 793, 809, 815, 821, 857, 903, 904, 905, 906, 907, 908, 914, 915, 923, 997, 1034, 1085, 1087, 1088, 1113, 1115, 1118, 1121, 1125, 1126, 1128, 1131, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1178, 1282, 1304, 1307, 1391, 1400, 1430, 1434, 1435, 1438, 1457, 1481, 1482, 1483, 1484, 1485, 1487, 1495, 1502, 1530, 1540, 1541, 1587, 1588, 1605, 1630, 1643, 1674, 1727, 1752, 1756, 1781, 1909, 1923, 1934, 1950, 1952, 1953, 1955, 1962, 1963, 1964, 1968, 1969, 1970, 1971, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1988, 1990, 1994, 1995, 1996, 2000, 2001, 2003, 2005, 2006, 2011, 2012, 2013, 2015, 2018, 2019, 2020, 2024, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2043, 2044], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 57, 58, 84, 146, 256, 309, 311, 317, 331, 481, 483, 508, 510, 512, 541, 555, 602, 605, 612, 675, 681, 682, 687, 689, 693, 694, 730, 755, 786, 788, 789, 809, 835, 849, 853, 856, 869, 872, 884, 885, 886, 888, 890, 892, 895, 896, 897, 898, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 923, 927, 928, 929, 933, 934, 937, 946, 948, 953, 954, 958, 961, 962, 966, 967, 969, 975, 979, 986, 996, 1000, 1001, 1003, 1004, 1012, 1013, 1022, 1030, 1034, 1040, 1044, 1045, 1053, 1054, 1061, 1062, 1064, 1065, 1069, 1071, 1073, 1114, 1115, 1116, 1117, 1120, 1123, 1124, 1127, 1130, 1132, 1134, 1149, 1151, 1154, 1155, 1161, 1162, 1164, 1165, 1171, 1177, 1191, 1212, 1215, 1245, 1246, 1249, 1257, 1260, 1261, 1264, 1265, 1285, 1312, 1321, 1337, 1339, 1347, 1349, 1352, 1360, 1361, 1370, 1378, 1379, 1380, 1381, 1391, 1398, 1400, 1404, 1406, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1430, 1433, 1438, 1439, 1440, 1441, 1446, 1452, 1453, 1457, 1458, 1474, 1478, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1526, 1530, 1532, 1534, 1535, 1538, 1543, 1544, 1550, 1557, 1563, 1565, 1583, 1584, 1589, 1594, 1613, 1614, 1615, 1643, 1649, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1688, 1694, 1701, 1705, 1715, 1719, 1727, 1728, 1729, 1730, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1767, 1768, 1769, 1770, 1782, 1828, 1860, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1878, 1879, 1880, 1881, 1884, 1901, 1903, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1920, 1925, 1929, 1930, 1932, 1936, 1950, 1952, 1953, 1954, 1955, 1959, 1961, 1962, 1963, 1964, 1966, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2003, 2004, 2005, 2006, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047], "addcdiv": [0, 98, 1953, 2001], "addcmul": [0, 100, 1953, 2001], "atan2": [0, 142, 866, 1953, 1969, 2001, 2040], "bilinear": [0, 774, 780, 781, 1097, 1539, 1540, 1592, 1603, 1662, 1663, 1922, 1953, 2001], "cross": [0, 7, 8, 25, 27, 31, 33, 1399, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1564, 1565, 1575, 1953, 1981, 1996, 2001, 2038], "dot": [0, 2, 14, 54, 55, 612, 904, 906, 907, 908, 1076, 1077, 1078, 1079, 1156, 1166, 1226, 1270, 1317, 1318, 1344, 1399, 1400, 1422, 1433, 1446, 1453, 1478, 1493, 1494, 1536, 1545, 1550, 1643, 1881, 1931, 1932, 1933, 1934, 1953, 1969, 1987, 2001, 2003], "grid_sampl": [0, 1557, 1922, 1953, 2001], "index_put": [0, 1922, 1953, 2001, 2040], "scatter_add": [0, 1953, 2001, 2040], "tensordot": [0, 1226, 1315, 1316, 1957, 1981, 2001], "binari": [0, 2, 14, 15, 22, 31, 33, 35, 40, 42, 58, 150, 730, 937, 1343, 1399, 1400, 1493, 1564, 1565, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1736, 1951, 1956, 1969, 1970, 1989, 1998, 2000, 2003, 2020, 2027], "add": [0, 1, 3, 7, 12, 15, 17, 21, 25, 27, 29, 39, 42, 46, 47, 49, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 78, 82, 94, 286, 309, 508, 510, 681, 682, 683, 686, 742, 743, 752, 785, 788, 833, 854, 856, 857, 923, 930, 1013, 1043, 1054, 1097, 1155, 1167, 1170, 1176, 1249, 1261, 1391, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468, 1487, 1489, 1493, 1494, 1498, 1501, 1594, 1636, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1828, 1877, 1950, 1952, 1953, 1954, 1955, 1959, 1964, 1966, 1969, 1971, 1977, 1979, 1980, 1982, 1983, 1984, 1988, 1989, 1990, 1992, 1997, 1998, 2000, 2001, 2003, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2015, 2018, 2019, 2020, 2024, 2025, 2030, 2031, 2032, 2033, 2035, 2036, 2039, 2040, 2043, 2044, 2045, 2046, 2047], "nativ": [0, 11, 22, 49, 58, 1023, 1155, 1260, 1679, 1680, 1828, 1952, 1955, 1968, 1981, 1995, 1997, 2002, 2003, 2011, 2035], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 35, 42, 46, 49, 50, 55, 57, 58, 59, 60, 61, 250, 481, 483, 612, 964, 967, 1001, 1003, 1038, 1118, 1119, 1120, 1128, 1129, 1130, 1171, 1178, 1190, 1246, 1247, 1249, 1250, 1296, 1297, 1312, 1319, 1373, 1401, 1402, 1403, 1426, 1430, 1449, 1450, 1451, 1484, 1487, 1495, 1526, 1534, 1584, 1665, 1674, 1706, 1722, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1791, 1807, 1824, 1825, 1916, 1950, 1954, 1955, 1959, 1962, 1963, 1964, 1966, 1968, 1970, 1977, 1978, 1979, 1981, 1982, 1983, 1987, 1988, 1990, 1992, 1994, 1995, 1998, 2000, 2003, 2004, 2006, 2010, 2011, 2015, 2017, 2020, 2025, 2030, 2032, 2033, 2034, 2035, 2045, 2048], "intervent": [0, 8, 2011], "mixtur": [0, 31, 1422, 1575], "bceloss": [0, 1400, 1564], "aren": [0, 8, 54, 58, 77, 1155, 1171, 1969, 1978, 1986, 2012, 2046], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 21, 22, 25, 27, 29, 31, 42, 44, 46, 47, 49, 50, 52, 55, 57, 58, 250, 254, 317, 331, 373, 449, 483, 490, 512, 753, 755, 776, 789, 791, 856, 857, 923, 935, 948, 979, 987, 1154, 1156, 1178, 1260, 1350, 1368, 1373, 1378, 1382, 1383, 1389, 1390, 1391, 1393, 1394, 1395, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1422, 1424, 1428, 1430, 1431, 1432, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1457, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1473, 1474, 1476, 1477, 1478, 1479, 1486, 1490, 1491, 1492, 1494, 1495, 1501, 1502, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1535, 1536, 1537, 1563, 1564, 1565, 1573, 1575, 1576, 1584, 1585, 1589, 1600, 1601, 1604, 1605, 1609, 1616, 1624, 1625, 1626, 1627, 1628, 1636, 1647, 1648, 1659, 1660, 1674, 1684, 1686, 1730, 1755, 1788, 1797, 1798, 1828, 1841, 1862, 1879, 1880, 1886, 1922, 1929, 1930, 1950, 1952, 1953, 1954, 1966, 1967, 1968, 1969, 1970, 1971, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1990, 1996, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2015, 2033, 2034, 2035, 2038, 2039, 2040, 2041, 2042], "doesn": [0, 1, 2, 5, 7, 8, 11, 12, 21, 25, 27, 47, 52, 54, 57, 58, 80, 818, 821, 875, 895, 896, 900, 909, 921, 979, 1001, 1022, 1155, 1166, 1170, 1171, 1178, 1181, 1189, 1257, 1263, 1289, 1313, 1321, 1330, 1414, 1415, 1416, 1423, 1452, 1520, 1567, 1568, 1569, 1604, 1649, 1674, 1675, 1705, 1744, 1824, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1858, 1862, 1934, 1952, 1955, 1956, 1969, 1971, 1978, 1979, 1981, 1983, 1984, 1989, 1992, 1996, 2002, 2004, 2012, 2015, 2034, 2040, 2045], "help": [0, 1, 4, 7, 8, 11, 14, 21, 22, 25, 27, 39, 42, 49, 54, 58, 914, 915, 927, 1022, 1054, 1155, 1156, 1166, 1170, 1171, 1249, 1250, 1269, 1351, 1364, 1365, 1425, 1426, 1427, 1431, 1487, 1688, 1739, 1834, 1934, 1950, 1955, 1962, 1963, 1969, 1970, 1977, 1978, 1979, 1981, 1982, 1984, 1988, 1990, 1993, 1998, 2000, 2003, 2011, 2012, 2015, 2023, 2034, 2037, 2038, 2039, 2043, 2045], "revers": [0, 31, 55, 58, 508, 729, 788, 903, 905, 1115, 1117, 1137, 1158, 1160, 1165, 1317, 1457, 1500, 1635, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1909, 1928, 1953, 1954, 1955, 1978, 1982, 1984, 2001, 2021], "therefor": [0, 3, 5, 21, 22, 25, 31, 32, 40, 49, 52, 60, 65, 66, 82, 443, 539, 909, 936, 945, 969, 1043, 1131, 1148, 1151, 1154, 1207, 1208, 1262, 1265, 1295, 1308, 1429, 1430, 1538, 1583, 1584, 1592, 1724, 1760, 1955, 1977, 1978, 1981, 1983, 1985, 1986, 1989, 2000, 2013, 2015, 2032, 2036, 2038], "rais": [0, 1, 5, 7, 14, 25, 27, 29, 31, 33, 35, 42, 46, 49, 54, 57, 58, 60, 84, 309, 311, 317, 692, 889, 895, 898, 900, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 922, 932, 934, 948, 957, 967, 1002, 1067, 1140, 1145, 1184, 1247, 1249, 1254, 1257, 1265, 1267, 1279, 1281, 1289, 1290, 1293, 1297, 1298, 1303, 1310, 1311, 1315, 1316, 1321, 1342, 1368, 1487, 1643, 1668, 1694, 1695, 1700, 1702, 1705, 1715, 1735, 1736, 1822, 1870, 1922, 1950, 1956, 1962, 1968, 1978, 1981, 1983, 1985, 1993, 1998, 2000, 2003, 2004, 2010, 2011, 2022, 2033, 2034, 2035, 2038, 2044, 2045, 2046], "mani": [0, 3, 7, 11, 14, 21, 22, 25, 31, 42, 49, 53, 54, 58, 84, 398, 675, 884, 886, 900, 901, 903, 905, 1097, 1178, 1262, 1406, 1755, 1853, 1903, 1910, 1911, 1912, 1913, 1952, 1954, 1963, 1969, 1976, 1978, 1979, 1980, 1981, 1983, 1984, 1989, 1990, 1993, 1997, 2000, 2002, 2006, 2013, 2015, 2018, 2020, 2021, 2023, 2031, 2033, 2034, 2035, 2037, 2038, 2039, 2041, 2044, 2045, 2047], "sigmoid": [0, 31, 58, 522, 662, 663, 755, 790, 1399, 1400, 1429, 1438, 1439, 1457, 1458, 1516, 1564, 1591, 1646, 1953, 1969, 1970, 1976, 1998, 2001, 2008, 2016, 2027, 2040], "right": [0, 2, 7, 9, 12, 25, 27, 31, 49, 58, 815, 860, 936, 943, 945, 946, 951, 956, 960, 979, 1091, 1097, 1138, 1141, 1142, 1146, 1203, 1207, 1208, 1212, 1216, 1246, 1269, 1294, 1299, 1310, 1312, 1313, 1321, 1327, 1328, 1373, 1391, 1396, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1433, 1440, 1453, 1454, 1455, 1456, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1490, 1491, 1492, 1496, 1497, 1503, 1535, 1538, 1539, 1540, 1541, 1546, 1547, 1548, 1592, 1612, 1631, 1680, 1694, 1744, 1758, 1759, 1800, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1881, 1902, 1907, 1909, 1925, 1928, 1950, 1953, 1955, 1968, 1969, 1970, 1978, 1983, 1987, 1998, 2000, 2002, 2009, 2013, 2016, 2032, 2034, 2043], "entropi": [0, 31, 1399, 1422, 1491, 1564, 1565, 1575, 2016], "combin": [0, 3, 21, 22, 25, 27, 42, 55, 57, 612, 684, 707, 708, 709, 710, 711, 712, 713, 714, 788, 849, 885, 900, 1054, 1126, 1127, 1132, 1134, 1181, 1212, 1344, 1354, 1400, 1433, 1447, 1493, 1534, 1538, 1586, 1609, 1701, 1952, 1953, 1954, 1977, 1981, 1984, 2000, 2001, 2002, 2004, 2006, 2009, 2011, 2031, 2038], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 39, 40, 42, 43, 46, 47, 49, 53, 54, 58, 80, 81, 578, 579, 580, 582, 583, 602, 612, 675, 687, 689, 755, 788, 882, 885, 900, 901, 905, 914, 955, 957, 1007, 1046, 1048, 1076, 1077, 1085, 1094, 1097, 1103, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1143, 1144, 1154, 1164, 1169, 1170, 1179, 1211, 1213, 1238, 1247, 1249, 1260, 1263, 1270, 1273, 1275, 1280, 1282, 1285, 1286, 1291, 1292, 1297, 1302, 1305, 1306, 1308, 1309, 1311, 1313, 1318, 1321, 1344, 1347, 1350, 1352, 1355, 1380, 1397, 1399, 1400, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1433, 1438, 1446, 1447, 1453, 1455, 1457, 1478, 1479, 1481, 1487, 1490, 1491, 1492, 1494, 1495, 1501, 1502, 1518, 1519, 1534, 1535, 1536, 1538, 1546, 1547, 1564, 1565, 1575, 1594, 1604, 1611, 1628, 1636, 1643, 1688, 1690, 1694, 1716, 1726, 1728, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1759, 1760, 1762, 1766, 1785, 1800, 1813, 1828, 1865, 1870, 1885, 1902, 1906, 1907, 1909, 1918, 1927, 1931, 1935, 1950, 1952, 1954, 1955, 1959, 1961, 1962, 1963, 1969, 1970, 1971, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1995, 1996, 1997, 2000, 2002, 2003, 2004, 2006, 2007, 2011, 2012, 2013, 2015, 2016, 2020, 2021, 2022, 2024, 2025, 2030, 2031, 2033, 2034, 2040, 2043, 2045], "bcewithlogitsloss": [0, 1565], "bcewithlogit": 0, "safe": [0, 25, 42, 46, 57, 58, 81, 83, 481, 1044, 1045, 1064, 1065, 1181, 1674, 1738, 1741, 1742, 1743, 1745, 1751, 1952, 1955, 1977, 1978, 1981, 1984, 1986, 1989, 2011, 2017, 2026, 2030, 2035, 2036, 2038, 2045], "_convolut": [0, 2001], "avg_pool3d": [0, 1953, 2001, 2008, 2040], "grid_sampler_2d": [0, 1953, 2001, 2040], "_grid_sampler_2d_cpu_fallback": [0, 2001], "grid_sampler_3d": [0, 1953, 2001], "polar": [0, 31, 1309, 1953, 2001], "quantil": [0, 1350, 1380, 1953, 2001, 2016], "nanquantil": [0, 1953, 2001], "stft": [0, 936, 945, 1207, 1208, 1246, 1269, 1953, 2001], "view_as_complex": [0, 11, 1953, 2001], "choleski": [0, 2, 31, 959, 960, 1280, 1286, 1322, 1953, 2001], "cholesky_invers": [0, 2, 1953, 2001], "cholesky_solv": [0, 2, 1953, 2001], "invers": [0, 31, 678, 679, 877, 880, 954, 959, 960, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1246, 1290, 1291, 1303, 1307, 1310, 1315, 1316, 1417, 1418, 1419, 1429, 1430, 1433, 1483, 1484, 1485, 1538, 1583, 1584, 1620, 1621, 1622, 1691, 1694, 1718, 1760, 1766, 1917, 1951, 1953, 1955, 1993, 2001, 2016], "lu_solv": [0, 2, 1297, 1953, 2001], "orgqr": [0, 1953, 2001], "ormqr": [0, 1194, 1289, 1953, 2001], "pinvers": [0, 1295, 1953, 2001], "max_pool3d": [0, 1953, 2001, 2008], "max_unpool2d": [0, 1587, 1618, 1953, 2001], "max_unpool3d": [0, 1588, 1619, 1953, 2001], "adaptive_avg_pool3d": [0, 1953, 1983, 2001, 2008], "reflection_pad1d": [0, 1953, 2001, 2040], "reflection_pad2d": [0, 1953, 2001, 2040], "replication_pad1d": [0, 1953, 2001], "replication_pad2d": [0, 1953, 2001, 2040], "replication_pad3d": [0, 1953, 2001, 2040], "ctc_loss": [0, 1406, 1953, 2001], "fft_fft": [0, 1953, 2001], "fft_ifft": [0, 1953, 2001], "fft_fft2": [0, 1953, 2001], "fft_ifft2": [0, 1953, 2001], "fft_fftn": [0, 1953, 2001], "fft_ifftn": [0, 1953, 2001], "fft_rfft": [0, 1953, 2001], "fft_irfft": [0, 1953, 2001], "fft_rfft2": [0, 1953, 2001], "fft_irfft2": [0, 1953, 2001], "fft_rfftn": [0, 1953, 2001], "fft_irfftn": [0, 1953, 2001], "fft_hfft": [0, 1953, 2001], "fft_ihfft": [0, 1953, 2001], "linalg_matrix_norm": [0, 1953, 2001], "linalg_cond": [0, 1953, 2001], "linalg_matrix_rank": [0, 1953, 2001], "linalg_solv": [0, 1953, 2001], "linalg_choleski": [0, 1953, 2001], "linalg_svdv": [0, 1953, 2001], "linalg_eigv": [0, 1953, 2001], "linalg_eigvalsh": [0, 1953, 2001], "linalg_inv": [0, 1953, 2001], "linalg_householder_product": [0, 1953, 2001], "linalg_tensorinv": [0, 1953, 2001], "linalg_tensorsolv": [0, 1953, 2001], "fake_quantize_per_tensor_affin": [0, 1953, 2001], "eig": [0, 1286, 1287, 1313, 1993], "geqrf": [0, 1289, 1772, 1953, 2001], "lstsq": [0, 1194, 1281, 1307], "_lu_with_info": [0, 2001], "qr": [0, 2, 1194, 1285, 1286, 1289, 1295, 1313, 1688, 1772, 1953, 2001], "solv": [0, 7, 11, 1167, 1194, 1203, 1281, 1290, 1292, 1293, 1296, 1297, 1299, 1303, 1311, 1312, 1316, 1322, 1340, 1909, 1978, 1987, 1993, 1996, 2026, 2035], "svd": [0, 2, 11, 1285, 1286, 1295, 1307, 1314, 1330, 1694, 1774, 1886, 1953, 1993, 2001, 2015, 2040], "symeig": 0, "triangular_solv": [0, 1953, 2001], "fractional_max_pool2d": [0, 1953, 2001], "fractional_max_pool3d": [0, 1953, 2001], "adaptive_max_pool3d": [0, 1953, 2001], "multilabel_margin_loss_forward": [0, 2001], "linalg_qr": [0, 1953, 2001], "linalg_cholesky_ex": [0, 1953, 2001], "linalg_svd": [0, 1953, 2001], "linalg_eig": [0, 1953, 2001], "linalg_eigh": [0, 1953, 2001], "linalg_lstsq": [0, 1953, 2001], "linalg_inv_ex": [0, 1953, 2001], "cat": [0, 25, 31, 58, 539, 742, 743, 752, 788, 791, 977, 978, 1351, 1506, 1866, 1878, 1952, 1953, 1969, 2000, 2001, 2003, 2006, 2008, 2015, 2024, 2033, 2040], "stack": [0, 8, 18, 21, 22, 25, 31, 35, 42, 46, 47, 53, 54, 58, 755, 927, 954, 965, 1058, 1059, 1096, 1164, 1166, 1171, 1215, 1351, 1406, 1438, 1457, 1458, 1502, 1531, 1533, 1719, 1924, 1934, 1936, 1951, 1953, 1959, 1971, 1981, 1982, 1985, 2001, 2003, 2005, 2008, 2015, 2032, 2034, 2035, 2038, 2045, 2047], "index_copi": [0, 1922, 1953, 2001], "implement": [1, 2, 5, 8, 12, 16, 17, 21, 22, 25, 26, 27, 29, 31, 34, 39, 40, 43, 46, 49, 54, 58, 59, 76, 80, 146, 508, 510, 512, 682, 733, 734, 735, 736, 737, 738, 755, 774, 776, 780, 788, 795, 814, 815, 816, 819, 820, 821, 873, 875, 888, 904, 914, 915, 979, 985, 1097, 1140, 1145, 1151, 1158, 1159, 1161, 1162, 1249, 1255, 1257, 1259, 1260, 1263, 1305, 1308, 1321, 1322, 1350, 1391, 1406, 1423, 1438, 1441, 1454, 1455, 1456, 1459, 1487, 1493, 1499, 1502, 1503, 1506, 1523, 1532, 1534, 1592, 1597, 1631, 1643, 1651, 1674, 1679, 1680, 1688, 1689, 1694, 1705, 1718, 1722, 1723, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1758, 1760, 1766, 1784, 1791, 1804, 1813, 1816, 1852, 1862, 1885, 1886, 1902, 1918, 1922, 1923, 1925, 1954, 1955, 1956, 1959, 1962, 1963, 1968, 1971, 1972, 1976, 1977, 1978, 1980, 1981, 1983, 1984, 1985, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 2002, 2003, 2004, 2006, 2011, 2012, 2015, 2016, 2019, 2021, 2030, 2033, 2035, 2038, 2041, 2046], "arbitrari": [1, 3, 25, 29, 46, 60, 63, 68, 250, 885, 900, 1080, 1171, 1313, 1321, 1423, 1429, 1453, 1478, 1538, 1564, 1565, 1583, 1604, 1631, 1715, 1885, 1907, 1920, 1955, 1961, 1963, 1978, 1984, 1989, 1990, 2002, 2004, 2006, 2015, 2023, 2035, 2041, 2045, 2046], "scalar": [1, 12, 25, 31, 47, 60, 69, 93, 146, 150, 256, 309, 441, 584, 682, 683, 733, 734, 735, 736, 737, 738, 874, 875, 888, 903, 904, 907, 909, 940, 943, 951, 983, 987, 1092, 1097, 1112, 1145, 1152, 1203, 1210, 1226, 1240, 1274, 1275, 1344, 1351, 1380, 1391, 1399, 1400, 1406, 1420, 1422, 1423, 1440, 1446, 1447, 1452, 1453, 1459, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1536, 1594, 1637, 1728, 1733, 1734, 1735, 1768, 1781, 1783, 1785, 1803, 1804, 1820, 1868, 1869, 1870, 1871, 1872, 1900, 1918, 1919, 1937, 1948, 1949, 1953, 1954, 1955, 1966, 1971, 1976, 1978, 1983, 1987, 2000, 2011, 2015, 2018, 2020, 2022, 2034, 2035, 2040, 2044], "It": [1, 2, 3, 4, 5, 7, 8, 12, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 57, 58, 60, 80, 146, 192, 468, 469, 508, 510, 512, 539, 552, 884, 885, 886, 887, 888, 895, 896, 900, 901, 911, 912, 921, 930, 967, 969, 973, 975, 979, 980, 981, 1014, 1019, 1025, 1026, 1044, 1045, 1064, 1065, 1073, 1120, 1150, 1155, 1158, 1166, 1168, 1171, 1172, 1181, 1191, 1211, 1246, 1249, 1250, 1255, 1256, 1260, 1282, 1286, 1290, 1293, 1295, 1297, 1298, 1303, 1307, 1308, 1310, 1311, 1313, 1315, 1318, 1319, 1321, 1322, 1330, 1391, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1433, 1481, 1482, 1483, 1484, 1485, 1487, 1494, 1515, 1518, 1538, 1540, 1594, 1604, 1649, 1667, 1668, 1669, 1672, 1673, 1674, 1689, 1691, 1694, 1715, 1718, 1719, 1727, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1772, 1791, 1804, 1820, 1835, 1842, 1864, 1917, 1934, 1940, 1943, 1944, 1950, 1954, 1955, 1959, 1966, 1968, 1970, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2016, 2017, 2019, 2023, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2038, 2039, 2044, 2045, 2047], "minim": [1, 7, 8, 814, 870, 1352, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1752, 1753, 1754, 1755, 1768, 1950, 1966, 1977, 1981, 1990, 1992, 1995, 2000, 2004, 2006, 2035, 2045], "exist": [1, 7, 8, 9, 11, 14, 21, 25, 26, 27, 31, 33, 35, 40, 42, 43, 47, 49, 53, 56, 58, 60, 78, 79, 250, 494, 787, 849, 873, 903, 904, 905, 906, 907, 908, 909, 914, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1038, 1170, 1180, 1181, 1249, 1253, 1265, 1285, 1290, 1296, 1297, 1322, 1380, 1487, 1488, 1497, 1546, 1860, 1878, 1925, 1950, 1952, 1959, 1962, 1968, 1969, 1971, 1972, 1978, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1990, 1991, 1993, 1995, 2000, 2003, 2004, 2005, 2006, 2011, 2013, 2015, 2019, 2021, 2030, 2031, 2034, 2036, 2040, 2043, 2047], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 21, 22, 25, 31, 33, 43, 44, 46, 47, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 115, 675, 910, 930, 967, 969, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1040, 1041, 1054, 1155, 1171, 1249, 1253, 1254, 1260, 1261, 1262, 1265, 1266, 1267, 1280, 1291, 1293, 1321, 1503, 1515, 1547, 1548, 1549, 1674, 1831, 1950, 1951, 1954, 1955, 1961, 1963, 1970, 1978, 1979, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1996, 1998, 2000, 2002, 2010, 2011, 2012, 2013, 2015, 2018, 2019, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2043, 2044, 2045, 2046, 2047], "need": [1, 3, 5, 6, 7, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 54, 58, 59, 60, 70, 71, 81, 82, 146, 250, 466, 483, 490, 494, 578, 675, 729, 730, 814, 815, 816, 819, 820, 821, 836, 853, 884, 888, 895, 896, 897, 900, 901, 909, 921, 948, 949, 957, 1034, 1043, 1050, 1085, 1087, 1097, 1118, 1120, 1140, 1149, 1154, 1171, 1249, 1343, 1373, 1422, 1429, 1483, 1484, 1485, 1487, 1493, 1530, 1532, 1534, 1567, 1568, 1569, 1661, 1674, 1681, 1682, 1694, 1696, 1700, 1702, 1730, 1755, 1801, 1806, 1820, 1878, 1907, 1923, 1925, 1951, 1952, 1954, 1955, 1959, 1962, 1963, 1964, 1968, 1970, 1971, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2009, 2011, 2012, 2013, 2015, 2017, 2018, 2021, 2022, 2025, 2026, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2041, 2043, 2045, 2046], "declar": [1, 9, 14, 21, 43, 1178, 1954, 1955, 1956, 1983, 2000, 2003, 2004], "requires_grad": [1, 5, 27, 31, 49, 55, 331, 440, 441, 442, 443, 444, 482, 483, 491, 860, 875, 895, 896, 898, 899, 900, 901, 910, 911, 914, 915, 917, 919, 920, 930, 936, 945, 1043, 1098, 1099, 1100, 1101, 1110, 1115, 1133, 1151, 1152, 1153, 1156, 1166, 1207, 1208, 1249, 1269, 1320, 1336, 1399, 1400, 1420, 1422, 1429, 1430, 1440, 1452, 1453, 1478, 1479, 1487, 1493, 1494, 1501, 1534, 1535, 1564, 1565, 1575, 1628, 1674, 1675, 1676, 1677, 1722, 1727, 1733, 1734, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1922, 1934, 1948, 1949, 1953, 1957, 1969, 1970, 1971, 1981, 1983, 1984, 1990, 1995, 2000, 2001, 2011, 2012, 2021, 2022, 2023, 2032, 2034, 2035, 2040, 2043], "keyword": [1, 5, 21, 25, 26, 29, 30, 46, 47, 54, 58, 60, 66, 80, 84, 309, 317, 440, 441, 442, 443, 444, 576, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 856, 860, 875, 876, 877, 878, 879, 880, 935, 936, 937, 939, 940, 941, 942, 943, 944, 945, 947, 951, 954, 956, 958, 959, 960, 962, 964, 965, 976, 981, 982, 984, 985, 987, 997, 1010, 1012, 1014, 1040, 1041, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1089, 1092, 1094, 1096, 1098, 1099, 1100, 1102, 1107, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1153, 1154, 1191, 1192, 1193, 1194, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1224, 1226, 1243, 1244, 1249, 1252, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1387, 1423, 1445, 1448, 1487, 1643, 1668, 1669, 1674, 1694, 1696, 1701, 1705, 1724, 1728, 1730, 1733, 1734, 1772, 1773, 1777, 1778, 1781, 1782, 1784, 1785, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1813, 1815, 1820, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1857, 1860, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1884, 1885, 1897, 1898, 1899, 1900, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1922, 1929, 1930, 1931, 1936, 1937, 1948, 1949, 1950, 1955, 1956, 1970, 1971, 1983, 1993, 1998, 2000, 2002, 2011, 2015, 2016, 2020, 2035, 2046], "type": [1, 2, 3, 5, 12, 14, 15, 17, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 40, 42, 43, 44, 46, 49, 54, 56, 57, 58, 60, 62, 65, 66, 69, 70, 71, 76, 77, 81, 83, 84, 146, 187, 192, 204, 322, 325, 329, 337, 440, 441, 442, 443, 444, 476, 554, 599, 675, 680, 681, 682, 683, 684, 685, 729, 730, 733, 734, 735, 744, 746, 747, 748, 749, 751, 759, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 779, 787, 788, 789, 792, 810, 811, 812, 814, 815, 816, 817, 818, 820, 822, 835, 849, 850, 851, 852, 853, 854, 855, 856, 857, 860, 868, 874, 884, 885, 886, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 923, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 951, 952, 953, 954, 955, 957, 966, 967, 968, 974, 979, 990, 991, 992, 993, 995, 1007, 1009, 1016, 1017, 1018, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1037, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1060, 1072, 1074, 1075, 1078, 1079, 1092, 1097, 1098, 1099, 1100, 1110, 1111, 1112, 1115, 1133, 1140, 1142, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1162, 1163, 1164, 1166, 1167, 1171, 1177, 1182, 1183, 1184, 1185, 1186, 1189, 1192, 1196, 1198, 1199, 1202, 1207, 1208, 1210, 1211, 1212, 1225, 1228, 1230, 1231, 1234, 1237, 1245, 1246, 1247, 1249, 1250, 1252, 1255, 1256, 1259, 1261, 1263, 1265, 1266, 1268, 1269, 1272, 1281, 1285, 1302, 1306, 1313, 1319, 1320, 1321, 1322, 1336, 1339, 1342, 1349, 1351, 1358, 1359, 1362, 1372, 1378, 1381, 1391, 1395, 1414, 1415, 1416, 1423, 1430, 1477, 1487, 1488, 1489, 1493, 1497, 1498, 1515, 1520, 1521, 1522, 1530, 1531, 1532, 1533, 1534, 1547, 1548, 1549, 1552, 1553, 1557, 1558, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1613, 1614, 1615, 1616, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1636, 1638, 1639, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1656, 1658, 1659, 1660, 1661, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1728, 1729, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1774, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1806, 1810, 1813, 1820, 1821, 1824, 1825, 1826, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1881, 1882, 1884, 1885, 1886, 1900, 1909, 1911, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1928, 1934, 1937, 1939, 1941, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1959, 1963, 1964, 1965, 1966, 1969, 1971, 1976, 1977, 1978, 1980, 1981, 1987, 1988, 1989, 1990, 1993, 1995, 1996, 1998, 1999, 2001, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2031, 2032, 2033, 2035, 2038, 2040, 2044, 2046], "doubl": [1, 3, 31, 33, 47, 476, 482, 612, 744, 746, 747, 748, 749, 751, 761, 762, 776, 895, 896, 898, 900, 901, 906, 914, 915, 923, 952, 959, 960, 976, 997, 1043, 1112, 1140, 1203, 1249, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1330, 1331, 1332, 1333, 1334, 1340, 1430, 1487, 1552, 1555, 1584, 1665, 1735, 1772, 1778, 1867, 1868, 1869, 1871, 1872, 1885, 1900, 1909, 1937, 1955, 1969, 1981, 1983, 1984, 1986, 1993, 2000, 2003, 2017, 2018, 2021], "bfloat16": [1, 22, 49, 1231, 1249, 1301, 1318, 1487, 1735, 1741, 1742, 1754, 1828, 1969, 1981, 2015, 2017, 2018, 2021, 2022, 2048], "cfloat": [1, 11, 25, 307, 478, 612, 959, 960, 997, 1220, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1340, 1772, 1802, 1885, 1909, 1933, 2018, 2021], "cdoubl": [1, 11, 959, 960, 997, 1249, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1340, 1487, 1772, 1885, 1909, 2018, 2021], "beta": [1, 2, 11, 50, 57, 95, 96, 101, 102, 103, 104, 105, 106, 147, 148, 317, 512, 549, 681, 684, 685, 686, 935, 998, 1032, 1033, 1040, 1041, 1043, 1207, 1269, 1344, 1354, 1401, 1402, 1403, 1441, 1447, 1449, 1450, 1451, 1459, 1475, 1518, 1523, 1526, 1545, 1550, 1601, 1609, 1610, 1643, 1647, 1651, 1741, 1742, 1743, 1745, 1751, 1755, 1788, 1845, 1847, 1858, 1863, 1877, 1951, 1953, 1961, 1964, 1981, 1997, 1998, 1999, 2000, 2006, 2011, 2015, 2018, 2023, 2040], "even": [1, 2, 8, 21, 22, 25, 33, 49, 57, 58, 83, 481, 539, 575, 675, 810, 811, 812, 888, 987, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1128, 1129, 1130, 1133, 1165, 1170, 1174, 1178, 1180, 1181, 1189, 1234, 1262, 1279, 1281, 1285, 1286, 1287, 1288, 1302, 1306, 1308, 1309, 1313, 1314, 1319, 1344, 1350, 1423, 1526, 1567, 1568, 1569, 1631, 1674, 1681, 1682, 1688, 1727, 1729, 1766, 1813, 1824, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1885, 1932, 1952, 1955, 1956, 1966, 1971, 1977, 1978, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1993, 1994, 1995, 2002, 2003, 2004, 2013, 2017, 2018, 2030, 2033, 2034, 2035, 2037, 2038, 2047], "though": [1, 25, 58, 60, 63, 146, 481, 789, 885, 888, 900, 905, 1113, 1114, 1116, 1171, 1174, 1178, 1180, 1181, 1247, 1250, 1344, 1729, 1952, 1956, 1970, 1971, 1978, 1981, 1983, 1984, 1986, 1992, 1993, 2002, 2006, 2017, 2034, 2047], "signatur": [1, 12, 21, 35, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 80, 394, 482, 483, 551, 900, 901, 919, 920, 979, 1249, 1487, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1694, 1715, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1881, 1959, 1981, 1983, 1984, 1998, 2000, 2003, 2004, 2011, 2015, 2032, 2037, 2038, 2046], "veri": [1, 4, 7, 8, 18, 21, 22, 53, 55, 58, 969, 985, 1156, 1164, 1166, 1170, 1312, 1449, 1450, 1451, 1674, 1675, 1688, 1744, 1766, 1772, 1848, 1852, 1909, 1934, 1954, 1968, 1978, 1983, 1985, 1987, 1988, 1990, 1992, 1993, 1996, 2002, 2003, 2010, 2011, 2012, 2015, 2021, 2034, 2035, 2037, 2038, 2044, 2045], "unlik": [1, 3, 7, 31, 47, 49, 55, 483, 488, 910, 1094, 1133, 1136, 1140, 1285, 1286, 1305, 1308, 1313, 1317, 1347, 1350, 1352, 1459, 1676, 1677, 1803, 1825, 1931, 1954, 1955, 1968, 1971, 1981, 1992, 1994, 2018, 2023, 2033, 2035], "coverag": [1, 7, 46, 50, 58, 1158, 1159, 1951, 1952, 1957, 1970, 2006, 2015, 2046], "plan": [1, 2, 7, 9, 25, 27, 30, 890, 1674, 1784, 1971, 1978, 1983, 2003, 2015, 2021, 2044, 2045], "consid": [1, 5, 8, 22, 25, 30, 33, 42, 46, 47, 49, 54, 57, 58, 59, 481, 689, 774, 780, 789, 903, 905, 906, 914, 987, 1084, 1085, 1086, 1087, 1088, 1118, 1154, 1238, 1242, 1245, 1249, 1290, 1292, 1293, 1294, 1295, 1303, 1304, 1307, 1312, 1315, 1422, 1433, 1487, 1490, 1538, 1557, 1592, 1603, 1662, 1675, 1688, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1724, 1754, 1822, 1841, 1876, 1881, 1910, 1911, 1912, 1913, 1950, 1952, 1955, 1962, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1990, 1993, 1998, 2002, 2003, 2005, 2007, 2012, 2013, 2015, 2018, 2021, 2022, 2033, 2035, 2044, 2046, 2047], "ad": [1, 3, 9, 14, 21, 22, 25, 29, 31, 39, 49, 52, 54, 55, 57, 58, 217, 218, 309, 315, 466, 510, 675, 681, 682, 683, 684, 685, 686, 730, 890, 893, 894, 895, 903, 904, 905, 906, 910, 911, 912, 914, 923, 935, 1097, 1101, 1158, 1159, 1161, 1167, 1171, 1249, 1263, 1327, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1493, 1494, 1496, 1501, 1515, 1526, 1530, 1535, 1538, 1570, 1571, 1572, 1589, 1617, 1618, 1619, 1643, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1694, 1701, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1788, 1789, 1790, 1858, 1863, 1877, 1950, 1952, 1954, 1966, 1970, 1977, 1984, 1986, 1987, 1989, 1990, 1995, 2003, 2006, 2009, 2015, 2020, 2023, 2031, 2033, 2034, 2035, 2040, 2041, 2044, 2047], "tutori": [1, 3, 9, 15, 25, 26, 29, 58, 890, 893, 894, 895, 898, 900, 1925, 1951, 1952, 1959, 1962, 1972, 1983, 1989, 1990, 1992, 1995, 2000, 2006, 2027, 2034, 2035, 2037], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 21, 25, 27, 30, 34, 42, 43, 44, 46, 49, 50, 51, 53, 54, 58, 60, 68, 69, 76, 229, 481, 482, 483, 780, 787, 788, 791, 836, 854, 856, 857, 890, 893, 894, 895, 898, 900, 901, 910, 911, 919, 920, 1080, 1101, 1155, 1164, 1168, 1176, 1182, 1203, 1249, 1260, 1321, 1433, 1487, 1538, 1539, 1631, 1662, 1674, 1715, 1727, 1804, 1828, 1842, 1853, 1951, 1952, 1954, 1955, 1959, 1962, 1963, 1965, 1968, 1969, 1970, 1972, 1977, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1990, 1992, 1994, 1995, 2000, 2004, 2006, 2009, 2011, 2012, 2013, 2015, 2020, 2027, 2033, 2037, 2038, 2039, 2047], "major": [1, 6, 7, 8, 9, 1025, 1885, 1951, 1955, 1986, 2002, 2033, 2035, 2037, 2039], "contain": [1, 2, 3, 5, 11, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 36, 40, 43, 46, 47, 49, 57, 58, 60, 61, 66, 69, 79, 84, 146, 150, 187, 191, 204, 286, 307, 309, 311, 315, 317, 466, 478, 539, 598, 602, 681, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 755, 809, 832, 836, 872, 887, 888, 889, 900, 901, 903, 904, 905, 906, 907, 908, 909, 927, 935, 936, 937, 945, 947, 951, 969, 982, 983, 987, 1010, 1011, 1012, 1013, 1014, 1043, 1097, 1131, 1132, 1134, 1140, 1149, 1161, 1162, 1165, 1166, 1207, 1208, 1211, 1212, 1220, 1224, 1240, 1247, 1249, 1250, 1256, 1257, 1260, 1265, 1266, 1269, 1280, 1286, 1287, 1288, 1289, 1291, 1293, 1295, 1296, 1312, 1321, 1339, 1343, 1350, 1373, 1379, 1391, 1400, 1422, 1423, 1429, 1430, 1433, 1438, 1439, 1441, 1446, 1457, 1458, 1479, 1487, 1488, 1489, 1494, 1497, 1502, 1504, 1515, 1519, 1526, 1538, 1545, 1575, 1583, 1584, 1586, 1658, 1665, 1668, 1669, 1674, 1681, 1682, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1722, 1723, 1726, 1728, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1774, 1777, 1802, 1816, 1820, 1880, 1881, 1885, 1902, 1909, 1911, 1913, 1918, 1919, 1920, 1924, 1925, 1930, 1934, 1951, 1952, 1954, 1955, 1956, 1959, 1962, 1963, 1966, 1970, 1971, 1973, 1975, 1977, 1978, 1982, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1993, 1994, 1995, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2011, 2013, 2015, 2017, 2018, 2020, 2021, 2023, 2024, 2025, 2029, 2031, 2032, 2034, 2035, 2037, 2038, 2039, 2042, 2044, 2045, 2046, 2047], "build": [1, 2, 8, 9, 14, 15, 25, 31, 58, 1249, 1259, 1487, 1533, 1557, 1592, 1951, 1952, 1962, 1972, 1978, 2000, 2004, 2006, 2012, 2020, 2021, 2026, 2027, 2030, 2045], "basic": [1, 3, 7, 9, 12, 27, 42, 58, 60, 61, 1158, 1159, 1160, 1256, 1322, 1674, 1760, 1951, 1956, 1972, 1979, 1981, 1982, 1987, 2003, 2012, 2019, 2020, 2032, 2035, 2037, 2038], "jacobian": [1, 31, 50, 51, 53, 54, 888, 893, 903, 906, 908, 909, 914, 915, 1159, 1160, 1161, 1165, 1166, 1934, 1978, 1983, 1987], "hessian": [1, 50, 53, 54, 904, 907, 1159, 1160, 1976, 1984], "etc": [1, 3, 5, 11, 12, 21, 22, 25, 31, 33, 42, 43, 47, 49, 854, 855, 856, 923, 969, 979, 1172, 1246, 1249, 1422, 1487, 1674, 1806, 1950, 1954, 1955, 1959, 1962, 1983, 1984, 1985, 1990, 1992, 1998, 2000, 2002, 2003, 2006, 2011, 2015, 2017, 2020, 2023, 2030, 2032, 2038], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 21, 22, 25, 26, 27, 30, 31, 32, 33, 35, 39, 42, 43, 45, 47, 49, 50, 53, 54, 57, 58, 60, 73, 80, 146, 331, 481, 727, 733, 734, 735, 740, 741, 751, 759, 789, 792, 794, 833, 849, 856, 857, 888, 895, 898, 900, 901, 909, 1001, 1034, 1148, 1154, 1155, 1171, 1249, 1286, 1321, 1487, 1530, 1532, 1533, 1534, 1643, 1668, 1669, 1674, 1681, 1682, 1691, 1705, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1950, 1951, 1952, 1954, 1955, 1959, 1962, 1968, 1970, 1971, 1977, 1978, 1979, 1981, 1983, 1987, 1988, 1989, 1990, 1992, 1995, 1998, 2000, 2002, 2004, 2005, 2006, 2008, 2011, 2012, 2015, 2017, 2019, 2020, 2022, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2041, 2043, 2045, 2046], "input": [1, 2, 3, 5, 9, 11, 12, 15, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 35, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 67, 68, 69, 73, 76, 78, 80, 81, 82, 84, 146, 256, 276, 297, 397, 478, 494, 512, 604, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 715, 723, 724, 729, 730, 733, 734, 735, 736, 737, 738, 740, 741, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 797, 809, 812, 814, 832, 833, 834, 835, 852, 853, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 895, 896, 898, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 927, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 953, 955, 956, 958, 959, 960, 961, 962, 963, 964, 966, 967, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 997, 1013, 1040, 1041, 1043, 1076, 1077, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1166, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1231, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1252, 1253, 1256, 1257, 1261, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1340, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1681, 1682, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1715, 1716, 1717, 1719, 1724, 1727, 1728, 1729, 1731, 1732, 1734, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1759, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1794, 1796, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1828, 1835, 1836, 1837, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1909, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1964, 1970, 1971, 1972, 1976, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1989, 1990, 1993, 1994, 1995, 1997, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2015, 2016, 2018, 2019, 2022, 2024, 2025, 2027, 2030, 2032, 2033, 2034, 2035, 2040, 2043, 2044, 2045, 2046], "set": [1, 2, 3, 5, 8, 9, 13, 14, 20, 21, 22, 24, 25, 26, 27, 29, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 52, 53, 56, 57, 58, 60, 75, 77, 84, 146, 150, 250, 326, 440, 441, 442, 443, 444, 453, 491, 494, 515, 575, 576, 675, 730, 736, 738, 755, 774, 780, 787, 788, 789, 792, 810, 811, 812, 815, 816, 817, 820, 821, 836, 849, 853, 854, 856, 857, 860, 873, 885, 887, 888, 895, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 911, 912, 934, 946, 951, 962, 966, 967, 981, 994, 998, 1008, 1023, 1032, 1044, 1045, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1098, 1099, 1100, 1149, 1154, 1163, 1167, 1212, 1229, 1230, 1249, 1253, 1257, 1259, 1261, 1263, 1265, 1266, 1285, 1286, 1289, 1295, 1302, 1304, 1306, 1307, 1319, 1320, 1321, 1322, 1336, 1339, 1342, 1363, 1367, 1368, 1369, 1391, 1395, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1438, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1474, 1478, 1479, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1497, 1501, 1502, 1518, 1519, 1526, 1530, 1532, 1534, 1535, 1536, 1548, 1549, 1557, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1585, 1592, 1596, 1603, 1604, 1613, 1614, 1615, 1628, 1630, 1636, 1643, 1662, 1674, 1676, 1677, 1689, 1695, 1724, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1784, 1791, 1793, 1797, 1799, 1800, 1808, 1809, 1820, 1821, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1849, 1865, 1870, 1879, 1880, 1900, 1910, 1911, 1912, 1913, 1922, 1925, 1926, 1929, 1930, 1947, 1950, 1952, 1954, 1955, 1956, 1959, 1961, 1964, 1965, 1966, 1968, 1971, 1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2020, 2022, 2024, 2025, 2027, 2029, 2034, 2035, 2036, 2038, 2040, 2041, 2042, 2044, 2045, 2046], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 146, 150, 250, 254, 319, 331, 453, 481, 482, 483, 508, 510, 540, 609, 612, 675, 682, 724, 736, 737, 738, 743, 752, 753, 755, 763, 764, 767, 768, 769, 780, 786, 787, 788, 789, 792, 794, 809, 815, 818, 819, 821, 832, 836, 849, 853, 854, 856, 857, 858, 874, 875, 884, 885, 886, 888, 890, 891, 893, 894, 895, 898, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 919, 920, 923, 926, 937, 954, 967, 970, 974, 980, 987, 998, 1000, 1010, 1012, 1014, 1021, 1022, 1032, 1040, 1042, 1046, 1048, 1050, 1054, 1055, 1080, 1097, 1098, 1101, 1102, 1115, 1117, 1118, 1119, 1120, 1133, 1136, 1149, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1178, 1180, 1181, 1189, 1193, 1194, 1203, 1206, 1211, 1212, 1240, 1246, 1247, 1249, 1250, 1252, 1253, 1255, 1256, 1260, 1261, 1263, 1265, 1266, 1271, 1274, 1281, 1289, 1292, 1296, 1297, 1302, 1305, 1308, 1309, 1313, 1319, 1321, 1338, 1339, 1341, 1351, 1360, 1361, 1380, 1382, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1434, 1435, 1438, 1443, 1444, 1445, 1447, 1453, 1455, 1456, 1457, 1460, 1461, 1462, 1473, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1515, 1518, 1523, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1539, 1550, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1587, 1588, 1603, 1617, 1618, 1619, 1637, 1643, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1679, 1694, 1715, 1716, 1722, 1727, 1729, 1733, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1763, 1764, 1766, 1770, 1772, 1781, 1785, 1793, 1797, 1807, 1813, 1816, 1828, 1830, 1832, 1857, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1879, 1880, 1881, 1885, 1900, 1904, 1907, 1909, 1917, 1918, 1921, 1923, 1925, 1929, 1930, 1934, 1942, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1959, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2048, 2050], "lambda": [1, 12, 21, 27, 31, 52, 55, 57, 58, 60, 63, 68, 69, 72, 254, 482, 483, 919, 920, 955, 1156, 1161, 1165, 1166, 1171, 1285, 1286, 1287, 1288, 1321, 1442, 1524, 1536, 1633, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1754, 1760, 1762, 1765, 1859, 1934, 1956, 1978, 1983, 1984, 2002, 2003, 2011, 2022, 2035, 2046], "captur": [1, 12, 15, 46, 47, 58, 60, 63, 68, 69, 675, 967, 979, 998, 1000, 1032, 1038, 1043, 1252, 1361, 1738, 1741, 1742, 1743, 1745, 1751, 1952, 1956, 1961, 1983, 1984, 1988, 1997, 1998, 2000, 2003, 2006, 2025, 2026, 2027, 2030, 2032, 2033, 2035, 2038, 2043, 2045], "f": [1, 10, 22, 25, 31, 33, 34, 39, 40, 46, 47, 50, 51, 54, 55, 57, 58, 60, 61, 169, 254, 331, 373, 603, 893, 894, 934, 987, 1115, 1117, 1124, 1133, 1155, 1156, 1158, 1159, 1160, 1161, 1165, 1166, 1203, 1249, 1257, 1260, 1261, 1321, 1452, 1454, 1455, 1456, 1458, 1487, 1536, 1546, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1583, 1584, 1587, 1588, 1594, 1628, 1630, 1631, 1643, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1816, 1891, 1934, 1952, 1954, 1955, 1959, 1969, 1970, 1978, 1981, 1983, 1985, 1987, 1988, 1990, 1996, 1998, 1999, 2000, 2003, 2004, 2011, 2015, 2020, 2022, 2031, 2033, 2035, 2038, 2044, 2046], "three": [1, 2, 6, 9, 25, 29, 49, 51, 54, 58, 83, 883, 1095, 1097, 1203, 1212, 1293, 1296, 1297, 1298, 1313, 1341, 1398, 1416, 1419, 1456, 1459, 1482, 1643, 1688, 1729, 1760, 1828, 1955, 1978, 1981, 1982, 1983, 2000, 2003, 2004, 2006, 2011, 2013, 2015, 2020, 2042], "anoth": [1, 5, 7, 12, 21, 22, 25, 27, 31, 32, 33, 44, 46, 49, 58, 481, 975, 998, 1000, 1001, 1003, 1148, 1171, 1176, 1187, 1188, 1259, 1285, 1286, 1289, 1313, 1429, 1430, 1488, 1497, 1665, 1681, 1682, 1689, 1824, 1952, 1954, 1955, 1961, 1963, 1977, 1978, 1980, 1981, 1983, 1986, 1990, 1992, 1994, 1996, 2003, 2004, 2012, 2013, 2015, 2021, 2023, 2030, 2031, 2035, 2037, 2038, 2041, 2044, 2047], "constant": [1, 12, 21, 46, 47, 58, 60, 61, 65, 66, 69, 71, 739, 770, 816, 817, 970, 1080, 1137, 1138, 1139, 1177, 1189, 1246, 1249, 1253, 1265, 1297, 1322, 1411, 1412, 1413, 1430, 1433, 1440, 1496, 1518, 1535, 1538, 1589, 1592, 1631, 1689, 1736, 1752, 1757, 1760, 1907, 1953, 1955, 1977, 1983, 1990, 1994, 2000, 2002, 2015, 2034, 2037, 2038], "boolean": [1, 12, 14, 31, 42, 58, 60, 68, 69, 396, 398, 884, 900, 901, 910, 939, 941, 942, 944, 973, 979, 1000, 1001, 1003, 1102, 1171, 1177, 1182, 1193, 1206, 1238, 1239, 1240, 1241, 1242, 1245, 1274, 1322, 1338, 1343, 1384, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1526, 1643, 1691, 1694, 1784, 1879, 1880, 1904, 1929, 1930, 1954, 1956, 1981, 1983, 2017, 2018, 2020, 2021, 2022, 2023, 2035], "flag": [1, 2, 5, 14, 25, 26, 32, 43, 45, 49, 52, 54, 58, 730, 868, 903, 905, 910, 911, 912, 936, 945, 958, 959, 960, 967, 1028, 1148, 1154, 1156, 1157, 1159, 1160, 1161, 1165, 1166, 1207, 1208, 1230, 1237, 1321, 1341, 1493, 1550, 1603, 1604, 1674, 1691, 1694, 1724, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1828, 1834, 1860, 1870, 1909, 1922, 1934, 1951, 1952, 1955, 1968, 1978, 1981, 1983, 1993, 1994, 2000, 2003, 2006, 2020, 2021, 2035, 2036, 2044, 2045], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 20, 21, 22, 25, 26, 27, 29, 30, 33, 34, 35, 38, 42, 43, 46, 47, 49, 51, 56, 58, 75, 187, 204, 251, 309, 317, 482, 483, 493, 510, 512, 613, 675, 730, 905, 910, 911, 914, 915, 919, 920, 938, 1101, 1132, 1134, 1155, 1182, 1246, 1249, 1266, 1279, 1286, 1295, 1414, 1415, 1416, 1417, 1418, 1419, 1447, 1457, 1483, 1484, 1485, 1487, 1493, 1502, 1514, 1530, 1532, 1534, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1603, 1643, 1662, 1663, 1664, 1674, 1715, 1727, 1736, 1751, 1783, 1810, 1828, 1834, 1860, 1922, 1952, 1955, 1961, 1962, 1971, 1972, 1978, 1980, 1981, 1982, 1983, 1989, 1990, 1993, 1998, 2000, 2003, 2005, 2006, 2018, 2020, 2021, 2022, 2025, 2029, 2033, 2034, 2035, 2038, 2039, 2043, 2045, 2047, 2048], "between": [1, 2, 3, 7, 17, 18, 22, 25, 31, 32, 42, 43, 44, 46, 47, 49, 56, 57, 58, 192, 481, 508, 578, 579, 580, 582, 583, 602, 612, 684, 685, 686, 690, 691, 755, 767, 768, 769, 797, 852, 860, 879, 888, 893, 904, 906, 907, 908, 914, 915, 955, 967, 987, 1000, 1007, 1009, 1056, 1060, 1074, 1075, 1080, 1097, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1148, 1149, 1170, 1178, 1203, 1210, 1246, 1249, 1261, 1285, 1286, 1308, 1313, 1380, 1399, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1427, 1431, 1433, 1438, 1447, 1453, 1463, 1464, 1465, 1466, 1467, 1468, 1478, 1480, 1481, 1482, 1487, 1490, 1491, 1492, 1496, 1515, 1518, 1519, 1520, 1535, 1536, 1538, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1591, 1617, 1618, 1619, 1633, 1649, 1659, 1674, 1681, 1682, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1759, 1760, 1766, 1768, 1777, 1785, 1789, 1790, 1795, 1796, 1800, 1825, 1878, 1879, 1880, 1881, 1885, 1906, 1907, 1929, 1930, 1952, 1954, 1955, 1956, 1962, 1968, 1971, 1977, 1978, 1980, 1981, 1982, 1987, 1988, 1990, 1992, 1994, 1995, 1997, 1998, 2000, 2002, 2004, 2006, 2007, 2011, 2013, 2015, 2017, 2020, 2024, 2030, 2038, 2043, 2045], "well": [1, 3, 5, 7, 9, 14, 22, 25, 42, 46, 49, 54, 55, 58, 59, 612, 786, 817, 820, 856, 1040, 1159, 1160, 1249, 1253, 1260, 1265, 1285, 1286, 1287, 1289, 1295, 1308, 1313, 1359, 1401, 1402, 1403, 1422, 1457, 1487, 1526, 1613, 1614, 1615, 1674, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1784, 1918, 1952, 1955, 1959, 1962, 1969, 1971, 1977, 1978, 1981, 1983, 1984, 1986, 1987, 1990, 1992, 1994, 1998, 2000, 2003, 2006, 2009, 2011, 2013, 2015, 2019, 2020, 2023, 2027, 2031, 2034, 2035, 2036, 2041], "relat": [1, 6, 7, 9, 21, 25, 33, 46, 47, 48, 49, 54, 60, 61, 66, 69, 75, 675, 1203, 1289, 1433, 1518, 1538, 1674, 1774, 1923, 1971, 1978, 1995, 2002, 2003, 2011, 2015, 2016, 2022, 2027, 2035, 2046], "mechan": [1, 8, 25, 36, 40, 42, 46, 47, 58, 874, 910, 911, 1101, 1249, 1487, 1547, 1643, 1727, 1900, 1951, 1968, 1971, 1983, 1986, 1989, 1990, 2009, 2011, 2012, 2030], "confus": [1, 8, 60, 1249, 1487, 1978, 1981, 2003, 2015, 2036, 2038], "spars": [1, 11, 186, 187, 204, 214, 319, 324, 338, 339, 430, 538, 539, 540, 541, 576, 578, 579, 580, 581, 582, 583, 609, 684, 740, 741, 914, 915, 1071, 1191, 1214, 1234, 1322, 1344, 1354, 1383, 1429, 1430, 1520, 1583, 1584, 1609, 1755, 1774, 1822, 1855, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1886, 1906, 1922, 1923, 1951, 1953, 1957, 1962, 1976, 1993, 1994, 2001, 2008, 2018, 2019, 2022, 2033, 2040], "param": [1, 2, 27, 29, 31, 34, 42, 49, 51, 53, 58, 483, 759, 790, 1154, 1164, 1185, 1249, 1268, 1487, 1493, 1497, 1498, 1673, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1768, 1953, 1964, 1976, 1977, 1981, 1982, 2002, 2046], "receiv": [1, 7, 9, 21, 25, 29, 31, 47, 54, 57, 1054, 1249, 1487, 1670, 1671, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1769, 1955, 1966, 1968, 1977, 1978, 1992, 2004, 2011, 2012, 2013, 2015, 2033, 2038, 2045, 2047], "dure": [1, 5, 14, 18, 22, 25, 27, 33, 34, 36, 42, 46, 49, 57, 58, 60, 67, 77, 79, 80, 331, 483, 498, 499, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 788, 822, 884, 885, 895, 898, 900, 901, 998, 1032, 1042, 1043, 1055, 1056, 1075, 1260, 1262, 1263, 1265, 1321, 1395, 1401, 1402, 1403, 1423, 1424, 1429, 1430, 1449, 1450, 1451, 1505, 1526, 1532, 1534, 1577, 1583, 1584, 1665, 1674, 1676, 1677, 1722, 1736, 1769, 1866, 1911, 1913, 1954, 1961, 1962, 1964, 1966, 1969, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1993, 1994, 1998, 2000, 2003, 2005, 2006, 2009, 2011, 2013, 2022, 2030, 2031, 2035, 2038, 2042, 2043, 2044, 2045, 2047], "accumul": [1, 2, 49, 146, 286, 309, 314, 315, 317, 466, 483, 681, 888, 909, 1171, 1319, 1674, 1739, 1740, 1922, 1952, 1953, 1966, 1978, 1981, 1982, 1985, 1993, 2002, 2007, 2011, 2012, 2015, 2033, 2035, 2040, 2045], "initi": [1, 2, 3, 4, 8, 17, 18, 21, 22, 27, 29, 33, 35, 42, 43, 45, 49, 76, 84, 491, 494, 575, 707, 708, 709, 710, 711, 712, 715, 725, 726, 727, 728, 740, 741, 751, 755, 759, 856, 857, 874, 923, 975, 1000, 1008, 1029, 1034, 1035, 1038, 1039, 1064, 1098, 1099, 1100, 1197, 1225, 1247, 1249, 1262, 1263, 1321, 1322, 1339, 1401, 1402, 1403, 1404, 1406, 1417, 1418, 1419, 1423, 1429, 1430, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1495, 1502, 1503, 1504, 1526, 1536, 1583, 1665, 1674, 1676, 1677, 1688, 1691, 1694, 1722, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1824, 1825, 1826, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1951, 1953, 1954, 1955, 1963, 1966, 1971, 1976, 1978, 1981, 1982, 1983, 1986, 1989, 1996, 1998, 2000, 2002, 2003, 2004, 2006, 2010, 2011, 2012, 2030, 2038, 2043, 2044], "memori": [1, 2, 3, 5, 11, 22, 24, 27, 29, 31, 32, 47, 49, 53, 58, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 229, 236, 250, 263, 293, 321, 327, 333, 335, 336, 389, 440, 441, 442, 443, 444, 453, 458, 481, 494, 495, 519, 520, 575, 598, 612, 729, 758, 873, 875, 888, 895, 898, 900, 914, 915, 921, 949, 964, 967, 998, 999, 1002, 1005, 1006, 1008, 1022, 1023, 1032, 1033, 1036, 1040, 1042, 1043, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1067, 1097, 1098, 1099, 1100, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1160, 1162, 1166, 1249, 1267, 1295, 1321, 1358, 1359, 1360, 1368, 1430, 1457, 1458, 1487, 1530, 1531, 1532, 1534, 1643, 1661, 1674, 1681, 1682, 1688, 1715, 1727, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1793, 1794, 1796, 1797, 1798, 1799, 1824, 1900, 1922, 1934, 1949, 1951, 1952, 1963, 1964, 1968, 1970, 1971, 1972, 1978, 1983, 1986, 1992, 1998, 2000, 2004, 2005, 2006, 2011, 2015, 2017, 2018, 2019, 2021, 2022, 2030, 2034, 2035, 2037, 2042, 2044], "overlap": [1, 21, 22, 25, 29, 49, 58, 481, 675, 873, 914, 915, 1100, 1155, 1246, 1433, 1538, 1674, 1881, 1922, 1981, 1982, 1986, 2018, 2033, 2035, 2044], "dens": [1, 29, 214, 540, 541, 578, 579, 580, 581, 582, 583, 936, 945, 1207, 1208, 1269, 1322, 1755, 1855, 1858, 1862, 1863, 1866, 1867, 1868, 1869, 1871, 1872, 1877, 1886, 1922, 1971, 1994, 2015, 2018, 2033], "stride": [1, 11, 47, 134, 250, 335, 440, 441, 442, 443, 444, 494, 515, 539, 576, 578, 579, 580, 582, 583, 612, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 763, 764, 767, 768, 769, 777, 778, 860, 873, 936, 945, 1098, 1100, 1110, 1115, 1133, 1149, 1152, 1153, 1171, 1181, 1207, 1208, 1214, 1249, 1259, 1263, 1269, 1320, 1336, 1354, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1499, 1538, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1586, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1661, 1674, 1733, 1789, 1790, 1793, 1795, 1796, 1797, 1799, 1800, 1807, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1859, 1862, 1906, 1911, 1913, 1932, 1948, 1953, 1956, 1959, 1969, 1971, 2000, 2001, 2011, 2015, 2017, 2018, 2020, 2021, 2022, 2032, 2033, 2034, 2035, 2040, 2045], "otherwis": [1, 2, 3, 5, 7, 9, 11, 14, 21, 25, 26, 32, 35, 46, 49, 50, 54, 58, 84, 205, 317, 324, 328, 332, 334, 338, 339, 490, 499, 555, 575, 576, 578, 598, 612, 675, 681, 682, 683, 684, 685, 688, 690, 691, 692, 694, 730, 755, 763, 764, 779, 789, 812, 815, 816, 856, 857, 860, 887, 893, 900, 901, 905, 914, 934, 935, 951, 1038, 1097, 1103, 1136, 1148, 1170, 1171, 1181, 1184, 1240, 1246, 1249, 1252, 1256, 1262, 1271, 1295, 1310, 1319, 1321, 1322, 1337, 1342, 1347, 1349, 1350, 1352, 1354, 1355, 1378, 1381, 1397, 1398, 1420, 1422, 1425, 1426, 1427, 1431, 1438, 1442, 1443, 1444, 1445, 1447, 1457, 1473, 1487, 1491, 1492, 1493, 1494, 1495, 1497, 1502, 1503, 1505, 1518, 1524, 1526, 1529, 1530, 1532, 1534, 1535, 1536, 1560, 1561, 1594, 1596, 1597, 1601, 1637, 1647, 1674, 1688, 1693, 1694, 1715, 1719, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1772, 1774, 1782, 1784, 1791, 1800, 1807, 1820, 1828, 1835, 1879, 1880, 1881, 1884, 1917, 1918, 1919, 1929, 1930, 1937, 1950, 1952, 1954, 1955, 1962, 1964, 1969, 1977, 1983, 1984, 1992, 1998, 1999, 2000, 2006, 2007, 2009, 2010, 2011, 2013, 2016, 2017, 2018, 2019, 2020, 2022, 2027, 2046], "rowmajor": [1, 1674], "contigu": [1, 11, 22, 27, 327, 494, 515, 612, 1432, 1490, 1633, 1674, 1681, 1682, 1801, 1807, 1885, 1953, 1970, 1971, 2001, 2008, 2015, 2017, 2019], "create_graph": [1, 146, 483, 888, 903, 904, 905, 906, 907, 908, 909, 1953, 1977, 1983], "preserv": [1, 5, 12, 21, 31, 46, 49, 58, 494, 774, 780, 849, 871, 874, 1138, 1139, 1155, 1181, 1249, 1253, 1260, 1487, 1488, 1497, 1539, 1603, 1662, 1737, 1816, 1820, 1857, 1900, 1927, 1952, 1964, 1969, 1971, 1976, 1981, 1984, 1994, 1997, 1998, 2000, 2011, 2015, 2018, 2030, 2034], "replac": [1, 14, 21, 22, 25, 27, 41, 43, 46, 49, 51, 52, 53, 54, 55, 58, 80, 81, 83, 115, 416, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 742, 809, 834, 853, 958, 1043, 1097, 1154, 1155, 1171, 1254, 1257, 1267, 1339, 1340, 1373, 1377, 1518, 1529, 1665, 1690, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1724, 1726, 1784, 1881, 1885, 1909, 1952, 1953, 1955, 1964, 1981, 1983, 1984, 1987, 1989, 1992, 1996, 2000, 2001, 2003, 2006, 2022, 2031, 2033, 2035, 2037, 2044], "preexist": [1, 2005, 2033, 2034], "behavior": [1, 2, 7, 14, 20, 22, 25, 26, 27, 29, 31, 32, 35, 40, 43, 46, 47, 49, 53, 54, 57, 58, 82, 250, 315, 466, 494, 508, 539, 612, 682, 780, 788, 821, 873, 887, 900, 901, 943, 949, 951, 953, 966, 997, 1092, 1097, 1098, 1099, 1100, 1142, 1150, 1151, 1155, 1182, 1249, 1260, 1263, 1265, 1295, 1302, 1306, 1319, 1320, 1321, 1336, 1344, 1351, 1423, 1426, 1447, 1457, 1487, 1502, 1526, 1539, 1557, 1592, 1661, 1662, 1665, 1666, 1674, 1675, 1726, 1728, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1778, 1784, 1800, 1807, 1848, 1885, 1907, 1922, 1950, 1952, 1956, 1957, 1959, 1961, 1963, 1969, 1971, 1973, 1979, 1981, 1983, 1984, 1993, 1994, 1995, 2000, 2002, 2003, 2004, 2007, 2008, 2011, 2016, 2019, 2033, 2034, 2036, 2038], "let": [1, 7, 8, 21, 22, 31, 43, 54, 58, 481, 491, 959, 960, 962, 1171, 1203, 1249, 1269, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1295, 1296, 1299, 1301, 1308, 1310, 1312, 1313, 1487, 1674, 1688, 1900, 1959, 1969, 1970, 1978, 1981, 1982, 1983, 1984, 1986, 1990, 1992, 1993, 1994, 1995, 1996, 2003, 2012, 2013, 2015, 2020, 2030, 2031, 2034, 2035, 2036, 2037, 2038, 2039, 2044, 2045], "first": [1, 4, 5, 7, 9, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 43, 46, 47, 49, 55, 58, 60, 69, 72, 212, 250, 282, 286, 584, 605, 681, 684, 686, 689, 755, 788, 789, 809, 849, 852, 854, 869, 870, 879, 884, 885, 886, 887, 889, 900, 901, 909, 914, 923, 932, 934, 935, 939, 940, 942, 943, 944, 947, 949, 951, 965, 997, 1000, 1011, 1085, 1087, 1088, 1089, 1094, 1097, 1102, 1115, 1117, 1136, 1151, 1156, 1157, 1159, 1160, 1161, 1165, 1166, 1181, 1193, 1203, 1206, 1214, 1215, 1216, 1226, 1238, 1247, 1257, 1262, 1263, 1269, 1274, 1279, 1282, 1289, 1305, 1308, 1315, 1316, 1318, 1321, 1322, 1338, 1344, 1347, 1350, 1351, 1352, 1354, 1371, 1373, 1379, 1384, 1387, 1391, 1397, 1398, 1404, 1415, 1416, 1418, 1419, 1429, 1430, 1432, 1437, 1438, 1452, 1455, 1456, 1457, 1472, 1479, 1481, 1482, 1502, 1515, 1574, 1661, 1665, 1674, 1681, 1682, 1691, 1692, 1694, 1705, 1715, 1721, 1741, 1742, 1743, 1744, 1745, 1751, 1754, 1755, 1759, 1763, 1766, 1768, 1774, 1784, 1785, 1811, 1812, 1820, 1828, 1847, 1862, 1865, 1870, 1901, 1902, 1906, 1911, 1913, 1919, 1928, 1931, 1934, 1936, 1950, 1952, 1954, 1955, 1959, 1962, 1965, 1968, 1969, 1971, 1977, 1978, 1981, 1983, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2016, 2020, 2024, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2038, 2043, 2044, 2045, 2046], "accord": [1, 9, 30, 33, 46, 792, 856, 857, 875, 937, 949, 1095, 1213, 1310, 1343, 1373, 1391, 1430, 1499, 1665, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1760, 1766, 1785, 1848, 1873, 1901, 1935, 1955, 1966, 1970, 1971, 1990, 1994, 1996, 2003, 2013, 2022], "retain": [1, 9, 25, 688, 690, 691, 694, 869, 870, 875, 1253, 1271, 1302, 1306, 1319, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1379, 1380, 1381, 1729, 1782, 1785, 1816, 1879, 1880, 1884, 1910, 1911, 1912, 1913, 1929, 1930, 1968, 1992, 2015], "over": [1, 9, 12, 21, 22, 25, 26, 31, 33, 40, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 60, 63, 68, 69, 72, 476, 675, 692, 733, 734, 735, 736, 737, 738, 761, 762, 767, 768, 769, 777, 778, 887, 900, 901, 923, 927, 954, 1009, 1054, 1056, 1060, 1075, 1076, 1077, 1078, 1079, 1097, 1154, 1158, 1160, 1164, 1166, 1203, 1211, 1249, 1265, 1282, 1302, 1306, 1318, 1319, 1321, 1329, 1349, 1351, 1381, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1430, 1433, 1434, 1435, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1475, 1478, 1479, 1480, 1481, 1482, 1487, 1490, 1491, 1492, 1494, 1501, 1515, 1518, 1519, 1521, 1526, 1535, 1538, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1587, 1588, 1604, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1628, 1629, 1636, 1643, 1669, 1679, 1690, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1789, 1790, 1805, 1864, 1866, 1879, 1880, 1881, 1884, 1902, 1917, 1929, 1930, 1934, 1955, 1966, 1968, 1969, 1970, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1992, 1993, 1998, 2002, 2006, 2011, 2012, 2015, 2023, 2030, 2032, 2033, 2034, 2035, 2038, 2045, 2047], "time": [1, 3, 4, 7, 8, 9, 14, 21, 22, 25, 26, 27, 29, 31, 32, 33, 39, 42, 43, 44, 46, 47, 49, 54, 57, 58, 60, 70, 71, 84, 286, 309, 481, 482, 488, 612, 675, 680, 681, 682, 683, 684, 685, 686, 689, 740, 741, 751, 755, 759, 763, 764, 794, 796, 819, 836, 872, 909, 919, 920, 921, 922, 928, 930, 935, 947, 955, 957, 967, 980, 987, 1000, 1001, 1003, 1043, 1056, 1075, 1078, 1089, 1111, 1112, 1118, 1119, 1120, 1126, 1137, 1138, 1139, 1147, 1151, 1160, 1161, 1162, 1165, 1166, 1168, 1174, 1182, 1238, 1246, 1249, 1257, 1262, 1265, 1266, 1270, 1275, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1301, 1305, 1308, 1310, 1312, 1313, 1321, 1322, 1344, 1354, 1361, 1372, 1373, 1375, 1385, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1430, 1433, 1434, 1435, 1438, 1449, 1450, 1451, 1457, 1459, 1473, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1499, 1500, 1502, 1523, 1526, 1538, 1539, 1540, 1541, 1557, 1560, 1561, 1587, 1588, 1633, 1634, 1635, 1651, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1688, 1689, 1692, 1694, 1728, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1762, 1772, 1773, 1784, 1806, 1812, 1862, 1876, 1881, 1882, 1902, 1934, 1951, 1954, 1955, 1956, 1961, 1963, 1964, 1968, 1976, 1978, 1980, 1982, 1983, 1985, 1986, 1987, 1989, 1990, 1992, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2020, 2025, 2026, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2038, 2041, 2042, 2044, 2045, 2047], "4": [1, 3, 5, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 40, 42, 46, 47, 54, 58, 60, 61, 62, 65, 66, 68, 69, 71, 187, 204, 238, 250, 285, 307, 309, 311, 313, 317, 397, 398, 440, 441, 466, 478, 482, 488, 491, 494, 508, 512, 518, 532, 539, 551, 553, 555, 579, 580, 602, 612, 678, 679, 680, 681, 684, 686, 687, 688, 690, 691, 692, 694, 734, 736, 737, 738, 741, 743, 752, 755, 768, 769, 819, 860, 869, 870, 871, 875, 876, 877, 878, 879, 880, 882, 883, 895, 898, 900, 901, 903, 906, 907, 908, 935, 938, 941, 945, 946, 947, 951, 953, 956, 957, 960, 961, 962, 965, 972, 976, 979, 982, 983, 984, 985, 997, 1077, 1080, 1087, 1089, 1091, 1092, 1095, 1096, 1097, 1100, 1102, 1112, 1113, 1115, 1117, 1125, 1131, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1147, 1148, 1151, 1154, 1156, 1164, 1165, 1166, 1171, 1191, 1192, 1193, 1203, 1206, 1210, 1211, 1212, 1213, 1215, 1216, 1220, 1224, 1226, 1238, 1240, 1246, 1255, 1256, 1261, 1263, 1270, 1271, 1272, 1273, 1274, 1275, 1279, 1281, 1282, 1288, 1290, 1292, 1293, 1294, 1297, 1299, 1302, 1304, 1306, 1308, 1310, 1312, 1315, 1316, 1317, 1319, 1320, 1323, 1325, 1326, 1331, 1333, 1334, 1336, 1338, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1391, 1396, 1407, 1408, 1409, 1411, 1412, 1415, 1416, 1418, 1419, 1427, 1429, 1430, 1431, 1433, 1437, 1438, 1457, 1458, 1483, 1484, 1490, 1492, 1494, 1499, 1500, 1502, 1508, 1509, 1510, 1511, 1512, 1526, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1548, 1549, 1557, 1559, 1568, 1571, 1583, 1584, 1592, 1603, 1628, 1631, 1634, 1635, 1661, 1662, 1663, 1664, 1665, 1674, 1681, 1682, 1688, 1694, 1705, 1717, 1718, 1720, 1722, 1728, 1729, 1730, 1732, 1734, 1738, 1751, 1756, 1757, 1763, 1767, 1768, 1769, 1773, 1777, 1778, 1781, 1782, 1784, 1785, 1787, 1791, 1793, 1795, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1811, 1812, 1813, 1815, 1816, 1820, 1832, 1839, 1841, 1842, 1847, 1848, 1850, 1852, 1857, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1881, 1884, 1887, 1888, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1928, 1931, 1932, 1933, 1934, 1935, 1936, 1949, 1952, 1953, 1954, 1955, 1956, 1962, 1968, 1970, 1971, 1976, 1978, 1979, 1981, 1982, 1983, 1986, 1990, 1992, 1995, 1996, 1998, 2000, 2003, 2004, 2006, 2008, 2011, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2030, 2032, 2033, 2035, 2038, 2040, 2043, 2045], "fact": [1, 3, 8, 49, 490, 936, 945, 981, 1178, 1203, 1207, 1208, 1285, 1286, 1313, 1952, 1983, 1986, 1987, 2000, 2012, 2015, 2030, 2034, 2039], "reset": [1, 25, 27, 755, 815, 820, 888, 998, 1046, 1048, 1061, 1062, 1063, 1249, 1438, 1487, 1503, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1774, 1791, 1886, 1966, 2000, 2010], "phase": [1, 22, 788, 1285, 1286, 1766, 1885, 1953, 1996, 2035, 2045], "iter": [1, 2, 3, 7, 22, 25, 26, 27, 29, 31, 43, 45, 46, 49, 58, 60, 65, 923, 934, 972, 1010, 1011, 1012, 1013, 1014, 1043, 1046, 1048, 1069, 1249, 1322, 1487, 1488, 1489, 1497, 1498, 1674, 1675, 1678, 1679, 1680, 1687, 1689, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1723, 1725, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1763, 1774, 1843, 1886, 1953, 1955, 1956, 1968, 1970, 1977, 1978, 1979, 1981, 1982, 1983, 1986, 1987, 1990, 2002, 2005, 2010, 2020, 2030, 2035, 2038, 2044, 2045, 2046], "recreat": [1, 1978, 2044], "valid": [1, 24, 25, 27, 31, 40, 42, 46, 47, 58, 80, 84, 742, 743, 752, 786, 958, 970, 974, 1040, 1097, 1171, 1178, 1247, 1249, 1250, 1271, 1285, 1286, 1295, 1296, 1297, 1308, 1313, 1344, 1414, 1415, 1416, 1567, 1568, 1569, 1592, 1665, 1700, 1705, 1709, 1735, 1736, 1756, 1757, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1784, 1952, 1953, 1954, 1955, 1959, 1970, 1971, 1978, 1981, 1983, 1988, 1994, 2000, 2002, 2005, 2011, 2012, 2032, 2033, 2038, 2041, 2045], "altern": [1, 9, 21, 25, 58, 675, 809, 1158, 1159, 1212, 1257, 1321, 1515, 1532, 1534, 1611, 1674, 1734, 1755, 1826, 1827, 1922, 1949, 1950, 1956, 1978, 1988, 1990, 1993, 1994, 1996, 2021, 2035, 2043], "assign": [1, 7, 9, 10, 21, 25, 33, 42, 43, 54, 56, 58, 675, 833, 834, 835, 930, 1247, 1249, 1250, 1391, 1422, 1487, 1494, 1497, 1498, 1675, 1694, 1952, 1956, 1977, 1983, 1984, 1985, 1986, 2000, 2006, 2012, 2013, 2019, 2020], "never": [1, 5, 7, 22, 25, 42, 43, 46, 47, 217, 218, 791, 874, 955, 967, 1246, 1296, 1297, 1308, 1321, 1674, 1715, 1978, 1981, 1983, 2003, 2004, 2011, 2022, 2033], "long": [1, 7, 9, 21, 42, 46, 57, 729, 744, 746, 747, 748, 749, 751, 758, 776, 972, 1155, 1181, 1225, 1350, 1379, 1406, 1422, 1430, 1457, 1458, 1494, 1576, 1735, 1783, 1897, 1901, 1911, 1913, 1918, 1951, 1955, 1962, 1968, 1969, 1970, 1978, 1979, 1981, 1983, 1985, 1992, 1994, 2000, 2003, 2005, 2010, 2017, 2018, 2020, 2021, 2030, 2035, 2040, 2043, 2045], "indic": [1, 2, 3, 12, 21, 22, 25, 26, 27, 30, 31, 42, 46, 47, 76, 79, 80, 187, 204, 309, 311, 313, 314, 315, 317, 466, 508, 510, 512, 539, 567, 568, 578, 609, 690, 691, 730, 740, 741, 794, 819, 869, 870, 871, 872, 873, 895, 897, 900, 914, 915, 951, 958, 959, 960, 972, 973, 979, 993, 998, 1000, 1001, 1003, 1037, 1076, 1077, 1100, 1156, 1157, 1159, 1160, 1161, 1165, 1166, 1191, 1203, 1224, 1247, 1249, 1254, 1263, 1266, 1267, 1271, 1280, 1291, 1293, 1304, 1307, 1321, 1329, 1337, 1339, 1341, 1347, 1350, 1352, 1355, 1361, 1373, 1379, 1383, 1391, 1392, 1393, 1394, 1422, 1429, 1430, 1434, 1435, 1481, 1482, 1483, 1484, 1485, 1490, 1492, 1493, 1554, 1555, 1556, 1575, 1583, 1584, 1587, 1588, 1604, 1620, 1621, 1622, 1630, 1643, 1658, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1728, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1764, 1766, 1785, 1820, 1857, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1896, 1897, 1901, 1904, 1910, 1911, 1912, 1913, 1918, 1919, 1920, 1922, 1923, 1925, 1934, 1937, 1946, 1952, 1953, 1955, 1959, 1969, 1970, 1983, 1992, 1995, 2000, 2001, 2011, 2015, 2019, 2020, 2022, 2036, 2038, 2040, 2045], "hard": [1, 7, 8, 25, 43, 969, 1097, 1322, 1442, 1594, 1595, 1952, 1953, 1954, 1978, 1986, 2000, 2003, 2035, 2036], "matter": [1, 4, 25, 49, 895, 896, 900, 1085, 1097, 1181, 1257, 1260, 1265, 1674, 1971, 1978, 2003], "discourag": [1, 1066, 1070, 1978, 2011], "aggress": [1, 49, 1246, 1681, 1682, 1978, 2011, 2035], "buffer": [1, 4, 21, 22, 25, 46, 47, 49, 53, 875, 1011, 1043, 1151, 1154, 1164, 1249, 1257, 1260, 1271, 1321, 1401, 1402, 1403, 1423, 1460, 1461, 1462, 1487, 1526, 1667, 1674, 1676, 1683, 1685, 1691, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1722, 1724, 1752, 1754, 1816, 1857, 1904, 1954, 1972, 1978, 1982, 1983, 1990, 1995, 1998, 2000, 2004, 2035], "free": [1, 7, 25, 27, 31, 33, 42, 43, 49, 58, 60, 68, 69, 972, 1049, 1067, 1252, 1265, 1322, 1964, 1976, 1978, 1981, 1983, 1985, 1986, 1992, 1996, 2000, 2015, 2030, 2033, 2035, 2047], "reus": [1, 25, 58, 481, 1172, 1978, 1981, 2011, 2030, 2033, 2035, 2040, 2045, 2047], "effici": [1, 2, 3, 8, 11, 21, 31, 49, 50, 55, 146, 755, 888, 895, 897, 900, 909, 957, 1162, 1169, 1194, 1267, 1305, 1322, 1341, 1391, 1425, 1426, 1427, 1430, 1431, 1438, 1493, 1499, 1500, 1502, 1534, 1643, 1964, 1971, 1978, 1982, 1983, 1987, 1991, 1992, 1993, 2002, 2004, 2006, 2011, 2012, 2015, 2018, 2019, 2023], "few": [1, 7, 8, 22, 27, 33, 1097, 1155, 1430, 1674, 1950, 1955, 1978, 1981, 1983, 1985, 1988, 1993, 1996, 2000, 2002, 2004, 2006, 2009, 2015, 2019, 2021, 2023, 2033, 2035, 2037, 2038, 2039, 2043, 2045], "occas": [1, 7, 1978], "actual": [1, 8, 27, 33, 35, 47, 49, 54, 58, 254, 675, 785, 980, 1115, 1133, 1178, 1261, 1265, 1417, 1418, 1419, 1592, 1674, 1706, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1950, 1954, 1955, 1963, 1969, 1978, 1981, 1982, 1983, 1986, 1987, 1992, 1994, 1996, 1998, 2006, 2011, 2017, 2022, 2033, 2034, 2035, 2037, 2038], "signific": [1, 3, 27, 1768, 1828, 1978, 1981, 2015, 2037, 2041], "amount": [1, 2, 3, 4, 7, 21, 25, 27, 33, 42, 58, 915, 1022, 1048, 1050, 1054, 1246, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1433, 1475, 1490, 1538, 1575, 1699, 1700, 1702, 1703, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1970, 1978, 1980, 1981, 1984, 1985, 1988, 1998, 2011, 2015, 2033, 2039, 2043, 2045, 2047], "unless": [1, 2, 4, 7, 22, 25, 44, 46, 49, 50, 58, 146, 483, 494, 835, 853, 895, 896, 900, 938, 998, 1032, 1154, 1249, 1293, 1298, 1311, 1321, 1350, 1440, 1487, 1534, 1669, 1705, 1724, 1749, 1755, 1820, 1922, 1955, 1961, 1978, 1981, 1986, 1994, 1995, 2000, 2003, 2007, 2033], "heavi": [1, 25, 1978, 1996, 2034], "pressur": [1, 49, 1978], "might": [1, 2, 3, 4, 9, 14, 15, 18, 25, 27, 29, 30, 31, 42, 46, 54, 57, 58, 81, 83, 146, 481, 539, 888, 997, 1265, 1266, 1592, 1674, 1675, 1681, 1682, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1950, 1952, 1966, 1971, 1978, 1980, 1981, 1982, 1983, 1987, 1989, 1994, 1995, 1997, 2000, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2019, 2021, 2022, 2026, 2030, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045], "keep": [1, 3, 5, 7, 21, 22, 27, 29, 30, 33, 42, 46, 47, 49, 60, 481, 1001, 1171, 1321, 1401, 1402, 1403, 1407, 1429, 1449, 1450, 1451, 1496, 1526, 1592, 1603, 1674, 1701, 1737, 1805, 1828, 1950, 1951, 1952, 1968, 1970, 1971, 1978, 1981, 1982, 1984, 1985, 1987, 1992, 1998, 2002, 2006, 2011, 2012, 2013, 2032, 2033, 2034, 2035, 2038, 2043, 2047], "track": [1, 30, 33, 46, 47, 60, 75, 76, 77, 82, 331, 910, 921, 1006, 1046, 1048, 1061, 1062, 1063, 1154, 1155, 1171, 1351, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1674, 1701, 1966, 1968, 1970, 1971, 1978, 1981, 1983, 1984, 1985, 1989, 1990, 1998, 2002, 2004, 2005, 2012, 2013, 2015, 2033, 2034, 2035, 2038, 2042], "appli": [1, 3, 5, 8, 12, 22, 27, 29, 30, 31, 33, 35, 42, 49, 53, 54, 55, 58, 60, 71, 77, 78, 79, 115, 317, 394, 467, 481, 508, 512, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 730, 733, 734, 735, 736, 737, 738, 753, 755, 761, 762, 763, 764, 765, 766, 767, 768, 769, 775, 776, 777, 778, 779, 805, 806, 807, 808, 835, 853, 895, 896, 898, 899, 900, 901, 911, 912, 914, 940, 943, 969, 979, 982, 1085, 1087, 1092, 1101, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1145, 1154, 1155, 1162, 1165, 1166, 1168, 1171, 1178, 1249, 1253, 1299, 1322, 1339, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1428, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1540, 1541, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1585, 1587, 1588, 1589, 1590, 1593, 1595, 1596, 1597, 1598, 1602, 1603, 1604, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1623, 1628, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1665, 1670, 1671, 1674, 1681, 1682, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1715, 1716, 1723, 1724, 1726, 1727, 1729, 1739, 1751, 1755, 1768, 1781, 1786, 1787, 1788, 1789, 1790, 1861, 1862, 1864, 1881, 1918, 1919, 1921, 1934, 1952, 1955, 1959, 1962, 1968, 1970, 1972, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1993, 2000, 2002, 2003, 2004, 2006, 2009, 2012, 2015, 2016, 2029, 2030, 2032, 2035, 2036, 2044], "save": [1, 5, 7, 11, 15, 22, 25, 27, 29, 46, 49, 491, 832, 884, 885, 895, 898, 900, 901, 1162, 1248, 1249, 1254, 1257, 1265, 1267, 1321, 1487, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1762, 1765, 1769, 1951, 1952, 1953, 1963, 1965, 1970, 1983, 1984, 1986, 1990, 1992, 1994, 1998, 2001, 2002, 2003, 2005, 2011, 2015, 2020, 2024, 2027, 2030, 2035, 2037, 2047], "modifi": [1, 18, 21, 22, 25, 26, 27, 29, 49, 58, 60, 256, 482, 483, 786, 833, 834, 835, 895, 896, 898, 899, 900, 901, 919, 920, 921, 969, 980, 981, 1203, 1246, 1249, 1252, 1253, 1269, 1429, 1487, 1530, 1532, 1534, 1583, 1584, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1758, 1766, 1847, 1952, 1955, 1969, 1977, 1981, 1983, 1984, 1990, 1995, 2003, 2004, 2006, 2011, 2016, 2019, 2021, 2025, 2032, 2033, 2034, 2035, 2041, 2045], "afterward": [1, 46, 1487, 1665, 1674, 1986, 2015], "onc": [1, 7, 9, 15, 21, 22, 25, 26, 27, 29, 31, 32, 34, 35, 42, 49, 52, 54, 57, 58, 895, 896, 897, 898, 900, 901, 903, 905, 922, 1097, 1249, 1253, 1321, 1423, 1487, 1674, 1692, 1694, 1726, 1764, 1768, 1784, 1830, 1834, 1925, 1952, 1955, 1959, 1964, 1966, 1968, 1977, 1978, 1980, 1981, 1983, 1986, 1987, 1989, 1990, 2002, 2003, 2015, 2020, 2030, 2032, 2035, 2038, 2042], "start": [1, 3, 4, 8, 9, 21, 22, 25, 27, 31, 33, 39, 41, 42, 43, 44, 49, 53, 57, 58, 229, 398, 428, 429, 491, 533, 693, 860, 889, 931, 932, 972, 1046, 1048, 1059, 1061, 1062, 1119, 1120, 1136, 1151, 1247, 1262, 1275, 1320, 1336, 1382, 1383, 1391, 1396, 1397, 1398, 1430, 1432, 1480, 1481, 1482, 1488, 1490, 1584, 1631, 1674, 1696, 1700, 1702, 1715, 1738, 1760, 1766, 1800, 1830, 1853, 1867, 1868, 1869, 1871, 1872, 1950, 1951, 1953, 1954, 1959, 1962, 1968, 1970, 1978, 1979, 1981, 1982, 1983, 1985, 1986, 1990, 1991, 1992, 1996, 2000, 2002, 2005, 2006, 2011, 2012, 2013, 2015, 2029, 2030, 2033, 2035, 2040, 2042], "sure": [1, 7, 9, 21, 25, 27, 32, 34, 43, 45, 52, 58, 856, 857, 888, 1148, 1253, 1265, 1266, 1322, 1674, 1727, 1762, 1904, 1955, 1969, 1978, 1982, 1985, 1987, 1996, 2000, 2005, 2006, 2011, 2012, 2013, 2015, 2017, 2020, 2035, 2037, 2045], "been": [1, 5, 7, 9, 11, 21, 22, 25, 26, 29, 30, 31, 33, 35, 42, 45, 49, 52, 53, 58, 80, 481, 483, 675, 755, 895, 896, 900, 972, 1001, 1003, 1008, 1036, 1039, 1096, 1101, 1155, 1252, 1253, 1259, 1264, 1321, 1438, 1445, 1457, 1502, 1557, 1592, 1674, 1681, 1682, 1691, 1696, 1700, 1702, 1722, 1723, 1738, 1758, 1759, 1760, 1766, 1768, 1784, 1881, 1897, 1925, 1936, 1959, 1961, 1963, 1966, 1968, 1969, 1970, 1977, 1978, 1980, 1981, 1986, 1987, 1988, 1990, 1992, 1994, 1996, 1998, 2000, 2002, 2003, 2011, 2013, 2015, 2020, 2027, 2030, 2031, 2035, 2041, 2045], "longer": [1, 25, 44, 53, 54, 481, 682, 885, 900, 914, 915, 1246, 1253, 1674, 1726, 1729, 1966, 1978, 1981, 1998, 2011, 2013, 2030, 2045], "find": [1, 7, 14, 25, 42, 54, 58, 78, 1097, 1167, 1169, 1203, 1271, 1322, 1417, 1418, 1419, 1457, 1736, 1774, 1785, 1820, 1886, 1950, 1963, 1964, 1968, 1970, 1978, 1980, 1981, 1982, 1983, 1985, 1987, 1992, 1994, 1998, 2000, 2001, 2006, 2011, 2015, 2018, 2020, 2022, 2024, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2044, 2045, 2046], "quick": [1, 7, 52, 1962, 1990, 1999, 2028, 2043], "guid": [1, 8, 21, 76, 78, 79, 1261, 1726, 1951, 1959, 1981, 1984, 2003, 2006, 2038, 2043], "var": [1, 35, 40, 42, 45, 1401, 1402, 1403, 1440, 1441, 1449, 1450, 1451, 1459, 1526, 1589, 1788, 1930, 1953, 1955, 1969, 2001, 2033, 2038, 2040, 2045], "thing": [1, 3, 7, 8, 25, 46, 54, 58, 1155, 1259, 1351, 1399, 1594, 1858, 1954, 1978, 1981, 1983, 1984, 1985, 1987, 1992, 2000, 2003, 2006, 2007, 2013, 2030, 2034, 2035, 2038, 2043, 2045], "detach": [1, 5, 218, 443, 453, 964, 1154, 1249, 1406, 1487, 1576, 1594, 1862, 1900, 1952, 1953, 1969, 1971, 1983, 1985, 2000, 2001, 2008, 2015, 2019, 2021, 2044], "register_hook": [1, 1969, 1978], "name": [1, 2, 3, 14, 22, 25, 27, 30, 31, 33, 35, 36, 39, 40, 42, 44, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 83, 675, 692, 742, 743, 752, 787, 809, 810, 811, 812, 819, 835, 849, 853, 927, 930, 932, 974, 1026, 1149, 1154, 1164, 1167, 1171, 1247, 1249, 1250, 1257, 1260, 1265, 1266, 1280, 1285, 1286, 1292, 1293, 1295, 1296, 1297, 1298, 1308, 1309, 1311, 1313, 1314, 1321, 1487, 1537, 1545, 1667, 1672, 1673, 1674, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1723, 1724, 1726, 1735, 1736, 1816, 1826, 1923, 1925, 1928, 1944, 1950, 1951, 1952, 1953, 1955, 1956, 1959, 1961, 1965, 1966, 1968, 1976, 1978, 1981, 1982, 1983, 1987, 1989, 1990, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2011, 2012, 2017, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2031, 2032, 2035, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048], "factori": [1, 2, 11, 31, 33, 36, 40, 54, 819, 934, 1097, 1546, 1727, 1736, 1824, 1951, 1953, 1963, 1970, 1981, 1983, 2001, 2018, 2021, 2033, 2034], "ones": [1, 21, 25, 29, 31, 46, 49, 54, 55, 57, 58, 60, 62, 65, 67, 68, 69, 70, 71, 146, 250, 309, 398, 440, 441, 443, 510, 789, 854, 888, 904, 906, 907, 908, 909, 910, 914, 937, 949, 967, 1080, 1088, 1110, 1154, 1161, 1162, 1165, 1246, 1249, 1261, 1270, 1296, 1312, 1321, 1400, 1420, 1429, 1433, 1440, 1441, 1459, 1487, 1491, 1492, 1494, 1496, 1538, 1547, 1548, 1549, 1583, 1643, 1661, 1665, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1719, 1721, 1724, 1734, 1735, 1788, 1805, 1823, 1828, 1853, 1903, 1907, 1925, 1937, 1953, 1955, 1957, 1963, 1969, 1970, 1978, 1979, 1981, 1983, 1991, 1993, 1994, 2000, 2001, 2002, 2003, 2006, 2011, 2013, 2016, 2018, 2021, 2039, 2044, 2045], "autograd_tensor": 1, "kwarg": [1, 5, 14, 21, 25, 26, 27, 29, 42, 46, 47, 49, 58, 60, 575, 598, 742, 755, 757, 758, 814, 815, 816, 817, 819, 820, 885, 900, 901, 971, 1001, 1003, 1040, 1041, 1154, 1165, 1166, 1168, 1171, 1249, 1252, 1254, 1313, 1339, 1448, 1476, 1487, 1517, 1521, 1525, 1527, 1528, 1665, 1670, 1674, 1696, 1701, 1705, 1715, 1722, 1724, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1816, 1919, 1934, 1950, 1955, 1956, 1983, 1984, 1990, 1998, 2002, 2011, 2017, 2025, 2031, 2032, 2044, 2045, 2046], "base": [1, 3, 7, 9, 12, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 58, 81, 82, 83, 786, 791, 795, 797, 815, 816, 817, 819, 820, 856, 857, 895, 898, 900, 911, 912, 921, 967, 987, 1058, 1059, 1074, 1095, 1097, 1140, 1176, 1184, 1203, 1213, 1251, 1263, 1275, 1313, 1324, 1326, 1328, 1336, 1400, 1423, 1460, 1487, 1490, 1491, 1492, 1496, 1503, 1530, 1532, 1534, 1609, 1643, 1674, 1679, 1680, 1688, 1696, 1700, 1702, 1743, 1754, 1755, 1781, 1791, 1816, 1828, 1885, 1886, 1901, 1911, 1913, 1935, 1951, 1953, 1955, 1980, 1981, 1982, 1983, 1986, 1990, 2004, 2005, 2006, 2011, 2012, 2015, 2016, 2019, 2020, 2022, 2024, 2025, 2032, 2033, 2035, 2037, 2038], "static": [1, 3, 8, 14, 26, 31, 33, 46, 47, 49, 60, 65, 66, 69, 789, 794, 810, 812, 819, 821, 827, 852, 854, 884, 885, 886, 887, 900, 901, 1167, 1168, 1171, 1176, 1189, 1263, 1530, 1674, 1860, 1952, 1953, 1954, 1955, 1981, 1986, 1989, 1997, 1998, 2004, 2007, 2011, 2017, 2030, 2032, 2033, 2038], "Then": [1, 26, 43, 58, 923, 1433, 1538, 1691, 1736, 1923, 1978, 1979, 1981, 1982, 1983, 1984, 1993, 1994, 2000, 2002, 2003, 2011, 2012, 2024, 2030, 2032, 2036], "op": [1, 4, 22, 25, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 78, 82, 83, 146, 498, 519, 599, 752, 787, 788, 789, 818, 821, 849, 856, 857, 888, 895, 898, 900, 901, 909, 957, 967, 1004, 1019, 1021, 1025, 1026, 1040, 1041, 1066, 1070, 1072, 1155, 1200, 1250, 1263, 1265, 1266, 1321, 1327, 1503, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1772, 1830, 1909, 1940, 1942, 1943, 1944, 1947, 1951, 1955, 1959, 1961, 1962, 1964, 1966, 1969, 1970, 1980, 1981, 1982, 1983, 1992, 1998, 2003, 2005, 2006, 2007, 2008, 2009, 2015, 2017, 2019, 2021, 2025, 2030, 2031, 2034, 2035, 2036, 2037, 2038, 2040, 2044, 2045], "directli": [1, 3, 7, 9, 14, 15, 21, 22, 25, 27, 30, 31, 32, 33, 41, 46, 47, 49, 53, 58, 60, 73, 552, 727, 742, 885, 895, 898, 900, 969, 1080, 1148, 1155, 1162, 1164, 1194, 1280, 1493, 1520, 1539, 1603, 1649, 1716, 1907, 1952, 1954, 1955, 1959, 1963, 1966, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1991, 1992, 1995, 2003, 2005, 2006, 2011, 2015, 2020, 2022, 2027, 2032, 2033, 2034, 2035, 2037, 2039, 2044, 2045], "ctx": [1, 40, 60, 64, 884, 885, 886, 895, 896, 897, 898, 899, 900, 901, 1959, 1977, 1983, 1984, 2000], "gradcheck": [1, 1859, 1951, 1983, 2015], "extend": [1, 21, 25, 27, 31, 34, 44, 58, 856, 885, 887, 895, 898, 900, 901, 1489, 1498, 1859, 1923, 1951, 1959, 1971, 1978, 1989, 1991, 1992, 2000, 2001, 2003, 2009, 2015, 2033, 2046], "staticmethod": [1, 60, 885, 887, 895, 896, 897, 898, 899, 900, 901, 1955, 1977, 1983, 2000, 2011], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 21, 22, 25, 27, 31, 33, 35, 40, 43, 46, 47, 49, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 83, 149, 217, 218, 250, 251, 311, 331, 394, 491, 493, 494, 551, 578, 579, 580, 582, 583, 613, 681, 682, 683, 684, 685, 688, 690, 691, 692, 694, 755, 788, 872, 874, 893, 894, 903, 904, 905, 906, 907, 908, 914, 915, 923, 935, 938, 949, 953, 958, 964, 966, 967, 970, 979, 983, 985, 1010, 1012, 1014, 1040, 1041, 1054, 1076, 1077, 1078, 1079, 1080, 1092, 1097, 1115, 1118, 1124, 1133, 1140, 1142, 1145, 1150, 1151, 1154, 1155, 1156, 1159, 1160, 1165, 1166, 1168, 1182, 1190, 1194, 1211, 1212, 1214, 1226, 1240, 1249, 1252, 1253, 1261, 1265, 1266, 1268, 1270, 1271, 1275, 1289, 1291, 1293, 1294, 1302, 1306, 1308, 1310, 1311, 1312, 1319, 1329, 1330, 1337, 1347, 1349, 1350, 1351, 1352, 1354, 1355, 1378, 1381, 1423, 1425, 1426, 1427, 1431, 1433, 1438, 1452, 1457, 1487, 1493, 1502, 1530, 1531, 1532, 1533, 1534, 1538, 1574, 1592, 1603, 1658, 1661, 1662, 1674, 1688, 1691, 1724, 1727, 1728, 1729, 1730, 1736, 1739, 1766, 1772, 1774, 1781, 1782, 1785, 1791, 1804, 1810, 1825, 1852, 1863, 1865, 1866, 1870, 1877, 1879, 1880, 1881, 1884, 1885, 1886, 1896, 1900, 1901, 1906, 1907, 1909, 1910, 1912, 1925, 1929, 1930, 1934, 1952, 1953, 1954, 1955, 1959, 1962, 1963, 1964, 1969, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2011, 2012, 2015, 2018, 2020, 2021, 2022, 2025, 2026, 2027, 2031, 2033, 2034, 2038, 2039, 2042, 2043, 2044, 2045, 2046], "save_for_backward": [1, 885, 895, 897, 899, 900, 901, 1977, 1978, 1983, 1984, 2000], "grad_output": [1, 60, 884, 895, 896, 900, 901, 909, 915, 919, 920, 1249, 1487, 1670, 1671, 1953, 1978, 1981, 1983, 1984, 1990, 2040], "saved_tensor": [1, 895, 897, 898, 899, 900, 901, 1977, 1978, 1983, 1984], "avail": [1, 2, 5, 8, 9, 14, 15, 21, 25, 33, 42, 43, 47, 78, 79, 993, 1020, 1022, 1023, 1034, 1037, 1044, 1045, 1064, 1065, 1067, 1097, 1184, 1256, 1313, 1314, 1339, 1530, 1539, 1603, 1643, 1662, 1774, 1828, 1881, 1886, 1922, 1925, 1941, 1946, 1950, 1951, 1952, 1954, 1955, 1959, 1962, 1968, 1978, 1981, 1983, 1988, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 2002, 2003, 2005, 2006, 2007, 2011, 2025, 2026, 2032, 2037, 2045, 2046], "inspect": [1, 25, 46, 49, 58, 926, 1249, 1261, 1977, 1983, 1989, 2003, 2007, 2018, 2035, 2037, 2039, 2046], "cost": [1, 3, 4, 8, 9, 22, 49, 481, 957, 967, 1305, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1824, 1981, 1986, 1994, 2007, 2012, 2018, 2041, 2045], "both": [1, 2, 3, 14, 21, 22, 25, 26, 27, 31, 35, 40, 41, 42, 43, 46, 47, 49, 57, 58, 60, 68, 69, 93, 335, 494, 724, 763, 764, 767, 768, 769, 788, 846, 887, 894, 900, 901, 904, 905, 906, 907, 908, 935, 973, 987, 1021, 1092, 1098, 1099, 1100, 1113, 1143, 1144, 1145, 1154, 1192, 1194, 1203, 1210, 1226, 1239, 1240, 1246, 1249, 1263, 1271, 1272, 1320, 1336, 1344, 1350, 1364, 1365, 1396, 1397, 1401, 1402, 1403, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1441, 1447, 1449, 1450, 1451, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1480, 1481, 1482, 1487, 1493, 1526, 1534, 1538, 1539, 1542, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1617, 1618, 1619, 1643, 1674, 1683, 1685, 1694, 1724, 1741, 1742, 1754, 1766, 1789, 1790, 1828, 1858, 1860, 1862, 1881, 1885, 1906, 1907, 1942, 1952, 1954, 1955, 1959, 1962, 1969, 1970, 1972, 1977, 1978, 1979, 1983, 1984, 1986, 1987, 1990, 1993, 1994, 1995, 2000, 2003, 2004, 2006, 2009, 2011, 2013, 2015, 2016, 2017, 2022, 2024, 2025, 2026, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2042, 2045], "cpu": [1, 4, 5, 14, 17, 21, 25, 27, 47, 49, 60, 65, 69, 70, 71, 84, 115, 192, 285, 322, 331, 440, 441, 442, 443, 444, 453, 481, 575, 584, 860, 875, 928, 930, 936, 945, 985, 988, 989, 1000, 1010, 1011, 1012, 1014, 1098, 1100, 1110, 1115, 1133, 1145, 1149, 1151, 1152, 1200, 1201, 1207, 1208, 1249, 1257, 1259, 1260, 1269, 1279, 1281, 1285, 1286, 1287, 1288, 1290, 1292, 1295, 1297, 1298, 1304, 1307, 1310, 1313, 1314, 1320, 1321, 1336, 1339, 1350, 1361, 1423, 1429, 1487, 1658, 1674, 1679, 1680, 1715, 1716, 1730, 1733, 1784, 1793, 1795, 1797, 1799, 1800, 1824, 1829, 1830, 1831, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1852, 1862, 1867, 1868, 1869, 1870, 1871, 1872, 1885, 1900, 1901, 1902, 1911, 1913, 1918, 1922, 1948, 1951, 1952, 1953, 1955, 1959, 1963, 1964, 1968, 1969, 1971, 1981, 1983, 1984, 1986, 1988, 1990, 1993, 1994, 1996, 2000, 2001, 2004, 2005, 2007, 2010, 2011, 2015, 2017, 2018, 2021, 2022, 2023, 2026, 2027, 2030, 2032, 2034, 2035, 2037, 2039, 2042, 2043, 2045], "There": [1, 5, 6, 7, 9, 12, 14, 20, 25, 27, 42, 46, 47, 50, 54, 55, 58, 80, 81, 83, 675, 729, 788, 885, 900, 901, 967, 1155, 1423, 1457, 1502, 1643, 1674, 1681, 1682, 1722, 1727, 1950, 1952, 1954, 1955, 1961, 1962, 1970, 1978, 1981, 1983, 1984, 1985, 1989, 1992, 1996, 1997, 2000, 2003, 2005, 2006, 2007, 2011, 2013, 2021, 2023, 2030, 2033, 2034, 2035, 2038, 2044, 2045], "moment": [1, 60, 66, 767, 768, 769, 983, 1741, 1742, 1743, 1745, 1751, 1755, 1964, 1968, 1971, 2005, 2011, 2038, 2042], "nvprof": [1, 4, 924, 1981], "regist": [1, 15, 22, 25, 29, 31, 42, 44, 46, 47, 49, 58, 76, 78, 79, 80, 81, 83, 482, 483, 675, 787, 788, 849, 919, 920, 967, 1043, 1249, 1321, 1487, 1488, 1489, 1497, 1498, 1515, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1688, 1689, 1691, 1692, 1694, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1923, 1925, 1959, 1966, 1968, 1982, 1983, 1989, 1990, 1995, 1998, 2000, 2003, 2011, 2026, 2034, 2037, 2041], "activ": [1, 5, 7, 9, 30, 44, 46, 49, 55, 75, 77, 787, 789, 791, 798, 802, 836, 837, 846, 856, 857, 1008, 1023, 1036, 1054, 1154, 1156, 1166, 1322, 1395, 1425, 1426, 1427, 1431, 1441, 1459, 1486, 1488, 1505, 1516, 1530, 1532, 1534, 1585, 1623, 1646, 1674, 1692, 1694, 1724, 1729, 1934, 1951, 1964, 1968, 1981, 1983, 1984, 1986, 1990, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2011, 2015, 2024, 2025, 2030, 2034, 2040, 2045], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 2005], "use_devic": 1, "record_shap": [1, 2005], "with_flop": [1, 2005], "profile_memori": [1, 2005], "with_stack": [1, 2005], "with_modul": [1, 2005], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 2005], "hold": [1, 25, 27, 40, 42, 44, 45, 46, 49, 53, 57, 58, 532, 1322, 1433, 1488, 1489, 1497, 1498, 1538, 1665, 1674, 1676, 1677, 1691, 1701, 1715, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1867, 1868, 1869, 1870, 1871, 1872, 1979, 1981, 1983, 1985, 1989, 1992, 2002, 2005, 2011, 2012, 2013, 2015, 2017, 2018, 2020, 2021, 2033, 2035, 2038], "summari": [1, 3, 43, 1055, 1832, 1951, 1966, 1986, 2020, 2025, 2039, 2045, 2047], "hood": [1, 46, 57, 1968, 1978, 1981, 1982, 1992, 2003, 2013, 2032, 2034, 2038], "just": [1, 2, 7, 14, 22, 25, 31, 33, 40, 46, 58, 584, 682, 692, 785, 818, 821, 884, 886, 900, 901, 923, 927, 980, 981, 1171, 1265, 1266, 1304, 1307, 1312, 1313, 1339, 1425, 1426, 1427, 1431, 1674, 1694, 1695, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1824, 1910, 1911, 1912, 1913, 1923, 1950, 1952, 1968, 1977, 1978, 1983, 1984, 1987, 1989, 1990, 1991, 1995, 2003, 2004, 2011, 2012, 2015, 2018, 2019, 2021, 2025, 2030, 2031, 2032, 2033, 2034, 2035, 2038, 2044], "record": [1, 5, 29, 34, 35, 36, 40, 43, 46, 57, 58, 440, 441, 442, 443, 444, 481, 491, 814, 815, 816, 817, 820, 822, 860, 933, 936, 945, 1000, 1001, 1003, 1098, 1099, 1100, 1110, 1115, 1133, 1151, 1152, 1153, 1207, 1208, 1249, 1265, 1269, 1320, 1336, 1361, 1364, 1365, 1423, 1487, 1733, 1734, 1736, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1948, 1949, 1952, 1954, 1963, 1971, 1977, 1978, 1981, 1983, 1986, 1997, 1998, 2000, 2005, 2011, 2020, 2021, 2022, 2023, 2024, 2025, 2030, 2033, 2035, 2045, 2047], "event": [1, 28, 31, 33, 41, 44, 57, 481, 927, 928, 929, 1001, 1003, 1054, 1057, 1265, 1266, 1327, 1364, 1365, 1643, 1951, 1966, 1968, 1981, 2005, 2020, 2043, 2047], "being": [1, 3, 5, 9, 12, 21, 25, 27, 29, 31, 33, 35, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 69, 77, 93, 398, 755, 788, 794, 887, 900, 901, 903, 909, 965, 979, 1001, 1009, 1056, 1060, 1074, 1075, 1110, 1143, 1144, 1155, 1164, 1165, 1170, 1238, 1249, 1253, 1339, 1348, 1353, 1399, 1400, 1420, 1422, 1429, 1430, 1434, 1435, 1440, 1446, 1453, 1478, 1479, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1518, 1519, 1535, 1557, 1564, 1565, 1575, 1587, 1588, 1592, 1604, 1628, 1636, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1784, 1785, 1879, 1880, 1881, 1929, 1930, 1952, 1955, 1962, 1966, 1969, 1970, 1971, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1998, 2000, 2003, 2006, 2009, 2011, 2012, 2015, 2022, 2024, 2027, 2030, 2033, 2034, 2035, 2038, 2043, 2045, 2046], "those": [1, 2, 4, 5, 14, 21, 22, 25, 27, 29, 31, 46, 49, 54, 57, 58, 77, 675, 819, 914, 1012, 1022, 1085, 1087, 1166, 1181, 1265, 1307, 1313, 1321, 1360, 1391, 1399, 1400, 1420, 1422, 1430, 1446, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1539, 1564, 1565, 1575, 1584, 1604, 1628, 1636, 1736, 1755, 1885, 1907, 1934, 1954, 1969, 1970, 1977, 1978, 1981, 1983, 1984, 1986, 1988, 1990, 1994, 1995, 2000, 2002, 2009, 2011, 2013, 2030, 2032, 2034, 2035, 2037, 2038, 2039, 2042, 2045], "python": [1, 3, 4, 9, 12, 14, 15, 18, 21, 29, 31, 32, 33, 35, 36, 39, 40, 42, 43, 46, 47, 49, 58, 60, 68, 69, 348, 584, 619, 675, 776, 875, 903, 904, 905, 906, 907, 908, 910, 914, 915, 953, 954, 966, 967, 969, 979, 1034, 1040, 1041, 1043, 1092, 1097, 1115, 1117, 1145, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1225, 1247, 1249, 1250, 1252, 1253, 1254, 1260, 1261, 1265, 1321, 1488, 1489, 1497, 1498, 1643, 1674, 1778, 1800, 1804, 1824, 1825, 1860, 1925, 1926, 1934, 1950, 1959, 1961, 1963, 1967, 1968, 1970, 1978, 1979, 1980, 1981, 1982, 1984, 1985, 1989, 1992, 1995, 1996, 1997, 1998, 2003, 2006, 2010, 2011, 2012, 2013, 2018, 2021, 2022, 2026, 2027, 2029, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2041, 2042, 2045, 2046, 2047], "report": [1, 3, 4, 18, 25, 35, 43, 57, 58, 80, 81, 83, 1000, 1054, 1158, 1159, 1161, 1977, 1981, 2004, 2015, 2035, 2039, 2042, 2045, 2047], "runtim": [1, 3, 5, 14, 25, 30, 33, 46, 47, 58, 822, 873, 927, 1095, 1097, 1171, 1178, 1184, 1189, 1213, 1249, 1255, 1265, 1487, 1676, 1677, 1737, 1780, 1922, 1935, 1955, 1969, 1970, 1978, 1981, 1983, 1992, 1997, 1998, 1999, 2000, 2006, 2026, 2033, 2035, 2041], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 40, 42, 44, 46, 47, 49, 53, 55, 57, 58, 60, 68, 69, 80, 81, 82, 83, 146, 254, 373, 481, 483, 494, 495, 508, 510, 512, 730, 736, 737, 738, 786, 788, 789, 790, 794, 836, 856, 860, 879, 888, 895, 898, 900, 903, 904, 905, 906, 907, 908, 909, 910, 915, 921, 923, 930, 951, 957, 967, 979, 997, 1072, 1080, 1085, 1097, 1118, 1148, 1151, 1166, 1191, 1203, 1236, 1246, 1247, 1249, 1250, 1256, 1322, 1344, 1364, 1365, 1399, 1400, 1406, 1417, 1418, 1419, 1420, 1422, 1429, 1430, 1434, 1438, 1440, 1446, 1452, 1453, 1457, 1478, 1479, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1497, 1498, 1501, 1502, 1509, 1518, 1519, 1526, 1530, 1535, 1539, 1547, 1564, 1565, 1575, 1583, 1584, 1592, 1603, 1604, 1628, 1631, 1636, 1637, 1650, 1665, 1674, 1675, 1681, 1682, 1729, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1758, 1760, 1766, 1768, 1784, 1791, 1866, 1867, 1868, 1869, 1871, 1872, 1877, 1881, 1885, 1907, 1922, 1923, 1925, 1934, 1950, 1952, 1953, 1956, 1962, 1968, 1971, 1972, 1978, 1979, 1980, 1982, 1983, 1984, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1998, 2000, 2002, 2003, 2005, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2019, 2020, 2027, 2032, 2033, 2036, 2043, 2044, 2045, 2048], "propag": [1, 27, 28, 31, 33, 42, 58, 60, 69, 508, 681, 684, 685, 686, 690, 691, 692, 693, 761, 762, 763, 764, 774, 777, 778, 780, 781, 782, 833, 835, 935, 1143, 1144, 1378, 1681, 1682, 1866, 1951, 1968, 1969, 1977, 1981, 1983, 1987, 1989, 2011, 2024, 2025, 2033, 2034, 2035, 2038, 2044], "async": [1, 25, 26, 57, 598, 1674, 1956, 1981, 1989, 2017], "task": [1, 3, 7, 22, 50, 55, 1252, 1268, 1449, 1450, 1451, 1955, 1980, 1989, 1990, 1992, 1996, 2035], "cuda": [1, 3, 4, 5, 14, 16, 20, 21, 22, 25, 27, 29, 30, 49, 56, 84, 146, 285, 309, 317, 331, 336, 481, 510, 512, 519, 575, 860, 872, 874, 888, 909, 930, 936, 938, 945, 967, 972, 998, 999, 1000, 1001, 1003, 1004, 1019, 1021, 1032, 1098, 1099, 1100, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1152, 1207, 1208, 1249, 1269, 1271, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1304, 1307, 1310, 1311, 1313, 1314, 1320, 1321, 1336, 1339, 1355, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1457, 1487, 1502, 1526, 1546, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1592, 1603, 1631, 1643, 1662, 1663, 1664, 1665, 1674, 1676, 1677, 1679, 1680, 1681, 1682, 1728, 1730, 1733, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1784, 1793, 1795, 1797, 1799, 1800, 1824, 1828, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1885, 1900, 1902, 1911, 1913, 1918, 1922, 1948, 1951, 1953, 1959, 1963, 1969, 1971, 1983, 1984, 1986, 1990, 1993, 2000, 2001, 2002, 2004, 2005, 2010, 2011, 2015, 2017, 2018, 2021, 2022, 2023, 2026, 2027, 2032, 2034, 2037, 2042, 2045], "cudaev": 1, "approxim": [1, 3, 22, 29, 42, 58, 1162, 1203, 1313, 1322, 1391, 1436, 1501, 1516, 1523, 1590, 1636, 1646, 1689, 1738, 1755, 1774, 1828, 1886, 1907, 1953, 1955, 1981, 1982, 1983, 1987, 2000, 2040, 2048], "4u": 1, "shape": [1, 5, 8, 11, 12, 22, 25, 30, 31, 47, 49, 51, 53, 55, 58, 59, 60, 61, 62, 65, 66, 68, 72, 93, 167, 187, 204, 214, 396, 398, 440, 442, 444, 466, 492, 493, 508, 510, 512, 539, 561, 612, 675, 680, 682, 683, 692, 730, 740, 741, 751, 753, 755, 759, 761, 762, 763, 764, 767, 768, 769, 776, 791, 873, 879, 895, 897, 900, 904, 906, 907, 908, 927, 937, 938, 940, 943, 948, 950, 954, 955, 959, 960, 967, 979, 982, 1013, 1087, 1088, 1089, 1091, 1092, 1097, 1098, 1100, 1102, 1117, 1118, 1119, 1120, 1128, 1129, 1130, 1136, 1142, 1143, 1144, 1145, 1152, 1159, 1160, 1164, 1165, 1166, 1171, 1184, 1191, 1193, 1206, 1211, 1212, 1216, 1224, 1226, 1240, 1246, 1263, 1265, 1266, 1269, 1274, 1275, 1279, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1338, 1339, 1343, 1351, 1356, 1357, 1372, 1373, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1583, 1584, 1588, 1592, 1594, 1603, 1604, 1609, 1617, 1618, 1619, 1629, 1630, 1633, 1634, 1635, 1637, 1643, 1662, 1665, 1674, 1676, 1677, 1688, 1691, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1730, 1733, 1735, 1737, 1772, 1781, 1785, 1789, 1790, 1793, 1795, 1796, 1797, 1804, 1806, 1807, 1811, 1820, 1823, 1847, 1862, 1863, 1865, 1868, 1870, 1876, 1881, 1882, 1885, 1896, 1903, 1907, 1917, 1918, 1919, 1920, 1934, 1937, 1948, 1952, 1953, 1955, 1959, 1969, 1970, 1971, 1978, 1979, 1981, 1983, 1984, 1985, 1998, 2001, 2005, 2008, 2011, 2015, 2016, 2020, 2021, 2022, 2023, 2026, 2032, 2035, 2040, 2044, 2045], "about": [1, 8, 9, 12, 17, 21, 25, 26, 27, 29, 33, 35, 39, 41, 43, 46, 50, 54, 58, 82, 251, 481, 493, 613, 914, 915, 921, 972, 979, 1005, 1006, 1022, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1061, 1062, 1063, 1155, 1170, 1171, 1178, 1279, 1286, 1430, 1715, 1751, 1755, 1766, 1827, 1950, 1952, 1954, 1955, 1959, 1962, 1980, 1981, 1982, 1983, 1985, 1986, 1989, 1992, 1993, 1995, 1997, 2003, 2005, 2006, 2009, 2012, 2013, 2015, 2019, 2021, 2031, 2033, 2035, 2038, 2041, 2045], "dimens": [1, 11, 21, 25, 30, 31, 46, 49, 54, 55, 58, 60, 65, 69, 72, 80, 214, 228, 229, 250, 256, 309, 311, 313, 317, 428, 429, 467, 468, 469, 488, 508, 510, 512, 532, 538, 540, 541, 555, 578, 579, 580, 582, 583, 602, 612, 681, 687, 688, 690, 691, 692, 694, 730, 753, 774, 776, 780, 869, 870, 871, 872, 881, 882, 883, 887, 900, 901, 909, 946, 954, 957, 958, 959, 960, 961, 997, 1012, 1014, 1076, 1077, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1095, 1097, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1166, 1167, 1168, 1169, 1170, 1174, 1178, 1191, 1203, 1212, 1213, 1224, 1226, 1246, 1270, 1271, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1329, 1330, 1337, 1340, 1344, 1347, 1349, 1350, 1351, 1352, 1355, 1357, 1371, 1378, 1379, 1380, 1381, 1382, 1383, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1428, 1429, 1430, 1432, 1433, 1436, 1437, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1459, 1467, 1468, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1486, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1505, 1506, 1507, 1509, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1534, 1535, 1536, 1537, 1538, 1557, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1591, 1592, 1593, 1594, 1603, 1606, 1609, 1610, 1611, 1629, 1630, 1631, 1643, 1649, 1650, 1662, 1681, 1682, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1709, 1710, 1716, 1717, 1719, 1721, 1723, 1726, 1728, 1729, 1772, 1775, 1782, 1784, 1785, 1786, 1791, 1805, 1806, 1807, 1811, 1820, 1822, 1823, 1832, 1853, 1857, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1878, 1879, 1880, 1881, 1884, 1885, 1895, 1897, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1951, 1953, 1954, 1955, 1971, 1976, 1979, 1981, 1984, 1985, 1987, 1993, 1998, 2004, 2006, 2015, 2016, 2018, 2020, 2021, 2027, 2033, 2040], "collect": [1, 3, 7, 21, 26, 27, 29, 33, 42, 49, 57, 58, 794, 795, 819, 856, 857, 955, 1036, 1098, 1212, 1351, 1674, 1705, 1733, 1793, 1797, 1948, 1951, 1953, 1954, 1955, 1959, 1966, 1981, 1982, 1984, 2002, 2005, 2006, 2009, 2013, 2015, 2020, 2022, 2035, 2038, 2042, 2044, 2045, 2047], "further": [1, 4, 9, 12, 14, 22, 25, 49, 57, 60, 70, 71, 481, 1171, 1194, 1253, 1289, 1391, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1674, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1772, 1955, 1962, 1986, 1990, 1992, 2003, 2005, 2013, 2020, 2025, 2029, 2033, 2040, 2043, 2045], "group": [1, 3, 9, 21, 22, 26, 27, 29, 33, 39, 42, 43, 44, 45, 49, 52, 58, 605, 675, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 767, 768, 769, 875, 927, 1171, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1441, 1463, 1464, 1465, 1466, 1467, 1468, 1526, 1567, 1568, 1569, 1570, 1571, 1572, 1593, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1919, 1950, 1951, 1953, 1955, 1968, 1976, 1981, 1982, 1986, 2000, 2002, 2003, 2005, 2011, 2020, 2031, 2035, 2040, 2045], "prof": [1, 39, 930, 2005, 2035, 2043, 2045], "key_averag": [1, 930, 2005], "group_by_input_shap": [1, 927, 2005], "skew": [1, 3, 4, 1301, 1688], "neglig": [1, 1262, 1828], "bottom": [1, 49, 1592, 1962, 2043], "But": [1, 7, 49, 57, 481, 1265, 1295, 1674, 1978, 1983, 1985, 1987, 1994, 2003, 2004, 2015, 2019, 2034, 2035, 2038, 2039, 2046], "total": [1, 3, 4, 7, 21, 22, 25, 39, 41, 42, 43, 49, 872, 928, 930, 1014, 1049, 1054, 1067, 1151, 1211, 1212, 1359, 1406, 1433, 1446, 1453, 1478, 1493, 1538, 1630, 1674, 1679, 1728, 1730, 1732, 1760, 1766, 1806, 1832, 1881, 1950, 1954, 1966, 1981, 1986, 1988, 1992, 2002, 2015], "artifici": [1, 2015], "increas": [1, 3, 7, 22, 25, 31, 39, 49, 675, 849, 895, 897, 900, 951, 1022, 1054, 1097, 1211, 1212, 1391, 1400, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1499, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1634, 1635, 1643, 1753, 1759, 1760, 1764, 1766, 1768, 1820, 1828, 1907, 1928, 1953, 1961, 1967, 1980, 1981, 1988, 1992, 2007, 2015, 2030, 2035, 2039], "estim": [1, 3, 21, 31, 983, 987, 1203, 1246, 1401, 1402, 1403, 1436, 1440, 1441, 1449, 1450, 1451, 1459, 1526, 1590, 1689, 1752, 1848, 2005], "flop": [1, 2005], "hardwar": [1, 8, 854, 856, 857, 1285, 1286, 1313, 1922, 1981, 1992, 1994, 2007, 2015, 2035, 2037, 2045], "matrix": [1, 2, 22, 25, 31, 187, 204, 681, 684, 685, 686, 755, 935, 937, 946, 947, 955, 957, 958, 959, 960, 967, 983, 987, 1080, 1084, 1085, 1087, 1097, 1166, 1194, 1199, 1214, 1270, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1317, 1319, 1322, 1330, 1339, 1341, 1344, 1354, 1373, 1375, 1429, 1430, 1438, 1457, 1538, 1547, 1548, 1549, 1583, 1584, 1688, 1694, 1723, 1729, 1772, 1773, 1774, 1784, 1828, 1855, 1858, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1885, 1886, 1902, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1928, 1934, 1951, 1955, 1969, 1970, 1971, 1976, 1980, 1981, 1983, 1987, 1990, 1993, 2005, 2015, 2020, 2021, 2035], "2d": [1, 27, 31, 582, 583, 695, 698, 701, 730, 734, 737, 761, 763, 768, 774, 778, 780, 781, 782, 983, 987, 1085, 1097, 1305, 1306, 1389, 1393, 1397, 1400, 1401, 1402, 1415, 1418, 1422, 1426, 1430, 1434, 1449, 1450, 1455, 1481, 1490, 1492, 1493, 1494, 1539, 1540, 1541, 1552, 1555, 1557, 1560, 1565, 1568, 1571, 1579, 1584, 1587, 1614, 1618, 1628, 1631, 1689, 1723, 1790, 1865, 1870, 1909, 1964, 1976, 1983, 2005, 2006, 2015], "alloc": [1, 4, 11, 18, 22, 27, 31, 33, 42, 49, 250, 327, 440, 441, 442, 443, 444, 481, 999, 1001, 1003, 1005, 1006, 1008, 1021, 1022, 1023, 1046, 1048, 1050, 1052, 1053, 1054, 1055, 1062, 1063, 1067, 1098, 1100, 1149, 1168, 1173, 1176, 1178, 1196, 1358, 1359, 1360, 1368, 1793, 1797, 1799, 1824, 1900, 1942, 1951, 1968, 1971, 1978, 1982, 1986, 1988, 1992, 1998, 2005, 2018, 2029, 2030, 2033, 2034, 2043], "dealloc": [1, 58, 481, 1151, 1968, 1981, 1985, 1988, 2005], "line": [1, 4, 18, 25, 33, 46, 47, 58, 675, 910, 927, 1097, 1155, 1249, 1260, 1487, 1557, 1592, 1832, 1860, 1952, 1955, 1956, 1963, 1971, 1979, 1983, 1987, 1988, 1994, 1996, 2000, 2005, 2015, 2029, 2032, 2035, 2037, 2038, 2039, 2042, 2045, 2047], "hierarchi": [1, 27, 46, 58, 835, 1253, 1741, 1742, 1754, 1956, 1983, 2005, 2006, 2033], "callstack": [1, 25, 2005], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 39, 42, 43, 44, 46, 47, 49, 50, 55, 57, 60, 61, 62, 65, 81, 84, 555, 575, 578, 579, 580, 589, 619, 675, 687, 692, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 740, 741, 751, 756, 757, 758, 759, 760, 785, 787, 809, 853, 854, 856, 857, 929, 936, 945, 946, 948, 953, 958, 959, 960, 966, 967, 969, 972, 973, 974, 979, 983, 987, 1000, 1001, 1003, 1011, 1013, 1014, 1082, 1097, 1102, 1110, 1111, 1112, 1124, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1171, 1172, 1193, 1203, 1206, 1207, 1208, 1212, 1239, 1240, 1241, 1242, 1245, 1247, 1249, 1252, 1257, 1260, 1262, 1265, 1266, 1270, 1274, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1319, 1322, 1330, 1338, 1339, 1340, 1341, 1345, 1384, 1400, 1404, 1406, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1439, 1440, 1448, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1477, 1486, 1487, 1493, 1515, 1520, 1522, 1530, 1535, 1536, 1546, 1550, 1557, 1563, 1575, 1594, 1604, 1611, 1623, 1643, 1649, 1650, 1665, 1675, 1676, 1677, 1683, 1685, 1688, 1691, 1694, 1716, 1717, 1720, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1759, 1760, 1762, 1765, 1766, 1768, 1774, 1784, 1786, 1787, 1788, 1789, 1790, 1801, 1807, 1813, 1816, 1848, 1857, 1860, 1861, 1864, 1876, 1880, 1881, 1885, 1886, 1904, 1909, 1910, 1911, 1912, 1913, 1917, 1918, 1919, 1921, 1922, 1930, 1934, 1937, 1950, 1952, 1953, 1954, 1955, 1959, 1962, 1964, 1969, 1970, 1976, 1977, 1980, 1981, 1983, 1984, 1985, 1986, 1992, 1993, 1995, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2025, 2030, 2031, 2032, 2034, 2035, 2037, 2038, 2040, 2043, 2044, 2045, 2046, 2047, 2048], "aten": [1, 3, 12, 14, 18, 46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 81, 1040, 1155, 1373, 1735, 1736, 1860, 1952, 1953, 1959, 1980, 1983, 1996, 1998, 2001, 2005, 2006, 2015, 2026, 2031, 2036, 2039, 2045], "torchscript": [1, 3, 8, 29, 46, 47, 58, 612, 1247, 1250, 1252, 1253, 1254, 1256, 1261, 1265, 1267, 1736, 1951, 1956, 1995, 2005, 2011, 2047], "eager": [1, 8, 46, 967, 1072, 1168, 1170, 1247, 1250, 1261, 1831, 1955, 1981, 1986, 2005, 2007, 2009, 2021, 2030, 2035, 2036, 2037, 2042, 2045], "experiment": [1, 2, 22, 25, 27, 29, 30, 46, 47, 49, 58, 60, 63, 68, 69, 72, 229, 903, 905, 909, 967, 974, 1071, 1155, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1280, 1291, 1293, 1294, 1298, 1311, 1674, 1755, 1951, 1952, 1954, 1963, 1969, 1970, 1981, 1982, 1994, 1996, 1998, 2000, 2003, 2004, 2005, 2033, 2034, 2035, 2045], "kineto": [1, 923, 2005], "_experimentalconfig": [1, 2005], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 21, 25, 32, 40, 44, 50, 53, 54, 55, 58, 675, 923, 985, 1001, 1024, 1028, 1040, 1148, 1262, 1293, 1339, 1852, 1966, 1980, 1981, 1982, 1983, 1984, 1985, 1989, 1990, 1992, 1993, 1996, 2000, 2003, 2005, 2006, 2011, 2027, 2035, 2046], "100": [1, 21, 25, 29, 31, 58, 60, 68, 69, 74, 296, 733, 734, 737, 738, 923, 1210, 1249, 1261, 1267, 1305, 1320, 1327, 1336, 1351, 1372, 1391, 1399, 1400, 1401, 1402, 1403, 1415, 1416, 1418, 1419, 1421, 1422, 1449, 1450, 1451, 1487, 1494, 1496, 1526, 1535, 1574, 1575, 1628, 1744, 1756, 1757, 1762, 1763, 1764, 1765, 1767, 1769, 1770, 1786, 1841, 1920, 1953, 1955, 1968, 1980, 1981, 2000, 2002, 2007, 2013, 2015, 2020, 2031, 2032, 2038, 2039], "realli": [1, 7, 58, 969, 1171, 1955, 1978, 2003, 2034], "y": [1, 11, 14, 21, 31, 39, 46, 47, 49, 54, 55, 58, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 481, 612, 615, 776, 879, 881, 882, 883, 893, 894, 895, 898, 900, 901, 903, 904, 905, 906, 907, 908, 910, 911, 930, 949, 955, 980, 987, 1040, 1041, 1080, 1091, 1097, 1101, 1154, 1156, 1159, 1160, 1161, 1165, 1166, 1190, 1256, 1261, 1265, 1318, 1327, 1328, 1351, 1399, 1400, 1401, 1402, 1403, 1404, 1420, 1422, 1441, 1446, 1447, 1449, 1450, 1451, 1453, 1459, 1474, 1478, 1479, 1490, 1491, 1492, 1494, 1496, 1518, 1519, 1526, 1529, 1535, 1536, 1563, 1592, 1609, 1633, 1665, 1694, 1727, 1788, 1806, 1808, 1809, 1862, 1876, 1903, 1907, 1908, 1934, 1937, 1952, 1953, 1954, 1955, 1959, 1969, 1970, 1976, 1978, 1979, 1980, 1981, 1984, 1987, 1988, 1991, 1998, 2000, 2003, 2006, 2011, 2013, 2016, 2020, 2023, 2024, 2025, 2030, 2031, 2033, 2035, 2038, 2044, 2045], "column": [1, 3, 22, 25, 30, 187, 256, 579, 582, 930, 965, 983, 987, 1080, 1110, 1138, 1139, 1215, 1285, 1286, 1289, 1305, 1308, 1313, 1317, 1322, 1373, 1496, 1538, 1583, 1584, 1688, 1774, 1784, 1865, 1867, 1868, 1869, 1871, 1872, 1885, 1907, 1911, 1913, 1928, 1976, 1987, 2015], "were": [1, 2, 3, 18, 25, 33, 42, 45, 49, 54, 57, 58, 146, 317, 331, 466, 481, 849, 884, 886, 888, 900, 901, 909, 930, 1043, 1155, 1166, 1257, 1321, 1557, 1674, 1679, 1701, 1718, 1820, 1824, 1896, 1903, 1934, 1954, 1962, 1977, 1981, 1983, 1995, 2000, 2003, 2030, 2034, 2035, 2041, 2044, 2045], "remov": [1, 3, 21, 22, 25, 27, 30, 31, 43, 45, 49, 58, 482, 483, 508, 541, 552, 692, 792, 810, 811, 812, 854, 919, 920, 923, 930, 934, 957, 958, 1043, 1155, 1167, 1195, 1246, 1249, 1253, 1339, 1340, 1344, 1408, 1409, 1410, 1487, 1488, 1497, 1594, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1689, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1710, 1711, 1713, 1714, 1724, 1726, 1729, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1784, 1800, 1822, 1876, 1885, 1909, 1916, 1918, 1950, 1951, 1964, 1972, 1978, 1983, 1990, 1995, 2000, 2001, 2003, 2013, 2017, 2022, 2035, 2037, 2041, 2044], "breviti": [1, 58, 930, 987, 2000], "print": [1, 3, 5, 12, 18, 21, 25, 33, 34, 39, 40, 43, 46, 47, 49, 54, 57, 715, 723, 724, 729, 740, 741, 751, 759, 917, 919, 920, 930, 1154, 1155, 1164, 1171, 1249, 1253, 1256, 1257, 1261, 1339, 1404, 1407, 1448, 1474, 1487, 1499, 1500, 1574, 1631, 1634, 1635, 1694, 1704, 1705, 1706, 1707, 1710, 1720, 1724, 1736, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1832, 1926, 1950, 1952, 1953, 1963, 1978, 1980, 1981, 1983, 1990, 1991, 1998, 1999, 2000, 2001, 2003, 2005, 2011, 2020, 2021, 2024, 2025, 2030, 2031, 2032, 2035, 2037, 2038, 2045], "tabl": [1, 3, 25, 58, 930, 1429, 1583, 1953, 1955, 1983, 2002, 2003, 2005, 2006, 2011, 2015, 2022, 2034, 2036, 2039, 2042, 2045], "sort_bi": [1, 930, 2005], "self_cpu_time_tot": [1, 930, 2005], "avg": [1, 25, 930, 1739], "mul": [1, 18, 46, 58, 60, 63, 66, 68, 73, 415, 742, 743, 752, 930, 1226, 1374, 1952, 1953, 1955, 1969, 1971, 1983, 2000, 2001, 2008, 2012, 2015, 2018, 2024, 2031, 2033, 2040, 2044], "32": [1, 2, 22, 25, 46, 84, 741, 1151, 1246, 1259, 1339, 1397, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1455, 1475, 1481, 1492, 1530, 1531, 1532, 1533, 1534, 1546, 1557, 1587, 1588, 1594, 1643, 1970, 1971, 1990, 1994, 1998, 2000, 2009, 2015, 2018, 2020, 2021, 2032, 2038, 2039], "048m": 1, "200": [1, 29, 1249, 1327, 1487, 1786, 1955, 2015, 2045], "27": [1, 612, 1317, 1759, 1781, 1928, 2000], "041m": 1, "powbackward0": [1, 930], "9": [1, 7, 21, 22, 25, 32, 58, 60, 65, 309, 311, 313, 317, 397, 398, 466, 508, 555, 576, 578, 692, 740, 741, 849, 951, 957, 961, 965, 987, 1080, 1095, 1098, 1119, 1120, 1129, 1130, 1140, 1143, 1144, 1147, 1148, 1203, 1213, 1279, 1281, 1302, 1304, 1306, 1317, 1319, 1382, 1383, 1389, 1390, 1393, 1394, 1407, 1409, 1429, 1430, 1483, 1484, 1499, 1500, 1509, 1512, 1583, 1584, 1631, 1634, 1635, 1729, 1730, 1739, 1741, 1742, 1743, 1744, 1745, 1751, 1754, 1755, 1756, 1760, 1766, 1768, 1769, 1773, 1777, 1813, 1820, 1829, 1832, 1842, 1847, 1857, 1865, 1873, 1900, 1901, 1905, 1907, 1916, 1928, 1935, 1952, 1956, 1962, 1985, 1990, 1995, 1996, 2000, 2001, 2002, 2003, 2011, 2015, 2016, 2018, 2022], "727m": 1, "55": [1, 1440, 2000], "483m": 1, "accumulategrad": [1, 930, 1978], "148m": 1, "graphroot": [1, 930], "691": 1, "816u": 1, "emit": [1, 14, 34, 39, 58, 675, 1171, 1265, 1834, 1955, 1961, 1998, 2010, 2015], "nvtx": [1, 4, 1951], "program": [1, 3, 4, 8, 12, 18, 21, 24, 25, 34, 43, 45, 46, 47, 49, 58, 612, 923, 980, 981, 1046, 1048, 1155, 1181, 1828, 1952, 1954, 1956, 1967, 1978, 1981, 1985, 1989, 1991, 1992, 1994, 1995, 1996, 1998, 2006, 2020, 2026, 2030, 2032, 2033, 2034, 2035, 2037, 2041, 2043, 2045, 2047], "off": [1, 5, 7, 8, 14, 24, 25, 33, 49, 58, 77, 911, 912, 936, 945, 1058, 1155, 1207, 1208, 1246, 1265, 1313, 1396, 1397, 1398, 1400, 1480, 1481, 1482, 1592, 1631, 1980, 1981, 1982, 1985, 1989, 1993, 1994, 2005, 2006, 2007, 2011, 2012, 2033, 2034, 2038, 2042], "o": [1, 22, 25, 26, 27, 31, 43, 44, 45, 46, 58, 1249, 1321, 1364, 1365, 1366, 1458, 1487, 1493, 1674, 1816, 1950, 1956, 1968, 1978, 1981, 1982, 1985, 1996, 2003, 2004, 2011, 2027], "trace_nam": 1, "regular": [1, 3, 4, 25, 33, 43, 49, 52, 58, 1040, 1041, 1154, 1171, 1182, 1297, 1298, 1406, 1424, 1425, 1426, 1427, 1431, 1472, 1486, 1487, 1488, 1489, 1497, 1498, 1585, 1623, 1665, 1676, 1677, 1724, 1742, 1751, 1955, 1959, 1970, 1971, 1981, 1983, 1984, 1989, 1990, 1998, 2000, 2003, 2006, 2009, 2011, 2015, 2016, 2023, 2025, 2038], "command": [1, 4, 25, 33, 40, 43, 58, 1981, 1988, 1992, 1996, 2004, 2005, 2012, 2027, 2039, 2042], "unfortun": [1, 9, 21, 46, 1674, 1978, 1983, 2032, 2034], "wai": [1, 3, 5, 7, 8, 9, 14, 21, 22, 25, 27, 29, 31, 35, 39, 46, 49, 51, 52, 57, 58, 146, 575, 675, 791, 814, 817, 820, 856, 857, 885, 888, 900, 901, 904, 906, 907, 908, 909, 914, 921, 1118, 1120, 1155, 1171, 1181, 1182, 1203, 1249, 1279, 1280, 1295, 1310, 1399, 1430, 1449, 1450, 1451, 1457, 1469, 1470, 1471, 1487, 1515, 1532, 1534, 1584, 1637, 1674, 1692, 1722, 1755, 1759, 1766, 1952, 1954, 1955, 1961, 1962, 1963, 1966, 1968, 1969, 1970, 1978, 1980, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1993, 1996, 1998, 2000, 2002, 2003, 2006, 2011, 2012, 2015, 2019, 2021, 2025, 2030, 2031, 2033, 2034, 2035, 2038, 2043, 2044, 2045, 2047], "disk": [1, 21, 1321, 1816, 1978, 1990, 2003, 2020], "annot": [1, 30, 35, 40, 58, 924, 1247, 1255, 1261, 1952, 1954, 1956, 2000, 2011, 2035, 2036, 2038], "wait": [1, 18, 25, 33, 40, 42, 57, 481, 819, 996, 1000, 1001, 1003, 1073, 1252, 1361, 1364, 1365, 1370, 1768, 1953, 1955, 1968, 1980, 1981, 1982, 2001, 2005, 2011, 2035, 2043, 2047], "either": [1, 8, 9, 14, 18, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 57, 58, 150, 217, 309, 317, 508, 510, 612, 675, 727, 733, 734, 735, 740, 741, 751, 759, 774, 780, 786, 853, 885, 887, 895, 898, 900, 901, 910, 914, 915, 934, 954, 967, 1011, 1097, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1151, 1155, 1203, 1226, 1242, 1249, 1265, 1305, 1320, 1321, 1336, 1351, 1389, 1390, 1393, 1394, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1430, 1440, 1446, 1453, 1455, 1456, 1478, 1479, 1481, 1482, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1504, 1518, 1519, 1534, 1535, 1537, 1539, 1540, 1541, 1564, 1565, 1575, 1603, 1604, 1628, 1636, 1662, 1669, 1674, 1707, 1729, 1741, 1742, 1744, 1751, 1754, 1766, 1781, 1783, 1825, 1828, 1881, 1885, 1937, 1950, 1952, 1954, 1955, 1957, 1961, 1970, 1976, 1978, 1979, 1981, 1983, 1984, 1985, 1987, 1989, 1990, 1992, 1994, 1998, 2000, 2002, 2003, 2004, 2006, 2012, 2013, 2015, 2016, 2019, 2022, 2033, 2036, 2048], "nvidia": [1, 14, 25, 1009, 1022, 1050, 1056, 1060, 1074, 1075, 1922, 1951, 1981, 1985, 1988, 1994, 1996, 2006, 2015, 2023, 2026, 2042, 2043, 2045], "visual": [1, 58, 1351, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1480, 1481, 1482, 1538, 1951, 1981, 1990, 1996, 1998, 2005, 2020, 2035, 2043, 2045], "nvvp": 1, "timelin": [1, 4, 1364, 1365, 1951, 2005], "load_nvprof": 1, "load": [1, 11, 14, 15, 22, 27, 29, 46, 49, 832, 857, 926, 967, 999, 1249, 1253, 1260, 1265, 1430, 1487, 1665, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1816, 1951, 1952, 1963, 1964, 1965, 1970, 1978, 1981, 1989, 1990, 1994, 1996, 2000, 2011, 2020, 2027, 2037, 2039, 2043, 2045], "repl": [1, 2037], "append": [1, 3, 27, 57, 58, 60, 65, 225, 250, 602, 756, 758, 760, 1043, 1087, 1089, 1344, 1439, 1458, 1489, 1498, 1502, 1504, 1515, 1674, 1953, 1954, 1955, 1978, 1980, 1981, 1992, 1996, 2000, 2001, 2015, 2020, 2035, 2038, 2044], "size": [1, 2, 3, 7, 18, 21, 22, 25, 27, 30, 31, 33, 42, 46, 47, 49, 52, 58, 60, 61, 66, 68, 69, 74, 134, 204, 238, 250, 251, 309, 311, 317, 335, 440, 441, 442, 444, 482, 488, 493, 494, 495, 508, 510, 512, 515, 518, 539, 540, 541, 561, 576, 578, 579, 580, 582, 583, 601, 602, 612, 613, 675, 685, 686, 688, 690, 691, 692, 694, 715, 723, 724, 730, 736, 737, 738, 740, 741, 751, 759, 761, 762, 763, 764, 774, 780, 781, 782, 791, 853, 860, 872, 873, 875, 887, 900, 901, 903, 904, 905, 906, 907, 908, 927, 935, 936, 938, 945, 947, 948, 949, 950, 951, 958, 961, 967, 987, 997, 1005, 1011, 1012, 1014, 1054, 1078, 1079, 1085, 1088, 1095, 1097, 1098, 1099, 1100, 1103, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1149, 1151, 1152, 1153, 1160, 1161, 1166, 1170, 1171, 1174, 1178, 1182, 1191, 1207, 1208, 1212, 1213, 1224, 1226, 1246, 1249, 1271, 1280, 1289, 1294, 1302, 1306, 1310, 1313, 1315, 1316, 1317, 1319, 1320, 1322, 1330, 1336, 1337, 1339, 1340, 1344, 1347, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1373, 1375, 1378, 1381, 1383, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1440, 1441, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1526, 1530, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1565, 1570, 1571, 1572, 1575, 1576, 1583, 1584, 1587, 1588, 1592, 1603, 1610, 1617, 1618, 1619, 1628, 1629, 1631, 1634, 1635, 1637, 1643, 1662, 1663, 1664, 1665, 1674, 1690, 1705, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1726, 1728, 1730, 1733, 1734, 1744, 1753, 1772, 1773, 1774, 1775, 1777, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1806, 1811, 1820, 1823, 1841, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1900, 1901, 1902, 1907, 1909, 1917, 1918, 1919, 1920, 1921, 1929, 1930, 1932, 1933, 1934, 1935, 1948, 1949, 1951, 1952, 1953, 1955, 1959, 1963, 1964, 1966, 1969, 1970, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1987, 1988, 1989, 1994, 1995, 2000, 2001, 2004, 2005, 2006, 2008, 2011, 2015, 2017, 2018, 2020, 2021, 2027, 2030, 2032, 2033, 2034, 2035, 2039, 2040, 2043, 2045, 2047], "format": [1, 19, 22, 25, 27, 35, 44, 47, 58, 77, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 293, 321, 327, 389, 494, 495, 520, 575, 578, 579, 580, 581, 582, 583, 675, 730, 755, 787, 788, 964, 1043, 1097, 1098, 1099, 1153, 1167, 1171, 1174, 1246, 1249, 1263, 1292, 1406, 1430, 1438, 1457, 1487, 1502, 1534, 1674, 1681, 1682, 1716, 1718, 1734, 1736, 1794, 1796, 1798, 1816, 1858, 1862, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1949, 1950, 1952, 1955, 1956, 1961, 1972, 1981, 1983, 1990, 1997, 1998, 2000, 2001, 2005, 2006, 2011, 2012, 2015, 2018, 2020, 2022, 2043, 2045], "arg0": [1, 25, 60, 69, 1998], "arg1": [1, 25, 40, 41, 43, 47, 60, 62, 71, 1998], "repres": [1, 8, 11, 21, 22, 25, 27, 30, 31, 32, 33, 35, 36, 42, 44, 46, 47, 49, 58, 76, 78, 229, 755, 787, 788, 791, 884, 900, 901, 969, 974, 983, 987, 998, 1030, 1033, 1097, 1118, 1120, 1125, 1127, 1128, 1129, 1130, 1155, 1169, 1179, 1203, 1210, 1238, 1239, 1242, 1245, 1248, 1265, 1266, 1297, 1339, 1391, 1406, 1487, 1493, 1534, 1536, 1538, 1546, 1547, 1548, 1549, 1674, 1687, 1691, 1696, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1715, 1725, 1736, 1760, 1766, 1772, 1774, 1785, 1828, 1867, 1868, 1869, 1871, 1872, 1881, 1885, 1918, 1919, 1925, 1932, 1933, 1952, 1954, 1955, 1959, 1962, 1963, 1966, 1971, 1978, 1983, 1984, 1987, 1989, 1990, 1993, 1997, 1998, 2000, 2004, 2006, 2007, 2009, 2011, 2015, 2018, 2033, 2034, 2038, 2047, 2048], "order": [1, 3, 5, 25, 26, 27, 29, 31, 43, 46, 49, 50, 55, 57, 58, 146, 187, 204, 229, 309, 311, 313, 317, 327, 398, 482, 483, 675, 787, 788, 797, 849, 871, 888, 890, 909, 919, 920, 934, 946, 957, 1001, 1043, 1054, 1085, 1088, 1089, 1097, 1115, 1117, 1118, 1124, 1136, 1137, 1138, 1139, 1156, 1166, 1203, 1249, 1269, 1280, 1286, 1288, 1295, 1302, 1305, 1306, 1313, 1314, 1317, 1319, 1322, 1351, 1357, 1371, 1373, 1391, 1400, 1406, 1423, 1487, 1488, 1497, 1514, 1515, 1557, 1565, 1592, 1617, 1618, 1619, 1643, 1665, 1674, 1691, 1701, 1715, 1716, 1717, 1718, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1766, 1772, 1775, 1785, 1820, 1823, 1847, 1857, 1885, 1904, 1911, 1913, 1918, 1922, 1928, 1934, 1950, 1951, 1952, 1953, 1955, 1956, 1959, 1968, 1969, 1970, 1971, 1976, 1979, 1981, 1982, 1983, 1984, 1986, 1987, 1990, 1993, 1995, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2011, 2012, 2013, 2015, 2016, 2018, 2022, 2025, 2027, 2030, 2031, 2033, 2035, 2039, 2043, 2045], "backend": [1, 14, 41, 45, 47, 49, 736, 737, 738, 787, 788, 828, 850, 851, 854, 856, 857, 903, 909, 967, 974, 1023, 1054, 1097, 1155, 1170, 1174, 1263, 1286, 1293, 1295, 1313, 1364, 1365, 1366, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1545, 1550, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1592, 1631, 1643, 1674, 1736, 1737, 1828, 1923, 1925, 1951, 1953, 1954, 1964, 1967, 1980, 1981, 1983, 1993, 1994, 2000, 2007, 2009, 2015, 2032, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2050], "side": [1, 14, 25, 42, 44, 46, 47, 54, 58, 60, 63, 481, 763, 764, 767, 768, 769, 960, 1032, 1091, 1113, 1114, 1116, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1133, 1246, 1247, 1294, 1299, 1310, 1312, 1396, 1397, 1398, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1508, 1509, 1511, 1512, 1513, 1538, 1542, 1543, 1544, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1617, 1618, 1619, 1631, 1760, 1789, 1790, 1820, 1881, 1909, 1950, 1952, 1953, 1955, 1977, 1978, 1981, 1983, 1987, 2011, 2027, 2030, 2035, 2038], "creation": [1, 2, 21, 25, 27, 58, 481, 740, 741, 751, 759, 819, 1000, 1155, 1674, 1675, 1696, 1952, 1956, 1966, 1968, 1978, 1981, 2011, 2013, 2015, 2021, 2033, 2038], "warmup": [1, 3, 1043, 1981, 2005, 2030, 2035, 2043], "correl": [1, 31, 43, 983, 1414, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1431], "view": [1, 7, 8, 11, 18, 21, 22, 27, 29, 33, 47, 49, 58, 60, 69, 75, 218, 250, 430, 492, 493, 494, 602, 613, 687, 692, 755, 873, 881, 882, 883, 894, 910, 934, 949, 961, 980, 981, 1087, 1088, 1095, 1136, 1137, 1138, 1139, 1155, 1213, 1249, 1305, 1316, 1365, 1430, 1438, 1457, 1487, 1502, 1538, 1539, 1540, 1541, 1584, 1630, 1670, 1671, 1674, 1679, 1775, 1807, 1811, 1812, 1816, 1822, 1823, 1853, 1873, 1884, 1896, 1901, 1905, 1917, 1932, 1933, 1935, 1951, 1952, 1953, 1968, 1970, 1971, 1979, 1983, 1986, 1998, 2001, 2008, 2011, 2013, 2015, 2017, 2018, 2021, 2034, 2040, 2042, 2044, 2045], "difficult": [1, 7, 9, 46, 54, 1166, 1934, 2034, 2035, 2041, 2043, 2045], "eas": [1, 58, 1980, 1983, 1988, 2033, 2044], "sequenc": [1, 21, 27, 29, 31, 46, 49, 146, 561, 730, 755, 809, 875, 888, 909, 951, 953, 954, 957, 965, 1003, 1010, 1011, 1014, 1082, 1096, 1098, 1166, 1211, 1212, 1215, 1265, 1305, 1351, 1391, 1401, 1406, 1414, 1423, 1430, 1438, 1457, 1493, 1502, 1515, 1530, 1531, 1532, 1533, 1534, 1547, 1584, 1643, 1691, 1694, 1701, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1730, 1733, 1737, 1752, 1791, 1793, 1797, 1820, 1878, 1881, 1920, 1934, 1936, 1948, 1952, 1953, 1954, 1959, 1971, 1981, 1985, 1986, 1998, 2000, 2003, 2004, 2011, 2021, 2022, 2030, 2032, 2033, 2035, 2044, 2045], "gener": [1, 2, 3, 7, 8, 14, 21, 22, 25, 31, 35, 36, 43, 46, 49, 50, 51, 59, 60, 65, 69, 80, 149, 150, 169, 254, 282, 373, 416, 449, 476, 603, 675, 915, 937, 967, 969, 1029, 1032, 1040, 1041, 1044, 1045, 1064, 1065, 1067, 1068, 1069, 1097, 1119, 1120, 1155, 1166, 1168, 1171, 1178, 1202, 1207, 1225, 1253, 1259, 1270, 1281, 1286, 1295, 1312, 1313, 1317, 1322, 1342, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1373, 1422, 1433, 1447, 1530, 1538, 1539, 1548, 1549, 1557, 1583, 1601, 1665, 1689, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1723, 1726, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1772, 1774, 1777, 1791, 1793, 1795, 1796, 1797, 1799, 1821, 1833, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1886, 1902, 1906, 1923, 1925, 1928, 1934, 1951, 1952, 1953, 1954, 1955, 1956, 1961, 1964, 1969, 1976, 1978, 1981, 1983, 1985, 1986, 1987, 1989, 1990, 1992, 1996, 1998, 2000, 2001, 2002, 2003, 2005, 2010, 2011, 2012, 2015, 2018, 2020, 2022, 2024, 2026, 2027, 2031, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046], "seq": [1, 600, 755, 954, 966, 1351, 1438, 1457, 1493, 1502, 1530, 1532, 1534, 1718, 1916], "n": [1, 3, 25, 27, 30, 31, 33, 35, 40, 43, 47, 58, 225, 256, 402, 460, 461, 481, 681, 684, 685, 686, 730, 753, 755, 776, 872, 927, 935, 936, 938, 945, 947, 951, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1078, 1079, 1089, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1158, 1161, 1166, 1174, 1178, 1203, 1207, 1208, 1212, 1246, 1249, 1261, 1265, 1266, 1269, 1270, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1322, 1330, 1339, 1344, 1346, 1351, 1354, 1375, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1459, 1469, 1470, 1471, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1490, 1491, 1492, 1493, 1494, 1496, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1520, 1521, 1522, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1557, 1563, 1575, 1576, 1584, 1588, 1592, 1628, 1631, 1633, 1643, 1674, 1688, 1700, 1709, 1728, 1772, 1773, 1774, 1779, 1784, 1785, 1791, 1797, 1799, 1812, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1863, 1879, 1880, 1881, 1885, 1886, 1901, 1902, 1907, 1911, 1913, 1928, 1929, 1930, 1931, 1934, 1953, 1955, 1959, 1969, 1970, 1976, 1978, 1981, 1983, 1985, 1987, 1992, 2003, 2005, 2006, 2007, 2015, 2016, 2020, 2021, 2022, 2035, 2038, 2040], "counter": [1, 25, 910, 921, 1036, 1054, 1423, 1966, 1968, 1978], "increment": [1, 25, 42, 46, 921, 923, 1151, 1212, 1253, 1423, 1952, 1954, 1978, 1998, 2011], "object": [1, 3, 5, 6, 8, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 42, 44, 46, 47, 49, 57, 58, 60, 62, 84, 202, 205, 598, 788, 789, 796, 849, 856, 875, 885, 886, 887, 895, 900, 901, 927, 929, 934, 967, 1021, 1032, 1072, 1097, 1136, 1148, 1151, 1156, 1157, 1159, 1160, 1161, 1165, 1171, 1185, 1186, 1235, 1236, 1249, 1256, 1257, 1260, 1261, 1265, 1266, 1281, 1302, 1306, 1319, 1321, 1322, 1342, 1423, 1425, 1426, 1427, 1431, 1449, 1450, 1451, 1487, 1497, 1526, 1674, 1692, 1707, 1716, 1717, 1720, 1721, 1722, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1816, 1889, 1890, 1894, 1923, 1926, 1927, 1942, 1950, 1954, 1955, 1956, 1959, 1963, 1964, 1965, 1968, 1972, 1978, 1980, 1981, 1983, 1984, 1985, 1987, 1989, 1992, 1994, 1995, 1996, 1998, 2000, 2002, 2006, 2008, 2009, 2010, 2011, 2013, 2017, 2018, 2020, 2022, 2031, 2032, 2034, 2038, 2041, 2044, 2046, 2047, 2048], "stash": [1, 5, 1981, 1983, 2004], "associ": [1, 8, 9, 25, 27, 36, 46, 47, 49, 892, 893, 967, 1006, 1057, 1059, 1211, 1212, 1249, 1299, 1310, 1312, 1321, 1406, 1487, 1497, 1576, 1674, 1689, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1841, 1843, 1952, 1955, 1961, 1969, 1970, 1978, 1987, 1990, 1993, 1995, 1998, 2003, 2004, 2005, 2011, 2012, 2017, 2018, 2021, 2034, 2035, 2038, 2045, 2047], "tell": [1, 7, 58, 491, 1180, 1181, 1250, 1257, 1321, 1737, 1952, 1962, 1978, 1983, 1984, 2003, 2032, 2047], "top": [1, 3, 7, 8, 12, 21, 27, 30, 31, 35, 47, 49, 53, 58, 742, 927, 1399, 1400, 1422, 1446, 1453, 1478, 1494, 1536, 1539, 1592, 1696, 1700, 1702, 1848, 1904, 1924, 1956, 1959, 1962, 1968, 1983, 1998, 2002, 2032, 2042, 2043], "m": [1, 4, 8, 22, 25, 30, 31, 39, 43, 46, 58, 681, 684, 685, 686, 715, 723, 724, 733, 734, 735, 736, 737, 738, 740, 741, 751, 753, 759, 809, 855, 856, 857, 935, 947, 951, 955, 1110, 1164, 1212, 1247, 1249, 1254, 1256, 1260, 1261, 1267, 1270, 1281, 1289, 1295, 1296, 1297, 1298, 1302, 1303, 1304, 1306, 1307, 1308, 1313, 1314, 1315, 1316, 1322, 1339, 1340, 1344, 1354, 1373, 1375, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1436, 1437, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1473, 1474, 1476, 1477, 1480, 1481, 1482, 1486, 1487, 1494, 1495, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1631, 1633, 1674, 1688, 1690, 1694, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1722, 1723, 1726, 1772, 1773, 1774, 1784, 1791, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1863, 1881, 1885, 1886, 1902, 1909, 1952, 1953, 1954, 1955, 1963, 1981, 1983, 1985, 1987, 1990, 1992, 1995, 2006, 2015, 2025, 2026, 2029, 2035], "By": [1, 2, 3, 5, 14, 21, 25, 30, 34, 39, 46, 49, 58, 440, 441, 442, 443, 444, 875, 967, 987, 1003, 1046, 1048, 1080, 1092, 1115, 1117, 1118, 1119, 1120, 1128, 1129, 1130, 1156, 1157, 1159, 1160, 1166, 1203, 1211, 1212, 1253, 1302, 1313, 1321, 1350, 1355, 1377, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1440, 1446, 1449, 1450, 1451, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1526, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1690, 1726, 1774, 1785, 1806, 1860, 1907, 1934, 1950, 1954, 1959, 1962, 1978, 1981, 1983, 1985, 1986, 1990, 1992, 1993, 1995, 1998, 2000, 2002, 2010, 2011, 2015, 2022, 2032, 2035, 2039, 2041, 2045], "compar": [1, 3, 5, 14, 21, 46, 49, 58, 81, 689, 860, 871, 909, 910, 911, 1054, 1101, 1102, 1125, 1126, 1127, 1131, 1132, 1133, 1134, 1143, 1144, 1171, 1193, 1206, 1238, 1274, 1338, 1348, 1353, 1384, 1493, 1674, 1727, 1918, 1955, 1966, 1981, 1983, 1987, 1993, 1996, 2006, 2007, 2011, 2015, 2020, 2022, 2024, 2025, 2030, 2036, 2042], "down": [1, 7, 14, 21, 31, 33, 40, 41, 43, 58, 774, 1054, 1092, 1139, 1145, 1259, 1295, 1603, 1785, 1813, 1983, 1989, 1992, 2000, 2011, 2013, 2015, 2020, 2039, 2045], "irrelev": [1, 3, 1956], "simpli": [1, 3, 14, 21, 25, 27, 30, 31, 35, 43, 46, 57, 58, 858, 1155, 1236, 1247, 1395, 1424, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1828, 1952, 1954, 1978, 1984, 1987, 1990, 1991, 2005, 2015, 2033, 2035, 2041], "earlier": [1, 6, 49, 1681, 1682, 1885, 1978, 1981, 1985, 1986, 1989, 1995, 2000, 2005], "hand": [1, 4, 49, 54, 58, 960, 1091, 1097, 1247, 1294, 1299, 1310, 1312, 1395, 1497, 1515, 1909, 1922, 1952, 1954, 1955, 1978, 1987, 1990, 1992, 1995, 2003, 2015, 2034, 2035, 2038], "underwai": [1, 1038, 1981], "up": [1, 6, 7, 8, 9, 14, 21, 22, 25, 29, 31, 33, 35, 39, 41, 42, 44, 45, 49, 52, 58, 774, 780, 885, 900, 901, 923, 967, 1040, 1041, 1043, 1080, 1097, 1126, 1127, 1132, 1134, 1139, 1155, 1189, 1240, 1253, 1259, 1262, 1263, 1308, 1391, 1406, 1433, 1493, 1532, 1534, 1538, 1539, 1557, 1583, 1592, 1603, 1662, 1674, 1681, 1682, 1755, 1791, 1813, 1918, 1919, 1950, 1952, 1954, 1962, 1966, 1968, 1969, 1970, 1978, 1979, 1980, 1981, 1985, 1986, 1987, 1988, 1990, 1993, 2000, 2003, 2005, 2006, 2011, 2012, 2022, 2030, 2032, 2034, 2038, 2041, 2043, 2045, 2047], "given": [1, 2, 3, 7, 9, 14, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 44, 46, 49, 55, 57, 58, 146, 215, 309, 311, 313, 317, 322, 373, 394, 398, 467, 468, 469, 470, 471, 473, 508, 510, 512, 579, 580, 599, 602, 675, 688, 690, 691, 693, 694, 730, 755, 774, 780, 787, 788, 789, 790, 794, 795, 797, 815, 819, 832, 835, 849, 853, 860, 871, 884, 886, 888, 893, 895, 896, 898, 900, 901, 903, 905, 906, 907, 908, 915, 921, 923, 933, 934, 937, 938, 941, 949, 953, 954, 959, 960, 961, 966, 967, 981, 983, 986, 987, 989, 991, 995, 997, 1000, 1001, 1003, 1004, 1005, 1009, 1017, 1018, 1021, 1025, 1026, 1042, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1072, 1073, 1074, 1075, 1082, 1084, 1089, 1097, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1154, 1164, 1165, 1169, 1171, 1172, 1173, 1174, 1175, 1179, 1216, 1246, 1249, 1257, 1265, 1266, 1271, 1275, 1285, 1287, 1288, 1297, 1299, 1305, 1313, 1322, 1329, 1331, 1332, 1333, 1334, 1337, 1347, 1349, 1351, 1352, 1355, 1381, 1391, 1399, 1400, 1406, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1434, 1435, 1438, 1446, 1457, 1479, 1483, 1484, 1485, 1487, 1489, 1491, 1492, 1494, 1496, 1498, 1502, 1515, 1521, 1535, 1536, 1539, 1540, 1541, 1557, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1576, 1583, 1584, 1587, 1588, 1592, 1603, 1628, 1643, 1658, 1659, 1662, 1663, 1664, 1668, 1669, 1670, 1689, 1690, 1715, 1722, 1723, 1726, 1729, 1730, 1736, 1762, 1765, 1767, 1769, 1772, 1777, 1782, 1785, 1786, 1787, 1800, 1806, 1811, 1822, 1823, 1828, 1853, 1857, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1878, 1881, 1884, 1886, 1896, 1897, 1902, 1904, 1906, 1916, 1918, 1920, 1922, 1926, 1942, 1943, 1944, 1950, 1951, 1952, 1955, 1959, 1961, 1962, 1965, 1968, 1971, 1972, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1989, 1990, 1994, 1995, 1998, 2000, 2002, 2005, 2006, 2011, 2012, 2015, 2016, 2017, 2020, 2022, 2025, 2029, 2034, 2035, 2038, 2044, 2045, 2046], "nonzero": [1, 49, 1178, 1246, 1331, 1333, 1334, 1339, 1937, 1953, 1959, 1963, 2001, 2033, 2034, 2040], "themselv": [1, 9, 31, 42, 49, 788, 836, 1904, 1981, 2003, 2046], "later": [1, 2, 3, 7, 20, 22, 25, 27, 49, 57, 58, 481, 740, 741, 751, 759, 926, 1032, 1321, 1457, 1480, 1481, 1482, 1502, 1516, 1617, 1618, 1619, 1646, 1674, 1885, 1952, 1978, 1980, 1982, 1990, 1995, 2012, 2013, 2027, 2038, 2041], "origin": [1, 5, 11, 12, 18, 21, 22, 25, 27, 35, 46, 47, 49, 52, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 202, 205, 217, 481, 540, 598, 602, 612, 675, 755, 792, 833, 834, 849, 852, 853, 952, 957, 1001, 1117, 1118, 1120, 1124, 1128, 1129, 1130, 1136, 1154, 1164, 1224, 1246, 1257, 1261, 1262, 1265, 1266, 1343, 1357, 1391, 1395, 1407, 1422, 1423, 1438, 1516, 1526, 1575, 1646, 1681, 1682, 1688, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1715, 1718, 1721, 1723, 1724, 1726, 1736, 1751, 1766, 1775, 1811, 1822, 1857, 1873, 1907, 1918, 1919, 1952, 1955, 1961, 1968, 1970, 1978, 1981, 1983, 1985, 1986, 1989, 1992, 1993, 1995, 2000, 2003, 2004, 2006, 2007, 2015, 2017, 2024, 2025, 2031, 2032, 2034, 2035, 2036, 2038, 2039, 2044, 2045, 2046], "did": [1, 7, 8, 25, 42, 1181, 1380, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1954, 1955, 1987, 1995, 2003, 2037, 2038, 2047], "relationship": [1, 9, 39, 58, 964, 1203, 1536, 1978, 1981, 1995, 2003, 2034, 2038], "conceptu": [1, 3, 1978, 1984, 2013, 2032], "tag": [1, 3, 7, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 974, 1321, 1950, 1951, 1959, 1989, 1995, 2003, 2006, 2020], "eventu": [1, 7, 42, 49, 1950, 2004, 2034], "itt": [1, 2005], "intel": [1, 4, 1951, 1996, 2042, 2050], "r": [1, 31, 55, 146, 884, 886, 888, 900, 901, 909, 914, 955, 966, 983, 1097, 1156, 1158, 1161, 1166, 1172, 1191, 1194, 1203, 1261, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1295, 1296, 1299, 1301, 1308, 1310, 1312, 1313, 1322, 1429, 1430, 1439, 1499, 1500, 1518, 1583, 1584, 1634, 1635, 1688, 1753, 1784, 1934, 1952, 1953, 1954, 1978, 1980, 1983, 1987, 1996, 2015, 2018, 2020, 2038, 2045], "instrument": [1, 3, 22, 1365, 1951, 1989, 2025], "technologi": [1, 46, 1951, 1998, 1999, 2026], "applic": [1, 2, 9, 31, 42, 483, 794, 805, 806, 807, 808, 895, 898, 900, 967, 1022, 1160, 1171, 1178, 1360, 1422, 1423, 1532, 1534, 1575, 1674, 1922, 1951, 1962, 1971, 1978, 1980, 1981, 1982, 1983, 1988, 1989, 1990, 1994, 2000, 2002, 2006, 2011, 2012, 2013, 2015, 2021, 2035, 2047], "across": [1, 8, 14, 21, 22, 25, 27, 29, 33, 43, 49, 54, 58, 612, 730, 814, 869, 928, 1014, 1053, 1054, 1097, 1111, 1166, 1260, 1265, 1351, 1400, 1423, 1433, 1475, 1493, 1495, 1526, 1538, 1562, 1565, 1594, 1610, 1658, 1674, 1701, 1705, 1729, 1816, 1934, 1951, 1952, 1966, 1969, 1971, 1978, 1982, 1985, 1989, 1990, 1992, 1993, 1994, 2002, 2004, 2007, 2011, 2012, 2017, 2020, 2025, 2030, 2033, 2035, 2038, 2045], "tool": [1, 4, 8, 9, 18, 25, 43, 47, 58, 856, 926, 1365, 1860, 1950, 1951, 1952, 1954, 1980, 1981, 1996, 2000, 2003, 2005, 2025, 2032, 2035, 2039, 2043, 2045, 2047], "With": [1, 18, 21, 25, 31, 49, 57, 734, 735, 736, 737, 738, 780, 1054, 1118, 1119, 1120, 1128, 1129, 1130, 1266, 1401, 1402, 1403, 1415, 1416, 1418, 1419, 1432, 1449, 1450, 1451, 1526, 1537, 1539, 1568, 1571, 1603, 1629, 1662, 1752, 1795, 1956, 1978, 1981, 1983, 2006, 2011, 2015, 2020, 2029, 2036, 2038, 2042, 2045], "abl": [1, 2, 7, 8, 18, 25, 27, 42, 46, 54, 481, 1155, 1170, 1247, 1260, 1530, 1952, 1963, 1969, 1978, 1983, 1984, 1986, 1995, 2000, 2003, 2006, 2011, 2015, 2022, 2031, 2033, 2034, 2035, 2036, 2041, 2045, 2047], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 331, 736, 737, 738, 895, 896, 900, 909, 921, 1166, 1791, 1934, 1978, 1981, 1982, 1983, 1997, 1998, 2011, 2012, 2026, 2035], "traceback": [1, 18, 35, 43, 57, 58, 910, 1171, 1234, 1860, 1954, 1955, 1956, 1963, 1968, 1971, 1983, 1994, 2015, 2022, 2045, 2047], "fail": [1, 7, 25, 27, 33, 34, 35, 40, 41, 42, 43, 45, 46, 57, 58, 60, 65, 69, 80, 481, 914, 915, 1001, 1054, 1178, 1250, 1257, 1260, 1279, 1308, 1313, 1321, 1322, 1339, 1735, 1955, 1957, 1968, 1978, 1981, 1983, 1992, 1993, 1996, 2000, 2003, 2011, 2031, 2032, 2033, 2035, 2036, 2038, 2045, 2047], "test": [1, 3, 14, 18, 25, 40, 42, 43, 58, 60, 68, 69, 688, 694, 967, 1114, 1116, 1117, 1122, 1123, 1128, 1129, 1130, 1132, 1134, 1171, 1182, 1185, 1186, 1190, 1235, 1236, 1240, 1241, 1243, 1244, 1736, 1849, 1951, 1952, 1956, 1966, 1968, 1978, 1986, 1987, 1994, 2000, 2002, 2020, 2025, 2034, 2045, 2046], "slow": [1, 914, 1259, 1263, 1279, 1280, 1679, 1680, 1722, 1918, 1987, 1992, 2020, 2033, 2034], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 34, 36, 39, 40, 44, 46, 47, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 675, 729, 736, 737, 738, 767, 768, 769, 787, 855, 856, 857, 910, 917, 919, 946, 953, 987, 1148, 1151, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1246, 1247, 1250, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1301, 1302, 1305, 1306, 1319, 1351, 1452, 1487, 1546, 1674, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1717, 1718, 1719, 1720, 1721, 1722, 1729, 1754, 1755, 1778, 1920, 1952, 1954, 1955, 1956, 1959, 1963, 1966, 1968, 1971, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1989, 1990, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2006, 2009, 2011, 2012, 2013, 2015, 2018, 2020, 2021, 2022, 2025, 2026, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2038, 2043, 2044, 2045, 2046], "myfunc": [1, 1984], "inp": [1, 12, 21, 25, 58, 890, 893, 894, 1538, 1674, 2040, 2043, 2046], "clone": [1, 15, 21, 49, 60, 250, 443, 895, 896, 899, 900, 901, 910, 911, 912, 917, 919, 920, 949, 1253, 1429, 1661, 1900, 1909, 1953, 1968, 1971, 1995, 2001, 2005, 2015, 2017, 2018, 2022, 2030, 2040], "runtimeerror": [1, 14, 25, 29, 54, 58, 80, 84, 578, 692, 895, 896, 900, 910, 948, 1145, 1234, 1249, 1279, 1280, 1281, 1289, 1290, 1291, 1293, 1297, 1303, 1310, 1315, 1316, 1342, 1373, 1487, 1735, 1822, 1860, 1922, 1952, 1954, 1955, 1969, 1971, 1977, 1979, 1985, 1994, 1996, 2000, 2006, 2010, 2015, 2018, 2030], "run_fn": [1, 5, 852, 858], "recent": [1, 7, 8, 45, 57, 910, 1234, 1860, 1954, 1955, 1963, 1971, 1983, 1993, 1994, 2015, 2022, 2042, 2045], "last": [1, 5, 6, 11, 21, 22, 26, 29, 30, 31, 42, 47, 57, 58, 311, 612, 687, 755, 872, 910, 934, 936, 945, 951, 961, 1040, 1080, 1085, 1089, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1136, 1207, 1208, 1212, 1226, 1234, 1246, 1271, 1305, 1308, 1313, 1350, 1355, 1391, 1404, 1422, 1430, 1432, 1438, 1457, 1459, 1474, 1494, 1497, 1501, 1502, 1515, 1531, 1532, 1538, 1563, 1584, 1593, 1606, 1630, 1631, 1674, 1675, 1681, 1682, 1728, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1811, 1820, 1828, 1857, 1860, 1867, 1868, 1869, 1871, 1872, 1873, 1881, 1885, 1902, 1904, 1907, 1932, 1933, 1954, 1955, 1963, 1966, 1969, 1971, 1978, 1981, 1983, 1987, 1994, 1998, 2000, 2003, 2004, 2015, 2021, 2022, 2031, 2039, 2045], "stdin": [1, 25, 910, 1860, 1963, 1971, 1983, 1994, 2015], "instal": [1, 3, 14, 15, 25, 58, 1950, 1990, 1991, 1998, 1999, 2000, 2003, 2011, 2020, 2027, 2031, 2032, 2033, 2038, 2041], "_tensor": [1, 150], "py": [1, 4, 14, 18, 25, 29, 31, 34, 41, 43, 47, 49, 58, 82, 855, 1674, 1950, 1952, 1955, 1961, 1982, 1987, 1989, 1992, 2000, 2003, 2006, 2012, 2027, 2029, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2042, 2044, 2045, 2047], "93": [1, 612], "retain_graph": [1, 146, 888, 909, 919, 920, 1166, 1934, 1953, 1977, 1978, 1983, 2011], "90": [1, 1081, 1770, 1812], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 25, 40, 42, 1950, 1981, 2005, 2039], "53": [1, 476], "44": [1, 317, 440, 1100, 1398, 1456, 1482, 1722, 2032], "set_detect_anomali": 1, "behaviour": [1, 688, 689, 694, 1592, 1631, 1766, 1834, 1950, 1993], "interpos": [1, 1983], "grad_fn": [1, 146, 331, 483, 875, 888, 903, 904, 905, 906, 907, 908, 917, 919, 920, 1154, 1689, 1862, 1978, 1983, 1990, 1995], "node": [1, 25, 29, 33, 35, 41, 42, 46, 49, 58, 60, 69, 75, 78, 675, 814, 815, 816, 819, 820, 821, 895, 930, 1043, 1164, 1171, 1264, 1406, 1423, 1674, 1736, 1964, 1981, 1998, 2000, 2003, 2004, 2011, 2012, 2013, 2023, 2025, 2033, 2034, 2035, 2042, 2044, 2045], "grad_mod": [1, 910, 911, 912, 1953], "least": [1, 5, 6, 8, 22, 27, 31, 41, 42, 49, 256, 398, 692, 938, 1085, 1087, 1088, 1097, 1138, 1139, 1149, 1170, 1203, 1211, 1212, 1246, 1272, 1295, 1322, 1344, 1377, 1391, 1674, 1716, 1950, 1955, 1970, 1976, 1978, 1979, 1981, 1985, 1986, 2004, 2007, 2013, 2015, 2016, 2017, 2022, 2035, 2037, 2045], "intermediari": [1, 14, 31, 895, 898, 900, 1978, 1987, 2035], "access": [1, 9, 18, 21, 25, 27, 46, 47, 49, 57, 60, 62, 76, 483, 552, 729, 895, 898, 900, 901, 933, 1007, 1249, 1252, 1265, 1312, 1391, 1487, 1665, 1676, 1677, 1689, 1694, 1716, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1951, 1952, 1953, 1955, 1956, 1959, 1964, 1967, 1968, 1970, 1971, 1978, 1981, 1985, 1987, 1989, 1990, 1998, 2011, 2015, 2018, 2019, 2021, 2027, 2030, 2032, 2033, 2034, 2035, 2037, 2041, 2048], "isinst": [1, 21, 31, 58, 917, 919, 920, 1236, 1247, 1953, 1955, 1978, 1983, 1990, 2003, 2015, 2035, 2044, 2045], "dir": [1, 1040, 1736, 1950, 1955, 2003], "__call__": [1, 1249, 1487], "__class__": [1, 60], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1956], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1956], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1955], "__ne__": 1, "__new__": [1, 1954, 1956], "__reduce__": [1, 2003], "__reduce_ex__": 1, "__repr__": [1, 3, 1983], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 58, 1953, 1955], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1978], "metadata": [1, 3, 12, 27, 35, 36, 46, 60, 68, 69, 921, 979, 1321, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1816, 1963, 1971, 1978, 1983, 1984, 1995, 1998, 2003, 2005, 2011, 2012, 2015, 2020, 2034, 2044], "next_funct": 1, "register_prehook": [1, 1978], "allclos": [1, 54, 55, 58, 914, 915, 1040, 1119, 1120, 1126, 1127, 1155, 1156, 1158, 1159, 1160, 1161, 1165, 1166, 1297, 1299, 1310, 1312, 1315, 1316, 1341, 1694, 1721, 1784, 1934, 1953, 1959, 1984, 2001, 2015], "pack": [1, 29, 733, 734, 735, 736, 737, 738, 740, 741, 755, 776, 1265, 1266, 1341, 1423, 1438, 1457, 1502, 1715, 1716, 1717, 1718, 1953, 1964, 1971, 1978, 1985, 1996, 2006], "unpack": [1, 60, 65, 66, 755, 891, 894, 1265, 1297, 1341, 1423, 1718, 1720, 1727, 1737, 1955, 1956, 1978, 1983, 1985], "hook": [1, 26, 29, 49, 482, 483, 743, 752, 895, 898, 900, 919, 920, 923, 1043, 1249, 1423, 1487, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1707, 1712, 1723, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1951, 1972, 1982, 1983, 1989, 1997, 1998, 2003, 2006, 2032, 2034, 2035, 2036, 2038], "common": [1, 3, 8, 21, 33, 42, 54, 60, 77, 82, 680, 788, 860, 940, 943, 948, 982, 1092, 1097, 1142, 1143, 1144, 1145, 1178, 1192, 1272, 1321, 1372, 1401, 1402, 1403, 1406, 1526, 1574, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1804, 1816, 1882, 1925, 1951, 1955, 1960, 1970, 1978, 1981, 1983, 1984, 1985, 1990, 1992, 1995, 2000, 2003, 2015, 2016, 2019, 2022, 2031, 2033, 2035, 2038, 2041, 2043, 2044, 2045, 2047], "trade": [1, 5, 8, 49, 1313, 1400, 1828, 1980, 1985, 2007], "leav": [1, 8, 33, 43, 146, 888, 1167, 1254, 1267, 1692, 1695, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1876, 1952, 1954, 1955, 1963, 1978, 1981, 1998, 2003, 2007, 2038], "especi": [1, 9, 11, 21, 25, 47, 58, 250, 949, 967, 975, 1661, 1954, 1963, 1978, 1983, 1984, 1993, 1995, 2006, 2011, 2015, 2030, 2034, 2035, 2037, 2038], "notic": [1, 12, 25, 47, 59, 684, 1117, 1131, 1168, 1344, 1354, 1399, 1539, 1609, 1757, 1758, 1763, 1764, 1770, 1918, 1951, 1952, 1978, 2015, 2035, 2039, 2041, 2043], "fit": [1, 9, 34, 53, 54, 494, 927, 1246, 1744, 1806, 1981, 1998, 2004, 2022, 2045], "evalu": [1, 4, 8, 9, 29, 31, 46, 52, 58, 688, 694, 793, 858, 914, 1054, 1161, 1162, 1171, 1187, 1188, 1189, 1249, 1391, 1395, 1401, 1402, 1403, 1424, 1441, 1449, 1450, 1451, 1459, 1487, 1501, 1505, 1526, 1636, 1658, 1692, 1744, 1760, 1791, 1955, 1956, 1983, 1990, 1997, 1998, 2015, 2023, 2026, 2032, 2033, 2034], "saved_tensors_hook": [1, 895, 898, 900, 1978], "pack_hook": [1, 1978], "unpack_hook": [1, 1978], "pair": [1, 25, 27, 30, 31, 42, 44, 612, 730, 860, 934, 955, 987, 1131, 1169, 1171, 1263, 1313, 1351, 1479, 1488, 1493, 1497, 1633, 1753, 1800, 1954, 1955, 1961, 1969, 1978, 1981, 2004, 2011, 2012, 2013, 2020, 2022, 2025, 2035], "retriev": [1, 21, 22, 25, 29, 33, 42, 58, 532, 884, 885, 900, 901, 1184, 1429, 1433, 1538, 1583, 1674, 1716, 1736, 1860, 1971, 1978, 1989, 2000, 2003, 2004, 2011, 2012, 2013, 2027, 2032, 2038, 2047], "everytim": 1, "store": [1, 3, 5, 14, 18, 22, 27, 33, 43, 46, 47, 49, 58, 322, 328, 394, 681, 817, 820, 885, 900, 947, 1010, 1012, 1014, 1172, 1194, 1249, 1255, 1257, 1260, 1280, 1291, 1292, 1293, 1322, 1327, 1339, 1401, 1402, 1403, 1429, 1487, 1515, 1674, 1688, 1691, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1715, 1865, 1950, 1951, 1952, 1963, 1970, 1971, 1972, 1982, 1983, 1984, 1985, 1989, 1998, 2003, 2006, 2011, 2012, 2013, 2015, 2017, 2020, 2021, 2025, 2027, 2032, 2034, 2037, 2038], "content": [1, 3, 7, 27, 35, 46, 47, 58, 895, 898, 900, 1257, 1260, 1280, 1291, 1293, 1298, 1311, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1876, 1906, 1927, 1950, 1955, 1965, 1968, 1978, 1981, 1992, 2011, 2019, 2020, 2021, 2041, 2045], "equal": [1, 12, 22, 25, 31, 42, 43, 44, 46, 58, 256, 494, 540, 612, 675, 689, 690, 691, 734, 735, 736, 737, 738, 755, 763, 764, 815, 816, 817, 820, 856, 871, 936, 943, 945, 956, 957, 976, 987, 1012, 1014, 1067, 1086, 1102, 1141, 1156, 1157, 1167, 1169, 1171, 1178, 1179, 1190, 1193, 1207, 1208, 1210, 1211, 1212, 1234, 1238, 1274, 1295, 1308, 1312, 1315, 1316, 1339, 1340, 1351, 1368, 1384, 1388, 1389, 1390, 1392, 1393, 1394, 1399, 1400, 1406, 1415, 1416, 1418, 1419, 1423, 1430, 1433, 1434, 1435, 1438, 1440, 1457, 1492, 1493, 1501, 1502, 1538, 1547, 1560, 1561, 1565, 1568, 1571, 1583, 1584, 1587, 1588, 1594, 1601, 1674, 1716, 1719, 1772, 1785, 1841, 1842, 1847, 1873, 1881, 1901, 1917, 1923, 1937, 1953, 1956, 1962, 1969, 1970, 1971, 1978, 1979, 1987, 1993, 2001, 2002, 2004, 2016, 2020, 2022, 2044], "term": [1, 8, 9, 31, 42, 47, 58, 553, 729, 758, 787, 957, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1128, 1129, 1130, 1133, 1145, 1171, 1177, 1281, 1391, 1399, 1440, 1447, 1457, 1458, 1492, 1501, 1518, 1589, 1601, 1636, 1647, 1674, 1688, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1804, 1848, 1951, 1955, 1977, 1978, 1983, 1984, 1985, 1987, 1992, 2000, 2002, 2003, 2006, 2012, 2015, 2026, 2033, 2035], "mulbackward0": [1, 904, 907, 908, 1983], "inplac": [1, 27, 46, 52, 54, 58, 60, 68, 69, 750, 753, 771, 773, 775, 786, 792, 809, 833, 834, 835, 852, 853, 858, 895, 896, 900, 921, 1155, 1249, 1395, 1405, 1424, 1425, 1426, 1427, 1428, 1431, 1443, 1444, 1445, 1473, 1486, 1487, 1505, 1506, 1507, 1514, 1516, 1529, 1558, 1566, 1577, 1578, 1579, 1580, 1581, 1585, 1596, 1597, 1598, 1607, 1623, 1638, 1639, 1641, 1644, 1646, 1656, 1668, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1922, 1953, 1962, 1978, 1983, 2000, 2025, 2040, 2044], "lead": [1, 5, 7, 20, 25, 32, 47, 49, 55, 58, 895, 896, 900, 903, 905, 909, 915, 969, 1148, 1166, 1171, 1280, 1457, 1502, 1518, 1870, 1876, 1934, 1955, 1970, 1971, 1978, 1980, 1982, 1983, 1984, 1986, 1992, 1993, 1996, 2002, 2003, 2006, 2011, 2015, 2020, 2021, 2030, 2035, 2036], "undefin": [1, 25, 32, 35, 49, 315, 466, 612, 873, 895, 899, 900, 901, 914, 915, 943, 951, 1100, 1150, 1151, 1399, 1735, 1778, 1978, 1981, 1983, 1984, 1994, 2011], "recurs": [1, 31, 46, 49, 58, 969, 973, 1089, 1177, 1190, 1249, 1261, 1263, 1487, 1681, 1682, 1758, 1954, 1983, 1990, 2003, 2011, 2032, 2035, 2036, 2038], "inner": [1, 3, 49, 50, 55, 810, 812, 903, 1080, 1156, 1160, 1165, 1175, 1907, 1953, 1983, 2001, 2011, 2025], "save_on_cpu": 1, "pin_memori": [1, 21, 60, 65, 69, 70, 71, 440, 441, 442, 443, 444, 1098, 1100, 1149, 1793, 1797, 1799, 1900, 1952, 1953, 1971, 1981, 1983, 2001, 2017, 2040], "within": [1, 5, 9, 12, 21, 22, 25, 29, 31, 42, 43, 44, 46, 47, 49, 57, 58, 75, 76, 84, 483, 873, 890, 914, 915, 921, 967, 979, 1004, 1080, 1174, 1249, 1253, 1342, 1396, 1397, 1398, 1406, 1425, 1426, 1427, 1431, 1433, 1480, 1481, 1482, 1487, 1493, 1526, 1538, 1592, 1602, 1617, 1618, 1619, 1674, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1789, 1790, 1820, 1841, 1921, 1925, 1952, 1954, 1955, 1966, 1968, 1971, 1976, 1980, 1981, 1983, 1988, 1989, 1990, 1993, 2000, 2002, 2003, 2006, 2009, 2010, 2011, 2012, 2020, 2027, 2033, 2035, 2037, 2044, 2045], "move": [1, 5, 7, 8, 9, 14, 25, 27, 49, 56, 58, 519, 584, 816, 1117, 1177, 1249, 1257, 1316, 1321, 1357, 1401, 1402, 1403, 1460, 1461, 1462, 1487, 1526, 1631, 1676, 1677, 1752, 1954, 1964, 1965, 1968, 1970, 1981, 1984, 1985, 1990, 1991, 1992, 1995, 2002, 2003, 2004, 2006, 2011, 2017, 2022, 2035, 2038, 2045], "copi": [1, 7, 11, 21, 22, 25, 27, 33, 40, 46, 49, 53, 54, 58, 186, 192, 202, 205, 311, 398, 443, 453, 458, 466, 488, 494, 575, 576, 577, 578, 598, 612, 787, 809, 833, 834, 874, 875, 893, 910, 911, 912, 934, 956, 964, 967, 1010, 1011, 1136, 1137, 1138, 1139, 1141, 1155, 1171, 1249, 1261, 1321, 1322, 1383, 1423, 1433, 1487, 1497, 1538, 1674, 1715, 1725, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1801, 1807, 1813, 1900, 1909, 1915, 1952, 1953, 1963, 1968, 1971, 1978, 1979, 1981, 1983, 1986, 1992, 2001, 2003, 2004, 2005, 2006, 2011, 2015, 2017, 2018, 2019, 2021, 2025, 2034, 2035, 2037, 2040, 2044], "pin": [1, 205, 333, 440, 441, 442, 443, 444, 458, 575, 598, 1098, 1100, 1149, 1249, 1487, 1715, 1793, 1797, 1799, 1900, 1951, 1971, 2017], "asynchron": [1, 3, 4, 57, 192, 205, 575, 598, 1023, 1249, 1252, 1268, 1487, 1951, 1956, 1980, 1982, 2011, 2017, 2020, 2043], "prod_1": 1, "prod_2": 1, "del": [1, 481, 1956, 1968, 1983, 1985], "illustr": [1, 1955, 1977, 1983, 2015, 2027, 2030, 2038, 2039], "aliv": [1, 5, 21, 33, 42, 1001, 1978, 1981, 1985, 1992, 2011, 2012, 2013], "live": [1, 29, 481, 1040, 1043, 1249, 1487, 1952, 1981, 1985, 1986, 2011, 2013, 2030, 2034, 2047], "releas": [1, 7, 20, 25, 42, 44, 53, 58, 508, 682, 957, 958, 997, 998, 1005, 1022, 1032, 1033, 1036, 1040, 1041, 1043, 1054, 1195, 1246, 1249, 1280, 1291, 1293, 1294, 1295, 1298, 1311, 1339, 1340, 1360, 1426, 1457, 1487, 1502, 1617, 1618, 1619, 1729, 1784, 1800, 1816, 1881, 1885, 1909, 1950, 1951, 1954, 1966, 1968, 1978, 1980, 1981, 1988, 1993, 1994, 1995, 1996, 2000, 2006, 2011, 2021, 2022, 2027, 2035, 2045], "delet": [1, 25, 58, 890, 892, 998, 1006, 1950, 1964, 1968, 1978, 2001, 2010, 2011, 2013, 2017, 2044], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 25, 27, 29, 43, 46, 49, 50, 57, 60, 77, 675, 684, 755, 763, 764, 903, 905, 909, 979, 1071, 1168, 1261, 1344, 1354, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1419, 1424, 1425, 1426, 1427, 1431, 1434, 1435, 1438, 1439, 1449, 1457, 1458, 1493, 1502, 1504, 1521, 1530, 1532, 1534, 1535, 1536, 1537, 1560, 1561, 1578, 1579, 1580, 1585, 1587, 1588, 1609, 1674, 1774, 1922, 1951, 1952, 1954, 1955, 1956, 1961, 1970, 1971, 1978, 1983, 1985, 1987, 1994, 1997, 2000, 2005, 2006, 2011, 2015, 2020, 2023, 2026, 2027, 2036, 2037], "messag": [1, 2, 5, 18, 25, 35, 44, 46, 54, 58, 60, 61, 79, 80, 619, 675, 1057, 1059, 1167, 1171, 1279, 1280, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1950, 1952, 1953, 1955, 1956, 1961, 1985, 1998, 2000, 2004, 2005, 2011, 2013, 2022, 2037, 2045], "get": [1, 8, 12, 14, 21, 25, 26, 27, 33, 42, 43, 44, 45, 46, 49, 54, 57, 58, 84, 146, 331, 681, 729, 783, 784, 856, 857, 888, 894, 910, 923, 934, 951, 1025, 1026, 1027, 1044, 1084, 1155, 1158, 1159, 1160, 1171, 1196, 1197, 1265, 1317, 1408, 1409, 1410, 1429, 1430, 1454, 1455, 1456, 1483, 1484, 1485, 1497, 1514, 1674, 1675, 1689, 1716, 1723, 1805, 1820, 1925, 1943, 1944, 1945, 1950, 1951, 1952, 1955, 1963, 1966, 1968, 1969, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1991, 1995, 1998, 2001, 2003, 2006, 2011, 2013, 2015, 2019, 2020, 2021, 2030, 2032, 2033, 2034, 2038, 2039, 2045, 2046], "register_multi_grad_hook": [1, 1978], "fn": [1, 33, 34, 35, 39, 44, 46, 49, 58, 902, 919, 920, 969, 970, 973, 1156, 1162, 1166, 1249, 1250, 1262, 1267, 1487, 1934, 1952, 1954, 1955, 1959, 1968, 1978, 1989, 2011, 2031, 2035, 2036, 2037, 2038, 2043, 2044, 2045], "multi": [1, 4, 33, 42, 755, 1001, 1044, 1064, 1097, 1117, 1212, 1249, 1400, 1423, 1438, 1457, 1487, 1490, 1491, 1492, 1493, 1502, 1530, 1532, 1539, 1565, 1674, 1951, 1952, 1955, 1978, 1980, 1981, 1990, 1994, 2002, 2011, 2015, 2018, 2021, 2023], "specifi": [1, 2, 3, 5, 8, 12, 14, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 41, 42, 43, 46, 47, 49, 58, 93, 146, 191, 255, 315, 327, 466, 476, 488, 492, 494, 495, 508, 510, 512, 532, 540, 541, 555, 575, 578, 579, 580, 582, 583, 598, 675, 730, 736, 737, 738, 763, 764, 788, 789, 790, 794, 809, 818, 821, 835, 849, 853, 854, 856, 873, 875, 887, 888, 900, 901, 904, 907, 909, 934, 938, 961, 967, 986, 987, 998, 1000, 1001, 1010, 1011, 1012, 1014, 1029, 1032, 1043, 1068, 1078, 1079, 1080, 1084, 1085, 1087, 1097, 1100, 1111, 1114, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1132, 1134, 1156, 1157, 1160, 1166, 1169, 1174, 1176, 1191, 1203, 1211, 1212, 1246, 1249, 1253, 1265, 1266, 1292, 1302, 1304, 1306, 1307, 1316, 1319, 1321, 1322, 1332, 1349, 1351, 1357, 1377, 1378, 1381, 1397, 1398, 1399, 1400, 1406, 1418, 1420, 1422, 1423, 1429, 1430, 1433, 1440, 1446, 1447, 1452, 1453, 1457, 1478, 1479, 1484, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1518, 1519, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1560, 1561, 1564, 1565, 1575, 1576, 1583, 1584, 1589, 1592, 1604, 1611, 1628, 1629, 1636, 1643, 1649, 1650, 1674, 1680, 1681, 1682, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1726, 1729, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1760, 1765, 1766, 1774, 1782, 1791, 1807, 1812, 1813, 1816, 1832, 1859, 1861, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1879, 1880, 1881, 1884, 1901, 1903, 1907, 1917, 1918, 1919, 1920, 1921, 1925, 1928, 1929, 1930, 1934, 1950, 1952, 1954, 1955, 1959, 1961, 1962, 1963, 1965, 1966, 1969, 1970, 1978, 1981, 1983, 1988, 1990, 1992, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2010, 2011, 2015, 2016, 2017, 2018, 2020, 2022, 2027, 2031, 2033, 2044], "ignor": [1, 5, 7, 25, 29, 34, 40, 49, 58, 146, 494, 539, 681, 684, 685, 686, 730, 789, 790, 853, 856, 857, 888, 909, 914, 915, 935, 957, 959, 960, 987, 991, 996, 1044, 1045, 1064, 1065, 1118, 1120, 1128, 1129, 1130, 1171, 1194, 1210, 1249, 1261, 1267, 1270, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1341, 1378, 1379, 1380, 1396, 1397, 1398, 1399, 1400, 1420, 1422, 1430, 1438, 1440, 1446, 1452, 1453, 1457, 1478, 1479, 1480, 1481, 1482, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1518, 1519, 1530, 1535, 1564, 1565, 1575, 1584, 1604, 1628, 1636, 1674, 1729, 1737, 1760, 1768, 1772, 1832, 1863, 1864, 1881, 1885, 1909, 1952, 1955, 1956, 1962, 1970, 1978, 1981, 1983, 2000, 2015, 2022, 2032, 2041, 2044], "rel": [1, 8, 9, 14, 22, 25, 31, 49, 58, 482, 483, 689, 871, 914, 915, 919, 920, 987, 1177, 1238, 1304, 1307, 1535, 1536, 1557, 1592, 1737, 1741, 1742, 1754, 1768, 1962, 1966, 1980, 1981, 1986, 1989, 2000, 2003, 2022, 2038], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 46, 47, 58, 60, 67, 68, 69, 792, 833, 834, 852, 853, 967, 979, 1155, 1253, 1998, 2003, 2021, 2034, 2035], "_allowmutationonsavedcontext": 1, "purpos": [1, 22, 25, 58, 83, 466, 494, 755, 914, 1259, 1344, 1406, 1438, 1493, 1668, 1669, 1670, 1671, 1832, 1966, 1971, 1978, 1983, 2003, 2012, 2031, 2035, 2038, 2039, 2045], "clear": [1, 2, 8, 9, 44, 58, 934, 975, 1172, 1249, 1487, 1488, 1497, 1736, 1950, 1978, 1981, 1990, 1995, 2001, 2002], "upon": [1, 2, 21, 26, 33, 35, 58, 967, 1550, 1674, 1691, 1694, 1918, 1968, 1978, 1981, 2000, 2006, 2013], "sin_": [1, 1953, 1969], "8415": [1, 1983, 2015], "sinbackward0": 1, "gradientedg": [1, 888, 909], "output_nr": [1, 1953, 2001], "edg": [1, 47, 774, 780, 1203, 1211, 1212, 1603, 1662, 1960, 1984, 2012, 2041], "get_gradient_edg": 1, "variou": [2, 5, 14, 21, 25, 46, 58, 675, 1322, 1923, 1925, 1959, 1962, 1968, 1971, 1983, 1990, 1992, 2002, 2006, 2008, 2015, 2026, 2034, 2046], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 25, 1025, 1681, 1682, 1791, 1943, 1981, 1988, 1989, 1991, 2023], "string": [2, 3, 5, 13, 14, 21, 25, 33, 39, 40, 42, 46, 47, 58, 598, 796, 809, 849, 974, 1023, 1040, 1041, 1097, 1155, 1171, 1249, 1257, 1260, 1321, 1414, 1415, 1416, 1487, 1488, 1497, 1530, 1532, 1534, 1567, 1568, 1569, 1705, 1784, 1816, 1824, 1826, 1924, 1925, 1950, 1953, 1954, 1955, 1956, 1959, 1970, 1978, 1983, 1989, 1990, 1995, 1998, 2000, 2003, 2005, 2011, 2017, 2018, 2020, 2025, 2031, 2035, 2038, 2045, 2046, 2047], "vsx": 2, "z": [2, 3, 10, 31, 49, 54, 60, 63, 68, 69, 612, 815, 872, 895, 898, 900, 901, 930, 958, 976, 1097, 1101, 1351, 1439, 1592, 1694, 1727, 1728, 1778, 1808, 1809, 1952, 1953, 1954, 1970, 1978, 1980, 1981, 1987, 1988, 1998, 2000, 2003, 2009, 2011, 2013, 2030, 2033, 2035, 2044, 2045], "vector": [2, 11, 22, 31, 49, 50, 54, 250, 309, 311, 317, 684, 685, 686, 879, 888, 893, 903, 904, 905, 906, 907, 908, 909, 948, 949, 955, 966, 983, 987, 997, 1078, 1079, 1084, 1086, 1161, 1165, 1166, 1194, 1282, 1289, 1297, 1305, 1306, 1310, 1313, 1317, 1318, 1319, 1339, 1344, 1351, 1373, 1375, 1401, 1402, 1403, 1406, 1423, 1429, 1430, 1433, 1441, 1449, 1450, 1451, 1496, 1526, 1535, 1538, 1583, 1584, 1592, 1594, 1629, 1633, 1661, 1679, 1687, 1689, 1694, 1725, 1729, 1773, 1774, 1865, 1885, 1928, 1931, 1934, 1972, 1978, 1987, 2006, 2015, 2020, 2027, 2037], "NO": [2, 81, 83, 1170], "avx": [2, 2029], "avx2": [2, 2006, 2029], "avx512": [2, 2029], "is_built": [2, 1991], "built": [2, 3, 7, 8, 14, 22, 25, 30, 35, 52, 58, 968, 1023, 1259, 1536, 1760, 1951, 1959, 1971, 1978, 1980, 1981, 1983, 1988, 1990, 1991, 1992, 2006, 2008, 2031, 2032, 2038, 2045, 2046], "necessarili": [2, 22, 25, 31, 33, 42, 46, 80, 466, 914, 1286, 1308, 1319, 1350, 1422, 1494, 1681, 1682, 1981, 1983], "machin": [2, 25, 33, 42, 49, 50, 55, 1253, 1259, 1295, 1523, 1988, 1989, 1990, 1991, 1992, 1994, 1997, 1998, 2003, 2010, 2011, 2012, 2026, 2027, 2029, 2037], "driver": [2, 1194, 1295, 1313, 1314, 1359, 1953, 1981, 1993, 2011, 2043, 2045], "would": [2, 3, 5, 8, 9, 11, 14, 21, 25, 31, 33, 35, 42, 43, 46, 47, 49, 51, 54, 58, 146, 440, 441, 442, 443, 444, 481, 693, 755, 789, 849, 888, 895, 896, 900, 909, 957, 1098, 1100, 1118, 1149, 1159, 1160, 1170, 1171, 1180, 1181, 1182, 1247, 1249, 1250, 1254, 1257, 1265, 1266, 1364, 1365, 1373, 1396, 1397, 1398, 1399, 1400, 1438, 1452, 1457, 1480, 1481, 1482, 1487, 1497, 1502, 1592, 1603, 1665, 1674, 1675, 1681, 1682, 1715, 1727, 1755, 1793, 1797, 1799, 1810, 1820, 1900, 1901, 1906, 1952, 1954, 1955, 1963, 1969, 1970, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1986, 1987, 1992, 1995, 2000, 2002, 2003, 2004, 2006, 2011, 2012, 2013, 2015, 2030, 2031, 2033, 2034, 2035, 2037, 2039, 2041, 2044, 2045], "allow_tf32": [2, 1828, 1953, 1981, 1993], "tensorfloat": 2, "core": [2, 3, 7, 8, 46, 53, 76, 967, 992, 1054, 1735, 1955, 1959, 1980, 1981, 1982, 1992, 1993, 2003, 2023, 2033, 2035, 2038, 2042], "amper": [2, 2015], "newer": [2, 14, 46, 1060, 1723, 1980, 1981, 1995, 1997, 2002, 2003, 2007, 2037], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1981, 1993], "reduc": [2, 3, 14, 22, 25, 26, 27, 29, 49, 317, 508, 511, 512, 681, 688, 690, 691, 692, 694, 814, 815, 816, 817, 820, 822, 869, 870, 967, 972, 1011, 1022, 1054, 1168, 1223, 1302, 1306, 1308, 1313, 1319, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1379, 1380, 1381, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1430, 1446, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1526, 1535, 1564, 1565, 1573, 1575, 1584, 1600, 1603, 1604, 1605, 1616, 1624, 1625, 1626, 1627, 1628, 1629, 1636, 1647, 1648, 1659, 1662, 1674, 1689, 1727, 1744, 1768, 1782, 1784, 1785, 1819, 1862, 1866, 1879, 1880, 1884, 1885, 1907, 1922, 1929, 1930, 1953, 1968, 1969, 1978, 1980, 1982, 1983, 1986, 1990, 1992, 1994, 1995, 1996, 2001, 2002, 2003, 2004, 2006, 2015, 2030, 2033, 2035, 2040, 2041, 2045, 2046], "precis": [2, 3, 8, 11, 14, 22, 31, 49, 681, 684, 914, 915, 935, 947, 1043, 1140, 1199, 1295, 1313, 1319, 1344, 1354, 1396, 1397, 1398, 1400, 1414, 1415, 1416, 1417, 1418, 1419, 1439, 1458, 1474, 1480, 1481, 1482, 1539, 1603, 1643, 1674, 1813, 1828, 1832, 1951, 1955, 1966, 1972, 1978, 1990, 2003, 2006, 2007, 2009, 2016, 2018, 2020, 2021, 2042, 2048], "gemm": [2, 1980, 2000, 2035], "allow_bf16_reduced_precision_reduct": [2, 1981, 1993], "cufft_plan_cach": [2, 1981], "cufft": 2, "queri": [2, 25, 42, 58, 730, 1000, 1001, 1003, 1009, 1056, 1060, 1074, 1075, 1178, 1249, 1361, 1487, 1493, 1547, 1643, 1693, 1953, 1981, 2003, 2033, 2034, 2038], "specif": [2, 3, 7, 8, 9, 14, 25, 27, 29, 30, 31, 33, 40, 42, 44, 46, 49, 54, 58, 60, 75, 77, 82, 84, 508, 849, 856, 927, 1003, 1088, 1117, 1212, 1246, 1253, 1259, 1263, 1265, 1266, 1350, 1433, 1459, 1643, 1668, 1669, 1696, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1751, 1752, 1753, 1754, 1755, 1823, 1828, 1862, 1923, 1950, 1952, 1954, 1955, 1957, 1959, 1961, 1966, 1970, 1972, 1978, 1981, 1983, 1988, 1992, 1994, 1998, 2000, 2002, 2003, 2005, 2006, 2007, 2009, 2011, 2013, 2020, 2021, 2027, 2029, 2033, 2034, 2035, 2037, 2038, 2042, 2044, 2045, 2050], "via": [2, 7, 14, 15, 21, 25, 27, 31, 40, 46, 47, 49, 53, 58, 481, 512, 612, 914, 915, 923, 954, 998, 1034, 1054, 1101, 1158, 1172, 1173, 1175, 1177, 1322, 1401, 1402, 1403, 1423, 1441, 1449, 1450, 1451, 1459, 1526, 1688, 1723, 1726, 1766, 1952, 1954, 1955, 1959, 1966, 1968, 1971, 1976, 1978, 1981, 1983, 1984, 1985, 1988, 1990, 1992, 1993, 2000, 2003, 2006, 2011, 2012, 2015, 2018, 2019, 2031, 2033, 2034, 2038, 2041, 2046], "readonli": 2, "int": [2, 3, 12, 18, 21, 22, 25, 27, 29, 30, 31, 33, 36, 39, 40, 42, 43, 45, 46, 47, 49, 58, 60, 68, 69, 71, 74, 84, 212, 214, 228, 229, 238, 250, 309, 311, 313, 317, 432, 439, 440, 442, 444, 452, 467, 471, 488, 492, 494, 508, 510, 512, 515, 532, 538, 540, 541, 553, 555, 561, 578, 579, 580, 582, 583, 602, 612, 675, 688, 690, 691, 692, 694, 750, 751, 770, 772, 774, 775, 780, 781, 782, 814, 869, 870, 871, 873, 887, 895, 898, 900, 901, 918, 923, 930, 936, 938, 945, 952, 954, 961, 966, 986, 987, 991, 992, 996, 997, 1001, 1003, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1025, 1026, 1027, 1029, 1031, 1035, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1095, 1098, 1100, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1149, 1151, 1152, 1156, 1157, 1158, 1159, 1160, 1166, 1184, 1186, 1191, 1198, 1200, 1201, 1203, 1207, 1208, 1210, 1211, 1212, 1213, 1224, 1225, 1246, 1247, 1249, 1250, 1252, 1255, 1256, 1261, 1269, 1271, 1281, 1282, 1302, 1303, 1306, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1329, 1336, 1337, 1342, 1347, 1349, 1350, 1352, 1355, 1357, 1358, 1359, 1363, 1373, 1378, 1379, 1380, 1381, 1382, 1383, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1439, 1441, 1449, 1450, 1451, 1454, 1455, 1456, 1458, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1472, 1474, 1475, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1492, 1494, 1495, 1498, 1499, 1500, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1520, 1522, 1523, 1526, 1530, 1532, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1574, 1575, 1576, 1583, 1584, 1591, 1594, 1603, 1611, 1628, 1629, 1630, 1634, 1635, 1649, 1650, 1658, 1662, 1663, 1664, 1674, 1689, 1690, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1716, 1718, 1723, 1726, 1729, 1730, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1774, 1775, 1782, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1796, 1797, 1799, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1816, 1821, 1822, 1823, 1827, 1830, 1831, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1857, 1861, 1864, 1865, 1866, 1873, 1876, 1878, 1879, 1880, 1881, 1884, 1886, 1890, 1897, 1901, 1902, 1904, 1906, 1907, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1925, 1928, 1929, 1930, 1934, 1935, 1939, 1940, 1941, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1954, 1955, 1956, 1966, 1968, 1969, 1971, 1976, 1981, 1984, 1992, 1995, 1998, 2000, 2001, 2004, 2005, 2006, 2010, 2011, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2027, 2033, 2035, 2038, 2040, 2044, 2047, 2048], "show": [2, 4, 7, 13, 18, 21, 22, 25, 27, 32, 46, 49, 58, 76, 903, 909, 967, 1148, 1249, 1351, 1487, 1665, 1736, 1950, 1951, 1955, 1969, 1980, 1981, 1982, 1983, 1987, 1988, 1990, 1998, 2000, 2002, 2003, 2011, 2013, 2037, 2039, 2042, 2043, 2045, 2047], "max_siz": [2, 41, 43, 1981], "capac": [2, 1067, 1981, 1992], "preferred_linalg_librari": [2, 1286], "overrid": [2, 5, 14, 22, 25, 26, 31, 35, 43, 49, 54, 58, 787, 788, 849, 885, 887, 900, 901, 1040, 1399, 1400, 1420, 1422, 1446, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1503, 1518, 1519, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 1696, 1755, 1816, 1832, 1951, 1955, 1959, 1963, 1995, 2002, 2003, 2006, 2011, 2015, 2020, 2025, 2044], "heurist": [2, 14, 21, 42, 43, 58, 972, 1097, 1986, 2030, 2039], "choos": [2, 9, 15, 58, 887, 900, 901, 927, 1023, 1295, 1308, 1313, 1399, 1976, 1977, 1980, 2003, 2007, 2020], "cusolv": [2, 1313, 1314, 1885], "magma": [2, 1295, 1339, 1784, 1885, 1996, 2015], "algebra": [2, 9, 1097, 1286, 1307, 1951, 1960], "subject": [2, 3, 11, 18, 25, 27, 29, 30, 49, 57, 58, 59, 229, 860, 1545, 1546, 1547, 1550, 1643, 1674, 1955, 1969, 1970, 1978, 1983, 2000, 2004, 2005, 2006, 2007, 2011, 2015, 2018, 2023, 2024, 2025, 2027, 2033, 2042], "decid": [2, 4, 7, 25, 42, 53, 481, 1705, 1962, 2000, 2015, 2034, 2035, 2039], "wherev": [2, 9, 1969, 2038], "pick": [2, 25, 41, 43, 508, 967, 1978, 2011, 2032, 2033, 2039], "prefer": [2, 9, 21, 25, 27, 33, 49, 857, 873, 905, 1181, 1247, 1290, 1303, 1307, 1315, 1322, 1494, 1643, 1820, 1881, 1900, 1952, 1963, 1978, 1981, 2002, 2003, 2015, 2035], "environ": [2, 3, 7, 14, 15, 18, 20, 22, 31, 33, 35, 40, 45, 46, 58, 75, 77, 675, 1259, 1265, 1457, 1502, 1922, 1950, 1952, 1961, 1978, 1980, 1981, 1982, 1988, 1993, 1994, 1996, 2004, 2011, 2027, 2029, 2031, 2035, 2045], "variabl": [2, 3, 5, 12, 14, 18, 20, 22, 31, 33, 35, 40, 45, 47, 49, 54, 58, 60, 63, 68, 69, 75, 77, 443, 675, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 726, 727, 729, 733, 734, 735, 736, 737, 738, 740, 741, 751, 755, 759, 794, 895, 896, 900, 979, 983, 987, 1066, 1098, 1166, 1171, 1263, 1265, 1322, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1429, 1430, 1438, 1439, 1457, 1458, 1459, 1472, 1474, 1487, 1490, 1495, 1502, 1504, 1674, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1733, 1737, 1739, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1793, 1795, 1797, 1922, 1934, 1948, 1950, 1951, 1961, 1962, 1970, 1971, 1978, 1980, 1981, 1982, 1985, 1987, 1993, 1994, 1996, 1998, 2000, 2002, 2006, 2011, 2017, 2020, 2027, 2032, 2033, 2035, 2037, 2045], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 12, 21, 25, 27, 29, 31, 33, 43, 49, 54, 57, 58, 60, 63, 68, 69, 849, 856, 860, 868, 923, 936, 945, 979, 998, 1032, 1049, 1056, 1098, 1100, 1110, 1115, 1133, 1149, 1152, 1155, 1207, 1208, 1230, 1237, 1249, 1252, 1265, 1269, 1320, 1336, 1487, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1701, 1705, 1733, 1793, 1795, 1797, 1800, 1824, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1948, 1952, 1955, 1956, 1972, 1977, 1983, 1989, 1990, 1992, 1994, 1995, 2006, 2011, 2012, 2013, 2015, 2018, 2020, 2032, 2034, 2035, 2036, 2044, 2045], "overridden": [2, 14, 58, 884, 885, 886, 900, 901, 1040, 1487, 1860, 1955, 1978, 1983, 1993, 2004, 2045, 2046], "achiev": [2, 21, 22, 25, 30, 31, 43, 49, 1097, 1162, 1249, 1400, 1406, 1487, 1493, 1494, 1565, 1594, 1674, 1967, 1981, 1989, 1992, 2003, 2011, 2013, 2045], "better": [2, 3, 7, 8, 9, 14, 21, 24, 25, 33, 46, 53, 910, 967, 1066, 1154, 1158, 1159, 1168, 1236, 1265, 1422, 1520, 1643, 1649, 1674, 1681, 1682, 1766, 1791, 1955, 1977, 1978, 1980, 1981, 1986, 1987, 1994, 1996, 2000, 2002, 2005, 2006, 2007, 2015, 2020, 2025, 2031, 2032, 2038, 2042], "select": [2, 5, 15, 19, 21, 25, 31, 33, 47, 309, 311, 313, 317, 755, 957, 989, 991, 995, 1004, 1005, 1009, 1016, 1017, 1018, 1019, 1021, 1042, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1066, 1067, 1070, 1072, 1074, 1075, 1117, 1322, 1351, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1438, 1457, 1502, 1550, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1710, 1711, 1823, 1897, 1925, 1937, 1939, 1940, 1942, 1947, 1952, 1953, 1955, 1968, 1969, 1970, 1971, 1978, 1980, 1981, 1987, 1994, 2001, 2006, 2015, 2019, 2022, 2032, 2038, 2040, 2042, 2047], "incorrect": [2, 4, 5, 49, 58, 80, 81, 83, 250, 508, 551, 895, 898, 900, 914, 923, 949, 1265, 1308, 1321, 1493, 1530, 1531, 1532, 1533, 1534, 1661, 1729, 1870, 1881, 1952, 1955, 1981, 1993, 2000], "linalg": [2, 11, 402, 957, 958, 959, 960, 997, 1083, 1194, 1227, 1330, 1339, 1340, 1341, 1345, 1346, 1688, 1689, 1694, 1729, 1771, 1776, 1778, 1784, 1854, 1885, 1886, 1909, 1931, 1951], "inv": [2, 31, 1227, 1281, 1285, 1291, 1307, 1311, 1315], "inv_ex": 2, "cholesky_ex": [2, 1279], "lu_factor": [2, 1298, 1299, 1339, 1340, 1341], "lu": [2, 10, 1291, 1297, 1298, 1299, 1340, 1341, 1953], "eigh": [2, 1279, 1285, 1288, 1307, 1313, 1993], "eighval": 2, "svdval": [2, 1281, 1295, 1304, 1313, 1885, 1993], "_linalgbackend": 2, "sdpaparam": 2, "flash_sdp_en": 2, "flash": 2, "scale": [2, 7, 21, 31, 33, 41, 43, 93, 169, 468, 470, 612, 680, 684, 685, 686, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 765, 767, 768, 769, 770, 772, 775, 776, 790, 794, 797, 814, 815, 816, 817, 820, 935, 1111, 1112, 1115, 1133, 1165, 1166, 1336, 1395, 1424, 1429, 1430, 1431, 1447, 1459, 1514, 1539, 1540, 1541, 1545, 1550, 1583, 1584, 1585, 1601, 1603, 1643, 1644, 1649, 1739, 1760, 1786, 1787, 1788, 1789, 1790, 1863, 1864, 1882, 1934, 1951, 1953, 1970, 1976, 1981, 1985, 1990, 1998, 2006, 2007, 2009, 2016, 2035], "product": [2, 15, 25, 31, 42, 146, 681, 684, 685, 686, 755, 888, 893, 904, 906, 907, 908, 909, 935, 947, 953, 957, 983, 997, 1009, 1056, 1060, 1074, 1075, 1078, 1094, 1097, 1161, 1165, 1166, 1226, 1270, 1282, 1289, 1315, 1316, 1318, 1344, 1351, 1354, 1375, 1438, 1439, 1457, 1458, 1545, 1550, 1591, 1643, 1688, 1772, 1773, 1782, 1828, 1902, 1917, 1931, 1934, 1951, 1952, 1969, 1978, 1987, 1989, 1993, 2003, 2006, 2015, 2047], "attent": [2, 7, 30, 730, 1400, 1493, 1530, 1532, 1534, 1545, 1547, 1565, 1643, 1951, 1996, 2019], "enable_mem_efficient_sdp": [2, 1643], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1643], "math_sdp_en": 2, "math": [2, 21, 58, 1107, 1299, 1301, 1604, 1643, 1774, 1791, 1886, 1951, 1952, 1954, 1955, 1986, 1993, 2015, 2016, 2022, 2045], "enable_math_sdp": [2, 1643], "can_use_flash_attent": 2, "debug": [2, 4, 5, 8, 21, 39, 46, 75, 77, 675, 822, 823, 827, 838, 914, 915, 967, 969, 974, 998, 1031, 1071, 1198, 1279, 1668, 1669, 1670, 1671, 1827, 1834, 1951, 1954, 1961, 1978, 1980, 1981, 1982, 1988, 1989, 1990, 1994, 1996, 1998, 2000, 2003, 2024, 2032, 2033, 2036, 2037, 2041, 2047], "check": [2, 3, 4, 5, 11, 14, 21, 25, 26, 27, 31, 33, 42, 49, 60, 61, 66, 69, 217, 336, 494, 689, 856, 895, 896, 898, 899, 900, 901, 914, 915, 921, 969, 1000, 1001, 1003, 1007, 1036, 1054, 1169, 1171, 1185, 1186, 1236, 1246, 1249, 1265, 1266, 1279, 1280, 1285, 1286, 1288, 1291, 1293, 1298, 1304, 1307, 1311, 1313, 1314, 1339, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1487, 1665, 1674, 1691, 1694, 1707, 1717, 1736, 1737, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1923, 1925, 1950, 1951, 1954, 1955, 1956, 1969, 1970, 1977, 1981, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1994, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2011, 2015, 2020, 2022, 2029, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2044, 2045, 2046], "flashattent": [2, 1534, 1643], "util": [2, 7, 17, 43, 46, 47, 49, 50, 57, 58, 60, 494, 727, 730, 733, 734, 735, 740, 741, 751, 755, 759, 785, 793, 901, 1014, 1098, 1099, 1100, 1148, 1185, 1186, 1249, 1438, 1457, 1487, 1502, 1503, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1715, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1889, 1890, 1892, 1893, 1894, 1922, 1951, 1955, 1959, 1963, 1966, 1977, 1979, 1980, 1981, 1983, 1985, 1987, 1989, 1990, 1992, 1994, 2000, 2002, 2003, 2004, 2033, 2035, 2043, 2045], "scaled_dot_product_attent": [2, 1493, 1546, 1549, 1953, 1973, 1974, 1975, 2001], "_sdpaparam": 2, "kei": [2, 3, 21, 27, 33, 40, 42, 43, 47, 49, 58, 598, 675, 730, 849, 854, 922, 927, 934, 1063, 1154, 1164, 1249, 1265, 1266, 1321, 1487, 1488, 1493, 1497, 1530, 1531, 1532, 1533, 1534, 1547, 1643, 1708, 1724, 1923, 1925, 1951, 1953, 1954, 1955, 1959, 1981, 1983, 1989, 1990, 1995, 2000, 2001, 2002, 2005, 2006, 2009, 2011, 2012, 2017, 2020, 2022, 2024, 2026, 2036, 2038, 2042, 2043, 2044], "mask": [2, 40, 395, 396, 397, 398, 399, 539, 730, 914, 915, 1343, 1395, 1406, 1431, 1493, 1530, 1531, 1532, 1533, 1534, 1585, 1643, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1755, 1951, 1953, 1969, 1970, 2015, 2035], "dropout": [2, 5, 58, 729, 730, 755, 1249, 1395, 1425, 1426, 1427, 1431, 1438, 1457, 1487, 1493, 1502, 1503, 1530, 1532, 1534, 1558, 1578, 1579, 1580, 1585, 1643, 1951, 1953, 1964, 1970, 1971, 1978, 1981, 2001, 2008], "causal": [2, 730, 1493, 1530, 1531, 1532, 1533, 1534, 1546, 1547, 1548, 1549, 1643], "warn": [2, 14, 18, 22, 25, 29, 46, 80, 81, 83, 675, 903, 909, 957, 1009, 1056, 1060, 1071, 1074, 1075, 1166, 1171, 1230, 1246, 1265, 1307, 1321, 1351, 1493, 1530, 1531, 1532, 1533, 1534, 1545, 1691, 1694, 1827, 1834, 1881, 1922, 1934, 1950, 1961, 1966, 1979, 1983, 1998, 2001, 2003, 2010, 2038, 2045], "why": [2, 3, 7, 21, 54, 58, 1097, 1253, 1643, 1951, 1962, 1984, 1986, 2033, 2034, 2043, 2047], "could": [2, 4, 5, 7, 8, 21, 25, 30, 31, 33, 42, 49, 54, 57, 58, 578, 579, 580, 582, 583, 923, 969, 1036, 1118, 1120, 1128, 1129, 1130, 1246, 1255, 1280, 1321, 1339, 1364, 1365, 1681, 1682, 1759, 1862, 1918, 1954, 1955, 1962, 1968, 1978, 1981, 1982, 1996, 2000, 2003, 2006, 2007, 2011, 2012, 2013, 2015, 2019, 2020, 2031, 2035, 2036, 2041, 2045], "depend": [2, 4, 5, 12, 14, 21, 25, 27, 29, 31, 33, 42, 43, 44, 47, 49, 58, 311, 780, 873, 1009, 1056, 1060, 1074, 1075, 1118, 1120, 1128, 1129, 1130, 1156, 1160, 1165, 1171, 1178, 1180, 1181, 1182, 1184, 1261, 1265, 1285, 1286, 1313, 1339, 1344, 1399, 1400, 1420, 1422, 1430, 1433, 1446, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1538, 1539, 1557, 1564, 1565, 1575, 1584, 1592, 1604, 1628, 1636, 1643, 1662, 1665, 1674, 1694, 1695, 1701, 1760, 1772, 1774, 1791, 1807, 1867, 1868, 1869, 1871, 1872, 1885, 1909, 1937, 1950, 1952, 1954, 1955, 1959, 1962, 1963, 1968, 1978, 1980, 1981, 1983, 1984, 1986, 1987, 1990, 1992, 1997, 1999, 2000, 2005, 2006, 2011, 2015, 2021, 2022, 2026, 2027, 2030, 2031, 2033, 2034, 2035, 2037, 2038, 2041, 2044, 2047], "can_use_efficient_attent": 2, "efficient_attent": 2, "sdp_kernel": [2, 1643], "enable_flash": 2, "enable_math": [2, 1643], "enable_mem_effici": 2, "temporarili": [2, 33, 1824, 1978, 2000, 2005, 2039], "previou": [2, 18, 25, 42, 46, 49, 58, 551, 755, 967, 1032, 1142, 1203, 1260, 1320, 1336, 1438, 1457, 1502, 1550, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1736, 1791, 1881, 1964, 1978, 1981, 1983, 1990, 1996, 1998, 2006, 2013, 2027, 2035], "restor": [2, 5, 27, 29, 58, 84, 975, 1142, 1320, 1336, 1550, 1726, 1811, 1832, 1990, 1995, 2032], "is_avail": [2, 17, 25, 1925, 1951, 1981, 1988, 1991, 1995, 2005, 2027, 2050], "determinist": [2, 3, 5, 20, 25, 31, 58, 80, 84, 481, 494, 508, 868, 1098, 1099, 1100, 1198, 1230, 1252, 1265, 1266, 1347, 1350, 1352, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1457, 1502, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1821, 1827, 1922, 1951, 1953, 1978, 1986, 1994, 2002, 2010], "algorithm": [2, 3, 7, 11, 19, 22, 26, 29, 31, 33, 49, 84, 755, 774, 780, 957, 1246, 1290, 1297, 1303, 1307, 1313, 1322, 1339, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1436, 1438, 1457, 1502, 1538, 1539, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1592, 1603, 1643, 1662, 1674, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1755, 1774, 1813, 1828, 1885, 1886, 1922, 1951, 1978, 1981, 1993, 2011, 2015], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 24, 494, 868, 1098, 1099, 1100, 1230, 1827, 1994], "benchmark": [2, 1951, 1953, 1981, 1988, 2030, 2035, 2042], "fastest": [2, 872, 1674, 1728, 1741, 1742, 1754, 1987, 1994, 2002], "benchmark_limit": 2, "maximum": [2, 24, 31, 42, 43, 46, 494, 690, 692, 766, 790, 815, 816, 817, 820, 821, 869, 1011, 1046, 1048, 1054, 1061, 1062, 1076, 1077, 1098, 1099, 1100, 1143, 1160, 1210, 1211, 1212, 1322, 1347, 1368, 1445, 1583, 1584, 1680, 1758, 1766, 1791, 1805, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1924, 1953, 1961, 1976, 1977, 1981, 1992, 2001, 2009, 2022, 2033, 2040, 2047], "try": [2, 3, 4, 7, 8, 25, 27, 34, 35, 39, 42, 46, 49, 53, 54, 78, 79, 967, 1067, 1151, 1160, 1166, 1171, 1189, 1254, 1256, 1265, 1286, 1368, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1530, 1531, 1533, 1539, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1934, 1950, 1952, 1955, 1956, 1959, 1978, 1981, 1983, 1985, 1987, 1992, 2000, 2002, 2003, 2006, 2007, 2011, 2015, 2031, 2033, 2034, 2035, 2037, 2045, 2047], "dispatch": [2, 25, 49, 58, 80, 81, 83, 1254, 1364, 1365, 1923, 1925, 1955, 1959, 1981, 1983, 1998, 2000, 2035, 2036, 2046], "v8": 2, "get_fastpath_en": 2, "fast": [2, 7, 8, 21, 25, 914, 1428, 1449, 1450, 1451, 1518, 1534, 1681, 1682, 1766, 1772, 1791, 1813, 1828, 1951, 1980, 1981, 1983, 1988, 2002, 2011, 2015, 2018, 2019, 2026, 2034, 2037, 2039, 2047], "path": [2, 3, 4, 8, 14, 25, 27, 40, 42, 44, 45, 46, 49, 58, 729, 924, 925, 926, 998, 1097, 1249, 1487, 1503, 1534, 1736, 1950, 1951, 1953, 1954, 1978, 1981, 1983, 1986, 1988, 1995, 1998, 2003, 2005, 2015, 2024, 2027, 2030, 2037, 2038, 2039], "transformerencod": 2, "multiheadattent": [2, 1530, 1532, 1534, 2006], "fastpath": [2, 1493, 2034], "condit": [2, 5, 12, 19, 21, 46, 47, 54, 58, 60, 63, 68, 69, 612, 615, 619, 689, 755, 904, 914, 915, 979, 1246, 1265, 1279, 1281, 1286, 1289, 1295, 1296, 1297, 1308, 1313, 1438, 1457, 1502, 1534, 1717, 1722, 1909, 1937, 1952, 1953, 1954, 1956, 1971, 1978, 1983, 1993, 2004, 2020, 2032, 2033, 2034, 2040], "met": [2, 12, 612, 979, 1289, 1296, 1297, 1308, 1322, 1534, 1870], "set_fastpath_en": 2, "verbos": [2, 14, 25, 58, 675, 1171, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1950, 1961, 1970, 2000, 2020, 2045], "On": [2, 14, 20, 21, 25, 26, 31, 43, 49, 54, 58, 681, 684, 935, 947, 1297, 1344, 1354, 1414, 1415, 1416, 1417, 1418, 1419, 1439, 1454, 1455, 1456, 1457, 1458, 1474, 1497, 1502, 1515, 1674, 1741, 1742, 1751, 1754, 1951, 1952, 1962, 1978, 1980, 1981, 1983, 1993, 2003, 2011, 2012, 2013, 2015, 2030, 2033, 2034, 2035], "demand": [2, 21, 1034, 1954, 1989, 1992, 2011], "onemkl": 2, "easier": [2, 7, 21, 46, 58, 1952, 1954, 1971, 1978, 1979, 1983, 1984, 1986, 2015, 2035, 2045], "dump": [2, 58, 998, 1982, 1996, 2035, 2038, 2045], "durat": [2, 25, 39, 42, 932, 1364, 1365, 1966, 1998, 2005, 2035, 2045], "kernel": [2, 3, 4, 11, 14, 18, 25, 49, 57, 481, 734, 735, 736, 737, 738, 767, 768, 769, 921, 967, 996, 1001, 1003, 1004, 1040, 1041, 1073, 1075, 1370, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1435, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1643, 1681, 1682, 1692, 1923, 1925, 1952, 1959, 1964, 1971, 1981, 1983, 1984, 1986, 1991, 1993, 2000, 2002, 2005, 2007, 2015, 2030, 2032, 2034, 2035, 2036, 2037, 2043, 2045], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 21, 25, 58, 675, 853, 985, 987, 1054, 1286, 1295, 1313, 1391, 1433, 1538, 1586, 1674, 1766, 1852, 1865, 1951, 1968, 1970, 1971, 1980, 1981, 1985, 1990, 1993, 1995, 1998, 2000, 2003, 2004, 2007, 2011, 2015, 2018, 2021, 2030, 2035, 2043, 2045, 2047], "moreov": [2, 49, 77, 508, 1674, 1754], "investig": [2, 7, 25, 54, 2043], "singl": [2, 3, 5, 12, 14, 22, 25, 27, 29, 31, 33, 35, 41, 42, 49, 50, 52, 53, 54, 55, 57, 58, 60, 68, 69, 250, 675, 690, 691, 761, 762, 763, 764, 767, 768, 769, 809, 890, 903, 904, 905, 906, 907, 908, 909, 921, 936, 945, 949, 967, 979, 983, 987, 1040, 1043, 1154, 1156, 1157, 1160, 1162, 1166, 1207, 1208, 1212, 1234, 1248, 1249, 1265, 1266, 1269, 1327, 1351, 1364, 1365, 1389, 1390, 1393, 1394, 1397, 1398, 1400, 1414, 1415, 1416, 1418, 1419, 1422, 1423, 1434, 1435, 1441, 1454, 1455, 1456, 1459, 1481, 1482, 1487, 1495, 1499, 1500, 1515, 1526, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1589, 1617, 1618, 1619, 1661, 1667, 1669, 1672, 1673, 1674, 1679, 1680, 1683, 1685, 1687, 1724, 1725, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1760, 1781, 1807, 1828, 1873, 1879, 1880, 1918, 1919, 1922, 1929, 1930, 1934, 1951, 1952, 1954, 1955, 1962, 1964, 1968, 1970, 1971, 1972, 1978, 1980, 1981, 1983, 1984, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 2000, 2002, 2003, 2004, 2005, 2006, 2012, 2013, 2015, 2018, 2021, 2022, 2025, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2044, 2045], "enough": [2, 8, 22, 58, 1171, 1177, 1261, 1373, 1536, 1867, 1868, 1869, 1870, 1871, 1872, 1922, 1954, 1968, 1971, 1981, 1983, 1987, 2002, 2003, 2018, 2035, 2046], "scope": [2, 7, 12, 44, 58, 77, 979, 1151, 1526, 1705, 1952, 1954, 1955, 1981, 1985, 2000, 2003, 2013, 2034, 2044], "second": [2, 5, 14, 18, 25, 29, 33, 35, 42, 44, 46, 55, 58, 681, 684, 686, 689, 755, 789, 869, 870, 871, 879, 887, 900, 901, 914, 915, 935, 939, 940, 942, 943, 944, 947, 997, 1009, 1056, 1060, 1074, 1075, 1085, 1087, 1088, 1094, 1102, 1143, 1144, 1156, 1159, 1160, 1161, 1165, 1166, 1181, 1192, 1193, 1203, 1206, 1214, 1215, 1216, 1226, 1238, 1272, 1274, 1282, 1318, 1321, 1327, 1328, 1338, 1344, 1348, 1350, 1351, 1353, 1354, 1379, 1384, 1387, 1391, 1397, 1398, 1404, 1415, 1416, 1418, 1419, 1429, 1430, 1437, 1438, 1452, 1455, 1456, 1457, 1475, 1479, 1481, 1482, 1502, 1515, 1574, 1576, 1610, 1665, 1705, 1741, 1742, 1745, 1751, 1755, 1766, 1812, 1862, 1870, 1906, 1911, 1913, 1928, 1931, 1934, 1954, 1955, 1959, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1990, 1994, 1998, 2000, 2005, 2011, 2016, 2020, 2027, 2030, 2038], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 21, 25, 33, 34, 35, 39, 46, 47, 49, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 494, 675, 742, 890, 891, 892, 893, 894, 906, 1155, 1168, 1178, 1181, 1194, 1400, 1423, 1674, 1927, 1951, 1952, 1955, 1956, 1961, 1966, 1968, 1971, 1976, 1978, 1980, 1983, 1986, 1987, 1998, 2003, 2005, 2006, 2007, 2011, 2015, 2020, 2024, 2025, 2026, 2032, 2033, 2035, 2036, 2038, 2040, 2043, 2044, 2045, 2046], "verbose_off": 2, "dnn": [2, 1980], "onednn": [2, 850, 851, 854, 1251, 1258, 2001, 2006], "former": [2, 49, 1457, 1487, 1978], "dnnl_verbos": 2, "verbose_on_cr": 2, "set_flag": 2, "_enabl": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 22, 31, 46, 53, 57, 1592, 1950, 1951, 1967, 1983, 1990, 1998, 2002, 2009, 2011, 2020, 2023, 2027, 2031, 2050], "els": [2, 7, 12, 21, 25, 27, 31, 33, 34, 42, 46, 58, 60, 598, 755, 934, 938, 979, 1261, 1267, 1452, 1526, 1630, 1643, 1674, 1741, 1742, 1745, 1751, 1752, 1753, 1754, 1808, 1809, 1841, 1847, 1925, 1952, 1954, 1956, 1957, 1962, 1968, 1971, 1981, 1983, 1984, 1986, 1990, 1991, 1998, 1999, 2000, 2002, 2003, 2017, 2027, 2030, 2031, 2033, 2044], "einsum": [2, 1953, 2001], "readthedoc": [2, 1097], "io": [2, 7, 14, 21, 27, 46, 1097, 1257, 1260, 1321, 1457, 1458, 1534, 1816, 1996, 1998, 2006], "en": [2, 14, 22, 1097, 1988, 2020, 2048], "path_find": [2, 1097], "html": [2, 3, 4, 7, 14, 15, 43, 675, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 967, 1097, 1536, 1922, 1925, 1979, 1988, 1990, 1994, 2003, 2005, 2020], "calcul": [2, 21, 25, 27, 39, 755, 763, 764, 794, 797, 814, 815, 819, 911, 955, 987, 1085, 1089, 1097, 1101, 1240, 1246, 1305, 1327, 1328, 1330, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1406, 1417, 1418, 1419, 1433, 1438, 1440, 1441, 1449, 1450, 1451, 1459, 1526, 1535, 1538, 1539, 1559, 1560, 1561, 1565, 1584, 1589, 1592, 1603, 1633, 1689, 1701, 1723, 1727, 1729, 1760, 1806, 1879, 1880, 1911, 1913, 1929, 1930, 1978, 1979, 1982, 1986, 1987, 1993, 1996, 2006, 2015, 2025], "contract": [2, 47, 1097, 1902, 1951, 1970, 2003, 2031, 2038], "fall": [2, 7, 14, 21, 46, 790, 914, 967, 1181, 1212, 1263, 1321, 1447, 1518, 1601, 1647, 1679, 1680, 1950, 2000, 2006, 2035], "left": [2, 21, 58, 455, 494, 809, 815, 860, 936, 940, 943, 945, 946, 951, 956, 1097, 1117, 1124, 1138, 1141, 1142, 1146, 1203, 1207, 1208, 1212, 1246, 1247, 1254, 1269, 1290, 1299, 1303, 1307, 1310, 1311, 1312, 1313, 1315, 1327, 1328, 1373, 1391, 1396, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1433, 1440, 1453, 1454, 1455, 1456, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1490, 1491, 1492, 1496, 1497, 1535, 1538, 1539, 1540, 1541, 1547, 1549, 1592, 1612, 1631, 1643, 1680, 1758, 1759, 1772, 1800, 1813, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1881, 1902, 1907, 1928, 1952, 1953, 1955, 1978, 1983, 1986, 1990, 2009, 2016, 2043, 2047], "strategi": [2, 3, 7, 21, 22, 25, 29, 35, 49, 903, 905, 1097, 1158, 1263, 1391, 1674, 1681, 1682, 1766, 1954, 1984, 1987, 2007, 2035], "auto": [2, 25, 50, 78, 79, 1097, 1399, 1400, 1955, 2000, 2020, 2034], "greedi": [2, 29, 1097], "doc": [2, 3, 4, 9, 15, 42, 43, 47, 82, 675, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 835, 967, 1166, 1268, 1531, 1532, 1533, 1534, 1922, 1934, 1956, 1959, 1968, 1979, 1982, 1983, 1990, 1994, 2003, 2006, 2011, 2015, 2020, 2027, 2036, 2041], "timer": [3, 28, 1951], "stmt": [3, 1980], "setup": [3, 14, 22, 42, 43, 49, 59, 815, 816, 817, 820, 1166, 1674, 1934, 1980, 1981, 1991, 2011, 2012, 2031], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 21, 25, 29, 930, 1097, 1391, 1400, 1406, 1420, 1422, 1446, 1479, 1490, 1491, 1576, 1716, 1759, 1982, 1986, 1992, 1994, 2020], "sub_label": 3, "descript": [3, 7, 13, 14, 21, 35, 42, 58, 729, 1221, 1222, 1223, 1295, 1322, 1557, 1784, 1828, 1954, 1955, 1981, 1983, 1987, 1989, 1990, 2000, 2026, 2036, 2048], "env": [3, 25, 31, 35, 40, 42, 43, 45, 58, 1054, 1171, 1982, 1993, 1998, 1999, 2011, 2035, 2045], "num_thread": [3, 1992], "languag": [3, 14, 35, 46, 1261, 1391, 1530, 1591, 1985, 1997], "measur": [3, 31, 39, 1000, 1046, 1048, 1281, 1361, 1399, 1400, 1420, 1446, 1453, 1478, 1479, 1535, 1536, 1564, 1624, 1768, 1951, 1981, 1989, 1990, 2002, 2015], "statement": [3, 12, 31, 47, 54, 58, 60, 65, 68, 69, 979, 1250, 1265, 1956, 1978, 1983, 1992, 1995, 1997, 2000, 2003, 2009, 2011, 2031, 2038], "full": [3, 7, 8, 14, 15, 21, 22, 25, 27, 29, 31, 42, 45, 46, 49, 50, 54, 58, 481, 508, 895, 899, 900, 901, 936, 945, 967, 1125, 1126, 1127, 1131, 1132, 1134, 1153, 1165, 1166, 1207, 1208, 1253, 1287, 1288, 1295, 1296, 1297, 1308, 1313, 1314, 1322, 1339, 1400, 1406, 1440, 1501, 1530, 1567, 1568, 1569, 1576, 1589, 1636, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1832, 1885, 1886, 1934, 1950, 1952, 1953, 1954, 1955, 1957, 1970, 1977, 1981, 1982, 1983, 1986, 1987, 1990, 1993, 1994, 1998, 2001, 2003, 2006, 2009, 2012, 2019, 2022, 2032, 2035, 2038, 2039, 2040, 2045], "org": [3, 4, 7, 9, 10, 12, 15, 22, 31, 43, 675, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 967, 979, 1322, 1457, 1506, 1533, 1536, 1690, 1726, 1774, 1828, 1848, 1925, 1950, 1956, 1978, 1979, 1990, 1994, 1996, 2000, 2003, 2020, 2021, 2047, 2048], "timeit": [3, 1980], "sever": [3, 12, 15, 21, 25, 31, 49, 58, 733, 734, 735, 736, 737, 738, 761, 762, 767, 768, 769, 777, 778, 910, 911, 1043, 1101, 1187, 1188, 1249, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1435, 1454, 1455, 1456, 1475, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1540, 1541, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1674, 1691, 1692, 1694, 1695, 1727, 1735, 1789, 1790, 1917, 1922, 1952, 1977, 1978, 1980, 1981, 1989, 1990, 1992, 2000, 2002, 2006, 2011, 2032, 2035], "awar": [3, 7, 80, 481, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 833, 834, 850, 857, 858, 1534, 1674, 1889, 1890, 1892, 1893, 1894, 1970, 1978, 1981, 2003, 2009, 2012, 2015, 2042], "element": [3, 12, 21, 25, 31, 47, 54, 55, 58, 60, 66, 68, 69, 93, 115, 146, 150, 192, 212, 238, 250, 254, 282, 309, 311, 313, 315, 317, 348, 394, 396, 398, 430, 449, 466, 468, 469, 492, 494, 508, 510, 512, 515, 540, 541, 553, 555, 604, 605, 612, 676, 678, 679, 682, 683, 688, 689, 693, 694, 730, 753, 755, 765, 766, 767, 768, 769, 775, 779, 788, 869, 871, 872, 873, 876, 877, 878, 879, 880, 888, 903, 904, 906, 907, 908, 914, 915, 937, 946, 949, 956, 962, 966, 979, 981, 983, 984, 985, 1040, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1086, 1087, 1088, 1092, 1094, 1097, 1100, 1102, 1103, 1107, 1127, 1131, 1132, 1134, 1136, 1141, 1143, 1144, 1146, 1149, 1151, 1156, 1157, 1159, 1160, 1161, 1165, 1166, 1191, 1192, 1193, 1194, 1203, 1206, 1209, 1210, 1211, 1212, 1226, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1269, 1271, 1272, 1274, 1291, 1293, 1297, 1308, 1312, 1323, 1324, 1326, 1329, 1331, 1332, 1333, 1334, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1371, 1373, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1395, 1396, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1452, 1453, 1457, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1476, 1478, 1479, 1480, 1481, 1482, 1486, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1535, 1536, 1538, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1577, 1581, 1584, 1585, 1590, 1591, 1595, 1596, 1597, 1598, 1601, 1604, 1605, 1607, 1612, 1617, 1618, 1619, 1623, 1624, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1646, 1647, 1649, 1651, 1653, 1654, 1655, 1656, 1661, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1715, 1716, 1718, 1719, 1728, 1729, 1730, 1732, 1737, 1777, 1778, 1781, 1782, 1789, 1790, 1792, 1803, 1806, 1807, 1811, 1813, 1815, 1832, 1835, 1837, 1849, 1850, 1852, 1853, 1857, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1879, 1880, 1884, 1896, 1898, 1899, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1929, 1930, 1931, 1934, 1937, 1953, 1955, 1959, 1962, 1971, 1976, 1979, 1980, 1983, 1987, 1993, 1995, 2000, 2002, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2034, 2037, 2046], "lazili": [3, 17, 27, 1000, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1665, 1952, 1983, 2043], "threadpool": 3, "comparison": [3, 22, 25, 46, 58, 1249, 1265, 1266, 1487, 1737, 1956, 1983, 2022, 2025, 2032], "appl": [3, 1967], "synchron": [3, 4, 17, 18, 22, 27, 29, 33, 42, 49, 57, 481, 872, 1000, 1001, 1003, 1011, 1031, 1071, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1297, 1298, 1304, 1307, 1310, 1311, 1313, 1314, 1322, 1361, 1526, 1674, 1728, 1730, 1806, 1951, 1980, 1981, 1982, 1988, 1992, 2004, 2011, 2017, 2035], "focu": [3, 47, 1768, 2038], "replic": [3, 21, 27, 30, 49, 82, 1203, 1260, 1414, 1415, 1416, 1423, 1433, 1463, 1464, 1465, 1511, 1512, 1513, 1538, 1631, 1658, 2004], "particularli": [3, 21, 22, 44, 1422, 1423, 1494, 1952, 1981, 2033, 2043], "variat": [3, 31, 1955, 1983, 2002, 2007, 2045], "confound": 3, "quantifi": [3, 1536], "nois": [3, 1953, 1994, 2045], "median": [3, 31, 169, 1379, 1922, 1953, 1969, 2001], "robust": [3, 1322, 1968, 1990], "deviat": [3, 31, 49, 373, 1395, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1526, 1730, 1842, 1847, 1879, 1880, 1976, 2035], "merg": [3, 6, 7, 9, 21, 25, 27, 43, 1488, 1493, 1497], "repeat": [3, 31, 46, 54, 489, 987, 1097, 1178, 1313, 1339, 1483, 1484, 1485, 1564, 1565, 1774, 1806, 1865, 1885, 1886, 1903, 1953, 1955, 1981, 2001, 2005, 2008, 2015, 2040], "autorang": 3, "exact": [3, 14, 21, 33, 44, 47, 81, 335, 736, 737, 738, 790, 869, 870, 871, 914, 915, 967, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1350, 1418, 1457, 1534, 1603, 1674, 1769, 1858, 1976, 1981, 1982, 1992, 2015, 2034, 2035, 2042, 2045, 2046], "discuss": [3, 5, 8, 9, 10, 31, 46, 58, 1447, 1603, 1962, 1978, 1983, 1986, 1990, 1994, 2011, 2013, 2015, 2032], "docstr": [3, 14, 46, 58, 856, 857, 1249, 1487, 1950, 1981], "adapt": [3, 46, 761, 762, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1424, 1551, 1552, 1553, 1554, 1555, 1556, 1739, 1740, 1751, 1753, 1760, 1981, 1998, 2033], "field": [3, 7, 25, 27, 29, 30, 33, 35, 39, 40, 47, 49, 58, 483, 821, 888, 889, 932, 1247, 1249, 1391, 1399, 1400, 1420, 1422, 1446, 1452, 1453, 1478, 1479, 1487, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1557, 1564, 1565, 1575, 1592, 1604, 1628, 1636, 1715, 1749, 1755, 1966, 1978, 1982, 1992, 2000, 2011, 2012, 2020, 2038, 2044, 2045], "displai": [3, 18, 1042, 1055, 1171, 1603, 1662, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1950, 1956, 1961, 1965, 2000, 2020, 2022, 2027, 2035, 2045], "instruct": [3, 4, 11, 14, 44, 57, 1828, 1952, 1955, 1981, 1993, 2000, 2006, 2022, 2029, 2034, 2038, 2045], "count": [3, 21, 31, 39, 58, 889, 923, 932, 938, 986, 1036, 1151, 1211, 1212, 1247, 1287, 1288, 1715, 1918, 1919, 1953, 1966, 1981, 1986, 2001, 2005, 2011, 2013, 2015, 2038], "wall": [3, 2039], "callgrind": 3, "analog": [3, 46, 58, 481, 689, 910, 1080, 1118, 1120, 1299, 1457, 1754, 1885, 1903, 1971, 1990, 2033, 2038], "constructor": [3, 14, 21, 22, 29, 49, 58, 60, 69, 819, 856, 857, 1391, 1492, 1497, 1498, 1515, 1540, 1541, 1674, 1722, 1860, 1951, 1952, 1955, 1956, 1981, 1982, 1990, 2011, 2015, 2017, 2018, 2021, 2048], "snippet": [3, 43, 1950, 1990, 1995, 2027, 2037, 2038], "loop": [3, 22, 44, 46, 47, 50, 54, 55, 58, 60, 65, 857, 858, 909, 1043, 1046, 1048, 1160, 1166, 1265, 1674, 1692, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1934, 1952, 1953, 1955, 1966, 1980, 1981, 1985, 1987, 1990, 1993, 1997, 2000, 2002, 2005, 2006, 2020, 2030, 2034, 2038, 2044], "callabl": [3, 5, 12, 21, 22, 25, 29, 31, 33, 35, 40, 42, 44, 46, 47, 49, 57, 58, 115, 394, 836, 967, 969, 979, 1040, 1041, 1043, 1155, 1156, 1157, 1162, 1165, 1166, 1249, 1252, 1255, 1261, 1265, 1321, 1322, 1487, 1530, 1532, 1534, 1536, 1668, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1762, 1765, 1934, 1950, 1952, 1954, 1955, 1956, 1966, 1981, 1983, 1990, 1995, 1998, 2000, 2003, 2004, 2005, 2011, 2022, 2024, 2025, 2031, 2032, 2036, 2038, 2044, 2046], "present": [3, 9, 21, 25, 27, 42, 47, 49, 889, 932, 934, 1247, 1339, 1391, 1457, 1497, 1715, 1735, 1881, 1950, 1965, 1968, 1969, 1970, 1977, 1978, 1981, 1983, 1987, 1990, 1995, 2000, 2003, 2012, 2015, 2018, 2036, 2041, 2047], "default_tim": 3, "dict": [3, 5, 12, 21, 22, 25, 26, 27, 29, 30, 31, 33, 36, 40, 44, 46, 47, 49, 51, 53, 58, 675, 787, 788, 789, 810, 811, 812, 831, 849, 916, 923, 934, 967, 979, 1040, 1041, 1054, 1063, 1154, 1164, 1166, 1247, 1248, 1249, 1250, 1256, 1261, 1265, 1266, 1321, 1322, 1423, 1433, 1487, 1488, 1497, 1538, 1665, 1674, 1705, 1724, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1934, 1943, 1950, 1952, 1953, 1955, 1956, 1965, 1966, 1983, 1990, 1995, 1998, 2000, 2001, 2002, 2011, 2012, 2020, 2024, 2025, 2032, 2041, 2044, 2046], "summar": [3, 4, 43, 1832, 1955, 1971, 1986, 2015, 2032, 2038, 2045], "relu": [3, 22, 46, 54, 55, 58, 695, 696, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 760, 787, 788, 809, 849, 855, 1040, 1156, 1166, 1255, 1261, 1487, 1502, 1504, 1515, 1523, 1530, 1532, 1534, 1640, 1641, 1665, 1736, 1934, 1952, 1953, 1964, 1970, 1971, 1976, 1978, 1990, 1995, 2000, 2001, 2006, 2008, 2009, 2027, 2031, 2037, 2040, 2043, 2044, 2045], "readabl": [3, 13, 21, 40, 46, 58, 1042, 1055, 1900, 2000, 2002, 2032, 2045, 2046], "supplement": 3, "disambigu": [3, 40, 58, 1327, 2045], "ident": [3, 14, 21, 25, 31, 58, 783, 809, 914, 915, 1085, 1181, 1287, 1288, 1289, 1290, 1303, 1315, 1318, 1322, 1339, 1378, 1379, 1395, 1424, 1633, 1681, 1682, 1688, 1691, 1927, 1931, 1937, 1956, 1976, 1993, 1994, 2003, 2008, 2015, 2034, 2045], "easi": [3, 21, 25, 27, 42, 46, 1952, 1978, 1985, 1989, 1990, 1992, 2003, 2006, 2011, 2012, 2015, 2031, 2032, 2035, 2037, 2038, 2043], "differenti": [3, 31, 50, 55, 146, 348, 584, 797, 884, 886, 888, 893, 894, 895, 897, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 964, 1043, 1159, 1160, 1161, 1165, 1264, 1296, 1297, 1308, 1339, 1405, 1406, 1429, 1594, 1629, 1674, 1694, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1922, 1951, 1962, 1983, 1985, 1987, 2000, 2002, 2011, 2021, 2035], "distinguish": [3, 1170, 2006, 2015], "princip": [3, 1296, 1774], "signal": [3, 11, 27, 33, 42, 44, 733, 734, 735, 761, 762, 777, 778, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1246, 1312, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1414, 1415, 1416, 1434, 1435, 1454, 1455, 1456, 1475, 1480, 1481, 1482, 1540, 1541, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1567, 1570, 1587, 1588, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1881, 1951, 1968, 1992, 2005, 2011], "form": [3, 7, 9, 11, 21, 25, 31, 41, 42, 43, 46, 47, 49, 54, 58, 755, 774, 780, 958, 1085, 1125, 1127, 1167, 1249, 1289, 1292, 1297, 1308, 1313, 1389, 1390, 1393, 1394, 1406, 1434, 1435, 1438, 1457, 1487, 1502, 1538, 1539, 1576, 1587, 1588, 1591, 1603, 1631, 1662, 1694, 1754, 1772, 1902, 1950, 1952, 1956, 1971, 1978, 1983, 1990, 1998, 2000, 2003, 2006, 2015, 2020, 2032, 2037, 2044], "treat": [3, 31, 41, 52, 58, 60, 65, 66, 317, 466, 788, 914, 915, 1040, 1154, 1182, 1249, 1302, 1305, 1307, 1319, 1321, 1331, 1332, 1333, 1334, 1351, 1381, 1430, 1440, 1459, 1491, 1492, 1493, 1494, 1497, 1515, 1520, 1584, 1674, 1724, 1728, 1760, 1813, 1828, 1881, 1896, 1897, 1903, 1918, 1954, 1955, 1969, 1978, 1998, 2000, 2011, 2015, 2018, 2025, 2035, 2036, 2041, 2044], "distinct": [3, 76, 1154, 1285, 1286, 1330, 1400, 1955, 1983, 1995, 2000, 2002, 2011, 2012, 2033], "workload": [3, 8, 21, 25, 49, 1043, 1981, 1986, 1989, 1993, 2011, 2029, 2043], "good": [3, 7, 8, 14, 58, 967, 1158, 1177, 1495, 1848, 1950, 1959, 1968, 1981, 1983, 1986, 1989, 1990, 1992, 2000, 2003, 2004, 2006, 2032, 2033, 2034, 2038, 2042], "intrins": [3, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 787, 788, 2007, 2008], "contrast": [3, 31, 33, 46, 755, 1438, 1754, 1976, 1978, 1984, 1986, 2015, 2040], "adaptive_autorang": 3, "threshold": [3, 22, 58, 1304, 1307, 1447, 1518, 1523, 1651, 1657, 1768, 1832, 1953, 1977, 1981, 2001, 2020], "min_run_tim": 3, "01": [3, 26, 29, 44, 483, 750, 775, 816, 817, 1098, 1140, 1473, 1607, 1608, 1665, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1760, 1766, 1786, 1839, 1841, 1842, 1847, 1848, 1953, 1976, 1989, 2000, 2002, 2040], "max_run_tim": 3, "callback": [3, 22, 42, 44, 57, 58, 1674, 1966, 1983, 1989, 2005, 2011], "similar": [3, 7, 9, 21, 25, 31, 39, 47, 49, 54, 57, 58, 488, 510, 707, 708, 709, 710, 711, 712, 715, 725, 726, 727, 728, 740, 741, 751, 759, 797, 872, 887, 900, 901, 948, 953, 966, 967, 1143, 1144, 1249, 1420, 1421, 1433, 1446, 1449, 1450, 1451, 1487, 1535, 1574, 1715, 1729, 1730, 1755, 1778, 1806, 1813, 1862, 1897, 1903, 1919, 1954, 1955, 1968, 1969, 1971, 1978, 1980, 1981, 1983, 1984, 1987, 1993, 2000, 2003, 2004, 2006, 2011, 2012, 2015, 2016, 2021, 2033, 2034, 2035, 2037, 2038, 2041, 2045, 2048], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 21, 22, 25, 29, 33, 42, 49, 57, 58, 481, 1000, 1001, 1003, 1034, 1151, 1270, 1322, 1361, 1364, 1365, 1592, 1665, 1674, 1757, 1763, 1903, 1968, 1976, 1981, 1985, 1986, 1995, 1998, 2000, 2005, 2011, 2013, 2017, 2035], "iqr": 3, "smaller": [3, 21, 58, 494, 540, 987, 1457, 1674, 1768, 1783, 1828, 1873, 1981, 1995, 2003, 2031, 2047, 2048], "reach": [3, 7, 8, 9, 21, 22, 25, 26, 33, 42, 46, 50, 1322, 1674, 1757, 1760, 1763, 1764, 1978, 1983, 1992, 2004, 2007, 2011, 2032], "At": [3, 5, 6, 7, 15, 21, 1131, 1401, 1402, 1403, 1414, 1415, 1416, 1417, 1418, 1419, 1454, 1455, 1456, 1923, 1927, 1964, 1971, 1980, 1987, 2006, 2011, 2016, 2032, 2035, 2038, 2045], "high": [3, 4, 7, 8, 9, 10, 15, 22, 25, 31, 33, 39, 41, 43, 58, 115, 1406, 1533, 1795, 1796, 1828, 1927, 1953, 1963, 1966, 1968, 1983, 1987, 1988, 1990, 1991, 1992, 2002, 2006, 2007, 2011, 2015, 2020, 2021, 2022, 2025, 2029, 2030, 2038, 2040, 2045], "pseudo": [3, 84], "block_siz": 3, "enough_data": 3, "len": [3, 21, 27, 58, 60, 65, 214, 540, 688, 690, 691, 694, 1116, 1120, 1123, 1127, 1130, 1134, 1165, 1253, 1316, 1337, 1349, 1378, 1381, 1423, 1631, 1700, 1702, 1718, 1759, 1766, 1870, 1873, 1879, 1880, 1884, 1928, 1929, 1930, 1952, 1953, 1955, 1983, 2001, 2015, 2020, 2044], "small_iqr": 3, "break": [3, 7, 25, 31, 52, 58, 675, 888, 967, 969, 1171, 1249, 1295, 1487, 1813, 1832, 1951, 1956, 1961, 1963, 1982, 2002, 2015, 2023, 2027, 2030, 2032, 2033, 2036, 2038, 2039, 2041], "stop": [3, 5, 25, 31, 33, 42, 43, 44, 47, 860, 889, 932, 1036, 1171, 1247, 1322, 1406, 1715, 1768, 1800, 1952, 1955, 2011, 2036], "repetit": [3, 1806, 1903], "statist": [3, 22, 25, 31, 794, 795, 815, 816, 817, 819, 820, 1009, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1074, 1075, 1327, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1966, 1978, 1985, 2002, 2004, 2006, 2009, 2035, 2045], "minimum": [3, 14, 22, 33, 42, 43, 46, 691, 692, 766, 790, 815, 816, 817, 820, 821, 870, 938, 1077, 1144, 1210, 1211, 1212, 1352, 1406, 1445, 1536, 1758, 1759, 1766, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1953, 1976, 1978, 1987, 2001, 2009, 2018, 2040], "total_tim": 3, "choic": [3, 8, 9, 25, 1265, 1313, 1488, 1497, 1791, 1980, 2000, 2009, 2015, 2033, 2045], "block": [3, 7, 8, 21, 25, 29, 30, 42, 44, 49, 57, 58, 481, 578, 579, 580, 930, 946, 1000, 1054, 1270, 1322, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1463, 1464, 1465, 1466, 1467, 1468, 1490, 1538, 1586, 1661, 1674, 1867, 1868, 1869, 1952, 1954, 1955, 1966, 1968, 1972, 1978, 1981, 1982, 1986, 1987, 2000, 2006, 2011, 2015, 2026, 2043, 2047], "qualiti": [3, 7, 22], "balanc": [3, 967], "compet": [3, 1992], "amort": 3, "invoc": [3, 5, 58, 836, 967, 972, 1252, 1265, 1952, 1955, 1981, 1983, 1989, 2000, 2011, 2013, 2030, 2038, 2043], "less": [3, 6, 7, 14, 21, 22, 25, 31, 33, 44, 46, 49, 360, 675, 903, 905, 914, 915, 987, 1050, 1067, 1097, 1141, 1145, 1154, 1274, 1286, 1322, 1338, 1339, 1391, 1447, 1501, 1509, 1518, 1524, 1718, 1804, 1911, 1913, 1950, 1953, 1955, 1971, 1981, 1983, 1986, 1992, 1993, 2001, 2004, 2006, 2035], "bias": [3, 22, 729, 755, 789, 1401, 1402, 1403, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1502, 1504, 1526, 1546, 1547, 2002], "trivial": [3, 33, 35, 730, 957, 1167, 1171, 1688, 1870, 2000, 2013, 2034], "low": [3, 7, 18, 22, 31, 49, 494, 906, 1178, 1194, 1406, 1774, 1791, 1795, 1796, 1813, 1886, 1951, 1953, 1966, 1968, 1981, 1992, 2005, 2022, 2039, 2040, 2046], "digit": [3, 951, 1832, 1950, 1965, 1989, 1993], "microsecond": [3, 1981], "bia": [3, 9, 25, 46, 60, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 744, 746, 747, 748, 749, 751, 755, 756, 759, 760, 767, 768, 769, 776, 787, 1164, 1249, 1259, 1391, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1438, 1439, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1487, 1493, 1502, 1503, 1504, 1530, 1532, 1534, 1547, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1593, 1602, 1606, 1609, 1665, 1674, 1684, 1686, 1688, 1689, 1690, 1704, 1706, 1708, 1723, 1726, 1788, 1953, 1959, 1963, 1964, 1975, 1983, 1990, 1995, 1998, 2002, 2006, 2008, 2015, 2020, 2040], "period": [3, 9, 29, 42, 936, 945, 1009, 1042, 1055, 1056, 1060, 1074, 1075, 1117, 1207, 1208, 1269, 1770, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1953, 1966, 1992], "overal": [3, 9, 21, 42, 914, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1533, 1978, 1980, 1981, 1992, 2006, 2007, 2039], "main": [3, 7, 21, 22, 25, 26, 27, 31, 33, 34, 35, 40, 42, 43, 44, 45, 46, 58, 256, 491, 967, 1084, 1085, 1086, 1087, 1088, 1312, 1594, 1865, 1910, 1911, 1912, 1913, 1950, 1952, 1966, 1968, 1970, 1971, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1990, 1992, 1996, 1997, 1998, 2006, 2011, 2012, 2020, 2021, 2026, 2027, 2031, 2035, 2038, 2044], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1951], "tupl": [3, 5, 12, 14, 21, 25, 27, 30, 33, 39, 40, 42, 46, 47, 49, 58, 229, 315, 440, 442, 444, 492, 515, 532, 555, 578, 579, 580, 688, 690, 691, 692, 694, 730, 761, 762, 763, 764, 767, 768, 769, 774, 780, 781, 782, 788, 812, 813, 849, 856, 857, 873, 874, 881, 882, 883, 884, 885, 887, 900, 901, 903, 904, 905, 906, 907, 908, 909, 914, 915, 918, 919, 920, 934, 950, 969, 974, 979, 986, 1010, 1011, 1014, 1025, 1043, 1049, 1076, 1077, 1095, 1098, 1100, 1114, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1129, 1130, 1132, 1134, 1137, 1147, 1152, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1190, 1194, 1211, 1213, 1249, 1256, 1261, 1265, 1266, 1271, 1280, 1285, 1286, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1302, 1306, 1308, 1309, 1311, 1313, 1316, 1319, 1337, 1339, 1341, 1347, 1349, 1351, 1352, 1355, 1357, 1378, 1381, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1433, 1434, 1435, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1493, 1497, 1508, 1509, 1510, 1511, 1512, 1513, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1552, 1553, 1555, 1556, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1603, 1617, 1618, 1619, 1629, 1631, 1662, 1663, 1664, 1669, 1670, 1671, 1674, 1684, 1686, 1694, 1705, 1718, 1724, 1728, 1729, 1733, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1774, 1775, 1784, 1793, 1795, 1797, 1807, 1811, 1812, 1857, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1879, 1880, 1884, 1885, 1886, 1900, 1901, 1902, 1903, 1904, 1909, 1916, 1917, 1918, 1919, 1920, 1929, 1930, 1934, 1935, 1937, 1948, 1952, 1953, 1956, 1968, 1971, 1978, 1981, 1983, 1984, 1990, 1995, 1998, 2000, 2002, 2003, 2006, 2011, 2015, 2020, 2022, 2025, 2035, 2038, 2044, 2046], "modulo": [3, 31, 1145, 1181, 1804], "determin": [3, 5, 8, 11, 14, 17, 18, 20, 21, 22, 25, 31, 33, 40, 42, 49, 54, 58, 81, 82, 83, 818, 821, 903, 905, 914, 915, 936, 945, 952, 957, 1044, 1099, 1118, 1128, 1153, 1154, 1172, 1173, 1207, 1208, 1211, 1212, 1263, 1283, 1295, 1306, 1309, 1330, 1344, 1430, 1434, 1435, 1457, 1493, 1496, 1502, 1584, 1587, 1588, 1603, 1637, 1662, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1724, 1734, 1766, 1794, 1796, 1798, 1825, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1949, 1955, 1956, 1970, 1981, 1982, 1983, 1986, 1990, 1998, 2000, 2003, 2006, 2011, 2013, 2015, 2017, 2018, 2020, 2022, 2033, 2034, 2035, 2044, 2045, 2050], "itself": [3, 5, 7, 8, 25, 26, 46, 49, 55, 58, 483, 688, 694, 874, 987, 1159, 1160, 1249, 1261, 1265, 1487, 1520, 1649, 1674, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1859, 1952, 1968, 1983, 1990, 1992, 1994, 1997, 2000, 2003, 2011, 2015, 2019, 2031, 2034, 2038, 2045], "jitter": 3, "interpret": [3, 21, 25, 29, 31, 33, 42, 44, 46, 47, 774, 780, 875, 909, 1053, 1118, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1151, 1200, 1212, 1249, 1254, 1261, 1265, 1302, 1322, 1426, 1592, 1603, 1604, 1662, 1825, 1830, 1950, 1954, 1955, 1968, 1980, 1981, 2000, 2015, 2017, 2019, 2032, 2038], "ideal": [3, 41, 43, 49, 1265, 1755, 1970, 2035], "analysi": [3, 22, 31, 58, 1269, 1774, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1956, 1963, 1990, 1997, 1998, 2025, 2031, 2032, 2034, 2039], "valgrind": 3, "degrad": [3, 14, 49, 1980, 1982, 1983, 2015], "due": [3, 4, 5, 7, 22, 25, 31, 41, 49, 54, 58, 60, 62, 80, 481, 875, 903, 904, 909, 983, 1262, 1285, 1286, 1313, 1339, 1426, 1440, 1530, 1539, 1603, 1643, 1722, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1886, 1952, 1971, 1981, 1987, 1988, 1994, 1998, 2000, 2006, 2007, 2011, 2013, 2035, 2038, 2041, 2045, 2047], "amelior": 3, "suffici": [3, 14, 22, 31, 34, 42, 47, 49, 481, 1741, 1742, 1754, 1950, 2015, 2018, 2035], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 58, 774, 780, 951, 1203, 1408, 1409, 1410, 1411, 1412, 1413, 1508, 1509, 1510, 1511, 1512, 1513, 1539, 1542, 1543, 1544, 1603, 1662, 1760, 1766, 1953, 1982, 2003, 2004, 2011, 2035], "caller": [3, 33, 42, 58, 849, 1249, 1487, 1534, 1670, 1671, 1870, 1978, 1981, 2011, 2013], "structur": [3, 5, 9, 12, 21, 22, 25, 32, 33, 35, 43, 46, 47, 49, 58, 60, 61, 65, 69, 887, 900, 901, 933, 979, 1148, 1161, 1166, 1169, 1175, 1176, 1265, 1487, 1546, 1701, 1705, 1737, 1774, 1886, 1934, 1951, 1954, 1956, 1962, 1966, 1971, 1981, 1982, 1983, 1984, 1986, 1992, 1995, 1996, 1998, 2000, 2002, 2003, 2011, 2020, 2021, 2022, 2023, 2025, 2027, 2032, 2033, 2035, 2036, 2041, 2047], "restrict": [3, 8, 12, 21, 31, 47, 49, 54, 55, 979, 1321, 1344, 1422, 1954, 1955, 1956, 1970, 1971, 1978, 1981, 1987, 2004, 2006, 2033], "builtin": [3, 25, 58, 60, 69, 1262, 1321, 1800, 1952, 1954, 1956, 2011, 2013, 2035, 2045], "surpris": [3, 8, 49, 1950, 1987, 1993, 2034], "serial": [3, 15, 21, 25, 27, 29, 42, 1249, 1259, 1260, 1321, 1487, 1665, 1816, 1950, 1951, 1953, 1965, 1970, 1978, 1981, 1986, 1989, 1990, 1992, 1998, 2003, 2006, 2011, 2012], "subsequ": [3, 7, 14, 15, 25, 46, 49, 58, 967, 1001, 1249, 1261, 1265, 1414, 1415, 1416, 1417, 1418, 1419, 1487, 1515, 1670, 1671, 1981, 1994, 2000, 2011, 2015, 2027, 2030, 2035, 2038], "deseri": [3, 27, 1321, 1665, 1950, 1965, 1995, 2011], "globalsbridg": 3, "care": [3, 7, 14, 25, 31, 57, 58, 969, 1118, 1120, 1170, 1171, 1487, 1968, 1980, 1981, 1982, 1983, 1985, 1990, 1992, 1995, 2000, 2011, 2015, 2030, 2034, 2035, 2036], "reli": [3, 9, 14, 21, 22, 25, 33, 35, 49, 58, 146, 888, 914, 969, 1097, 1423, 1755, 1978, 1980, 1982, 1983, 1986, 1994, 1995, 2015, 2019, 2034, 2035, 2036, 2039], "pickl": [3, 21, 22, 25, 1249, 1321, 1487, 1816, 1950, 1965, 1968, 1995, 2003, 2011, 2047], "transfer": [3, 21, 25, 49, 1964, 1968, 1981, 1988, 1990, 2003, 2011], "properli": [3, 7, 21, 22, 27, 29, 33, 42, 57, 1118, 1119, 1120, 1128, 1129, 1130, 1351, 1488, 1489, 1497, 1498, 1674, 1923, 1950, 1962, 1983, 1987, 1990, 1992, 1995, 1998, 2011, 2012, 2018], "profil": [3, 4, 39, 58, 481, 922, 923, 930, 967, 1263, 1668, 1669, 1670, 1671, 1832, 1951, 1986, 2001, 2011, 2026, 2035], "empti": [3, 24, 25, 27, 33, 40, 47, 49, 54, 58, 229, 317, 508, 510, 518, 532, 540, 812, 934, 937, 938, 948, 954, 1097, 1099, 1247, 1250, 1275, 1295, 1296, 1301, 1308, 1331, 1332, 1333, 1334, 1341, 1400, 1422, 1430, 1494, 1565, 1584, 1631, 1722, 1734, 1735, 1870, 1885, 1900, 1949, 1952, 1953, 1954, 1955, 1957, 1964, 1969, 1970, 1971, 1976, 1979, 1981, 1983, 1994, 2000, 2001, 2003, 2015, 2016, 2021, 2023, 2033, 2034, 2040, 2043], "drive": [3, 9, 25, 1978, 2038], "facil": [3, 1321, 1968], "analyz": [3, 4, 18, 58, 1982, 1983, 1986, 1993, 2045], "manipul": [3, 49, 57, 1253, 1951, 1977, 1985, 1990, 2004, 2009, 2044], "1000000": [3, 1738], "mirror": [3, 135, 1674], "semant": [3, 9, 17, 25, 42, 43, 46, 47, 49, 58, 146, 789, 869, 870, 871, 888, 909, 949, 1003, 1054, 1155, 1166, 1181, 1182, 1253, 1260, 1319, 1400, 1565, 1637, 1681, 1682, 1755, 1919, 1934, 1951, 1954, 1955, 1959, 1962, 1971, 1984, 1990, 2000, 2011, 2015, 2035], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 22, 1952], "consum": [3, 21, 27, 32, 44, 47, 57, 430, 1097, 1968, 1981, 1986, 1992, 1997, 1998, 2000, 2020, 2038], "extrapol": 3, "sinc": [3, 7, 21, 22, 25, 27, 30, 31, 35, 44, 46, 49, 58, 311, 483, 529, 742, 780, 788, 803, 804, 957, 969, 1046, 1048, 1050, 1097, 1137, 1138, 1139, 1154, 1246, 1249, 1254, 1260, 1263, 1339, 1399, 1429, 1483, 1484, 1485, 1487, 1539, 1547, 1557, 1592, 1594, 1662, 1665, 1668, 1705, 1724, 1729, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1881, 1952, 1953, 1954, 1955, 1959, 1961, 1964, 1966, 1971, 1977, 1978, 1981, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1995, 1996, 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2010, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2022, 2030, 2035, 2038, 2041, 2044, 2045], "properti": [3, 21, 25, 26, 27, 29, 31, 34, 39, 42, 46, 47, 49, 58, 787, 875, 901, 918, 928, 1027, 1113, 1114, 1116, 1118, 1119, 1120, 1128, 1129, 1130, 1249, 1395, 1487, 1520, 1545, 1649, 1665, 1675, 1676, 1677, 1715, 1945, 1951, 1955, 1959, 1966, 1978, 1981, 1983, 1987, 1998, 2002, 2005, 2011, 2015, 2017, 2018, 2021, 2023, 2027, 2032, 2033, 2034, 2046, 2048], "significant_figur": 3, "figur": [3, 7, 8, 27, 58, 923, 1980, 1982, 1983, 2000, 2004, 2013, 2020, 2025, 2035], "intend": [3, 42, 46, 58, 885, 895, 898, 900, 1005, 1171, 1269, 1557, 1668, 1669, 1670, 1671, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1955, 1971, 1976, 1978, 1990, 2003], "interquartil": 3, "mitig": [3, 60, 1986, 2017], "tail": [3, 21, 40], "645": 3, "conjunct": [3, 21, 25, 29, 49, 819, 1557, 1592, 1674, 2009, 2011], "trim_sigfig": 3, "human": [3, 13, 40, 46, 1042, 1055, 1976, 2000, 2032, 2046], "raw": [3, 58, 1151, 1308, 1981, 2003, 2005], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 21, 25, 27, 29, 31, 33, 40, 47, 49, 57, 58, 481, 491, 675, 755, 914, 921, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1265, 1339, 1401, 1402, 1403, 1423, 1426, 1438, 1449, 1450, 1451, 1461, 1462, 1469, 1470, 1471, 1472, 1497, 1526, 1532, 1534, 1584, 1674, 1876, 1955, 1964, 1968, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1990, 1993, 1998, 2000, 2002, 2004, 2006, 2007, 2011, 2013, 2031, 2033, 2034, 2038, 2042, 2044], "functioncount": [3, 1951], "stat": [3, 52, 821, 831, 832, 1054, 1061, 1062, 1063, 1526, 1674, 1966, 1981, 2024, 2035, 2045], "as_standard": 3, "strip": [3, 1594, 1674, 1952, 2001, 2015], "prefix": [3, 25, 27, 33, 42, 49, 743, 752, 1249, 1487, 1674, 1950, 1961, 1978, 2000, 2003, 2006, 2024], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 25, 31, 58, 675, 889, 914, 1117, 1118, 1120, 1128, 1129, 1130, 1289, 1530, 1531, 1532, 1533, 1534, 1665, 1774, 1881, 1932, 1933, 1956, 1961, 1978, 1982, 1983, 1989, 1990, 1998, 2004, 2015, 2031, 2036, 2038, 2045], "locat": [3, 9, 14, 25, 31, 39, 83, 146, 150, 250, 481, 508, 675, 949, 951, 1012, 1076, 1077, 1271, 1321, 1347, 1352, 1355, 1373, 1423, 1433, 1521, 1538, 1557, 1592, 1658, 1661, 1674, 1694, 1785, 1820, 1841, 1863, 1866, 1922, 1950, 1952, 1965, 1981, 1995, 2000, 2003, 2005, 2011, 2013, 2015, 2020, 2024, 2027, 2030, 2034], "someth": [3, 7, 46, 47, 51, 58, 60, 62, 903, 905, 1097, 1178, 1249, 1265, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1957, 1966, 1968, 1969, 1978, 1988, 1996, 2000, 2011, 2031, 2033, 2035, 2037, 2038, 2044, 2045, 2046], "resembl": [3, 15, 2027], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 25, 39, 40, 46, 57, 58, 60, 68, 69, 819, 849, 854, 967, 1154, 1155, 1164, 1247, 1252, 1257, 1260, 1261, 1264, 1265, 1724, 1923, 1925, 1950, 1952, 1954, 1955, 1959, 1963, 1983, 1990, 2000, 2003, 2022, 2030], "9823794": 3, "bar": [3, 7, 39, 46, 58, 60, 68, 69, 849, 854, 987, 1154, 1252, 1260, 1879, 1880, 1929, 1930, 1950, 1952, 1954, 1965, 1990, 2000, 2003, 2022, 2038], "53453": 3, "src": [3, 25, 58, 192, 224, 309, 317, 466, 507, 508, 509, 510, 511, 512, 514, 533, 1088, 1155, 1373, 1530, 1533, 1534, 1735, 1817, 1818, 1819, 1823, 1853, 1896, 1922, 1953, 2003, 2040], "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1246], "site": [3, 7, 2027], "denois": 3, "explan": [3, 9, 35, 857, 1249, 1487, 1951, 1982, 1983, 1990, 2035, 2042, 2045], "delta": [3, 31, 755, 987, 1438, 1447, 1457, 1518, 1601, 1739, 1879, 1880, 1907, 1929, 1930, 1953, 1976], "inclus": [3, 31, 46, 84, 508, 1174, 1178, 1210, 1212, 1320, 1336, 1342, 1548, 1549, 1795, 1796, 1878, 2010, 2022], "diff": [3, 7, 1952, 1953, 2001], "One": [3, 8, 14, 25, 27, 47, 49, 52, 54, 58, 578, 946, 1155, 1166, 1240, 1539, 1630, 1681, 1682, 1688, 1692, 1755, 1760, 1768, 1795, 1796, 1917, 1934, 1952, 1954, 1955, 1970, 1971, 1979, 1980, 1981, 1983, 1989, 2004, 2013, 2020, 2031, 2032, 2033, 2034, 2043], "reason": [3, 8, 9, 21, 25, 27, 46, 49, 54, 59, 77, 675, 836, 900, 901, 1118, 1120, 1249, 1265, 1266, 1285, 1286, 1313, 1350, 1399, 1426, 1487, 1594, 1643, 1670, 1671, 1694, 1816, 1952, 1954, 1955, 1961, 1978, 1982, 1984, 1986, 1993, 1995, 2000, 2011, 2018, 2031, 2033, 2034, 2035, 2038, 2039, 2045, 2046], "unit": [3, 11, 14, 31, 33, 43, 49, 58, 755, 756, 1115, 1133, 1395, 1405, 1428, 1431, 1436, 1437, 1438, 1439, 1505, 1506, 1516, 1557, 1581, 1585, 1590, 1591, 1638, 1646, 1698, 1699, 1703, 1706, 1708, 1711, 1797, 1909, 1967, 1978, 1980, 1986, 1987, 2003, 2029, 2030], "next": [3, 21, 25, 31, 42, 47, 49, 58, 555, 755, 1253, 1387, 1439, 1458, 1504, 1674, 1717, 1968, 1977, 1978, 1980, 1981, 1983, 1984, 1986, 1990, 1992, 1998, 2004, 2005, 2011, 2012, 2015, 2018, 2020, 2027, 2030, 2032, 2035, 2038], "logic": [3, 5, 12, 14, 21, 45, 49, 58, 939, 941, 942, 944, 1114, 1116, 1119, 1120, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1134, 1155, 1187, 1188, 1253, 1331, 1332, 1333, 1334, 1344, 1493, 1674, 1783, 1810, 1894, 1955, 1956, 1981, 1982, 1983, 1984, 1987, 2006, 2038], "question": [3, 10, 21, 58, 1726, 1951, 1978, 1986, 2026, 2033, 2034], "involv": [3, 5, 7, 9, 11, 21, 25, 46, 49, 52, 54, 58, 76, 1674, 1828, 1955, 1969, 1971, 1978, 1981, 1982, 1985, 1990, 2000, 2006, 2011, 2012, 2013, 2015, 2033, 2034], "look": [3, 4, 7, 8, 9, 12, 15, 25, 31, 41, 42, 46, 47, 51, 54, 58, 60, 70, 71, 481, 857, 903, 905, 979, 1249, 1344, 1391, 1487, 1583, 1707, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1867, 1868, 1869, 1871, 1872, 1952, 1954, 1959, 1969, 1977, 1978, 1981, 1984, 1989, 1990, 1992, 1996, 2000, 2003, 2006, 2011, 2012, 2025, 2030, 2031, 2033, 2035, 2036, 2037, 2038, 2039, 2042, 2044, 2045, 2047], "autom": [3, 8, 58, 1952, 2006, 2027, 2035, 2045], "easili": [3, 7, 8, 11, 22, 25, 27, 1155, 1494, 1592, 1631, 1755, 1813, 1923, 1983, 1984, 1987, 1990, 1995, 2002, 2010, 2011, 2013, 2020, 2035, 2044, 2045], "exclus": [3, 21, 25, 31, 33, 42, 46, 58, 730, 1212, 1674, 1795, 1796, 1799, 1978, 2022], "basi": [3, 9, 10, 31, 1322, 1760, 1981, 1989, 2006, 2011], "thought": [3, 39, 58, 1115, 1117, 1133, 1174], "path_and_function_nam": 3, "children": [3, 35, 49, 58, 786, 1249, 1487, 1968, 1986, 1990, 2003, 2013], "identifi": [3, 7, 9, 25, 33, 36, 39, 42, 43, 44, 58, 481, 812, 1212, 1321, 1526, 1956, 1968, 1979, 1989, 1990, 2003, 2011, 2012, 2013, 2020, 2033, 2038, 2043], "hot": [3, 31, 1594, 1630, 1987, 2030, 2038], "spot": [3, 1681, 1682], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 309, 559, 860, 1151, 1594, 1867, 1868, 1869, 1871, 1872, 1882, 1953, 1971, 2001, 2015], "index": [3, 15, 21, 22, 27, 31, 40, 46, 58, 187, 204, 277, 308, 309, 310, 311, 312, 313, 315, 317, 318, 466, 467, 507, 508, 509, 510, 511, 512, 513, 514, 690, 691, 812, 849, 872, 887, 889, 900, 901, 932, 951, 1016, 1019, 1076, 1077, 1117, 1158, 1159, 1160, 1164, 1166, 1191, 1221, 1222, 1223, 1224, 1247, 1266, 1271, 1279, 1297, 1315, 1329, 1337, 1339, 1343, 1347, 1350, 1351, 1352, 1355, 1373, 1379, 1382, 1383, 1391, 1406, 1422, 1429, 1430, 1488, 1489, 1494, 1497, 1498, 1536, 1538, 1583, 1584, 1630, 1700, 1702, 1709, 1710, 1715, 1728, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1770, 1785, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1853, 1864, 1865, 1867, 1868, 1869, 1871, 1872, 1881, 1896, 1917, 1918, 1920, 1921, 1922, 1925, 1934, 1939, 1940, 1951, 1952, 1953, 1955, 1962, 1968, 1969, 1970, 1971, 1978, 1981, 1982, 1984, 1988, 1994, 2001, 2013, 2015, 2018, 2019, 2020, 2021, 2022, 2034, 2035, 2040, 2045], "cpython": [3, 46, 58, 2026, 2032], "known": [3, 7, 9, 20, 24, 25, 29, 36, 47, 50, 53, 55, 60, 70, 71, 1161, 1162, 1171, 1265, 1266, 1321, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1457, 1502, 1516, 1518, 1538, 1603, 1646, 1665, 1840, 1841, 1900, 1951, 1953, 1957, 1966, 1968, 1971, 1976, 1978, 1980, 1994, 2000, 2002, 2011, 2013, 2016, 2026, 2033, 2036, 2045], "quit": [3, 7, 58, 1681, 1682, 1955, 1983, 1985, 2003, 2011, 2043], "noisi": 3, "higher": [3, 7, 8, 22, 25, 49, 50, 55, 60, 65, 69, 146, 888, 890, 909, 1003, 1043, 1054, 1089, 1156, 1162, 1166, 1168, 1178, 1181, 1210, 1226, 1380, 1422, 1479, 1494, 1643, 1739, 1785, 1886, 1934, 1951, 1959, 1981, 1983, 1984, 1987, 1989, 1995, 2006, 2007, 2011, 2018, 2033], "filter": [3, 539, 767, 768, 769, 1246, 1269, 1414, 1415, 1416, 1417, 1418, 1419, 1567, 1568, 1569, 1570, 1571, 1572, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1881, 1955, 2003, 2045], "transform": [3, 12, 21, 27, 30, 46, 49, 54, 75, 76, 77, 776, 792, 833, 834, 852, 853, 958, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1154, 1155, 1156, 1160, 1165, 1177, 1246, 1259, 1404, 1441, 1449, 1450, 1451, 1459, 1474, 1515, 1531, 1532, 1533, 1534, 1557, 1563, 1592, 1609, 1629, 1665, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1848, 1881, 1951, 1963, 1984, 1986, 1998, 2004, 2006, 2015, 2020, 2025, 2026, 2027, 2032, 2037, 2038], "rather": [3, 8, 9, 14, 25, 33, 35, 44, 46, 49, 58, 60, 69, 774, 780, 927, 957, 1247, 1250, 1321, 1383, 1557, 1592, 1603, 1662, 1689, 1828, 1832, 1952, 1955, 1970, 1971, 1979, 1981, 1983, 1984, 2000, 2003, 2006, 2011, 2015, 2020, 2030, 2031, 2034, 2035, 2036, 2037, 2038], "unicod": [3, 1956], "dictionari": [3, 14, 21, 22, 27, 31, 53, 58, 675, 787, 788, 789, 792, 810, 811, 812, 833, 834, 835, 849, 853, 859, 934, 967, 1054, 1154, 1164, 1167, 1171, 1249, 1250, 1257, 1261, 1265, 1266, 1321, 1322, 1429, 1430, 1487, 1488, 1497, 1583, 1705, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1943, 1954, 1956, 1983, 1990, 1998, 2000, 2002, 2011, 2020, 2024, 2041, 2046, 2047], "lookup": [3, 27, 31, 1429, 1583, 1952, 1956, 1980, 2012, 2038, 2039], "map": [3, 14, 25, 27, 31, 33, 39, 40, 42, 43, 46, 47, 49, 54, 55, 58, 60, 69, 76, 679, 730, 787, 788, 792, 794, 809, 810, 812, 834, 835, 849, 850, 851, 852, 853, 859, 880, 948, 1149, 1155, 1166, 1171, 1175, 1203, 1212, 1257, 1260, 1321, 1322, 1417, 1418, 1419, 1425, 1426, 1427, 1431, 1433, 1483, 1484, 1485, 1488, 1497, 1578, 1579, 1580, 1585, 1688, 1705, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1785, 1787, 1918, 1919, 1934, 1956, 1970, 1972, 1978, 1981, 1982, 1983, 1984, 1991, 1996, 1998, 2003, 2006, 2009, 2011, 2012, 2013, 2017, 2022, 2032, 2034, 2038, 2044, 2046], "agnost": [3, 16, 42, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1592, 1681, 1682, 1970], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 25, 26, 27, 31, 33, 34, 35, 39, 43, 46, 47, 49, 57, 58, 578, 582, 583, 612, 679, 688, 690, 691, 694, 755, 880, 913, 914, 915, 954, 961, 965, 1002, 1012, 1014, 1042, 1055, 1089, 1095, 1097, 1143, 1144, 1164, 1166, 1172, 1213, 1249, 1257, 1265, 1267, 1271, 1305, 1321, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1381, 1383, 1438, 1457, 1487, 1502, 1539, 1630, 1668, 1674, 1689, 1715, 1722, 1723, 1727, 1729, 1782, 1806, 1822, 1858, 1870, 1877, 1879, 1880, 1884, 1907, 1929, 1930, 1934, 1935, 1951, 1952, 1954, 1955, 1956, 1957, 1962, 1968, 1971, 1981, 1983, 1986, 1990, 1993, 1996, 1998, 2003, 2004, 2011, 2013, 2015, 2017, 2018, 2022, 2031, 2034, 2043, 2044, 2047], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 319, 324, 539, 609, 1011, 1866, 1870, 1917, 1953, 1982, 2001, 2015, 2035, 2038], "entri": [3, 25, 26, 29, 31, 33, 40, 42, 43, 311, 730, 853, 854, 927, 1040, 1041, 1087, 1138, 1139, 1224, 1249, 1270, 1429, 1430, 1487, 1493, 1583, 1584, 1670, 1671, 1700, 1701, 1709, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1864, 1952, 1955, 1956, 1962, 1971, 1978, 1982, 1983, 1987, 1990, 1995, 2009, 2015, 2020, 2024, 2031, 2032, 2033, 2038], "h": [4, 10, 14, 31, 482, 483, 736, 737, 738, 755, 959, 960, 1279, 1286, 1289, 1299, 1313, 1389, 1390, 1397, 1398, 1400, 1402, 1403, 1407, 1415, 1416, 1418, 1426, 1427, 1429, 1431, 1438, 1439, 1450, 1451, 1457, 1458, 1459, 1470, 1471, 1481, 1482, 1499, 1500, 1502, 1504, 1521, 1537, 1540, 1541, 1557, 1565, 1592, 1628, 1634, 1635, 1688, 1689, 1723, 1735, 1885, 1953, 1969, 1970, 1978, 1981, 1982, 1983, 1985, 1987, 2000, 2019, 2020, 2021, 2027, 2033, 2042], "finit": [4, 31, 914, 915, 1238, 1239, 1285, 1286, 1296, 1297, 1313, 1339, 1373, 1377, 1399, 1885, 1983, 1987, 2022], "natur": [4, 7, 8, 11, 27, 31, 49, 60, 62, 80, 914, 915, 1278, 1283, 1309, 1323, 1325, 1330, 1391, 1534, 1643, 1986, 1987, 1997, 1998, 2015, 2016], "against": [4, 5, 14, 25, 33, 42, 789, 860, 914, 915, 1125, 1126, 1127, 1131, 1132, 1134, 1191, 1240, 1249, 1265, 1266, 1487, 1493, 1736, 1950, 1955, 2003, 2025, 2042], "cprofil": 4, "mode": [4, 8, 21, 22, 25, 27, 31, 42, 44, 54, 55, 58, 75, 217, 218, 483, 741, 742, 767, 768, 769, 774, 780, 781, 782, 810, 812, 818, 821, 854, 855, 884, 886, 890, 893, 894, 895, 900, 901, 903, 904, 905, 906, 910, 911, 912, 914, 967, 972, 998, 1031, 1071, 1072, 1101, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1155, 1158, 1159, 1160, 1161, 1164, 1165, 1168, 1170, 1198, 1232, 1233, 1247, 1249, 1250, 1253, 1265, 1267, 1308, 1321, 1351, 1364, 1365, 1401, 1402, 1403, 1414, 1415, 1416, 1430, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1503, 1526, 1539, 1540, 1567, 1568, 1569, 1584, 1592, 1603, 1631, 1662, 1663, 1664, 1675, 1683, 1685, 1689, 1694, 1727, 1760, 1768, 1784, 1827, 1829, 1922, 1951, 1953, 1964, 1969, 1976, 1981, 1982, 1984, 1985, 1986, 1990, 1997, 1998, 2001, 2005, 2007, 2008, 2009, 2011, 2021, 2023, 2027, 2030, 2032, 2034, 2035, 2036, 2037, 2040, 2045, 2046], "correct": [4, 6, 7, 22, 25, 26, 27, 31, 42, 46, 201, 202, 205, 217, 550, 575, 598, 599, 610, 895, 896, 900, 915, 987, 1118, 1120, 1128, 1129, 1130, 1175, 1224, 1247, 1250, 1265, 1266, 1285, 1423, 1440, 1452, 1665, 1674, 1715, 1831, 1879, 1880, 1929, 1930, 1952, 1953, 1954, 1963, 1969, 1970, 1981, 1983, 1987, 2017, 2040, 2044], "launch": [4, 14, 21, 28, 33, 34, 35, 40, 41, 42, 45, 57, 1001, 1674, 1951, 1978, 1980, 1981, 1982, 1983, 2011, 2030, 2037], "spent": [4, 25, 928, 1766, 1980, 1990, 2035, 2043, 2045], "appear": [4, 22, 25, 31, 46, 47, 58, 849, 1043, 1097, 1138, 1139, 1166, 1321, 1355, 1357, 1670, 1675, 1806, 1834, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1934, 1952, 1955, 1969, 1970, 1983, 1984, 1990, 2000, 2003, 2035], "extrem": [4, 25, 1674, 1978, 2000, 2034, 2038], "expens": [4, 21, 31, 49, 1688, 1981, 1987, 1989, 2005, 2011, 2021, 2033, 2035, 2039, 2042, 2045], "bound": [4, 15, 22, 25, 46, 49, 476, 790, 951, 962, 1111, 1112, 1167, 1174, 1249, 1396, 1397, 1398, 1480, 1481, 1482, 1487, 1505, 1592, 1768, 1799, 1820, 1955, 1956, 1976, 1978, 1986, 2003, 2006, 2016, 2033, 2034, 2045], "greater": [4, 25, 42, 60, 61, 288, 612, 675, 943, 956, 957, 962, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1193, 1206, 1304, 1368, 1399, 1535, 1592, 1603, 1630, 1643, 1659, 1662, 1689, 1723, 1922, 1953, 1978, 1981, 1994, 2001, 2015, 2016], "spend": [4, 7, 1322, 1963, 2039], "sens": [4, 31, 42, 58, 1705, 1918, 1919, 1955, 1978, 1986], "respons": [4, 7, 9, 25, 27, 29, 31, 33, 39, 44, 49, 57, 1001, 1172, 1475, 1610, 1674, 1870, 1978, 1981, 1983, 1984, 1990, 1998, 2011, 2034], "Of": [4, 1728, 1950, 1982, 1983, 2026, 2035], "cours": [4, 58, 1950, 1982, 1983, 2011, 2035, 2038], "realiti": [4, 1986], "complic": [4, 22, 30, 58, 788, 1828, 1959, 1970, 1979, 2003, 2011, 2013, 2034], "account": [4, 40, 58, 1400, 1674, 1976, 1980, 1986, 2015, 2030], "heavili": [4, 59, 1744, 1980, 1983, 2003], "similarli": [4, 7, 46, 57, 58, 755, 785, 789, 853, 958, 1117, 1249, 1305, 1487, 1534, 1670, 1671, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1910, 1911, 1912, 1913, 1954, 1978, 1983, 1985, 1987, 1993, 2015, 2034, 2037], "platform": [4, 8, 9, 14, 25, 34, 35, 39, 1296, 1297, 1308, 1784, 1885, 1964, 1988, 1993, 1994, 2006], "startup": 4, "slower": [4, 14, 25, 871, 904, 1137, 1138, 1139, 1279, 1286, 1611, 1688, 1739, 1983, 1994, 2002, 2016, 2034], "rerun": [5, 25, 1981], "segment": [5, 1054, 1151, 1518, 1981, 2003, 2035, 2041, 2047], "persist": [5, 19, 27, 46, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 755, 810, 811, 812, 1249, 1438, 1457, 1487, 1502, 1990, 1995, 1996, 1998, 2017, 2030, 2034, 2039], "rng": [5, 21, 1029, 1068, 1821, 1981, 1994, 2010], "advanc": [5, 15, 21, 22, 33, 49, 1530, 1532, 1534, 1728, 1925, 1962, 1970, 1981, 1983, 1988, 1992, 1998, 2019, 2020, 2035], "juggl": 5, "moder": 5, "hit": [5, 8, 14, 1172, 1674, 1950, 1981, 2030, 2035, 2039, 2045], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1951], "omit": [5, 14, 25, 43, 1131, 1132, 1134, 1171, 1440, 1501, 1996, 2000, 2011, 2022, 2036], "exclud": [5, 9, 22, 42, 58, 974, 1212, 1430, 1584, 1633, 1736, 1828, 1910, 1911, 1912, 1913, 1978, 1988, 1995, 2003, 2012, 2032, 2035], "_infer_device_typ": 5, "remain": [5, 8, 31, 42, 58, 1357, 1429, 1430, 1583, 1584, 1665, 1674, 1681, 1682, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1785, 1807, 1966, 1968, 1977, 1985, 1990, 2017, 2027, 2032], "consequ": [5, 54, 1313, 1457, 1885, 1955, 1978, 1981, 1992, 1994, 1997], "random": [5, 31, 33, 42, 43, 50, 58, 80, 84, 150, 755, 887, 900, 901, 937, 1029, 1030, 1035, 1044, 1045, 1064, 1065, 1068, 1069, 1159, 1166, 1202, 1225, 1322, 1342, 1362, 1363, 1367, 1369, 1395, 1406, 1431, 1438, 1457, 1505, 1585, 1636, 1641, 1665, 1689, 1696, 1702, 1703, 1710, 1711, 1730, 1774, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1821, 1833, 1886, 1925, 1934, 1950, 1951, 1953, 1961, 1976, 1984, 1987, 1993, 2000, 2001, 2020, 2035, 2045], "gradient": [5, 11, 21, 22, 25, 29, 31, 49, 50, 53, 146, 217, 218, 286, 331, 482, 483, 490, 508, 690, 691, 875, 884, 886, 888, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 915, 919, 920, 938, 964, 1101, 1154, 1155, 1156, 1157, 1161, 1166, 1191, 1249, 1285, 1286, 1289, 1296, 1297, 1313, 1322, 1339, 1341, 1347, 1350, 1352, 1399, 1406, 1417, 1418, 1419, 1422, 1423, 1429, 1430, 1440, 1454, 1455, 1456, 1487, 1494, 1518, 1575, 1576, 1583, 1584, 1594, 1603, 1611, 1613, 1614, 1615, 1628, 1662, 1663, 1664, 1670, 1671, 1674, 1675, 1678, 1679, 1680, 1688, 1694, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1772, 1866, 1885, 1934, 1951, 1952, 1953, 1962, 1970, 1971, 1972, 1976, 1981, 1982, 1983, 1985, 1986, 1987, 1990, 1993, 2001, 2002, 2011, 2012, 2015, 2043], "among": [5, 21, 22, 25, 29, 31, 42, 1010, 1011, 1014, 1212, 1423, 1730, 1955, 1992, 2034], "detect": [5, 14, 17, 18, 21, 25, 26, 33, 35, 49, 903, 904, 905, 906, 907, 908, 967, 1155, 1253, 1530, 1531, 1533, 1674, 1922, 1951, 1968, 1971, 1981, 1987, 1993, 2000, 2003, 2011, 2033, 2035, 2045], "priorit": [5, 1158, 1159, 1161, 1741, 1742, 1754, 2015], "defaultdevicetyp": 5, "anticip": [5, 2047], "belong": [5, 25, 27, 29, 31, 39, 58, 951, 1003, 1756, 1950, 1981, 2002, 2038, 2044, 2046], "use_reentr": [5, 1674], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 58, 1424, 1696, 1907, 1972, 1990, 1997, 1998, 2002, 2004, 2006, 2029, 2038, 2045], "recomput": [5, 895, 898, 900, 1539, 1603, 1726, 2002, 2033], "refer": [5, 7, 14, 21, 22, 25, 26, 27, 29, 31, 34, 37, 38, 42, 43, 49, 50, 57, 75, 76, 77, 80, 82, 250, 729, 730, 751, 759, 787, 788, 789, 814, 815, 816, 819, 820, 821, 854, 868, 873, 888, 949, 1036, 1041, 1100, 1151, 1171, 1198, 1199, 1230, 1237, 1249, 1252, 1261, 1268, 1281, 1286, 1302, 1306, 1319, 1322, 1373, 1406, 1440, 1487, 1536, 1557, 1565, 1574, 1592, 1603, 1604, 1661, 1674, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1774, 1791, 1798, 1827, 1828, 1848, 1886, 1922, 1950, 1951, 1953, 1968, 1969, 1971, 1972, 1977, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1990, 1992, 1994, 2000, 2002, 2007, 2008, 2011, 2012, 2015, 2017, 2018, 2019, 2020, 2023, 2026, 2027, 2031, 2032, 2037, 2038, 2041, 2045], "potenti": [5, 8, 42, 44, 49, 80, 187, 204, 481, 1259, 1295, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1674, 1922, 1954, 1962, 1968, 1978, 1981, 1983, 1986, 2003, 2015, 2018, 2019, 2033, 2035, 2038], "silent": [5, 25, 1044, 1045, 1064, 1065, 1224, 1265, 1487, 1679, 1680, 1870, 1981, 1993, 2000], "consider": [5, 7, 77, 879, 1246, 1430, 1674, 1681, 1682, 1955, 1980], "limit": [5, 8, 9, 12, 21, 47, 49, 50, 55, 77, 979, 1067, 1155, 1263, 1368, 1406, 1429, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1643, 1674, 1705, 1832, 1951, 1955, 1959, 1968, 1970, 1971, 1978, 1981, 1982, 1990, 1993, 1994, 1995, 1997, 2003, 2006, 2009, 2011, 2012, 2015, 2021, 2022, 2033, 2034, 2038, 2042, 2045], "reentrant": [5, 1674], "soon": [5, 42, 46, 49, 788, 1978, 2006, 2011, 2013, 2035, 2038], "intermedi": [5, 12, 14, 32, 46, 47, 54, 58, 77, 948, 979, 1148, 1155, 1162, 1339, 1430, 1530, 1532, 1534, 1584, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1952, 1955, 1959, 1981, 1983, 1984, 1985, 1993, 2025, 2033, 2034], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 25, 27, 31, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 135, 146, 217, 218, 675, 742, 787, 788, 810, 811, 812, 818, 821, 888, 895, 898, 900, 909, 967, 969, 972, 998, 1033, 1038, 1043, 1155, 1168, 1171, 1174, 1178, 1249, 1252, 1253, 1259, 1261, 1265, 1674, 1736, 1738, 1741, 1742, 1743, 1745, 1751, 1951, 1955, 1961, 1964, 1972, 1977, 1982, 1983, 1986, 1987, 1990, 1991, 1997, 1998, 2000, 2003, 2007, 2008, 2009, 2011, 2012, 2013, 2015, 2020, 2025, 2026, 2027, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042], "no_grad": [5, 483, 856, 910, 1101, 1156, 1160, 1165, 1249, 1429, 1487, 1493, 1534, 1675, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1976, 1978, 1990, 2006, 2023, 2027], "unmet": 5, "particip": [5, 9, 21, 25, 26, 29, 42, 43, 1674, 2012, 2033], "wherea": [5, 31, 46, 282, 1305, 1364, 1365, 1378, 1755, 1885, 1955, 1978, 2002, 2022, 2034], "avoid": [5, 8, 9, 21, 25, 31, 40, 43, 49, 58, 60, 68, 69, 187, 204, 443, 776, 860, 888, 948, 967, 1054, 1187, 1188, 1249, 1295, 1321, 1421, 1452, 1453, 1478, 1487, 1496, 1501, 1538, 1574, 1604, 1629, 1636, 1674, 1689, 1755, 1806, 1834, 1881, 1900, 1918, 1959, 1966, 1970, 1978, 1980, 1981, 1985, 1987, 1990, 2002, 2004, 2011, 2012, 2019, 2020, 2021, 2033, 2034, 2035, 2036, 2038], "know": [5, 7, 8, 14, 25, 26, 32, 58, 481, 895, 896, 900, 904, 921, 1148, 1155, 1171, 1178, 1182, 1260, 1674, 1952, 1955, 1962, 1963, 1977, 1978, 1981, 1983, 1986, 1987, 2000, 2003, 2011, 2012, 2013, 2015, 2030, 2032, 2033, 2034, 2035, 2038], "lstm": [5, 758, 1458, 1503, 1953, 1981, 2000, 2001, 2006, 2008, 2009, 2020], "hidden": [5, 755, 1164, 1438, 1439, 1457, 1458, 1502, 1504, 1675, 1981, 2020], "correctli": [5, 21, 25, 42, 49, 481, 1155, 1249, 1265, 1487, 1611, 1952, 1954, 1955, 1966, 1970, 1977, 1978, 1982, 1983, 1984, 1992, 1994, 2006, 2011], "compil": [5, 12, 14, 15, 46, 47, 49, 50, 58, 59, 675, 979, 1024, 1028, 1040, 1041, 1155, 1168, 1170, 1182, 1247, 1249, 1250, 1253, 1254, 1261, 1262, 1263, 1265, 1266, 1267, 1487, 1951, 1952, 1954, 1955, 1956, 1957, 1961, 1977, 1980, 1982, 1989, 1996, 1999, 2000, 2011, 2021, 2023, 2029, 2030, 2031, 2032, 2033, 2034, 2037, 2039, 2040, 2041, 2042], "turn": [5, 14, 21, 24, 54, 58, 77, 675, 868, 967, 1237, 1265, 1531, 1533, 1867, 1868, 1869, 1870, 1871, 1872, 1922, 1962, 1978, 1981, 1993, 1994, 2000, 2005, 2006, 2012, 2015, 2033, 2034, 2037, 2038, 2043], "open": [5, 8, 9, 14, 21, 31, 42, 46, 50, 684, 924, 951, 1147, 1257, 1321, 1344, 1354, 1609, 1952, 1962, 1968, 1971, 1988, 1996, 1997, 2000, 2003, 2006, 2011, 2015, 2016, 2017, 2035, 2043, 2047], "ran": [5, 18, 49, 2035, 2041, 2045], "sequenti": [5, 21, 29, 46, 47, 49, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 788, 1166, 1249, 1259, 1432, 1487, 1526, 1537, 1681, 1682, 1691, 1705, 1769, 1934, 1952, 1968, 1971, 1981, 1990, 2000, 2002, 2004, 2006, 2025, 2035, 2043, 2045], "divid": [5, 22, 25, 29, 234, 578, 579, 580, 1014, 1092, 1095, 1115, 1133, 1142, 1212, 1213, 1260, 1399, 1400, 1406, 1407, 1420, 1446, 1447, 1453, 1478, 1479, 1490, 1491, 1492, 1501, 1518, 1519, 1535, 1536, 1564, 1565, 1575, 1576, 1604, 1628, 1636, 1674, 1885, 1935, 1953, 2001], "func": [5, 25, 52, 54, 58, 60, 62, 857, 887, 890, 895, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 910, 914, 915, 1252, 1265, 1266, 1545, 1724, 1925, 1934, 1951, 1955, 1959, 1977, 2011, 2013, 2046], "compris": [5, 43, 46, 1986], "chunk": [5, 21, 25, 27, 49, 954, 1014, 1160, 1423, 1674, 1873, 1952, 1953, 1969, 1986, 2001, 2002, 2004, 2011, 2015, 2019], "input_var": [5, 1423], "set_checkpoint_debug_en": [5, 1951], "defer": [5, 22, 49, 1981, 2004], "person": [6, 7, 9], "land": [6, 9, 10, 2042], "six": [6, 76, 1416], "commit": [6, 7, 9, 14, 50, 1950, 1951, 1993, 1994, 2042], "repositori": [6, 9, 53, 58, 1950, 1992, 2006], "submit": [6, 9, 1000, 1001, 1003, 1361, 1981, 1994, 2032, 2035, 2042], "month": [6, 9], "qualifi": [6, 25, 27, 30, 39, 58, 675, 1249, 1487, 1959, 1961, 1998, 2003], "pr": [6, 7, 1774, 1886, 2025, 2035], "interest": [6, 7, 9, 77, 1978, 1984, 1987, 1990, 1997, 2032, 2034, 2039, 2043], "merge_rul": 6, "vote": [6, 9], "decis": [6, 27, 33, 42, 44, 58, 675, 1171, 1265, 1962, 1977, 2033], "criteria": [6, 9, 1322], "approv": [6, 9], "Not": [6, 43, 76, 1177, 1381, 1534, 1881, 1952, 1954, 1955, 1956, 1981, 1983, 2001, 2006, 2011, 2038], "busi": [6, 9, 2039], "dai": [6, 7, 2034, 2042], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 31, 58, 217, 922, 954, 967, 987, 1351, 1417, 1418, 1419, 1518, 1617, 1618, 1619, 1768, 1952, 1962, 1978, 1981, 2000, 2015, 2038], "thumb": [6, 25], "deprec": [7, 25, 27, 30, 33, 42, 43, 46, 49, 53, 402, 508, 552, 598, 780, 781, 782, 788, 821, 909, 957, 958, 997, 1047, 1051, 1195, 1249, 1304, 1307, 1339, 1340, 1399, 1400, 1420, 1422, 1445, 1446, 1452, 1453, 1478, 1479, 1487, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1540, 1541, 1564, 1565, 1575, 1604, 1628, 1636, 1662, 1663, 1664, 1666, 1674, 1678, 1723, 1724, 1726, 1729, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1784, 1800, 1826, 1881, 1885, 1909, 1951, 1952, 1957, 1968, 1979, 2005, 2009, 2017, 2021, 2022, 2035], "wiki": [7, 9, 22, 1997, 2048], "acceler": [7, 22, 933, 1401, 1402, 1403, 1526, 1738, 1988, 2026, 2030, 2035], "deep": [7, 9, 58, 1401, 1402, 1403, 1428, 1526, 1754, 1951, 1976, 1981, 1990, 2006, 2029, 2033, 2045], "neural": [7, 8, 15, 58, 1395, 1406, 1424, 1431, 1440, 1452, 1486, 1487, 1494, 1499, 1500, 1514, 1516, 1530, 1532, 1534, 1623, 1646, 1692, 1752, 1760, 1766, 1952, 1954, 1955, 1976, 1981, 1983, 1993, 1997, 2006, 2033], "tape": [7, 2030], "system": [7, 8, 14, 15, 17, 21, 43, 46, 54, 58, 59, 960, 975, 1167, 1203, 1257, 1281, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1310, 1311, 1312, 1316, 1321, 1340, 1368, 1530, 1532, 1534, 1674, 1692, 1694, 1829, 1909, 1956, 1961, 1966, 1978, 1980, 1981, 1989, 1990, 1992, 1996, 1998, 2003, 2011, 2027, 2033, 2043, 2050], "organ": [7, 1982, 1989, 2003, 2035, 2038], "govern": [7, 8, 1951], "technic": [7, 9, 42, 46, 49, 58, 1249, 1487, 1670, 1671, 1978, 1985, 1986, 1992, 2003, 2033], "found": [7, 14, 15, 16, 18, 25, 42, 46, 58, 60, 67, 69, 79, 81, 82, 83, 934, 951, 997, 1076, 1077, 1249, 1253, 1271, 1347, 1350, 1352, 1355, 1379, 1395, 1405, 1431, 1487, 1514, 1751, 1820, 1950, 1952, 1955, 1971, 1977, 1983, 1986, 1987, 1990, 1992, 2000, 2003, 2005, 2006, 2011, 2020, 2031, 2034, 2039, 2042, 2044, 2046], "md": [7, 58, 787, 2003], "healthi": [7, 33, 42], "team": [7, 25, 50, 80, 81, 83, 1995, 2004], "commun": [7, 8, 9, 26, 27, 29, 33, 42, 44, 49, 481, 675, 1674, 1978, 1982, 1997, 2011, 2012, 2035], "project": [7, 27, 1351, 1457, 1493, 1694, 1774, 1950, 1986, 1988, 1997, 2027, 2044], "ve": [7, 52, 53, 54, 58, 1168, 1253, 1925, 1962, 1968, 1978, 1984, 2012, 2020, 2034, 2035, 2038], "come": [7, 8, 9, 21, 31, 32, 39, 42, 46, 50, 54, 481, 967, 1097, 1148, 1155, 1249, 1321, 1425, 1426, 1427, 1431, 1452, 1735, 1964, 1982, 1984, 1989, 2003, 2011, 2013, 2015, 2032, 2038, 2041], "peopl": [7, 25, 1978, 2006, 2037], "scratch": [7, 1978, 2045], "own": [7, 9, 25, 26, 29, 31, 34, 42, 44, 46, 49, 58, 675, 1032, 1131, 1151, 1212, 1249, 1321, 1414, 1415, 1416, 1417, 1418, 1419, 1487, 1691, 1694, 1955, 1972, 1977, 1981, 1986, 2003, 2006, 2007, 2011, 2013, 2015, 2034, 2037], "itch": 7, "acquaint": 7, "tip": [7, 1981, 2035], "tracker": [7, 1322], "confirm": [7, 1950, 1952, 1983, 2000, 2011, 2013, 2041], "tend": [7, 905, 1922], "bootcamp": 7, "1hr": 7, "although": [7, 8, 31, 54, 58, 59, 1417, 1418, 1419, 1487, 1495, 1674, 1951, 1955, 1963, 1977, 1983, 1993, 2004, 2006, 2043, 2044], "join": [7, 22, 25, 29, 42, 43, 57, 58, 1190, 1674, 1950, 1951, 1956, 1968, 1978, 1982, 1992, 2001, 2021, 2027], "u": [7, 8, 12, 50, 55, 58, 60, 755, 903, 958, 1170, 1286, 1288, 1292, 1296, 1297, 1313, 1339, 1341, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1438, 1439, 1457, 1458, 1472, 1474, 1502, 1504, 1505, 1526, 1537, 1694, 1774, 1885, 1886, 1952, 1953, 1962, 1970, 1976, 1978, 1981, 1982, 1983, 1984, 1990, 2003, 2005, 2015, 2019, 2020, 2027, 2030, 2033, 2035, 2038, 2039, 2040, 2045], "dev": [7, 10, 34, 39, 2032, 2045], "happi": 7, "research": [7, 8, 9, 1674, 1950, 1978, 1987, 1995], "partner": [7, 2026], "speed": [7, 8, 14, 29, 49, 1009, 1097, 1154, 1240, 1253, 1259, 1313, 1391, 1493, 1681, 1682, 1828, 1885, 1963, 1978, 1980, 1981, 1982, 1983, 1985, 1988, 1993, 2006, 2011, 2032, 2038], "design": [7, 9, 21, 31, 39, 42, 47, 50, 53, 54, 55, 914, 915, 1249, 1269, 1400, 1487, 1545, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1897, 1950, 1951, 1966, 1975, 1981, 1983, 1986, 1988, 1990, 1998, 2003, 2027, 2032, 2033, 2035, 2037, 2040, 2045], "comment": [7, 58, 1726, 1824, 1955, 1956, 1983, 2018, 2020, 2039], "crack": 7, "usual": [7, 14, 21, 22, 27, 42, 43, 46, 47, 49, 58, 81, 476, 826, 827, 828, 829, 836, 888, 903, 905, 909, 1166, 1425, 1426, 1427, 1431, 1446, 1449, 1450, 1451, 1452, 1665, 1674, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1934, 1952, 1955, 1971, 1977, 1978, 1980, 1981, 1983, 1985, 1989, 2002, 2007, 2009, 2011, 2020, 2029, 2034, 2039, 2046], "idea": [7, 50, 923, 1097, 1174, 1391, 1674, 1981, 1989, 2000, 2012, 2035], "rfc": [7, 1978, 2006, 2012], "big": [7, 1741, 1742, 1745, 1751, 1752, 1867, 1868, 1869, 1870, 1871, 1872, 1981, 1995, 2002, 2006, 2033, 2034, 2039], "post": [7, 8, 26, 27, 29, 49, 481, 483, 675, 851, 852, 856, 1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1951, 1959, 1978, 1982, 1983, 1985, 1996, 2015, 2032, 2034, 2045], "standard": [7, 14, 18, 22, 31, 35, 36, 40, 47, 54, 58, 348, 373, 584, 1117, 1171, 1395, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1452, 1459, 1526, 1532, 1534, 1547, 1730, 1774, 1797, 1842, 1847, 1879, 1880, 1954, 1956, 1971, 1976, 1980, 1981, 1992, 1993, 1997, 2000, 2003, 2016], "lot": [7, 14, 21, 46, 1178, 1968, 1978, 1981, 1987, 1992, 2003, 2004, 2010, 2012, 2020, 2033, 2034, 2038, 2039, 2047], "boil": 7, "mostli": [7, 31, 1247, 1674, 1981, 2006, 2015, 2033, 2046], "evid": 7, "peer": [7, 25, 29, 42, 49, 1007, 1674, 1981, 2011], "paper": [7, 9, 22, 31, 47, 755, 1391, 1395, 1401, 1402, 1403, 1405, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1428, 1431, 1434, 1435, 1438, 1441, 1444, 1449, 1450, 1451, 1459, 1493, 1499, 1500, 1505, 1514, 1518, 1526, 1530, 1532, 1534, 1535, 1536, 1587, 1588, 1597, 1741, 1742, 1751, 1753, 1760, 1766, 1987, 2004], "framework": [7, 8, 9, 31, 39, 50, 57, 59, 755, 1005, 1359, 1438, 1674, 1688, 1754, 1832, 1951, 1963, 1991, 2004, 2006, 2012, 2013], "bit": [7, 58, 84, 326, 453, 756, 758, 760, 814, 815, 816, 817, 820, 822, 853, 940, 943, 980, 981, 1151, 1229, 1808, 1809, 1821, 1828, 1849, 1981, 1986, 1990, 1993, 1996, 2006, 2009, 2010, 2015, 2018, 2021, 2038, 2039, 2048], "accept": [7, 9, 21, 25, 27, 30, 46, 49, 50, 51, 53, 55, 146, 508, 797, 884, 885, 886, 887, 888, 895, 897, 900, 901, 909, 957, 1040, 1043, 1150, 1166, 1170, 1212, 1249, 1253, 1422, 1487, 1494, 1515, 1534, 1701, 1715, 1716, 1722, 1737, 1825, 1862, 1876, 1934, 1955, 1959, 1970, 1981, 1983, 1984, 2000, 2002, 2011, 2018, 2020, 2035, 2045], "overwhelm": [7, 2011, 2045], "newli": [7, 49, 58, 1111, 1112, 1429, 1430, 1786, 1787, 2038], "publish": [7, 9, 34, 39, 42, 1322, 1951], "ground": [7, 9, 1422, 1575, 2020], "becom": [7, 8, 9, 12, 21, 25, 30, 31, 58, 286, 755, 871, 1203, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1438, 1457, 1472, 1492, 1502, 1515, 1575, 1592, 1665, 1758, 1857, 1907, 1962, 1964, 1978, 1982, 1983, 2000, 2003, 2005, 2011, 2038, 2045, 2047], "refactor": [7, 58, 1996, 2006], "coordin": [7, 25, 27, 31, 33, 578, 581, 879, 1203, 1212, 1351, 1778, 1870, 1911, 1913, 1920, 1978, 2015, 2020, 2035, 2045], "pace": 7, "branch": [7, 12, 46, 58, 60, 63, 65, 68, 69, 979, 1950, 1954, 1955, 1981, 2033, 2042], "definit": [7, 8, 21, 25, 26, 31, 38, 46, 47, 58, 81, 958, 959, 960, 987, 1040, 1145, 1178, 1181, 1187, 1188, 1270, 1279, 1280, 1322, 1373, 1452, 1604, 1650, 1729, 1804, 1907, 1950, 1952, 1954, 1956, 1977, 1978, 1983, 1987, 2003, 2006, 2020, 2022, 2038], "fundament": [7, 54, 1954, 1990, 2011, 2015, 2034], "cut": [7, 2035], "guidanc": [7, 9, 15, 51, 481, 1180, 2004, 2033], "stage": [7, 18, 22, 29, 39, 49, 57, 1951, 1962, 1971, 2004, 2013, 2045], "piec": [7, 1961, 1971, 2012, 2035, 2038, 2047], "advic": [7, 2035], "readi": [7, 14, 57, 856, 857, 936, 945, 1207, 1208, 1674, 1952, 1982, 2011, 2012, 2030], "draft": 7, "convert": [7, 21, 25, 27, 30, 31, 32, 47, 49, 53, 56, 58, 76, 77, 78, 146, 575, 579, 580, 581, 582, 583, 730, 783, 784, 785, 787, 788, 789, 810, 811, 812, 833, 834, 849, 852, 853, 854, 874, 875, 953, 966, 1081, 1117, 1148, 1249, 1319, 1487, 1497, 1498, 1526, 1533, 1665, 1676, 1677, 1681, 1682, 1735, 1736, 1755, 1786, 1787, 1792, 1867, 1868, 1869, 1870, 1871, 1872, 1920, 1952, 1953, 1954, 1955, 1963, 1971, 1972, 1983, 1988, 1997, 1998, 2000, 2006, 2009, 2015, 2020, 2022, 2025, 2026, 2035, 2038, 2044, 2045], "press": [7, 58], "button": [7, 2042], "prepend": [7, 14, 21, 25, 29, 58, 225, 1089, 1249, 1344, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1903, 1953, 1979], "titl": [7, 2001, 2005, 2006], "wip": 7, "progress": [7, 29, 33, 43, 45, 75, 481, 1000, 1361, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1928, 1950, 1965], "ci": [7, 1951, 2042], "folk": 7, "who": [7, 8, 9, 11, 42, 60, 77, 2003, 2038], "regularli": 7, "queue": [7, 33, 44, 1968, 2020], "everyth": [7, 21, 31, 47, 53, 60, 1952, 1968, 2003, 2033, 2035, 2038, 2039, 2045], "happen": [7, 9, 25, 27, 29, 31, 33, 35, 42, 46, 49, 54, 58, 602, 786, 809, 900, 901, 1155, 1526, 1674, 1688, 1757, 1763, 1764, 1770, 1885, 1951, 1966, 1968, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1991, 1992, 1996, 2000, 2006, 2011, 2017, 2019, 2030, 2035, 2038], "subsystem": [7, 11, 50, 55, 969, 1951, 1959, 1983], "patch": [7, 51, 1433, 1538, 1923, 2036], "feel": [7, 1971, 2000, 2015, 2035], "ll": [7, 54, 58, 755, 815, 816, 856, 857, 958, 959, 960, 1043, 1171, 1279, 1438, 1439, 1457, 1458, 1962, 1978, 1981, 1983, 1984, 1992, 2000, 2006, 2012, 2031, 2034, 2039, 2043], "round": [7, 21, 25, 60, 62, 69, 503, 660, 661, 794, 797, 815, 860, 983, 985, 1054, 1092, 1118, 1119, 1120, 1124, 1128, 1129, 1130, 1145, 1295, 1308, 1539, 1603, 1784, 1785, 1804, 1852, 1953, 1955, 1969, 1981, 2001, 2006, 2009, 2015, 2016, 2040, 2047], "trip": [7, 58, 1118, 1119, 1120, 1124, 1128, 1129, 1130], "noth": [7, 14, 33, 58, 675, 994, 1034, 1694, 1741, 1742, 1754, 1769, 1952, 1954, 1994, 2013], "accompani": [7, 79, 1998], "solut": [7, 8, 54, 960, 1167, 1294, 1295, 1299, 1307, 1310, 1312, 1316, 1399, 1674, 1909, 1952, 1953, 1976, 1977, 1985, 1992, 2006], "think": [7, 9, 58, 60, 481, 1755, 1952, 1954, 1978, 2002, 2003, 2013, 2034, 2036], "confid": [7, 1681, 1682, 1986, 2020, 2036], "ahead": [7, 46, 1951, 2006, 2026, 2033, 2035], "search": [7, 11, 22, 814, 951, 1444, 1597, 1674, 1736, 1791, 1820, 1952, 1969, 1970, 2000, 2003, 2015, 2031, 2034, 2042, 2047], "repo": [7, 60, 1760, 1950, 1983, 1996], "unabl": [7, 54, 78, 2000, 2002], "reproduc": [7, 21, 54, 309, 317, 510, 512, 938, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1483, 1484, 1485, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1592, 1603, 1631, 1643, 1662, 1663, 1664, 1665, 1922, 1950, 1951, 2002, 2003, 2035, 2045], "problemat": [7, 21, 58, 921, 1952, 1993, 2007, 2035], "insight": [7, 18, 75, 2027, 2047], "individu": [7, 9, 14, 21, 22, 25, 27, 29, 49, 58, 79, 238, 675, 787, 833, 834, 958, 1063, 1115, 1133, 1168, 1249, 1406, 1487, 1526, 1674, 1955, 1969, 1977, 1978, 1981, 1983, 1986, 1989, 1993, 1994, 1998, 2000, 2002, 2009, 2011, 2022, 2030, 2037, 2042, 2047], "intent": [7, 40, 42, 49, 54, 1825, 1962, 2003, 2006, 2041], "lock": [7, 21, 25, 29, 31, 1978, 1981, 1992, 2003, 2012, 2047], "strike": 7, "convers": [7, 27, 453, 575, 578, 788, 952, 1234, 1681, 1682, 1715, 1951, 1956, 1983, 1988, 2000, 2006, 2007, 2015, 2033, 2034, 2044], "medium": [7, 49, 1828], "prioriti": [7, 9, 10, 25, 675, 849, 988, 1003, 1954, 1995], "entranc": [7, 1981], "great": [7, 12, 46, 1978, 1987, 2030, 2033], "deal": [7, 8, 21, 33, 44, 46, 76, 1902, 1968, 1985, 2011, 2033, 2034, 2038, 2039], "welcom": [7, 1971, 1997, 2002, 2015], "aim": [7, 46, 77, 1984, 2015, 2026], "rare": [7, 1977, 2000, 2033, 2036, 2046], "typo": 7, "send": [7, 21, 25, 33, 44, 1036, 1665, 1674, 1968, 1982, 1992, 1996, 2001, 2005, 2011, 2012, 2013, 2023, 2025, 2034, 2037], "forum": [7, 9, 1985, 1992], "share": [7, 10, 14, 21, 26, 29, 31, 32, 42, 43, 47, 49, 54, 217, 307, 336, 453, 478, 515, 519, 612, 854, 874, 875, 895, 896, 900, 901, 914, 915, 967, 998, 1000, 1032, 1036, 1148, 1149, 1150, 1151, 1220, 1297, 1382, 1383, 1423, 1503, 1674, 1692, 1730, 1802, 1816, 1824, 1876, 1900, 1906, 1921, 1953, 1977, 1978, 1980, 1992, 1995, 1996, 2000, 2011, 2015, 2017, 2019, 2024, 2027, 2030], "resolv": [7, 8, 9, 27, 31, 49, 58, 78, 79, 1249, 1417, 1418, 1419, 1433, 1484, 1487, 1954, 1955, 1956, 1996, 2003, 2017, 2033, 2046], "challeng": [7, 25, 2012, 2035], "feedback": [7, 18, 22, 49, 50, 1674, 1951, 2015], "direct": [7, 9, 11, 25, 47, 755, 787, 1138, 1139, 1178, 1249, 1438, 1457, 1487, 1502, 1690, 1726, 1753, 1774, 1791, 1812, 1959, 1978, 1981, 1983, 1986, 1990, 2011, 2038, 2044], "yourself": [7, 52, 998, 1923, 1983, 1990, 1992, 2035, 2046], "problem": [7, 21, 25, 42, 46, 54, 60, 1097, 1171, 1265, 1295, 1307, 1322, 1422, 1494, 1557, 1824, 1968, 1978, 1981, 1985, 1987, 1992, 1996, 2004, 2006, 2007, 2013, 2018, 2026, 2033, 2035, 2045], "area": [7, 9, 47, 1603, 1990, 2006, 2016], "appreci": 7, "strive": 7, "respond": [7, 25], "quickli": [7, 8, 22, 42, 1986, 2037], "ey": [7, 31, 187, 204, 959, 960, 1166, 1270, 1279, 1290, 1301, 1304, 1307, 1308, 1315, 1316, 1688, 1784, 1863, 1934, 1953, 1957, 1983, 2001], "everyon": [7, 33, 42], "touch": [7, 40, 58], "versu": [7, 1170, 1491], "write": [7, 8, 9, 12, 16, 18, 21, 25, 27, 33, 35, 39, 40, 41, 42, 46, 49, 54, 55, 59, 76, 78, 79, 250, 481, 508, 692, 949, 969, 1150, 1155, 1166, 1172, 1226, 1260, 1280, 1291, 1292, 1293, 1297, 1298, 1311, 1661, 1816, 1909, 1922, 1934, 1951, 1954, 1959, 1966, 1970, 1981, 1984, 1985, 1987, 1998, 2002, 2003, 2006, 2015, 2020, 2026, 2033, 2035, 2037, 2039, 2045], "blog": [7, 8, 12, 979, 1959, 1982, 1983, 2006, 2015], "around": [7, 9, 11, 25, 31, 53, 54, 57, 58, 146, 619, 888, 909, 995, 998, 1000, 1001, 1003, 1072, 1143, 1144, 1155, 1249, 1361, 1674, 1813, 1952, 1968, 1978, 1981, 2000, 2006, 2011, 2030, 2035, 2038], "internet": 7, "grow": [7, 8, 58, 1981, 2015], "market": [7, 9], "benefit": [7, 8, 25, 58, 842, 1681, 1682, 1768, 1968, 1981, 1986, 2006, 2015, 2045], "opinion": [7, 8, 2015], "isn": [7, 21, 58, 453, 1246, 1978, 1981, 1983, 2011, 2022, 2034], "categor": [7, 35, 1594, 1951, 1956, 2007, 2011, 2044], "aspect": [7, 25, 58, 1503, 1983, 1990], "seem": [7, 1171, 2000], "unusu": [7, 2034], "claim": [7, 1681, 1682, 1766, 1987], "wast": [7, 1981], "someon": [7, 9, 1247, 1970], "end": [7, 8, 9, 21, 22, 25, 31, 35, 39, 52, 58, 357, 358, 533, 755, 779, 792, 815, 816, 860, 923, 931, 936, 982, 998, 1058, 1087, 1097, 1136, 1151, 1189, 1203, 1209, 1210, 1246, 1249, 1270, 1275, 1305, 1315, 1317, 1320, 1322, 1336, 1382, 1383, 1398, 1399, 1400, 1408, 1409, 1410, 1420, 1422, 1428, 1432, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1453, 1457, 1458, 1473, 1478, 1481, 1482, 1487, 1489, 1494, 1495, 1498, 1502, 1505, 1515, 1518, 1524, 1529, 1536, 1575, 1584, 1596, 1597, 1674, 1688, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1758, 1763, 1800, 1832, 1835, 1838, 1853, 1907, 1918, 1919, 1937, 1952, 1953, 1954, 1955, 1968, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1993, 1996, 1998, 2000, 2002, 2005, 2006, 2009, 2011, 2016, 2030, 2034, 2037, 2040, 2045], "too": [7, 9, 14, 22, 27, 42, 54, 58, 481, 1054, 1154, 1171, 1174, 1295, 1313, 1379, 1406, 1422, 1487, 1576, 1675, 1724, 1955, 1980, 1985, 1987, 1992, 1993, 1994, 1996, 1998, 2003, 2004, 2013, 2015, 2033, 2034, 2045, 2047], "advisori": 7, "fashion": [7, 21, 25, 30, 44, 46, 510, 1327, 1705, 1952], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 2045], "wrote": [7, 8], "implicitli": [7, 25, 35, 58, 1080, 1170, 1194, 1203, 1265, 1266, 1321, 1396, 1397, 1398, 1480, 1481, 1482, 1825, 1907, 1952, 1954, 1955, 1978, 1983, 1988], "lifetim": [7, 481, 1959, 2011, 2034], "immedi": [7, 8, 9, 25, 42, 43, 49, 57, 481, 1178, 1249, 1252, 1487, 1681, 1682, 1955, 1981, 1986, 1990, 1995, 2002, 2011, 2013, 2033, 2034], "sai": [7, 46, 47, 58, 491, 923, 1158, 1159, 1160, 1170, 1176, 1249, 1487, 1952, 1977, 1978, 1985, 2003, 2012, 2013, 2015, 2030, 2033, 2038, 2039, 2044], "bugfix": 7, "Or": [7, 33, 58, 875, 962, 1988, 1991, 2000, 2015, 2038], "motiv": [7, 8, 58, 730, 1986, 1990, 2012, 2045], "ye": [7, 2000, 2002, 2015, 2035], "knuth": 7, "bewar": 7, "mere": [7, 47], "proven": [7, 1424, 1674], "ok": [7, 35, 40, 53, 1174, 1181, 1254, 2013, 2035], "sometim": [7, 58, 906, 1054, 1255, 1265, 1433, 1538, 1570, 1571, 1572, 1694, 1951, 1955, 1968, 1978, 1981, 1984, 1985, 1986, 1990, 1992, 2003, 2018, 2021, 2033, 2034, 2039, 2046], "obvious": [7, 2034], "broken": [7, 21, 1054, 2000, 2003], "contrari": [7, 1980], "accident": 7, "put": [7, 9, 21, 25, 33, 53, 57, 58, 315, 1117, 1321, 1441, 1760, 1950, 1953, 1968, 1981, 1986, 1992, 2001, 2003, 2012, 2013, 2034, 2036], "difficulti": [7, 1976], "nonlinearli": 7, "sign": [7, 31, 337, 524, 879, 982, 1085, 1133, 1145, 1151, 1283, 1308, 1309, 1330, 1479, 1753, 1804, 1835, 1849, 1953, 1969, 2001, 2009, 2015, 2018, 2021, 2022, 2040], "split": [7, 21, 25, 58, 612, 767, 768, 769, 854, 856, 857, 954, 961, 1054, 1095, 1213, 1423, 1437, 1438, 1457, 1493, 1502, 1567, 1568, 1569, 1570, 1571, 1572, 1591, 1901, 1935, 1952, 1953, 1969, 1981, 1986, 2001, 2003, 2004, 2006, 2011, 2015, 2019, 2043, 2047], "shippabl": 7, "complet": [7, 14, 21, 25, 27, 33, 34, 40, 42, 44, 54, 57, 481, 675, 856, 969, 996, 1000, 1001, 1003, 1073, 1154, 1155, 1252, 1261, 1263, 1268, 1280, 1308, 1361, 1364, 1365, 1370, 1557, 1674, 1691, 1724, 1784, 1828, 1951, 1954, 1955, 1956, 1961, 1968, 1977, 1978, 1981, 1984, 1988, 1994, 2003, 2004, 2011, 2012, 2029, 2036, 2038, 2042, 2043], "subtl": [7, 1449, 1450, 1451, 1983, 2034, 2035, 2045], "nuanc": [7, 1997, 2038], "extra": [7, 14, 21, 22, 25, 29, 31, 46, 49, 58, 1097, 1155, 1166, 1170, 1249, 1257, 1260, 1295, 1321, 1487, 1494, 1688, 1881, 1934, 1954, 1970, 1978, 1980, 1982, 1983, 1985, 1989, 1998, 2003, 2005, 2015, 2021, 2022, 2023, 2034, 2038, 2039], "understand": [7, 8, 9, 25, 27, 33, 34, 60, 76, 77, 1155, 1307, 1951, 1976, 1978, 1981, 1988, 1995, 1998, 2005, 2020, 2026, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2045], "hack": 7, "answer": [7, 10, 58, 819, 1178, 1400, 1707, 2034, 2035], "regress": [7, 1399, 1994, 2030, 2041], "scrutini": 7, "undertak": 7, "rest": [7, 21, 22, 43, 49, 58, 788, 809, 1151, 1315, 1316, 1901, 1970, 1990, 1994, 2003, 2004, 2006, 2011, 2015, 2035, 2036, 2038, 2039, 2043], "stai": [7, 29, 135, 1423, 1681, 1682, 1981, 1992, 2006, 2011, 2015], "chanc": [7, 27, 31, 1983, 2034, 2035, 2039], "unrel": [7, 975, 1164, 1977, 1983, 2003], "aid": [7, 58, 1978, 2045], "troubleshoot": [7, 25, 2026, 2035], "mayb": [7, 1162, 1925, 2034], "bracnh": 7, "rebas": 7, "latest": [7, 14, 25, 29, 31, 46, 892, 923, 1701, 1950, 1983, 1988, 1998, 2000], "statu": [7, 9, 33, 1339, 1951, 1956, 1968, 2006, 2027], "hud": 7, "risk": [7, 8, 46, 49, 1691, 1694], "anyth": [7, 32, 35, 49, 57, 818, 821, 1178, 1261, 1755, 1952, 1971, 1986, 1990, 2003, 2033], "configur": [7, 13, 21, 22, 25, 30, 33, 34, 39, 42, 43, 44, 49, 783, 784, 787, 788, 792, 809, 810, 811, 812, 818, 821, 833, 834, 835, 838, 840, 843, 853, 854, 855, 856, 857, 967, 1054, 1674, 1715, 1829, 1922, 1951, 1961, 1966, 1981, 1982, 1983, 1994, 1996, 2003, 2009, 2011, 2020, 2022, 2033, 2035, 2042, 2043, 2045], "riski": 7, "had": [7, 58, 923, 1171, 1265, 1665, 1903, 1978, 1984, 2033, 2041], "beforehand": [7, 57, 2035], "hei": 7, "my": [7, 21, 1423, 1989, 2000, 2006], "member": [7, 9, 21, 25, 33, 42, 43, 58, 1249, 1440, 1487, 1589, 1952, 1954, 1955, 1966, 1985, 2005, 2011, 2022, 2023], "sphinx": 7, "folder": [7, 9, 14, 21, 27, 58, 1736, 1950, 1998, 2020, 2037, 2045], "tree": [7, 35, 53, 967, 1487, 1530, 1736, 2000, 2003, 2005, 2013, 2026], "master": [7, 25, 45, 787, 1155, 1530, 1950, 2011], "doxygen": 7, "special": [7, 11, 35, 44, 47, 54, 58, 60, 65, 68, 69, 736, 737, 738, 818, 821, 914, 967, 1090, 1104, 1105, 1106, 1108, 1109, 1118, 1120, 1167, 1170, 1217, 1218, 1219, 1263, 1321, 1335, 1376, 1423, 1534, 1675, 1676, 1677, 1728, 1755, 1779, 1836, 1847, 1851, 1938, 1951, 1956, 1961, 1970, 1981, 1983, 1986, 1987, 1989, 2000, 2003, 2006, 2017, 2019, 2020, 2027, 2032, 2033, 2034, 2038, 2041], "server": [7, 21, 25, 43, 1253, 1981, 2003, 2006, 2011, 2027, 2029], "cppdoc": [7, 15], "cpp": [7, 14, 25, 1373, 1982, 2027, 2033], "accomplish": [7, 27, 1990, 2035], "holist": 7, "concept": [7, 47, 54, 58, 1959, 1983, 1984, 1990, 2018, 2036], "galleri": 7, "restructur": [7, 2003], "text": [7, 21, 31, 47, 149, 150, 169, 603, 612, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 693, 740, 741, 751, 753, 755, 759, 763, 764, 765, 767, 768, 769, 775, 779, 815, 816, 860, 876, 877, 878, 879, 880, 935, 936, 937, 940, 943, 945, 947, 956, 959, 960, 962, 981, 982, 984, 985, 987, 1092, 1111, 1112, 1141, 1142, 1146, 1147, 1193, 1206, 1207, 1208, 1209, 1216, 1238, 1246, 1270, 1273, 1274, 1275, 1278, 1279, 1286, 1289, 1295, 1299, 1304, 1307, 1313, 1320, 1329, 1336, 1337, 1338, 1339, 1372, 1373, 1384, 1385, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1559, 1560, 1561, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1578, 1579, 1580, 1585, 1588, 1590, 1591, 1592, 1596, 1597, 1607, 1612, 1617, 1618, 1619, 1623, 1628, 1631, 1636, 1637, 1639, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1653, 1654, 1655, 1680, 1688, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1760, 1777, 1778, 1781, 1784, 1797, 1800, 1803, 1815, 1835, 1837, 1838, 1850, 1852, 1863, 1864, 1874, 1881, 1882, 1885, 1898, 1899, 1937, 1971, 1976, 1987, 2000, 2003, 2009, 2016, 2020, 2022, 2037], "rst": 7, "trigger": [7, 9, 25, 42, 57, 80, 81, 83, 217, 923, 1071, 1832, 1977, 1978, 1981, 1982, 1983, 1989, 1995, 2011, 2030, 2032, 2035, 2041, 2042, 2045], "rebuild": [7, 22], "entir": [7, 14, 21, 25, 30, 33, 43, 58, 692, 914, 915, 967, 1155, 1203, 1425, 1426, 1427, 1431, 1449, 1450, 1451, 1459, 1578, 1579, 1580, 1585, 1674, 1690, 1700, 1702, 1726, 1955, 1971, 1978, 1981, 1983, 1984, 1985, 1989, 1990, 2000, 2003, 2006, 2011, 2013, 2015, 2031, 2032, 2033, 2034, 2035, 2038, 2045, 2047], "circleci": 7, "shard": [7, 21, 27, 29, 30, 49, 1674, 1986, 2035], "worker": [7, 14, 21, 22, 25, 26, 29, 33, 34, 35, 36, 42, 44, 45, 49, 1674, 1955, 1994, 2004, 2005, 2011, 2012, 2013], "40": [7, 1203, 1322, 1404, 1449, 1688, 1689, 1690, 1713, 1714, 1723, 1726, 1897, 2032], "minut": [7, 10, 25, 2020], "netlifi": 7, "noplot": 7, "render": [7, 25, 1174, 2020, 2047], "notebook": 7, "rebuilt": [7, 22, 29], "deploi": [7, 12, 33, 42, 1951, 1989, 1995, 2003, 2029], "action": [7, 25, 31, 33, 36, 58, 998, 1032, 1981, 1998, 2003, 2005, 2013, 2047], "document": [8, 9, 10, 17, 21, 25, 46, 47, 49, 50, 58, 675, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 868, 869, 870, 871, 952, 1000, 1001, 1003, 1054, 1097, 1194, 1198, 1199, 1230, 1237, 1249, 1364, 1365, 1380, 1391, 1429, 1430, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1487, 1691, 1700, 1709, 1729, 1783, 1810, 1827, 1922, 1950, 1952, 1954, 1955, 1959, 1967, 1968, 1969, 1970, 1972, 1977, 1981, 1983, 1985, 1990, 1994, 1995, 2000, 2002, 2003, 2006, 2007, 2008, 2011, 2015, 2019, 2023, 2026, 2031, 2036, 2038, 2041, 2044], "develop": [8, 9, 10, 14, 22, 25, 58, 1954, 1955, 1962, 1967, 1978, 1983, 1989, 1990, 1994, 2000, 2003, 2006, 2007, 2011, 2015, 2037, 2040, 2045], "meant": [8, 26, 42, 44, 49, 1715, 1977, 2011], "rule": [8, 9, 14, 25, 31, 58, 60, 68, 69, 81, 82, 83, 146, 855, 888, 951, 952, 1080, 1299, 1310, 1401, 1402, 1403, 1449, 1450, 1451, 1526, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1820, 1907, 1952, 1954, 1969, 1971, 1978, 1979, 1983, 1986, 1987, 2018, 2022, 2034, 2035], "concern": [8, 21, 49, 1968, 1981, 2000, 2043], "disagr": 8, "contribut": [8, 9, 27, 927, 1211, 1212, 1422, 1429, 1430, 1494, 1575, 1583, 1584, 1628, 1674, 1951, 1971, 1983, 1984, 2000, 2004], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 58, 1151, 1395, 1741, 1742, 1754, 1985, 1998, 2035, 2036, 2038], "depth": [8, 9, 46, 77, 774, 780, 1058, 1059, 1263, 1398, 1416, 1419, 1456, 1482, 1539, 1603, 1662, 1962, 1982, 1990, 2005, 2032, 2047], "primari": [8, 9, 25, 58, 77, 1259, 1956, 1962, 1963, 2015, 2034], "goal": [8, 39, 53, 58, 1351, 1962, 1978, 1982, 1987, 2013, 2037], "secondari": 8, "abil": [8, 46, 1816, 1962, 1989, 1998, 2003], "flexibl": [8, 22, 46, 49, 53, 1175, 1306, 1962, 1981, 1983, 1990, 2006, 2038], "abstract": [8, 16, 21, 22, 25, 26, 27, 31, 33, 42, 44, 46, 916, 917, 918, 919, 920, 923, 1176, 1696, 1955, 1959, 1963, 1982, 2006, 2011, 2030, 2038], "critic": [8, 42, 675, 1689, 1723, 1966, 1980, 1981, 2035, 2036, 2038], "futur": [8, 9, 12, 22, 25, 27, 30, 33, 42, 43, 46, 54, 58, 286, 317, 481, 508, 512, 552, 675, 682, 788, 810, 811, 812, 821, 856, 895, 898, 900, 901, 957, 958, 967, 979, 980, 981, 997, 998, 1000, 1001, 1003, 1032, 1033, 1040, 1041, 1043, 1195, 1246, 1249, 1252, 1259, 1260, 1263, 1268, 1280, 1291, 1293, 1294, 1295, 1298, 1311, 1339, 1340, 1351, 1361, 1426, 1487, 1594, 1617, 1618, 1619, 1666, 1674, 1679, 1723, 1724, 1729, 1744, 1784, 1800, 1881, 1885, 1909, 1951, 1952, 1953, 1954, 1955, 1956, 1961, 1962, 1964, 1966, 1970, 1971, 1980, 1981, 1983, 1995, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2008, 2011, 2015, 2017, 2021, 2022, 2023, 2025, 2033, 2035, 2040, 2047], "concret": [8, 31, 45, 47, 53, 58, 481, 780, 795, 819, 836, 967, 1171, 1185, 1186, 1539, 1631, 1662, 1952, 1955, 1981, 1983, 1992, 2033, 2034, 2038], "manner": [8, 25, 33, 508, 903, 905, 1970, 1972, 1979, 2002], "jump": [8, 555, 2018], "regim": 8, "ei": 8, "tradeoff": [8, 22, 46, 481, 2006, 2012, 2035, 2041], "temptat": 8, "impos": [8, 44, 55, 1824, 1968, 1977, 2018], "strict": [8, 27, 46, 47, 903, 904, 905, 906, 907, 908, 1154, 1161, 1174, 1249, 1265, 1266, 1487, 1724, 2003, 2020, 2022], "upfront": [8, 2033], "simplifi": [8, 22, 57, 1167, 1171, 1189, 1257, 1477, 1689, 1755, 1962, 1978, 1983, 1987, 1990, 2002, 2006, 2012, 2033], "worth": [8, 9, 21, 22, 45, 47, 1155, 1950, 2017, 2019, 2038, 2039], "friction": 8, "compel": 8, "narrow": [8, 1178, 1319, 1383, 1755, 1842, 1953, 1955, 1969, 2001, 2008, 2019, 2045], "subproblem": 8, "fragment": [8, 1022, 1054, 1959, 1981, 2045], "ecosystem": [8, 1989, 1991], "incomprehens": 8, "seamlessli": [8, 1971], "softwar": [8, 1285, 1286, 1313, 1922, 1981, 1988, 2026], "experi": [8, 9, 11, 22, 46, 55, 1166, 1516, 1646, 1674, 1934, 1962, 1983, 2020, 2032], "rich": [8, 1955], "denomin": [8, 682, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1788], "subset": [8, 21, 25, 29, 43, 47, 1261, 1755, 1952, 1954, 1955, 1983, 1997, 2000, 2009, 2040], "borrow": 8, "zen": 8, "implicit": [8, 46, 47, 82, 763, 764, 767, 768, 769, 1194, 1203, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1480, 1481, 1482, 1538, 1559, 1560, 1561, 1567, 1568, 1569, 1617, 1618, 1619, 1772, 1953, 1955, 1956, 1986, 2000, 2003, 2019, 2040], "concis": [8, 35, 2011], "interchang": [8, 31, 1752, 1906, 1954, 1988, 1998, 2026, 2036], "everydai": 8, "english": 8, "movement": [8, 2019, 2035], "worri": [8, 25, 2011], "placement": [8, 30, 33, 854, 1665, 2006, 2011, 2035], "favor": [8, 25, 780, 781, 782, 958, 969, 1066, 1070, 1249, 1304, 1307, 1339, 1340, 1445, 1487, 1540, 1541, 1662, 1663, 1664, 1666, 1678, 1784, 1885, 1909, 2038], "practition": 8, "debugg": [8, 25, 1254, 1987, 2035, 2045], "plug": 8, "ir": [8, 46, 58, 75, 77, 755, 1252, 1253, 1438, 1439, 1736, 1952, 1955, 1998, 2000, 2026, 2033, 2034, 2035, 2045], "classic": [8, 1978], "sort": [8, 29, 33, 58, 585, 604, 871, 872, 895, 897, 900, 1097, 1178, 1210, 1371, 1391, 1716, 1717, 1728, 1785, 1820, 1904, 1918, 1953, 1955, 1983, 1985, 2001, 2015, 2033, 2035, 2038, 2040], "distribut": [8, 11, 21, 22, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 57, 169, 254, 282, 373, 449, 476, 603, 675, 690, 691, 814, 930, 937, 1071, 1373, 1391, 1395, 1400, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1436, 1440, 1452, 1501, 1505, 1526, 1575, 1577, 1578, 1579, 1580, 1585, 1589, 1590, 1594, 1604, 1636, 1674, 1730, 1777, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1951, 1955, 1970, 1971, 1976, 1977, 1981, 2004, 2005, 2007, 2013, 2016, 2020, 2023], "tldr": 8, "resourc": [8, 14, 21, 33, 38, 42, 46, 58, 1955, 1968, 1992, 2015, 2035, 2042], "characterist": [8, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1886, 1984, 1990], "uniformli": [8, 31, 1795, 1796, 2022], "leak": [8, 888, 895, 898, 900, 1955, 1968, 1978], "smart": [8, 1983, 2003, 2011], "anywai": [8, 1978, 1986], "obviou": [8, 1167, 1985, 2013, 2034], "extens": [8, 14, 18, 25, 27, 31, 46, 59, 1321, 1322, 1816, 1835, 1951, 1962, 1971, 1977, 1995, 1998, 2003, 2015, 2034, 2035, 2045], "unavoid": 8, "latenc": [8, 39, 1963, 1980, 1981, 2035, 2042], "caveat": [8, 49, 1665, 1722, 1962, 1968, 1981, 1990, 1995, 2031, 2041, 2045], "valuabl": 8, "certainli": [8, 1962], "heterogen": [8, 1954], "cluster": [8, 25, 27, 41, 42, 43, 49, 1391, 2020], "focus": [8, 1954, 1955, 1983, 2045], "beaten": 8, "space": [8, 9, 21, 31, 767, 768, 769, 1080, 1115, 1117, 1119, 1120, 1126, 1133, 1203, 1212, 1265, 1266, 1320, 1336, 1391, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1452, 1463, 1464, 1465, 1466, 1467, 1468, 1481, 1482, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1604, 1907, 1953, 1963, 1972, 1978, 1987, 1990, 1995, 2017, 2047], "innov": 8, "growth": 8, "ultim": [8, 9, 14, 35, 44, 46, 2026], "evidenc": 8, "began": 8, "bind": [8, 14, 25, 47, 58, 1034, 1171, 1955, 1956, 1959, 1983, 2003], "monolith": 8, "deepli": 8, "integr": [8, 21, 36, 47, 53, 150, 937, 939, 940, 941, 942, 943, 944, 987, 1080, 1211, 1249, 1273, 1317, 1318, 1382, 1487, 1791, 1803, 1907, 1971, 1983, 1989, 1990, 1999, 2002, 2004, 2006, 2016, 2018, 2022, 2031], "numpi": [8, 21, 54, 443, 488, 688, 689, 694, 872, 874, 875, 895, 896, 900, 951, 1092, 1094, 1095, 1097, 1115, 1136, 1137, 1138, 1139, 1143, 1144, 1149, 1150, 1166, 1213, 1280, 1281, 1291, 1302, 1304, 1305, 1306, 1307, 1308, 1313, 1314, 1317, 1319, 1351, 1356, 1778, 1803, 1806, 1813, 1825, 1832, 1867, 1868, 1869, 1870, 1871, 1872, 1885, 1887, 1888, 1897, 1900, 1901, 1903, 1931, 1934, 1935, 1959, 1962, 1979, 1983, 1984, 1993, 1994, 1995, 1996, 2003, 2018, 2019, 2020, 2021, 2022, 2048], "scipi": [8, 955, 1296, 1297, 1633, 1778, 2003, 2014, 2016, 2020], "scikit": [8, 1603], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1996], "year": [8, 2015], "rewrot": 8, "frontend": [8, 15, 47, 53, 58, 2035], "familiar": [8, 15, 47, 58, 998, 1032, 1053, 1952, 1978, 1984, 2003, 2006, 2012, 2013, 2032, 2035, 2044], "perhap": [8, 1984, 2038], "importantli": [8, 2038], "huge": [8, 1886, 1966], "scientif": [8, 1832], "pareto": [8, 1951], "close": [8, 15, 25, 42, 58, 60, 63, 68, 1036, 1238, 1285, 1286, 1312, 1313, 1339, 1400, 1518, 1536, 1565, 1751, 1885, 1909, 1966, 1978, 1983, 1993, 2000, 2003, 2006, 2011, 2020, 2022], "curv": [8, 2020], "torchdynamo": [8, 46, 60, 71, 675, 967, 969, 1951, 1961, 2000, 2026, 2031, 2033, 2035, 2037, 2038], "frame": [8, 46, 58, 967, 1246, 1881, 1924, 1985, 1997, 1998, 2020, 2026, 2032, 2033, 2035, 2036, 2045, 2047], "torch_funct": [8, 1983], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 19, 22, 26, 29, 33, 34, 35, 36, 39, 40, 42, 44, 45, 49, 52, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 80, 82, 84, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 889, 890, 895, 900, 901, 910, 911, 912, 922, 923, 930, 931, 932, 933, 934, 988, 989, 998, 999, 1000, 1001, 1003, 1004, 1019, 1021, 1032, 1101, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1247, 1248, 1249, 1264, 1361, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1665, 1674, 1675, 1676, 1677, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1715, 1727, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1791, 1860, 1940, 1942, 1951, 1952, 1953, 1954, 1963, 1969, 1970, 1977, 1978, 1979, 1980, 1982, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1994, 1996, 1998, 1999, 2004, 2006, 2007, 2008, 2011, 2012, 2013, 2019, 2030, 2031, 2032, 2033, 2034, 2037, 2038, 2041, 2044, 2045, 2047], "fx": [8, 12, 46, 47, 78, 675, 742, 810, 811, 812, 813, 855, 1155, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1951, 1997, 1998, 2007, 2008, 2031, 2032, 2033, 2034, 2035, 2038, 2044, 2045], "tracer": [8, 46, 1265, 2000, 2020, 2025, 2038], "functorch": [8, 47, 50, 55, 60, 63, 68, 69, 72, 2031], "anchor": [8, 58, 1535, 1536, 1659, 1660, 1953, 2044], "hackabl": 8, "todai": [8, 25, 47, 50, 55, 967, 2006, 2033], "evolv": [8, 1982, 1998, 1999], "ai": [8, 2000, 2016], "adopt": [9, 25, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 1681, 1682, 1998], "hierarch": [9, 2020], "pull": [9, 10, 15, 58, 146, 888, 1182, 2000, 2003, 2034], "request": [9, 10, 11, 25, 27, 44, 58, 684, 856, 874, 875, 923, 1054, 1322, 1344, 1354, 1609, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1950, 1971, 1977, 1978, 1980, 1981, 2000, 2003, 2011, 2012, 2013, 2015, 2016, 2033, 2047], "overseen": 9, "catch": [9, 35, 1952, 1978, 1984, 1987, 2036], "maker": 9, "strong": 9, "toward": [9, 60, 1092, 1211, 1212, 1322, 1387, 1674, 1763, 1804, 1812, 1813, 1986, 2004], "philosophi": [9, 53, 1951], "beyond": [9, 22, 1368, 1422, 1741, 1742, 1751, 1811, 1985, 1990, 1998, 2033], "encourag": [9, 33, 1971, 2006, 2015, 2022], "propos": [9, 1738, 1758, 1759, 1962, 1987, 2002, 2012], "review": [9, 10, 22, 2003, 2037, 2038], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 58], "codebas": [9, 1983], "strictli": [9, 21, 146, 187, 204, 481, 888, 951, 1212, 1249, 1253, 1487, 1978, 2016], "compani": 9, "bui": 9, "addition": [9, 21, 22, 25, 31, 46, 49, 146, 508, 612, 888, 923, 1155, 1159, 1160, 1253, 1313, 1391, 1449, 1450, 1451, 1862, 1985, 2023, 2047], "membership": [9, 33, 41, 42, 1956], "That": [9, 12, 33, 40, 43, 46, 51, 58, 979, 1246, 1320, 1336, 1922, 1964, 1983, 1984, 1985, 1986, 1995, 2003, 2011, 2035], "seat": 9, "reserv": [9, 39, 1054, 1956, 1981, 1990, 2047], "emploi": [9, 1754, 1990, 2003, 2004, 2027], "directori": [9, 14, 25, 27, 33, 40, 77, 1736, 1950, 1965, 1989, 1998, 2003, 2005, 2020, 2027, 2035, 2045], "procedur": [9, 31, 854, 1265, 1266, 1322, 1860, 2011, 2045], "disput": 9, "made": [9, 27, 29, 43, 46, 58, 77, 895, 898, 900, 915, 1249, 1487, 1532, 1534, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1801, 1954, 1962, 1978, 1996, 2003, 2020, 2022, 2030, 2033, 2038, 2045, 2046], "public": [9, 10, 59, 1155, 1983, 2046], "relev": [9, 26, 33, 42, 57, 675, 1313, 1459, 1956, 1977, 1978, 1998, 2003, 2006, 2027, 2035, 2036, 2037, 2038], "resolut": [9, 1499, 1500, 1557, 1592, 1634, 1635, 1907, 1956, 2003, 2048], "conclus": 9, "publicli": [9, 2046], "vision": [9, 1259, 1422, 1575, 1950, 1951, 2037], "roadmap": [9, 10], "parti": [9, 42, 1950, 1951, 1952, 1981, 1984, 1990, 2003], "triag": [9, 10], "meet": [9, 10, 12, 27, 41, 979, 1279, 1981, 2035], "Their": [9, 1089, 1983, 2034], "articul": 9, "cohes": 9, "negoti": [9, 2011], "contenti": 9, "broad": [9, 1990], "stakehold": 9, "power": [9, 12, 41, 1060, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1140, 1273, 1303, 1317, 1454, 1455, 1456, 1613, 1614, 1615, 1689, 1723, 1738, 1767, 1781, 1805, 1928, 1956, 1981, 2015], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 31, 49, 1351, 1955, 1957, 1977, 1978, 1986, 2002, 2006, 2018, 2026, 2029, 2033], "merit": 9, "demonstr": [9, 43, 46, 58, 60, 68, 69, 1406, 1952, 1990, 1995, 1998, 2004, 2011, 2027, 2032, 2035, 2037, 2043], "expertis": 9, "align": [9, 22, 46, 77, 755, 774, 780, 815, 821, 967, 1097, 1203, 1305, 1398, 1406, 1422, 1438, 1452, 1457, 1481, 1482, 1502, 1539, 1547, 1548, 1549, 1575, 1576, 1603, 1604, 1662, 1688, 1729, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1758, 1907, 1951, 1969, 1978, 1987, 1995, 2000, 2009, 2016], "continu": [9, 21, 25, 31, 45, 49, 58, 398, 603, 814, 904, 1203, 1285, 1286, 1313, 1405, 1406, 1674, 1956, 1962, 1978, 1986, 1995, 1998, 2005, 2023, 2031, 2032, 2035, 2038], "light": [9, 2020], "mainten": [9, 42, 43], "emeritu": [9, 10], "inact": [9, 1054, 1981, 2047], "contact": [9, 25], "item": [9, 21, 27, 60, 70, 71, 578, 579, 580, 584, 787, 788, 789, 809, 810, 811, 812, 934, 1249, 1422, 1487, 1488, 1497, 1694, 1832, 1950, 1952, 1953, 1954, 1955, 1963, 1969, 1981, 2000, 2001, 2003, 2011, 2020, 2021, 2030, 2033, 2034, 2038, 2040], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 21, 27, 31, 46, 58, 84, 398, 466, 540, 730, 852, 856, 858, 936, 938, 945, 958, 959, 960, 1113, 1114, 1115, 1116, 1117, 1125, 1127, 1131, 1133, 1151, 1161, 1162, 1165, 1171, 1207, 1208, 1241, 1244, 1249, 1252, 1279, 1280, 1291, 1293, 1304, 1307, 1308, 1322, 1342, 1357, 1377, 1382, 1383, 1400, 1414, 1415, 1416, 1421, 1422, 1423, 1430, 1440, 1447, 1487, 1493, 1523, 1530, 1535, 1536, 1557, 1565, 1584, 1589, 1592, 1659, 1660, 1668, 1669, 1670, 1811, 1813, 1863, 1865, 1910, 1911, 1912, 1913, 1921, 1950, 1953, 1969, 1970, 1983, 1984, 1987, 1998, 2000, 2001, 2004, 2010, 2015, 2016, 2022, 2035, 2046, 2048], "neg": [9, 11, 14, 21, 25, 31, 44, 58, 84, 436, 438, 453, 656, 657, 693, 750, 775, 938, 943, 982, 985, 1003, 1019, 1025, 1026, 1054, 1066, 1113, 1114, 1115, 1116, 1117, 1118, 1132, 1133, 1134, 1140, 1151, 1174, 1178, 1239, 1241, 1243, 1303, 1330, 1342, 1364, 1365, 1373, 1377, 1382, 1383, 1391, 1400, 1408, 1409, 1410, 1431, 1440, 1473, 1480, 1481, 1482, 1490, 1494, 1496, 1501, 1518, 1535, 1536, 1585, 1589, 1592, 1594, 1603, 1607, 1617, 1618, 1619, 1628, 1636, 1659, 1660, 1662, 1777, 1778, 1809, 1813, 1847, 1849, 1852, 1864, 1902, 1910, 1911, 1912, 1913, 1920, 1921, 1940, 1943, 1944, 1947, 1952, 1953, 1969, 1971, 1976, 1978, 1983, 1984, 2000, 2001, 2010, 2015, 2016, 2033, 2035, 2040], "interact": [9, 15, 21, 25, 58, 59, 857, 910, 1001, 1034, 1956, 1959, 1983, 2003, 2006, 2020, 2030, 2035, 2039, 2047], "final": [9, 25, 27, 29, 31, 33, 42, 46, 47, 49, 53, 54, 681, 684, 685, 755, 935, 953, 966, 1097, 1136, 1155, 1181, 1203, 1321, 1339, 1344, 1438, 1440, 1457, 1502, 1515, 1665, 1863, 1907, 1952, 1954, 1955, 1956, 1969, 1983, 1986, 1987, 1990, 1993, 1995, 1997, 1998, 2000, 2002, 2003, 2012, 2013, 2030, 2032, 2033, 2045], "declin": 9, "conflict": [9, 22, 27, 43, 46, 2003], "lack": [9, 11, 934, 1285, 1286, 1313], "unfit": 9, "conduct": [9, 1674, 1774, 1886, 2011, 2027], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 927, 1953, 2003], "letter": [9, 1097], "befit": 9, "candidaci": 9, "behind": [9, 25, 1951, 1995, 2012, 2034], "75": [9, 1211, 1475, 1592, 1610, 1738, 1785, 1953, 2016], "unforeseen": 9, "circumst": [9, 42, 967, 1178, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1981], "perman": [9, 58, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1978, 2013], "unavail": [9, 1954], "rank": [9, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 43, 45, 47, 49, 60, 69, 1295, 1296, 1297, 1304, 1339, 1479, 1526, 1674, 1694, 1774, 1886, 1953, 1982, 1986, 1992, 2000, 2004, 2011, 2012, 2033, 2045], "elect": 9, "invit": [9, 1950], "convinc": 9, "approach": [9, 22, 25, 58, 83, 955, 1166, 1400, 1828, 1860, 1934, 1952, 1968, 1971, 1981, 1983, 1987, 1997, 1998, 2006, 2011, 2035], "interview": 9, "talk": [9, 44, 1959, 1989], "gather": [9, 25, 27, 42, 49, 508, 1897, 1922, 1953, 1983, 1985, 1986, 1989, 2001, 2003, 2040], "read": [9, 12, 18, 21, 25, 27, 32, 33, 35, 42, 43, 47, 49, 53, 58, 443, 921, 979, 1056, 1080, 1148, 1150, 1151, 1172, 1257, 1321, 1768, 1951, 1959, 1969, 1970, 1978, 1979, 1981, 1982, 1984, 1989, 1993, 1997, 2003, 2006, 2011, 2030, 2032, 2035, 2037, 2038], "attend": [9, 730, 1493, 1530], "confer": [9, 1440], "pipelin": [9, 58, 1951, 2011, 2035], "world": [9, 25, 29, 33, 40, 42, 43, 49, 1526, 1674, 1978, 2003, 2006, 2032, 2033], "cover": [9, 47, 50, 58, 60, 1071, 1097, 1480, 1617, 1618, 1619, 1955, 1957, 1970, 1978, 1983, 1986, 1987, 1989, 1990, 2011, 2032, 2038, 2039], "push": [9, 34, 1059, 1166, 1315, 1934, 2005, 2038], "codeown": 9, "notifi": [9, 26, 43, 2013], "expert": 9, "strongli": [9, 25, 33, 43, 1425, 1426, 1427, 1431, 1881, 1950], "failur": [9, 25, 31, 33, 34, 35, 39, 40, 41, 42, 45, 675, 914, 915, 967, 1155, 1171, 1265, 1266, 1368, 1955, 1961, 1968, 1986, 1998, 2004, 2011, 2013, 2022, 2035, 2038, 2045], "revert": [9, 31, 49, 1523, 1651, 2013], "substanti": [9, 22, 1981, 2030], "syntact": [9, 35, 58], "incompat": [9, 14, 54, 948, 1246, 1681, 1682, 1979, 2003], "establish": [9, 25, 42, 1978], "seri": [9, 58, 1406, 1449, 1994, 2000, 2030, 2041, 2046], "lf": 9, "llc": 9, "guidelin": [9, 1705, 1992, 1997, 2003, 2006, 2007], "trademark": 9, "www": [9, 1406, 1536, 2020], "lfproject": 9, "acknowledg": [9, 25, 1951, 2013, 2015], "copyright": [9, 2045], "holder": 9, "independ": [9, 21, 25, 42, 49, 57, 149, 150, 774, 780, 903, 904, 905, 906, 907, 908, 1003, 1203, 1212, 1308, 1424, 1425, 1426, 1427, 1431, 1578, 1579, 1580, 1585, 1602, 1603, 1662, 1690, 1726, 1784, 1951, 1952, 1977, 1978, 1981, 1995, 2003], "authorship": 9, "claus": [9, 1985], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 22, 31, 426, 474, 753, 794, 1194, 1270, 1286, 1289, 1308, 1350, 1380, 1452, 1493, 1546, 1688, 1772, 1774, 1784, 1785, 1886, 1952, 1953, 1987, 1994, 2000, 2015, 2016, 2034], "partli": [9, 1955], "domain": [9, 31, 35, 679, 821, 880, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1203, 1971, 2000, 2006], "absolut": [9, 11, 14, 58, 88, 676, 689, 914, 915, 1145, 1238, 1278, 1283, 1304, 1307, 1309, 1330, 1447, 1453, 1518, 1601, 1605, 1647, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1729, 1737, 1778, 1804, 1835, 1953, 1963, 1990, 2000, 2001, 2016, 2021, 2022, 2027], "health": 9, "success": [9, 27, 31, 33, 39, 58, 282, 1280, 1291, 1293, 1339, 1701, 1867, 1868, 1869, 1871, 1872, 1981, 1990, 2000, 2015, 2045], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 2000], "clearli": [9, 1962, 2003], "sponsorship": 9, "foundat": [9, 1998], "ptf": 9, "minor": [9, 1025, 1280, 1296, 2015], "committ": 9, "prior": [9, 22, 25, 27, 33, 75, 77, 895, 899, 900, 901, 972, 1322, 1532, 1534, 1643, 1705, 1979, 1981, 1983, 2002, 2006, 2030, 2035], "walkthrough": [9, 1977], "facebook": 9, "infrastructur": [9, 34, 2003, 2033], "employe": 9, "expand": [9, 31, 251, 488, 873, 895, 899, 900, 901, 914, 915, 950, 1302, 1303, 1351, 1493, 1537, 1637, 1917, 1950, 1953, 1961, 1969, 1970, 1979, 1981, 1983, 1984, 1998, 2000, 2001, 2003, 2004, 2019, 2040], "deliv": [9, 2005], "offici": [9, 25, 46, 83, 1391, 2006], "showcas": [9, 12, 1483, 1981, 1992], "whenev": [9, 46, 875, 1688, 1689, 1966, 1968, 1983, 2009, 2012, 2013, 2034, 2038, 2046], "fix": [10, 18, 21, 25, 31, 33, 42, 46, 51, 54, 58, 78, 79, 258, 790, 796, 923, 1155, 1263, 1295, 1429, 1430, 1505, 1583, 1584, 1603, 1674, 1952, 1953, 1966, 1976, 1977, 1981, 1985, 1986, 1992, 1996, 1998, 2000, 2001, 2002, 2030, 2035, 2043, 2045], "plu": [10, 14, 27, 903, 1151, 1296, 1986, 2015], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1322], "ezyang": [10, 1959, 2019], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1774, 1886], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 26, 27, 29, 31, 49, 923, 1742, 1743, 1745, 1751, 1755, 2002], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 2045], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 2032], "ansel": [10, 2032], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1380, 1785, 1981, 2035], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 31], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1322], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1203], "robi": 10, "robieta": 10, "xu": [10, 49], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 25, 49, 58, 1870, 1954, 1970, 2000, 2030, 2041], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1925], "sebastian": 10, "messmer": 10, "smessmer": 10, "aaron": 10, "bockov": 10, "abock": 10, "bowen": 10, "bao": [10, 2042], "bowenbao": 10, "thiago": 10, "crepaldi": 10, "thiagocrepaldi": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1391], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 788], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 2005, 2035, 2045], "johnson": 10, "peterjc123": [10, 1996], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 31], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 27, 47, 50, 54, 55, 58, 60, 68, 69, 315, 979, 1167, 1171, 1177, 1179, 1180, 1181, 1182, 1189, 1247, 1250, 1726, 1881, 1956, 1964, 1971, 1978, 1983, 2006, 2033, 2035, 2045, 2046], "bj": 11, "j": [11, 25, 31, 309, 311, 317, 508, 510, 512, 687, 893, 903, 905, 976, 1097, 1113, 1114, 1121, 1127, 1131, 1132, 1191, 1246, 1249, 1285, 1286, 1297, 1313, 1322, 1329, 1337, 1339, 1344, 1425, 1426, 1427, 1431, 1487, 1490, 1578, 1579, 1580, 1585, 1778, 1785, 1864, 1881, 1885, 1931, 1954, 1976, 1978, 1983, 1987, 1995, 2020], "imaginari": [11, 307, 914, 976, 983, 1118, 1120, 1128, 1129, 1130, 1220, 1239, 1241, 1242, 1245, 1797, 1881, 1932, 1933, 1956, 1978, 1987, 2022], "satisfi": [11, 19, 22, 31, 47, 58, 612, 689, 755, 789, 904, 914, 915, 951, 1113, 1114, 1116, 1118, 1120, 1128, 1129, 1130, 1145, 1170, 1263, 1289, 1315, 1316, 1391, 1406, 1433, 1438, 1457, 1502, 1705, 1722, 1804, 1820, 1860, 1881, 1955, 1978, 1981, 1986, 1987, 2002, 2004, 2015, 2018, 2032], "equat": [11, 960, 1097, 1167, 1174, 1194, 1207, 1293, 1294, 1295, 1296, 1297, 1299, 1310, 1312, 1399, 1845, 1909, 1953, 1978, 1987, 2002, 2016], "frequent": [11, 27, 1391, 1951, 1981, 1992, 1993, 1995, 2015, 2026, 2027, 2037], "occur": [11, 21, 25, 35, 36, 42, 49, 54, 56, 78, 80, 192, 311, 890, 923, 967, 1057, 1097, 1171, 1246, 1252, 1263, 1293, 1406, 1526, 1576, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1755, 1954, 1966, 1970, 1977, 1978, 1981, 1985, 1993, 1998, 2000, 2005, 2011, 2013, 2019, 2022, 2033, 2035, 2037, 2041, 2043, 2045, 2046, 2047], "mathemat": [11, 58, 903, 904, 905, 906, 907, 908, 1145, 1203, 1399, 1401, 1402, 1403, 1449, 1450, 1451, 1452, 1526, 1611, 1650, 1674, 1729, 1804, 1862, 1863, 1955, 1978, 1993, 2016, 2023], "topic": [11, 46, 1989, 1990, 2032], "tradition": 11, "torchaudio": [11, 1951], "mimick": 11, "assembli": 11, "lapack": [11, 1194, 1280, 1291, 1292, 1293, 1295, 1298, 1311, 1784, 1885], "cubla": [11, 1015, 1922, 1994, 2030], "spectral": [11, 1269, 1285, 1313, 1689, 1713, 1723, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1993], "fft": [11, 1951, 1981], "4621": 11, "0303j": 11, "2438": [11, 1295, 1583], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 171, 976, 1140, 1150, 1228, 1249, 1279, 1280, 1285, 1286, 1287, 1288, 1289, 1290, 1414, 1415, 1416, 1487, 1567, 1568, 1569, 1735, 1778, 1825, 2017, 2018, 2021, 2022, 2035], "complex64": [11, 174, 959, 960, 976, 1114, 1116, 1117, 1122, 1123, 1150, 1228, 1281, 1304, 1307, 1414, 1415, 1416, 1567, 1568, 1569, 1735, 1778, 1825, 2017, 2018, 2021, 2022, 2035], "apart": [11, 1955, 1978], "linspac": [11, 938, 962, 1118, 1128, 1351, 1953, 1957, 2001], "logspac": [11, 1953, 1957, 2001], "arang": [11, 21, 25, 32, 508, 602, 686, 687, 688, 692, 694, 881, 882, 883, 949, 961, 965, 1080, 1095, 1113, 1117, 1125, 1131, 1133, 1137, 1138, 1139, 1140, 1147, 1148, 1213, 1270, 1271, 1275, 1278, 1302, 1305, 1306, 1319, 1383, 1408, 1409, 1508, 1509, 1510, 1511, 1512, 1539, 1540, 1541, 1630, 1729, 1730, 1773, 1781, 1785, 1800, 1807, 1812, 1832, 1865, 1873, 1884, 1901, 1902, 1904, 1905, 1907, 1935, 1953, 1962, 1971, 1995, 2001, 2016, 2020, 2021, 2030, 2037, 2040], "switch": [11, 21, 27, 52, 57, 58, 75, 1292, 1293, 1294, 1426, 1592, 1631, 1679, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1816, 1922, 1968, 1978, 1981, 1990, 1992, 2002, 2036], "view_as_r": [11, 1881, 1953, 2001, 2019], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 60, 73, 1953, 1969, 1971, 2015], "2250": [11, 1306, 1729], "7546": 11, "1722": 11, "x1": [11, 46, 955, 1297, 1421, 1479, 1535, 1536, 1574, 1632, 1953, 2035, 2040], "3j": [11, 25, 693, 980, 981, 1808, 1809, 1825], "4j": [11, 25, 1835], "0000": [11, 31, 508, 860, 903, 905, 938, 958, 962, 983, 1078, 1084, 1085, 1086, 1111, 1112, 1115, 1117, 1118, 1124, 1125, 1128, 1133, 1145, 1146, 1147, 1203, 1209, 1212, 1216, 1275, 1278, 1279, 1280, 1292, 1293, 1296, 1301, 1302, 1306, 1308, 1320, 1336, 1378, 1429, 1430, 1539, 1540, 1542, 1543, 1583, 1584, 1729, 1778, 1784, 1789, 1790, 1791, 1800, 1804, 1805, 1829, 1835, 1837, 1838, 1840, 1843, 1844, 1845, 1846, 1863, 1909, 1910, 1912, 1937, 1962, 1971, 1981, 2015, 2016, 2021], "6569": [11, 1216], "5708": [11, 1081], "7854": 11, "complex_tensor": 11, "pt": [11, 22, 49, 1149, 1254, 1257, 1260, 1267, 1321, 1816, 1952, 1963, 1990, 1995, 2003, 2037], "conjug": [11, 326, 453, 687, 914, 959, 960, 980, 981, 1229, 1279, 1280, 1286, 1289, 1292, 1299, 1313, 1318, 1322, 1688, 1772, 1808, 1881, 1885, 1931, 1987, 2002, 2021], "wirting": [11, 914, 1987], "deriv": [11, 25, 49, 146, 733, 734, 735, 736, 737, 738, 776, 795, 819, 888, 909, 914, 915, 1161, 1165, 1203, 1246, 1307, 1339, 1534, 1665, 1951, 1954, 1983, 1984, 1987, 2011, 2015, 2016], "steepest": [11, 1978], "descent": [11, 31, 1738, 1754, 1758, 1759, 1978, 1990], "box": [11, 25, 43, 58, 1166, 1934, 1970, 1978, 1982, 1998, 2031, 2033, 2036, 2037], "fulli": [11, 14, 21, 25, 27, 29, 30, 46, 53, 58, 675, 1060, 1249, 1483, 1484, 1485, 1487, 1955, 1961, 1983, 2003, 2006, 2033, 2038, 2040], "quantiz": [11, 24, 58, 215, 322, 334, 467, 468, 469, 470, 471, 473, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 927, 1082, 1111, 1112, 1786, 1787, 1788, 1789, 1790, 1922, 1951, 2001, 2018, 2021, 2022, 2024, 2025], "pred": [12, 60, 63, 68, 69, 979, 1452, 1674, 1991, 2002, 2011, 2040], "union": [12, 14, 21, 27, 30, 33, 36, 40, 43, 46, 47, 49, 58, 979, 1169, 1261, 1321, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1434, 1435, 1454, 1455, 1456, 1480, 1481, 1482, 1487, 1530, 1532, 1534, 1537, 1550, 1694, 1735, 1816, 1925, 1953, 1954, 1955, 1995, 1998, 2000, 2003, 2017, 2020, 2022, 2025], "true_fn": [12, 47, 60, 63, 68, 69, 979], "false_fn": [12, 47, 60, 63, 68, 69, 979], "operand": [12, 60, 68, 69, 943, 979, 1097, 1955, 1956, 1983, 2015, 2018], "Its": [12, 25, 47, 58, 987, 1012, 1249, 1297, 1315, 1316, 1341, 1487, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1931, 1955, 1982], "uniqu": [12, 25, 33, 39, 42, 43, 44, 508, 512, 1240, 1285, 1286, 1290, 1296, 1297, 1299, 1308, 1310, 1312, 1313, 1350, 1357, 1862, 1885, 1919, 1950, 1952, 1961, 1965, 1983, 2003, 2005, 2011, 2012, 2013, 2015, 2020, 2030, 2047], "aibilti": 12, "predic": [12, 60, 65, 68, 69], "unlock": [12, 1962], "flexibilti": 12, "architectur": [12, 30, 58, 1024, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1422, 1530, 1575, 1829, 1981, 1993, 2006, 2015, 2029], "prototyp": [12, 18, 25, 46, 675, 903, 905, 909, 914, 915, 979, 1259, 1534, 1546, 1547, 1951, 1962, 1966, 1970, 1971, 1990, 1995, 2009, 2011, 2015, 2018, 2023, 2024, 2025, 2027], "classif": [12, 979, 1400, 1406, 1422, 1490, 1492, 1494, 1519, 1576, 1951, 1976, 2007], "co": [12, 46, 47, 55, 60, 64, 65, 68, 69, 70, 71, 73, 197, 630, 631, 678, 945, 967, 979, 1040, 1156, 1159, 1160, 1165, 1207, 1208, 1301, 1420, 1421, 1424, 1758, 1759, 1766, 1778, 1839, 1840, 1843, 1844, 1845, 1846, 1848, 1867, 1868, 1869, 1871, 1872, 1953, 1969, 2001, 2002, 2015, 2020, 2022, 2031, 2037, 2040], "sin": [12, 14, 46, 47, 54, 55, 60, 64, 65, 68, 69, 70, 71, 527, 664, 665, 876, 967, 979, 1040, 1156, 1158, 1159, 1160, 1162, 1165, 1208, 1301, 1351, 1778, 1840, 1846, 1953, 1959, 1969, 1978, 2001, 2015, 2016, 2020, 2031, 2035, 2037, 2040, 2043], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 1029, 1035, 1981, 2033, 2035], "vari": [12, 46, 814, 1255, 1400, 1518, 1715, 1841, 1966, 1981, 1992, 1993, 2002, 2006, 2007, 2015, 2027, 2033, 2034, 2035, 2045, 2047], "inp2": 12, "assert": [12, 21, 22, 27, 31, 51, 53, 54, 55, 58, 60, 66, 69, 619, 917, 919, 920, 1156, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1170, 1171, 1247, 1252, 1253, 1259, 1643, 1735, 1934, 1954, 1956, 1959, 1983, 1984, 1990, 1995, 2003, 2006, 2022, 2033, 2035, 2044, 2045], "export": [12, 15, 18, 25, 32, 45, 60, 62, 65, 67, 68, 69, 74, 77, 675, 926, 979, 1000, 1168, 1174, 1252, 1254, 1255, 1261, 1267, 1716, 1717, 1736, 1737, 1951, 1952, 1954, 1955, 1983, 2001, 2005, 2011, 2026, 2033, 2043, 2044], "deploy": [12, 33, 42, 46, 1951, 1964, 2027, 2036], "dim_batch": 12, "dim": [12, 25, 30, 31, 46, 54, 55, 58, 60, 62, 68, 69, 108, 110, 111, 112, 114, 130, 131, 132, 180, 200, 203, 206, 207, 208, 209, 210, 211, 225, 229, 256, 260, 277, 308, 309, 310, 311, 312, 313, 317, 318, 350, 376, 388, 403, 405, 406, 407, 410, 424, 425, 426, 427, 431, 432, 448, 457, 465, 474, 486, 487, 489, 500, 501, 507, 508, 509, 510, 511, 512, 513, 514, 532, 533, 536, 537, 539, 542, 547, 548, 550, 555, 560, 568, 573, 574, 578, 579, 580, 582, 583, 585, 600, 601, 604, 605, 606, 607, 610, 612, 688, 690, 691, 692, 694, 869, 870, 871, 905, 906, 908, 954, 961, 977, 979, 986, 997, 1012, 1014, 1076, 1077, 1078, 1079, 1080, 1089, 1095, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1156, 1166, 1168, 1191, 1203, 1213, 1221, 1222, 1223, 1224, 1226, 1271, 1281, 1282, 1302, 1306, 1316, 1318, 1319, 1329, 1337, 1347, 1349, 1350, 1352, 1355, 1357, 1371, 1378, 1379, 1380, 1381, 1382, 1383, 1391, 1421, 1422, 1423, 1426, 1430, 1432, 1437, 1452, 1458, 1477, 1493, 1494, 1495, 1520, 1522, 1534, 1536, 1537, 1574, 1575, 1591, 1594, 1603, 1611, 1617, 1618, 1619, 1628, 1629, 1631, 1633, 1637, 1643, 1649, 1650, 1658, 1674, 1689, 1690, 1696, 1700, 1702, 1709, 1710, 1723, 1726, 1729, 1775, 1782, 1785, 1805, 1806, 1811, 1812, 1817, 1818, 1819, 1822, 1823, 1853, 1856, 1857, 1861, 1864, 1866, 1873, 1876, 1878, 1879, 1880, 1881, 1884, 1897, 1901, 1902, 1903, 1904, 1907, 1908, 1916, 1917, 1918, 1919, 1921, 1929, 1930, 1934, 1935, 1951, 1952, 1953, 1959, 1970, 1971, 1984, 1985, 1995, 1998, 2000, 2001, 2015, 2016, 2018, 2024, 2027, 2033, 2040], "batch": [12, 22, 25, 31, 43, 45, 46, 49, 50, 51, 54, 55, 58, 60, 68, 69, 578, 579, 580, 582, 583, 681, 697, 698, 699, 700, 701, 702, 730, 755, 774, 780, 909, 914, 915, 935, 947, 948, 955, 958, 959, 960, 967, 997, 1085, 1087, 1097, 1159, 1160, 1166, 1246, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1318, 1319, 1322, 1330, 1339, 1340, 1344, 1399, 1400, 1401, 1402, 1403, 1406, 1414, 1415, 1420, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1478, 1479, 1490, 1491, 1492, 1493, 1494, 1496, 1499, 1500, 1501, 1502, 1504, 1518, 1519, 1526, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1557, 1562, 1564, 1565, 1575, 1576, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1589, 1602, 1603, 1604, 1628, 1636, 1643, 1661, 1662, 1665, 1674, 1688, 1715, 1716, 1718, 1719, 1721, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1759, 1760, 1766, 1772, 1774, 1784, 1788, 1867, 1868, 1869, 1871, 1872, 1876, 1881, 1885, 1886, 1906, 1909, 1910, 1912, 1931, 1934, 1951, 1969, 1970, 1971, 1977, 1981, 1984, 1985, 1990, 1992, 2004, 2006, 2011, 2015, 2020, 2021, 2027, 2033, 2034, 2035, 2039, 2043, 2045], "min": [12, 21, 25, 35, 42, 46, 58, 60, 70, 71, 112, 181, 182, 183, 184, 296, 690, 691, 692, 753, 765, 766, 775, 797, 814, 815, 816, 817, 820, 870, 962, 963, 1040, 1077, 1111, 1112, 1178, 1210, 1281, 1295, 1296, 1302, 1306, 1308, 1313, 1319, 1339, 1373, 1405, 1445, 1473, 1475, 1495, 1507, 1514, 1566, 1603, 1607, 1637, 1639, 1644, 1662, 1753, 1758, 1759, 1768, 1772, 1774, 1784, 1885, 1910, 1911, 1912, 1913, 1953, 1966, 1969, 2000, 2001, 2006, 2009, 2011, 2027, 2035, 2040, 2048], "ep": [12, 46, 707, 708, 709, 710, 711, 712, 718, 719, 731, 732, 744, 746, 747, 748, 749, 790, 814, 815, 816, 817, 820, 821, 914, 915, 1259, 1335, 1387, 1401, 1402, 1403, 1421, 1440, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1496, 1501, 1526, 1530, 1532, 1534, 1535, 1562, 1574, 1589, 1593, 1594, 1602, 1606, 1629, 1632, 1636, 1659, 1689, 1723, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1768, 1788, 1953, 1983, 1987, 2016, 2040, 2048], "dynamic_shap": [12, 46, 1998, 2027, 2042], "graphmodul": [12, 46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 77, 854, 855, 856, 857, 2006, 2025, 2031, 2032, 2034, 2038, 2044, 2045], "arg0_1": [12, 46, 60, 63, 68, 69, 72, 1998], "f32": [12, 46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73], "s0": [12, 46, 47, 60, 68, 69, 481, 1171, 2033, 2045], "sym_siz": [12, 47, 60, 68, 69, 2001, 2040], "sym": [12, 60, 68, 69, 70, 71, 1171, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848], "gt": [12, 60, 68, 69, 292, 1204, 1953, 1969, 1987, 2001, 2040], "true_graph_0": [12, 47, 60, 63, 68, 69], "false_graph_0": [12, 47, 60, 63, 68, 69], "symbol": [12, 14, 20, 46, 47, 59, 60, 69, 75, 76, 79, 80, 83, 619, 812, 969, 1167, 1168, 1171, 1172, 1173, 1175, 1176, 1178, 1182, 1264, 1318, 1457, 1502, 1909, 1931, 1951, 1955, 1998, 2033, 2034, 2035], "sub": [12, 25, 30, 35, 49, 57, 60, 63, 68, 69, 557, 809, 856, 857, 1261, 1265, 1266, 1347, 1350, 1352, 1499, 1500, 1530, 1531, 1533, 1805, 1883, 1901, 1918, 1950, 1952, 1953, 1969, 1971, 1978, 1992, 2000, 2001, 2015, 2018, 2040, 2044], "exmapl": 12, "dependet": 12, "datadependentcondpredicact": 12, "sum_1": [12, 58, 2031, 2032], "b8": [12, 60, 63, 68], "flatten": [12, 22, 46, 47, 49, 58, 60, 66, 869, 870, 1086, 1212, 1306, 1319, 1538, 1687, 1729, 1737, 1785, 1801, 1806, 1811, 1897, 1917, 1918, 1919, 1920, 1953, 1969, 1970, 1972, 1976, 1998, 2000, 2001, 2008, 2019, 2033], "closur": [12, 29, 60, 68, 69, 969, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 2032, 2036], "flat": [12, 46, 1806, 1848, 1920, 1953, 1971, 1986, 2000, 2015], "_higher_order_op": 12, "condition": [12, 42, 911, 979], "constraint": [12, 25, 46, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 789, 790, 904, 979, 1032, 1043, 1160, 1167, 1168, 1170, 1171, 1178, 1674, 1689, 1715, 1755, 1951, 1955, 1971, 1984, 1986, 1987, 1990, 2015, 2030, 2033], "true_branch": [12, 979], "false_branch": [12, 979], "consist": [12, 21, 25, 27, 31, 42, 43, 47, 58, 914, 958, 959, 960, 979, 1249, 1279, 1285, 1286, 1288, 1290, 1291, 1292, 1293, 1317, 1319, 1487, 1534, 1691, 1694, 1737, 1784, 1885, 1952, 1955, 1959, 1962, 1970, 1971, 1984, 1986, 1990, 1992, 1994, 2000, 2002, 2005, 2015, 2031, 2032, 2039, 2045], "possibli": [12, 21, 42, 46, 49, 979, 1180, 1181, 1249, 1265, 1292, 1297, 1487, 1674, 1952, 1959, 1994, 2003, 2034, 2047], "aka": [12, 25, 47, 60, 68, 69, 927, 979, 1447, 1601, 1978, 1998, 2018, 2033], "add_": [12, 25, 46, 52, 54, 483, 979, 1155, 1953, 1969, 1979, 1998, 2015], "tempor": [12, 979, 1401, 1403, 1406, 1526, 1539, 1576, 1603, 1662], "pytre": [12, 58, 60, 979, 1984], "parallel_info": [13, 1951, 1980], "cppextens": [14, 1951], "setuptool": 14, "bare": 14, "pypa": 14, "userguid": 14, "ext_modul": 14, "buildextens": [14, 1951], "extra_compile_arg": [14, 1996], "extra_link_flag": 14, "wl": 14, "lm": 14, "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 1951], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1028, 2045], "o2": 14, "lcuda": 14, "arch": 14, "card": [14, 1996], "visibl": [14, 25, 27, 39, 47, 1022, 1067, 1488, 1489, 1497, 1498, 2033, 2036], "ptx": 14, "road": 14, "recompil": [14, 58, 675, 967, 1263, 1961, 1988, 2032, 2033, 2038, 2041], "cc": [14, 25, 1981], "newest": [14, 53, 1997], "torch_cuda_arch_list": 14, "6": [14, 18, 21, 22, 25, 31, 40, 58, 60, 61, 65, 66, 68, 69, 70, 71, 73, 309, 311, 313, 317, 397, 398, 466, 482, 494, 508, 512, 555, 602, 680, 681, 686, 692, 736, 737, 738, 740, 741, 753, 756, 758, 760, 903, 904, 906, 907, 908, 930, 938, 946, 951, 957, 961, 965, 987, 1009, 1056, 1060, 1074, 1075, 1076, 1080, 1081, 1092, 1095, 1096, 1113, 1121, 1126, 1127, 1131, 1132, 1134, 1136, 1137, 1140, 1147, 1203, 1213, 1215, 1216, 1238, 1260, 1271, 1275, 1286, 1302, 1306, 1307, 1308, 1315, 1316, 1320, 1322, 1351, 1381, 1382, 1383, 1396, 1407, 1408, 1409, 1410, 1413, 1418, 1421, 1429, 1430, 1439, 1440, 1441, 1443, 1444, 1483, 1484, 1488, 1496, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1530, 1531, 1533, 1535, 1538, 1544, 1559, 1589, 1596, 1597, 1630, 1632, 1639, 1665, 1717, 1718, 1720, 1722, 1728, 1729, 1730, 1739, 1753, 1773, 1774, 1777, 1784, 1785, 1791, 1792, 1795, 1801, 1811, 1812, 1816, 1820, 1832, 1853, 1857, 1862, 1865, 1867, 1868, 1873, 1884, 1886, 1887, 1888, 1896, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1912, 1916, 1920, 1922, 1935, 1936, 1952, 1955, 1956, 1962, 1971, 1976, 1978, 1983, 1984, 1986, 1990, 1995, 2000, 2011, 2012, 2015, 2016, 2018, 2021, 2022, 2032, 2035, 2040, 2042, 2045, 2046], "build_my_extens": 14, "7": [14, 21, 22, 25, 31, 58, 60, 65, 229, 256, 309, 311, 313, 317, 397, 398, 466, 508, 555, 602, 612, 680, 692, 740, 741, 906, 908, 943, 946, 951, 957, 959, 961, 965, 1080, 1092, 1094, 1095, 1098, 1113, 1136, 1137, 1140, 1143, 1147, 1203, 1213, 1226, 1271, 1275, 1285, 1290, 1292, 1293, 1296, 1297, 1301, 1302, 1306, 1313, 1381, 1382, 1383, 1389, 1390, 1393, 1394, 1396, 1407, 1408, 1409, 1429, 1475, 1483, 1484, 1508, 1509, 1510, 1511, 1512, 1535, 1538, 1559, 1631, 1681, 1682, 1707, 1712, 1722, 1729, 1744, 1791, 1795, 1801, 1811, 1812, 1813, 1820, 1832, 1835, 1837, 1848, 1849, 1857, 1865, 1867, 1868, 1873, 1885, 1887, 1888, 1896, 1901, 1902, 1905, 1907, 1916, 1920, 1931, 1935, 1952, 1956, 1962, 1970, 1971, 1979, 1981, 1983, 1993, 1995, 2000, 2001, 2006, 2015, 2018, 2019, 2020, 2021, 2022, 2037, 2042], "older": [14, 1981, 1995, 2003], "modestli": [14, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755], "imag": [14, 21, 736, 737, 738, 856, 857, 976, 1389, 1393, 1394, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1433, 1434, 1435, 1450, 1459, 1494, 1499, 1500, 1521, 1538, 1540, 1541, 1557, 1568, 1569, 1571, 1572, 1586, 1587, 1592, 1603, 1661, 1662, 1809, 1951, 1953, 1971, 1987, 2001, 2004, 2006, 2019, 2020, 2033, 2035, 2036, 2040], "11": [14, 25, 317, 508, 675, 957, 961, 1043, 1095, 1213, 1270, 1306, 1320, 1336, 1391, 1407, 1435, 1484, 1588, 1729, 1730, 1736, 1857, 1901, 1935, 1952, 1956, 1962, 1970, 1981, 1983, 1995, 1996, 2000, 2001, 2015, 2016, 2045], "pars": [14, 25, 45, 924, 1955, 2003, 2011], "window": [14, 21, 25, 58, 347, 551, 936, 945, 1207, 1208, 1246, 1269, 1396, 1397, 1398, 1434, 1435, 1454, 1455, 1456, 1480, 1481, 1482, 1483, 1484, 1485, 1559, 1587, 1588, 1617, 1618, 1619, 1789, 1790, 1881, 1951, 1953, 1966, 1981, 2033], "workaround": [14, 21, 46, 58, 1253, 1950, 1994, 2000, 2006, 2035], "pure": [14, 15, 46, 54, 1252, 1952, 1983], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 31, 58, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1480, 1481, 1482, 1538, 1594, 1970, 1989, 1990, 2015], "rdc": 14, "dc": 14, "anymor": [14, 25, 49], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 675, 2006, 2038, 2039], "lib": [14, 1959, 1996], "nvshmem": 14, "ninja": [14, 1996], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 33, 40, 84, 373, 449, 1111, 1112, 1143, 1144, 1145, 1730, 1778, 1804, 1842, 1847, 1880, 1919, 1953, 1969, 1976, 1981, 1989, 1996, 2001, 2027, 2040], "17": [14, 25, 680, 1246, 1302, 1484, 1857, 1952, 2000, 2001, 2015, 2027, 2032, 2035, 2045], "mix": [14, 22, 31, 46, 49, 1043, 1674, 1951, 1978, 1980, 2006, 2015, 2032, 2033, 2035], "use_ninja": 14, "greatli": [14, 58, 1981, 2033], "fallback": [14, 25, 42, 46, 52, 83, 1184, 1263, 1313, 1977, 1981, 1995, 2030, 2035, 2045], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 1996], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 58, 818, 821, 1675, 1978, 1985, 2037], "torch_extensions_dir": 14, "subfold": [14, 2045], "o3": 14, "cuh": 14, "Such": [14, 21, 22, 46, 57, 1928, 2015], "lib64": 14, "cudart": [14, 1996], "fine": [14, 25, 27, 29, 32, 46, 481, 853, 856, 1148, 1265, 1643, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1950, 1968, 1978, 1981, 1983, 2000, 2003, 2004, 2006, 2015, 2026, 2037, 2045], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 1954], "linker": 14, "workspac": [14, 967], "header": [14, 40, 1995, 1996, 2022], "automat": [14, 22, 25, 27, 42, 43, 46, 58, 82, 146, 584, 884, 886, 900, 901, 921, 967, 1034, 1043, 1212, 1259, 1265, 1351, 1533, 1643, 1675, 1803, 1832, 1923, 1950, 1951, 1954, 1955, 1964, 1965, 1969, 1970, 1978, 1979, 1981, 1983, 1990, 1992, 2000, 2003, 2004, 2006, 2007, 2011, 2020, 2021, 2033, 2034, 2035, 2037, 2045], "construct": [14, 15, 21, 25, 27, 29, 31, 42, 46, 47, 49, 51, 53, 54, 58, 60, 65, 66, 70, 71, 146, 443, 787, 788, 819, 873, 874, 888, 909, 976, 1084, 1100, 1166, 1212, 1249, 1261, 1265, 1266, 1273, 1280, 1320, 1321, 1336, 1351, 1429, 1430, 1487, 1547, 1548, 1549, 1583, 1665, 1674, 1676, 1677, 1715, 1722, 1774, 1778, 1825, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1886, 1900, 1903, 1934, 1951, 1952, 1959, 1963, 1966, 1981, 1982, 1986, 1990, 1992, 1995, 1998, 2003, 2006, 2011, 2013, 2018, 2020, 2021, 2022, 2027, 2035, 2038], "plain": [14, 1400, 1488, 1497, 1688, 1869, 1983, 2015, 2034], "standalon": [14, 41, 42, 43, 812, 1261, 1265, 1952, 2039], "torch_lib_path": 14, "load_inlin": [14, 1951], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 25, 57, 58, 309, 317, 488, 510, 512, 836, 1165, 1172, 1181, 1265, 1483, 1484, 1485, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1954, 1955, 1962, 1978, 1983, 1984, 1990, 1994, 2003, 2011, 2015], "exactli": [14, 22, 25, 31, 44, 47, 914, 915, 961, 1010, 1014, 1097, 1143, 1144, 1176, 1246, 1249, 1291, 1430, 1433, 1434, 1435, 1487, 1515, 1518, 1584, 1594, 1674, 1729, 1737, 1828, 1962, 1963, 1969, 1978, 1981, 1982, 1983, 1986, 1987, 1988, 2000, 2003, 2004, 2030, 2038], "filenam": [14, 21, 46, 58, 1149, 1248, 1257, 1260, 1950, 1953, 1965, 1978, 2003, 2017, 2020, 2037, 2047], "typic": [14, 21, 22, 25, 31, 32, 33, 35, 42, 43, 44, 47, 49, 58, 79, 481, 987, 998, 1140, 1148, 1182, 1249, 1270, 1273, 1321, 1420, 1446, 1487, 1665, 1674, 1741, 1742, 1754, 1828, 1867, 1868, 1869, 1871, 1872, 1950, 1951, 1952, 1955, 1961, 1963, 1978, 1980, 1981, 1993, 1994, 1995, 2000, 2002, 2004, 2006, 2011, 2019, 2029, 2031, 2033, 2034, 2043, 2045, 2047, 2048], "inlin": [14, 46, 57, 60, 62, 66, 70, 71, 1040, 1249, 1253, 1265, 1980, 2035], "concaten": [14, 21, 25, 905, 954, 965, 1012, 1096, 1215, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1430, 1457, 1576, 1584, 1679, 1694, 1878, 1936, 1953, 1956, 2000, 2001, 2015], "furthermor": [14, 40, 53, 1285, 1286, 1313, 1339, 1424, 1969, 1970, 1978, 1994, 2009, 2011], "cuda_runtim": 14, "se": 14, "macro": [14, 33, 1988], "pybind": 14, "_safe_foo": 14, "redirect": [14, 33, 40, 2023], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 1951], "get_compiler_abi_compatibility_and_vers": [14, 1951], "abi": [14, 15], "alongsid": [14, 1249, 1487, 1983, 2038], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 1951], "is_ninja_avail": [14, 1951], "embed": [15, 30, 47, 58, 730, 741, 893, 1088, 1391, 1420, 1430, 1446, 1459, 1493, 1536, 1584, 1643, 1755, 1823, 1953, 1980, 1986, 2001, 2005, 2006, 2008, 2011, 2015, 2020, 2040], "simpl": [15, 18, 22, 35, 42, 46, 53, 55, 58, 483, 987, 1054, 1156, 1164, 1165, 1166, 1249, 1253, 1261, 1401, 1402, 1403, 1429, 1460, 1461, 1462, 1487, 1526, 1583, 1840, 1934, 1950, 1952, 1956, 1971, 1980, 1981, 1982, 1983, 1985, 1987, 1989, 2000, 2003, 2011, 2015, 2032, 2034, 2037, 2038], "modif": [15, 49, 58, 77, 217, 775, 895, 896, 900, 1150, 1151, 1249, 1487, 1674, 1978, 1983, 1990, 2003, 2006, 2035], "submodul": [15, 27, 30, 46, 47, 49, 58, 76, 786, 792, 809, 833, 834, 835, 853, 856, 857, 1164, 1249, 1253, 1255, 1260, 1261, 1423, 1487, 1488, 1489, 1515, 1672, 1951, 1952, 1954, 1955, 1964, 1990, 1995, 2003, 2006, 2011, 2025, 2031, 2044], "preprocess": [15, 46, 75, 491, 1249], "augment": [15, 1956, 2022], "walk": [15, 58, 1959, 1983, 2003, 2012, 2013, 2019, 2045], "interfac": [15, 22, 27, 32, 34, 39, 42, 59, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 740, 741, 751, 756, 757, 758, 759, 760, 789, 1151, 1665, 1827, 1881, 1922, 1955, 1966, 1967, 1983, 1989, 2002, 2009, 2015, 2020, 2040], "opencv": [15, 1592, 1603], "struct": [15, 1165, 1166, 1934, 1964, 1989], "explain": [15, 25, 46, 1755, 1828, 1950, 1955, 1977, 1981, 1984, 1986, 1992, 2015, 2035, 2045], "reshap": [15, 25, 31, 493, 494, 508, 539, 612, 687, 965, 1080, 1095, 1096, 1136, 1213, 1270, 1302, 1306, 1315, 1316, 1319, 1383, 1408, 1409, 1433, 1508, 1509, 1510, 1511, 1512, 1538, 1689, 1723, 1729, 1865, 1866, 1873, 1901, 1902, 1907, 1935, 1936, 1953, 1962, 1970, 1971, 2000, 2001, 2008, 2019, 2020, 2040], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 2027, 2037, 2038, 2039], "cpp_autograd": 15, "workflow": [15, 1950, 1983, 2006, 2007, 2023, 2026, 2033, 2034, 2039, 2041, 2042], "undesir": [15, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1881, 1983], "overview": [15, 25, 39, 1546, 1674, 1951, 1962, 1968, 1978, 1987, 1990, 1999, 2004, 2006, 2011, 2026, 2028, 2032], "cpp_frontend": 15, "library_root": 15, "libtorch": [15, 2027], "linux": [15, 25, 1950], "gcc": 15, "pre": [15, 25, 29, 46, 49, 58, 909, 920, 1249, 1487, 1669, 1671, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1757, 1763, 1950, 1952, 1955, 1964, 1978, 1980, 1981, 1990, 1998, 2000, 2004, 2021, 2034, 2035, 2041, 2045], "cxx11": 15, "facilit": [16, 26, 31, 54, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1001, 1085, 1681, 1682, 1825, 1950, 1952, 1955, 1994], "earli": [18, 22, 25, 33, 57, 481, 1425, 1426, 1427, 1431, 1951, 2006, 2007, 2024, 2025, 2034, 2038], "introduc": [18, 31, 54, 755, 1171, 1178, 1180, 1181, 1189, 1322, 1438, 1457, 1502, 1603, 1811, 1950, 1955, 1979, 1982, 1983, 1991, 2000, 2003, 2004, 2005, 2011, 2015, 2021, 2026, 2035, 2041, 2045, 2050], "race": [18, 25, 481, 1978], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 25, 29, 1980, 1981, 1986, 1992, 2011, 2012], "uniniti": [18, 24, 440, 494, 1098, 1099, 1665, 1676, 1677, 1722, 1922, 1963, 1971, 2001], "overwrit": [18, 21, 25, 58, 1488, 1497, 1955, 1978, 2030], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 135, 921, 1015, 1503, 1981, 1982, 1989, 2011, 2013, 2034], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 47, 58], "stacksummari": 18, "extract": [18, 58, 831, 959, 960, 1429, 1433, 1538, 1583, 1661, 1998, 2011, 2025, 2029, 2031, 2032, 2035, 2036], "10000": [18, 22, 689, 1766, 1813, 1985, 1990, 2015, 2020, 2037], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 49, 1001, 1142, 2036], "id": [18, 21, 25, 27, 29, 33, 41, 42, 43, 49, 58, 769, 819, 930, 998, 1033, 1526, 1619, 1658, 1674, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1955, 1989, 2000, 2001, 2003, 2010, 2011, 2012, 2017, 2038, 2042, 2045], "faulti": [18, 25], "schema": [18, 25, 27, 47, 81, 1952, 1953, 1955, 1959, 1998, 2000, 2040, 2044], "current_stream": [18, 1000, 1951, 1981], "wait_stream": [18, 25, 481, 1001, 1003, 1981], "default_stream": [18, 25, 1951, 1981], "begin": [18, 21, 22, 25, 26, 34, 42, 49, 58, 491, 675, 755, 779, 815, 816, 860, 936, 972, 982, 998, 1046, 1048, 1117, 1203, 1209, 1270, 1305, 1317, 1398, 1399, 1400, 1408, 1409, 1410, 1420, 1422, 1428, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1453, 1457, 1458, 1473, 1478, 1481, 1482, 1494, 1495, 1502, 1505, 1518, 1524, 1529, 1536, 1575, 1596, 1597, 1674, 1688, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1758, 1760, 1766, 1832, 1835, 1838, 1881, 1907, 1918, 1937, 1955, 1977, 1978, 1981, 1983, 1986, 1987, 1989, 1994, 2000, 2002, 2009, 2016, 2030, 2035, 2045], "suspect": [18, 1755, 1981, 2045], "cudnn": [19, 20, 755, 1259, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1438, 1457, 1502, 1503, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1643, 1681, 1682, 1828, 1951, 1953, 1981, 1993, 1994, 2039], "float16": [19, 22, 27, 49, 293, 681, 684, 755, 818, 821, 829, 845, 846, 853, 935, 947, 1150, 1231, 1249, 1344, 1354, 1414, 1415, 1416, 1417, 1418, 1419, 1438, 1439, 1457, 1458, 1474, 1487, 1502, 1546, 1603, 1643, 1681, 1682, 1741, 1742, 1754, 1813, 1925, 1977, 1990, 2006, 2008, 2015, 2017, 2018, 2021, 2022, 2048], "v100": [19, 755, 1438, 1457, 1502, 1981], "packedsequ": [19, 755, 1438, 1457, 1502, 1716, 1717, 1718, 1720], "rnn": [20, 729, 755, 756, 757, 758, 760, 853, 1438, 1439, 1457, 1458, 1503, 1504, 1675, 1692, 1715, 1957, 1985, 1990, 2008, 2020], "enforc": [20, 22, 57, 790, 885, 900, 1249, 1457, 1487, 1502, 1955, 1990, 2019], "cuda_launch_block": [20, 1457, 1502, 1981], "colon": [20, 1457, 1502, 2011], "cublas_workspace_config": [20, 1457, 1502, 1922, 1981, 1994], "16": [20, 25, 46, 317, 612, 733, 734, 735, 736, 737, 738, 767, 1095, 1113, 1140, 1203, 1213, 1249, 1261, 1273, 1279, 1285, 1286, 1290, 1306, 1383, 1395, 1397, 1398, 1406, 1407, 1410, 1413, 1414, 1415, 1416, 1418, 1419, 1424, 1425, 1426, 1427, 1431, 1434, 1435, 1454, 1455, 1456, 1457, 1475, 1480, 1481, 1482, 1484, 1485, 1487, 1494, 1502, 1513, 1530, 1544, 1567, 1569, 1570, 1572, 1576, 1587, 1588, 1732, 1781, 1828, 1857, 1922, 1931, 1935, 1952, 1956, 1976, 1981, 1990, 1993, 1995, 2000, 2001, 2004, 2011, 2015, 2016, 2018, 2020, 2021, 2027, 2032, 2035, 2045], "4096": [20, 1457, 1502, 1922, 1981, 2000], "heart": [21, 2038], "dataload": [21, 491, 1674, 1759, 1760, 1766, 1981, 1985, 1992, 1996, 2002, 2020], "batch_siz": [21, 31, 53, 55, 887, 900, 901, 1156, 1164, 1166, 1493, 1502, 1715, 1717, 1718, 1720, 1934, 1953, 1984, 1985, 1994, 2000, 2020], "shuffl": [21, 1951, 2020], "batch_sampl": 21, "num_work": [21, 33, 1994, 1996], "drop_last": 21, "timeout": [21, 25, 42, 1968, 2011], "worker_init_fn": [21, 1985, 1994], "prefetch_factor": 21, "persistent_work": 21, "__getitem__": [21, 1922], "__len__": [21, 58, 1953], "protocol": [21, 27, 32, 42, 44, 875, 1148, 1151, 1816, 1983, 1996, 1998, 2000, 2011, 2046], "sampl": [21, 27, 31, 46, 50, 55, 58, 84, 149, 150, 254, 282, 373, 449, 476, 603, 774, 937, 987, 1009, 1043, 1056, 1060, 1074, 1075, 1115, 1133, 1156, 1166, 1203, 1246, 1266, 1339, 1373, 1395, 1399, 1400, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1440, 1446, 1449, 1450, 1451, 1452, 1453, 1472, 1474, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1505, 1518, 1519, 1526, 1535, 1557, 1564, 1565, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1589, 1592, 1594, 1602, 1603, 1604, 1628, 1636, 1674, 1689, 1730, 1759, 1774, 1777, 1791, 1793, 1795, 1797, 1798, 1799, 1863, 1879, 1880, 1881, 1929, 1930, 1934, 1951, 1966, 1976, 1977, 1981, 1989, 1990, 2003, 2006, 2007, 2020, 2045], "idx": [21, 58, 895, 897, 900, 1249, 1255, 1391, 1429, 1487, 1689, 1918, 1953, 1970], "th": [21, 31, 150, 282, 309, 311, 317, 755, 903, 905, 937, 957, 1084, 1089, 1224, 1246, 1271, 1289, 1297, 1303, 1339, 1373, 1425, 1426, 1427, 1431, 1438, 1446, 1457, 1502, 1578, 1579, 1580, 1585, 1785, 1881, 1920, 1983, 1996, 2016, 2018, 2047], "iterabledataset": [21, 1989], "__iter__": [21, 1956], "suitabl": [21, 31, 481, 951, 1269, 1755, 1820, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1993, 2005, 2007, 2020, 2036], "improb": 21, "fetch": [21, 57, 58, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1735, 2011], "stream": [21, 25, 33, 40, 49, 57, 146, 481, 888, 909, 989, 991, 996, 998, 1000, 1001, 1004, 1005, 1006, 1014, 1017, 1018, 1032, 1038, 1070, 1073, 1361, 1364, 1365, 1370, 1806, 1951, 1953, 1955, 1986, 1998, 2011, 2035, 2047], "databas": 21, "remot": [21, 25, 29, 33, 1674, 2004, 2011, 2012], "real": [21, 31, 58, 80, 681, 682, 683, 684, 685, 687, 693, 914, 935, 959, 960, 976, 983, 1043, 1113, 1114, 1116, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1171, 1184, 1239, 1241, 1242, 1245, 1246, 1270, 1279, 1280, 1281, 1285, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1299, 1302, 1304, 1306, 1307, 1308, 1309, 1313, 1314, 1318, 1319, 1320, 1330, 1336, 1453, 1496, 1499, 1500, 1536, 1688, 1744, 1797, 1881, 1885, 1931, 1932, 1933, 1950, 1951, 1953, 1955, 1963, 1978, 1981, 1998, 2001, 2003, 2006, 2011, 2013, 2019, 2021, 2022, 2031, 2033, 2034, 2037, 2038, 2040, 2046], "replica": [21, 22, 25, 29, 40, 1423, 1674, 1982], "duplic": [21, 311, 315, 466, 539, 936, 945, 966, 1171, 1207, 1208, 1249, 1487, 1918, 1919, 2000, 2015], "yield": [21, 22, 46, 49, 58, 1085, 1087, 1249, 1296, 1297, 1487, 1937, 1955, 1956, 1962, 2004, 2006, 2016, 2035], "stochast": [21, 31, 1434, 1435, 1587, 1588, 1738, 1740, 1741, 1743, 1754, 1758, 1759, 1990, 2002], "decent": 21, "randomli": [21, 740, 741, 751, 759, 915, 1395, 1424, 1425, 1426, 1427, 1431, 1505, 1577, 1578, 1579, 1580, 1585, 1702, 1971, 1989, 1990], "permut": [21, 46, 60, 69, 1097, 1296, 1297, 1316, 1339, 1341, 1681, 1682, 1799, 1951, 1953, 1970, 2001, 2008, 2019, 2021, 2040], "mini": [21, 774, 780, 1401, 1402, 1403, 1429, 1430, 1441, 1446, 1449, 1450, 1451, 1459, 1479, 1490, 1492, 1526, 1535, 1583, 1584, 1603, 1662, 2004], "neither": [21, 25, 790, 894, 895, 898, 900, 1080, 1140, 1493, 1534, 1729, 1907, 1983, 1993, 2011], "nor": [21, 25, 33, 49, 790, 895, 898, 900, 1171, 1285, 1286, 1313, 1493, 1534, 1674, 1729, 1783, 1885, 1983, 2000, 2030, 2034], "notion": [21, 914, 1401, 1402, 1403, 1449, 1450, 1451, 1526, 2035, 2038], "collat": 21, "minibatch": [21, 763, 764, 767, 768, 769, 1339, 1391, 1399, 1400, 1420, 1422, 1446, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1539, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1604, 1617, 1618, 1619, 1628, 1636, 2004], "loader": [21, 2002], "essenti": [21, 25, 33, 58, 1339, 1970, 1981, 1996, 2015, 2027, 2030], "dummi": [21, 29, 1959, 1978, 1983, 1998, 2045, 2046], "infinit": [21, 1241, 1322, 1399, 1406, 1576, 1778, 1983, 1993, 2011, 2034], "drop": [21, 53, 55, 58, 1043, 1254, 1308, 1313, 1395, 1724, 1828, 1881, 1952, 1970, 1992, 2038, 2047], "roughli": [21, 1452, 1982, 2043, 2044], "dataset_it": 21, "pad": [21, 22, 46, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 730, 733, 734, 735, 736, 737, 738, 763, 764, 767, 768, 769, 774, 777, 778, 780, 967, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1246, 1396, 1397, 1398, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1429, 1430, 1433, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1490, 1493, 1508, 1509, 1510, 1511, 1512, 1513, 1533, 1534, 1538, 1542, 1543, 1544, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1583, 1584, 1586, 1592, 1603, 1617, 1618, 1619, 1620, 1621, 1622, 1661, 1662, 1716, 1718, 1719, 1721, 1789, 1790, 1881, 1951, 1953, 1971, 1985, 1995, 2000, 2001, 2006, 2020, 2033, 2040], "length": [21, 22, 25, 27, 30, 31, 256, 309, 311, 317, 347, 428, 429, 578, 579, 580, 730, 755, 809, 888, 909, 931, 966, 1014, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1151, 1166, 1224, 1246, 1265, 1269, 1382, 1383, 1401, 1406, 1414, 1423, 1430, 1433, 1438, 1454, 1457, 1493, 1502, 1530, 1538, 1547, 1567, 1568, 1569, 1576, 1584, 1603, 1643, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1791, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1865, 1867, 1868, 1869, 1871, 1872, 1881, 1907, 1934, 1953, 1955, 1962, 1970, 1971, 1979, 1985, 2015, 2022, 2033, 2035, 2040, 2045], "certain": [21, 22, 25, 39, 40, 46, 54, 57, 58, 80, 681, 684, 730, 910, 935, 947, 1022, 1085, 1246, 1249, 1257, 1321, 1344, 1354, 1414, 1415, 1416, 1417, 1418, 1419, 1439, 1458, 1474, 1487, 1493, 1538, 1593, 1604, 1606, 1728, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1955, 1959, 1962, 1970, 1978, 1979, 1981, 1983, 1989, 1990, 1993, 1995, 2000, 2004, 2005, 2011, 2012, 2015, 2034, 2035, 2038, 2039, 2045], "cheaper": [21, 57], "bulk": [21, 2034], "arrai": [21, 25, 33, 443, 755, 815, 816, 874, 875, 938, 956, 983, 987, 1097, 1141, 1150, 1151, 1159, 1160, 1321, 1351, 1433, 1438, 1439, 1457, 1458, 1586, 1806, 1813, 1832, 1867, 1868, 1869, 1871, 1872, 1897, 1900, 1907, 1915, 1928, 1952, 1956, 1981, 1990, 1995, 2015, 2017, 2021, 2022, 2035], "untouch": 21, "slightli": [21, 25, 31, 46, 49, 1729, 1774, 1886, 1950, 1981, 1983, 1986, 1987, 1993, 2003, 2035], "default_col": 21, "channel": [21, 52, 467, 468, 469, 774, 780, 803, 817, 820, 828, 840, 848, 1111, 1401, 1402, 1403, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1431, 1433, 1441, 1449, 1450, 1451, 1459, 1463, 1464, 1465, 1466, 1467, 1468, 1475, 1495, 1521, 1526, 1538, 1539, 1540, 1541, 1562, 1578, 1579, 1580, 1585, 1602, 1603, 1610, 1637, 1662, 1681, 1682, 1690, 1700, 1701, 1702, 1709, 1710, 1726, 1786, 1970, 1972, 1976, 1978, 2006, 2007, 2009, 2020], "class_index": 21, "namedtupl": [21, 27, 46, 47, 58, 889, 894, 1076, 1077, 1194, 1249, 1261, 1271, 1291, 1341, 1347, 1350, 1352, 1355, 1379, 1391, 1487, 1774, 1784, 1857, 1885, 1904, 1909, 1952, 1954, 1955, 2006], "situat": [21, 31, 44, 58, 81, 83, 481, 967, 983, 1694, 1963, 1968, 1983, 1984, 1992, 1993, 2003, 2006, 2013, 2033, 2034, 2035, 2046], "gil": [21, 25, 29, 1978, 1981, 2011], "integ": [21, 24, 25, 31, 42, 46, 47, 84, 285, 440, 442, 444, 494, 540, 555, 561, 680, 681, 682, 683, 684, 685, 761, 762, 780, 782, 860, 887, 900, 901, 935, 936, 945, 956, 982, 1001, 1003, 1019, 1025, 1026, 1054, 1092, 1095, 1097, 1098, 1099, 1100, 1140, 1141, 1142, 1143, 1144, 1145, 1151, 1152, 1156, 1157, 1158, 1159, 1160, 1171, 1178, 1185, 1186, 1192, 1207, 1208, 1211, 1212, 1213, 1260, 1263, 1272, 1273, 1280, 1291, 1293, 1303, 1322, 1372, 1391, 1406, 1414, 1415, 1416, 1459, 1551, 1552, 1553, 1554, 1555, 1556, 1664, 1715, 1730, 1733, 1762, 1765, 1769, 1774, 1786, 1787, 1793, 1795, 1796, 1797, 1799, 1804, 1813, 1825, 1873, 1882, 1886, 1901, 1902, 1915, 1920, 1935, 1940, 1943, 1944, 1948, 1954, 1955, 1956, 1969, 1984, 1987, 2004, 2006, 2007, 2009, 2015, 2016, 2018, 2021, 2022, 2023, 2033, 2048], "descriptor": [21, 25, 1535, 1536, 1956, 2000], "parent": [21, 35, 40, 44, 49, 675, 783, 784, 812, 1487, 1968, 1996, 2003, 2013, 2020], "simplest": [21, 27, 33, 58, 853, 1396, 1397, 1398, 1414, 1415, 1416, 1480, 1481, 1482, 1692, 1982, 1983, 1990, 1998, 2006, 2013, 2015, 2035, 2038], "refcount": [21, 1968, 1992], "panda": 21, "pyarrow": 21, "13246": 21, "enumer": [21, 31, 46, 58, 1249, 1487, 1489, 1498, 1759, 1953, 1954, 1977, 1981, 1996, 2020, 2044], "get_worker_info": [21, 2011], "seed": [21, 84, 1035, 1044, 1045, 1065, 1225, 1342, 1363, 1774, 1791, 1886, 1925, 1951, 1953, 1985, 1992, 1994, 2001, 2010], "naiv": [21, 2004, 2033, 2035], "shut": [21, 2011], "garbag": [21, 2013], "subtleti": [21, 60, 1423, 1983, 1985], "multiprocess": [21, 22, 25, 26, 28, 33, 35, 43, 44, 1423, 1674, 1951, 1970, 1982, 2012, 2017], "unix": [21, 40, 1968], "fork": [21, 40, 1268, 1674, 1955, 1980, 1981, 1985, 1989, 1992, 1996, 2010, 2011, 2013], "child": [21, 25, 33, 35, 49, 60, 786, 1249, 1487, 1701, 1968, 1990, 1996, 2013], "address": [21, 25, 42, 45, 54, 212, 914, 915, 1006, 1962, 1968, 1981, 1983, 2002, 2011, 2012, 2017, 2030, 2047], "maco": [21, 25, 1968, 1991], "spawn": [21, 22, 26, 33, 34, 40, 44, 1252, 1674, 1951, 1977, 1982, 1992, 1996, 2012], "__name__": [21, 22, 25, 34, 35, 43, 1982, 1983, 1992, 1996, 2003, 2012], "__main__": [21, 22, 25, 34, 35, 43, 1979, 1982, 1992, 1996, 2012], "bytecod": [21, 46, 675, 1961, 1997, 1998, 2003, 2031, 2032, 2035, 2038, 2045], "base_se": 21, "worker_id": [21, 44, 1994], "therebi": [21, 31, 2002, 2006], "mandatorili": 21, "faq": [21, 1423, 1718, 1951], "initial_se": [21, 84, 1951, 1953, 1994, 2001, 2010], "host": [21, 25, 33, 35, 41, 42, 43, 44, 192, 205, 575, 598, 872, 1249, 1487, 1674, 1694, 1728, 1981, 2004, 2011, 2012, 2017, 2030, 2034, 2047], "recogn": [21, 77, 1955, 2011, 2015, 2034], "simplecustombatch": 21, "transposed_data": 21, "zip": [21, 27, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1950, 1953, 1954, 1965, 1981, 1989, 2015], "tgt": [21, 1530, 1531, 1532], "collate_wrapp": 21, "float32": [21, 22, 25, 46, 49, 263, 575, 612, 814, 815, 816, 817, 820, 821, 875, 976, 1111, 1112, 1150, 1197, 1199, 1231, 1387, 1400, 1539, 1540, 1541, 1559, 1741, 1742, 1754, 1778, 1783, 1791, 1795, 1810, 1825, 1826, 1828, 1870, 1932, 1971, 1977, 1981, 1993, 1998, 2000, 2008, 2015, 2016, 2017, 2018, 2021, 2022, 2032, 2035, 2045, 2048], "tensordataset": 21, "batch_ndx": 21, "is_pin": [21, 1715, 1953, 1969, 2001, 2017, 2035], "multiprocessing_context": 21, "pin_memory_devic": 21, "reshuffl": 21, "draw": [21, 31, 150, 282, 937, 1060, 1373, 1791, 2020, 2043], "mutual": [21, 25, 33, 730, 2022], "subprocess": [21, 25, 40, 42, 44, 1985, 1992], "incomplet": [21, 903, 1957, 2016], "divis": [21, 578, 612, 682, 767, 768, 769, 961, 1092, 1142, 1145, 1260, 1293, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1441, 1453, 1478, 1496, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1629, 1804, 1873, 1901, 1955, 1977, 1981], "basecontext": 21, "randomsampl": 21, "prefetch": [21, 49], "unpickl": [21, 25, 1321, 2003], "practic": [21, 25, 31, 47, 49, 481, 1951, 1952, 1962, 1968, 1970, 1978, 1983, 1986, 1987, 1990, 1995, 2003, 2011, 2017, 2026, 2034, 2035], "proper": [21, 33, 57, 58, 1088, 1823, 1954, 1978, 1981, 1983, 1992, 1996, 2017], "guess": [21, 1171], "trust": [21, 25, 1321, 1950, 2003], "inaccur": [21, 22, 1603], "kwd": 21, "__getitems__": 21, "speedup": [21, 22, 1493, 1534, 2026, 2030, 2038, 2042], "myiterabledataset": 21, "worker_info": 21, "iter_start": 21, "iter_end": 21, "per_work": 21, "ceil": [21, 173, 628, 629, 763, 764, 1396, 1397, 1398, 1454, 1455, 1456, 1480, 1481, 1482, 1559, 1560, 1561, 1617, 1618, 1619, 1789, 1790, 1813, 1953, 1969, 1981, 2001, 2015, 2040], "mult": 21, "12": [21, 22, 25, 49, 317, 512, 612, 681, 736, 737, 738, 740, 741, 930, 957, 961, 1095, 1113, 1213, 1253, 1269, 1286, 1308, 1391, 1407, 1418, 1433, 1434, 1435, 1484, 1499, 1500, 1521, 1530, 1538, 1546, 1587, 1588, 1629, 1634, 1635, 1689, 1723, 1773, 1784, 1832, 1847, 1857, 1901, 1917, 1920, 1935, 1950, 1952, 1953, 1956, 1962, 1981, 1983, 1986, 1991, 1995, 2000, 2001, 2015, 2022, 2032, 2042, 2043], "overall_start": 21, "overall_end": 21, "stackdataset": 21, "assembl": [21, 2032], "imagedataset": 21, "textdataset": 21, "tuple_stack": 21, "dict_stack": 21, "concatdataset": 21, "chaindataset": 21, "chain": [21, 22, 31, 57, 58, 146, 888, 957, 1305, 1430, 1515, 1756, 1769, 1955, 1978, 1981, 1983, 1987, 1990, 2002, 2044], "fly": [21, 1040, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1978], "whole": [21, 25, 27, 1166, 1249, 1487, 1515, 1526, 1674, 1934, 1978, 1982, 1992, 1993, 2003, 2034, 2036, 2038, 2041, 2042], "_util": [21, 2043], "collate_fn_map": 21, "registri": [21, 1951, 1995, 1998, 2000], "default_collate_fn_map": 21, "insert": [21, 25, 31, 49, 57, 58, 742, 787, 788, 856, 857, 934, 1488, 1489, 1497, 1674, 1820, 1823, 1832, 1853, 1878, 1921, 1952, 1964, 1981, 1998, 2001, 2006, 2044], "collate_tensor_fn": 21, "custom_col": 21, "collate_map": 21, "outer": [21, 686, 903, 1097, 1156, 1160, 1165, 1175, 1195, 1953, 1955, 2001], "unchang": [21, 494, 508, 510, 730, 809, 1136, 1249, 1487, 1530, 1805, 1876, 1977, 1993, 2006], "byte": [21, 25, 27, 31, 42, 238, 430, 553, 875, 1005, 1046, 1048, 1050, 1052, 1149, 1151, 1248, 1321, 1358, 1359, 1735, 1744, 1816, 1954, 1955, 1956, 1969, 1986, 1995, 2003, 2015, 2017, 2047], "k": [21, 25, 27, 31, 43, 58, 282, 350, 501, 508, 510, 512, 585, 612, 755, 934, 960, 1084, 1097, 1154, 1167, 1191, 1212, 1271, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1301, 1308, 1310, 1312, 1313, 1322, 1340, 1344, 1396, 1398, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1434, 1435, 1438, 1439, 1457, 1458, 1472, 1474, 1475, 1480, 1482, 1493, 1494, 1502, 1504, 1546, 1575, 1587, 1588, 1610, 1628, 1688, 1772, 1774, 1784, 1812, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1871, 1872, 1881, 1904, 1909, 1953, 1954, 1976, 1981, 1983, 1996, 2015, 2016, 2018, 2035, 2038, 2039, 2040, 2045], "v_i": [21, 1289], "v_1": 21, "v_2": 21, "v1_i": 21, "v2_i": 21, "v1_1": 21, "v1_2": 21, "v2_1": 21, "v2_2": 21, "elem": [21, 1953], "customtyp": 21, "collate_customtype_fn": 21, "custotyp": 21, "default_convert": 21, "np": [21, 955, 1092, 1097, 1137, 1138, 1139, 1633, 1778, 1959, 1984, 1994, 2000, 2020, 2021, 2022, 2035], "fraction": [21, 31, 1067, 1140, 1146, 1368, 1417, 1418, 1419, 1434, 1435, 1493, 1534, 1587, 1588, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1785, 1976, 2035], "workerinfo": [21, 2011], "random_split": 21, "floor": [21, 267, 642, 643, 763, 764, 1092, 1142, 1260, 1396, 1397, 1398, 1454, 1455, 1456, 1480, 1481, 1482, 1559, 1560, 1561, 1617, 1618, 1619, 1789, 1790, 1804, 1813, 1881, 1953, 1955, 1969, 1992, 1995, 2001, 2015, 2040], "frac": [21, 31, 275, 373, 644, 645, 682, 755, 767, 768, 769, 860, 936, 945, 983, 987, 1092, 1142, 1203, 1207, 1208, 1269, 1281, 1285, 1286, 1289, 1301, 1313, 1320, 1336, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1424, 1433, 1438, 1439, 1440, 1441, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1472, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1490, 1491, 1492, 1494, 1502, 1504, 1505, 1517, 1519, 1520, 1522, 1523, 1525, 1526, 1527, 1538, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1612, 1629, 1631, 1633, 1643, 1645, 1649, 1651, 1653, 1654, 1739, 1740, 1743, 1745, 1751, 1758, 1759, 1788, 1797, 1800, 1803, 1815, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1864, 1879, 1880, 1881, 1885, 1907, 1929, 1930, 1953, 1969, 1976, 1978, 1987, 2001, 2015, 2016], "remaind": [21, 485, 1145, 1203, 1953, 2001, 2032, 2040], "robin": [21, 25], "generator1": 21, "manual_se": [21, 54, 84, 1951, 1953, 1969, 1990, 1992, 1994, 2000, 2001, 2010], "42": [21, 819, 945, 1372, 1839, 1981, 1990, 2032], "generator2": 21, "30": [21, 25, 31, 33, 42, 440, 612, 715, 723, 724, 751, 759, 1203, 1272, 1404, 1406, 1413, 1474, 1538, 1544, 1567, 1576, 1665, 1762, 1764, 1770, 1787, 1897, 1963, 1983, 1986, 2000, 2002, 2011, 2032], "data_sourc": 21, "accedingsequencelengthsampl": 21, "argsort": [21, 1897, 1953, 1984, 2001], "tolist": [21, 348, 1955, 2001, 2017], "accedingsequencelengthbatchsampl": 21, "sequentialsampl": 21, "num_sampl": [21, 416, 1373, 1953], "drawn": [21, 169, 254, 282, 1373, 1730, 1791, 1795, 1796, 1976, 2022, 2023], "subsetrandomsampl": 21, "weightedrandomsampl": 21, "probabl": [21, 49, 150, 254, 755, 937, 1176, 1211, 1327, 1373, 1391, 1395, 1399, 1406, 1422, 1424, 1425, 1426, 1427, 1431, 1438, 1440, 1457, 1493, 1494, 1502, 1564, 1575, 1576, 1577, 1578, 1579, 1580, 1585, 1594, 1604, 1628, 1643, 1784, 1968, 1983, 1996, 2000, 2016, 2020, 2033, 2034, 2035, 2036, 2041], "row": [21, 22, 25, 30, 31, 204, 309, 311, 317, 580, 583, 688, 694, 872, 903, 905, 955, 983, 987, 1080, 1110, 1138, 1139, 1160, 1166, 1212, 1271, 1297, 1305, 1308, 1313, 1337, 1339, 1347, 1349, 1350, 1352, 1355, 1373, 1379, 1380, 1381, 1583, 1584, 1633, 1688, 1728, 1782, 1785, 1805, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1884, 1904, 1907, 1911, 1913, 1928, 1934, 1936, 1953, 1987, 2015, 2020], "05": [21, 29, 58, 109, 340, 689, 707, 708, 709, 710, 711, 712, 718, 719, 731, 732, 744, 746, 747, 748, 749, 914, 915, 1111, 1238, 1265, 1266, 1336, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1530, 1532, 1534, 1562, 1593, 1602, 1606, 1674, 1757, 1763, 1764, 1770, 1841, 1842, 1847, 1952, 1953, 2002, 2012, 2022], "batchsampl": 21, "distributedsampl": [21, 1674], "num_replica": 21, "world_siz": [21, 22, 25, 26, 29, 33, 42, 43, 45, 49, 1674, 1982, 2004, 2011, 2012], "evenli": [21, 30, 578, 579, 580, 690, 691, 1095, 1213, 1320, 1336, 1935], "set_epoch": 21, "is_distribut": [21, 1953, 2001, 2035], "start_epoch": 21, "n_epoch": 21, "vanilla": [22, 47, 1962], "allreduc": [22, 25, 1674, 1981, 1982, 2001], "besid": [22, 25, 923, 1981, 1982, 1998, 2020, 2031], "register_comm_hook": [22, 29, 49, 1674], "mainli": [22, 31, 822, 1406, 1576, 2024], "bucket": [22, 29, 1181, 1391, 1674, 1953, 1982, 2001, 2035, 2045], "gradbucket": [22, 1674], "decompos": [22, 46, 58, 1147, 1155, 1294, 1978, 1983, 2000, 2040], "get_per_parameter_tensor": 22, "wise": [22, 25, 30, 31, 682, 683, 693, 753, 765, 766, 775, 779, 879, 981, 1097, 1102, 1143, 1144, 1192, 1193, 1206, 1215, 1272, 1274, 1331, 1332, 1333, 1334, 1338, 1348, 1351, 1353, 1384, 1405, 1419, 1426, 1428, 1442, 1443, 1444, 1445, 1447, 1473, 1476, 1486, 1495, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1523, 1524, 1525, 1527, 1528, 1566, 1581, 1590, 1591, 1595, 1596, 1597, 1598, 1601, 1605, 1607, 1612, 1623, 1624, 1637, 1638, 1639, 1644, 1645, 1646, 1647, 1651, 1653, 1654, 1655, 1865, 1936, 1980, 1983, 2015, 2016, 2019, 2042], "_distributed_c10d": [22, 25], "1d": [22, 31, 49, 697, 700, 733, 736, 767, 777, 966, 983, 987, 1080, 1094, 1211, 1212, 1226, 1246, 1305, 1306, 1351, 1380, 1388, 1392, 1396, 1406, 1414, 1417, 1422, 1425, 1426, 1430, 1454, 1479, 1480, 1492, 1494, 1539, 1551, 1554, 1557, 1559, 1567, 1570, 1578, 1584, 1613, 1617, 1785, 1786, 1789, 1881, 1897, 1907, 1931, 1986], "is_last": 22, "set_buff": 22, "stateless": [22, 54, 1972, 1990], "ddp_comm_hook": [22, 29], "default_hook": 22, "allreduce_hook": 22, "process_group": [22, 26, 27, 29, 49, 1526, 1674], "aggreg": [22, 25, 27, 35, 49, 1430, 1584, 1674, 1705, 1966, 2004, 2035, 2045], "henc": [22, 27, 29, 31, 33, 41, 42, 45, 49, 57, 282, 937, 1151, 1483, 1484, 1485, 1539, 1681, 1682, 1870, 1971, 1978, 1981, 1982, 1986, 2011, 2013, 2030], "unaffect": [22, 494, 495, 1440], "ddp_model": [22, 25, 27, 1674, 1982], "fp16_compress_hook": 22, "compress": [22, 49, 204, 582, 583, 1119, 1120, 1129, 1130, 1674, 1867, 1868, 1869, 1871, 1872, 1906, 1951, 2042], "decompress": [22, 1950, 1965], "bf16_compress_hook": 22, "nccl": [22, 26, 27, 43, 49, 1674, 1986, 1988], "brain": [22, 2018, 2021], "wrapper": [22, 25, 31, 46, 49, 57, 58, 60, 619, 752, 785, 819, 995, 998, 1000, 1001, 1003, 1070, 1143, 1144, 1164, 1249, 1361, 1423, 1952, 1954, 1955, 1966, 1968, 1981, 1982, 2000, 2004, 2030], "fp16_compress_wrapp": 22, "powersgdst": 22, "matrix_approximation_rank": 22, "start_powersgd_it": 22, "powersgd_hook": 22, "bf16_compress_wrapp": 22, "wikipedia": [22, 1630, 1978, 1987, 2048], "bfloat16_float": 22, "point_format": 22, "vogel": 22, "et": [22, 31, 49, 1406, 1499, 1500, 1535, 1536, 1754, 1848, 1886, 1976], "al": [22, 31, 49, 1406, 1499, 1500, 1535, 1536, 1754, 1848, 1886, 1976], "neurip": [22, 31], "2019": [22, 31, 1054], "bandwidth": [22, 25, 41, 43, 1981, 2006, 2011, 2037, 2039], "hyperparamet": [22, 49, 58, 2020], "1000": [22, 1112, 1117, 1143, 1144, 1391, 1429, 1536, 1786, 1813, 1832, 1900, 1978, 1995, 2000, 2020], "min_compression_r": 22, "use_error_feedback": 22, "warm_start": 22, "orthogonalization_epsilon": 22, "random_se": 22, "compression_stats_logging_frequ": 22, "batch_tensors_with_same_shap": 22, "tune": [22, 25, 29, 1054, 1286, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1978, 1981, 1991, 2006, 2045], "stronger": [22, 46, 47, 60], "exponenti": [22, 254, 1107, 1301, 1327, 1328, 1329, 1337, 1405, 1428, 1581, 1951, 1955, 2001, 2002, 2016, 2023], "grid": [22, 1117, 1351, 1557, 1592, 1953, 1981, 2020, 2040], "satisfactori": 22, "nlp": [22, 1449, 1450, 1451, 1459, 2035], "appendix": [22, 1951], "hybrid": [22, 49, 214, 538, 578, 579, 580, 582, 583, 1214], "scheme": [22, 42, 473, 797, 814, 815, 816, 817, 820, 822, 1990], "sensit": [22, 1447, 1518, 2000, 2003, 2012, 2034], "suboptim": [22, 2037], "trajectori": 22, "irrecover": 22, "impact": [22, 25, 77, 1054, 1828, 1964, 1966, 1978, 2006, 2019, 2035, 2041, 2045], "warm": [22, 29, 1043, 1758, 1759, 1981, 2005, 2030, 2035, 2043], "num_row": 22, "num_col": 22, "1e": [22, 27, 31, 58, 109, 340, 689, 707, 708, 709, 710, 711, 712, 718, 719, 731, 732, 744, 746, 747, 748, 749, 750, 914, 915, 958, 959, 960, 1238, 1265, 1266, 1316, 1401, 1402, 1403, 1421, 1440, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1473, 1496, 1501, 1526, 1530, 1532, 1534, 1535, 1562, 1574, 1589, 1593, 1594, 1602, 1606, 1629, 1632, 1636, 1659, 1689, 1723, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1768, 1776, 1829, 1952, 1953, 1983, 1990, 2000, 2002, 2016, 2022], "orthogon": [22, 1286, 1289, 1308, 1313, 1322, 1772, 1784, 1976, 1978, 1990, 2015], "div": [22, 232, 1093, 1142, 1145, 1391, 1499, 1500, 1804, 1914, 1953, 1959, 1969, 2001, 2015, 2018, 2040, 2044], "epsilon": [22, 58, 814, 815, 816, 817, 820, 860, 1304, 1307, 1401, 1402, 1403, 1421, 1441, 1449, 1450, 1451, 1459, 1496, 1526, 1574, 1629, 1684, 1686, 1689, 1723, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1788, 1953, 2016], "bucket_cap_mb": [22, 1674, 1982], "footprint": [22, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1998, 2015, 2042], "bottleneck": [22, 1951, 1990, 2037], "memor": 22, "compens": 22, "apex": 22, "uncompress": [22, 1995, 2015], "p": [22, 27, 31, 49, 58, 150, 230, 282, 420, 421, 448, 483, 486, 487, 681, 684, 935, 937, 947, 955, 1091, 1270, 1281, 1287, 1288, 1296, 1297, 1339, 1341, 1344, 1354, 1376, 1395, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1452, 1454, 1455, 1456, 1492, 1496, 1498, 1535, 1536, 1558, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1613, 1614, 1615, 1625, 1629, 1632, 1633, 1659, 1679, 1692, 1694, 1700, 1709, 1729, 1754, 1805, 1862, 1953, 1954, 1977, 1978, 1981, 1985, 1987, 1992, 2002, 2005, 2015, 2016, 2039, 2040], "pq": 22, "mq": [22, 2006, 2025], "tp": [22, 25, 30], "awai": [22, 58, 970, 1592, 1951, 1970, 1978, 1984, 2033], "config": [22, 49, 58, 787, 788, 789, 790, 854, 856, 967, 1982, 1996, 2009, 2027, 2035, 2037, 2038, 2039, 2041, 2045], "comm": [22, 25, 675, 1982], "handler": [22, 25, 35, 36, 1701, 1966, 1983, 1989, 2003, 2046], "batched_powersgd_hook": 22, "destroi": [22, 42, 1171, 1423, 1978, 2005, 2011], "squar": [22, 31, 546, 734, 735, 736, 737, 774, 780, 789, 987, 1084, 1086, 1246, 1281, 1283, 1285, 1286, 1287, 1290, 1291, 1295, 1297, 1299, 1301, 1303, 1307, 1309, 1310, 1312, 1313, 1317, 1330, 1339, 1389, 1393, 1397, 1398, 1415, 1416, 1418, 1419, 1434, 1435, 1447, 1455, 1456, 1478, 1481, 1482, 1485, 1518, 1530, 1547, 1559, 1568, 1571, 1587, 1588, 1592, 1601, 1603, 1624, 1647, 1662, 1688, 1739, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1815, 1874, 1909, 1928, 1953, 2001, 2015], "truncat": [22, 1142, 1828, 1915, 1971, 1976, 1985, 1993], "impli": [22, 42, 49, 254, 1174, 1968, 1978, 1986, 2000, 2004, 2009, 2011, 2034], "debugging_hook": 22, "noop_hook": 22, "headroom": 22, "desynchron": [22, 25], "trainer": [22, 27, 33, 35, 40, 43, 44, 1674, 2011], "restart": [22, 33, 41, 43, 45, 1758, 1759, 1968, 2020, 2032], "__setstate__": 22, "__getstate__": 22, "reload": [22, 29, 49, 1950], "sy": [22, 34, 43, 45, 1950, 1981, 1995, 2003], "tempfil": 22, "mp": [22, 25, 26, 44, 1361, 1674, 1951, 1959, 1982, 1983, 1992, 2006, 2012, 2017, 2018, 2025], "simplemodel": 22, "24": [22, 25, 31, 940, 1308, 1475, 1557, 1722, 1784, 1828, 1902, 1952, 1976, 1980, 2016, 2032], "fc2": [22, 1665, 1998, 2004, 2027], "master_addr": [22, 25, 33, 43, 45, 1982, 2004, 2011, 2012], "localhost": [22, 25, 42, 43, 1982, 2004, 2011, 2012], "master_port": [22, 25, 33, 43, 45, 1982, 2004, 2011, 2012], "12355": 22, "init_process_group": [22, 25, 26, 29, 33, 43, 45, 1674, 1981, 1982, 2011], "cleanup": [22, 1171, 2017], "destroy_process_group": 22, "run_demo": 22, "demo_fn": 22, "nproc": [22, 25, 40, 41, 43, 1968, 1982, 2012], "demo_seri": 22, "gettempdir": 22, "device_id": [22, 25, 26, 29, 43, 49, 1321, 1423, 1526, 1658, 1674, 1982], "powersgd_st": 22, "lr": [22, 26, 27, 29, 49, 483, 1665, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1981, 1982, 1990, 1992, 2002, 2012, 2020], "001": [22, 914, 915, 1259, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1767, 1982, 2000], "state_dict": [22, 27, 29, 46, 47, 49, 831, 832, 1249, 1487, 1665, 1708, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1950, 1965, 1982, 1990, 1992, 1995, 1998, 2000, 2006, 2024], "comm_hook": 22, "comm_hook_st": 22, "barrier": [22, 33, 42, 2001], "map_loc": [22, 1253, 1257, 1321, 1674, 1950, 1963, 1965, 2003], "new_ddp_model": 22, "load_state_dict": [22, 27, 29, 49, 1249, 1321, 1487, 1665, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1950, 1951, 1990, 1995, 2006], "n_gpu": 22, "device_count": [22, 1925, 1951], "got": [22, 25, 886, 900, 901, 923, 1925, 1983, 2022], "thank": [22, 31, 1983, 2004], "author": [22, 42, 43, 49, 1166, 1751, 1791, 1934, 1977, 2027, 2032, 2035, 2037, 2041, 2042, 2045], "thij": 22, "par": 22, "home": [23, 1981], "fill_uninitialized_memori": [24, 494, 1098, 1099, 1100, 1922, 1951, 1994], "fill": [24, 25, 150, 169, 254, 255, 256, 282, 313, 317, 373, 396, 440, 441, 442, 444, 449, 476, 603, 618, 938, 1085, 1098, 1099, 1100, 1152, 1153, 1280, 1291, 1293, 1430, 1530, 1584, 1631, 1733, 1734, 1793, 1794, 1795, 1796, 1797, 1798, 1885, 1922, 1948, 1949, 1953, 1963, 1970, 1971, 1976, 1981, 1983, 1995, 2001, 2015, 2022, 2034, 2038, 2040], "detriment": [24, 1994], "resize_": [24, 495, 1155, 1271, 1922, 1952, 1953, 1954, 1969, 1994, 2008, 2017, 2040], "empty_strid": [24, 1953, 1957, 2001, 2033, 2040], "empty_permut": [24, 1953, 2001, 2040], "empty_lik": [24, 27, 1953, 1957, 1963, 1969, 1971, 2001, 2015], "brief": [25, 1674, 1968, 2011], "introduct": [25, 31, 1032, 1674, 1951, 1952, 1956, 1969, 1979, 1990, 2000, 2011, 2015, 2020], "mpi": [25, 1674], "gloo": [25, 43, 1674, 1982, 1988, 2011], "recv": [25, 1674, 2001, 2012], "broadcast": [25, 29, 31, 49, 54, 93, 192, 394, 396, 397, 398, 508, 510, 512, 561, 680, 681, 682, 683, 684, 685, 686, 692, 730, 879, 935, 940, 943, 947, 948, 949, 950, 982, 1011, 1040, 1091, 1092, 1097, 1102, 1142, 1143, 1144, 1145, 1191, 1193, 1206, 1216, 1274, 1275, 1282, 1295, 1299, 1304, 1305, 1307, 1310, 1318, 1338, 1343, 1344, 1354, 1372, 1375, 1384, 1387, 1400, 1421, 1440, 1493, 1565, 1574, 1637, 1674, 1737, 1773, 1781, 1804, 1806, 1882, 1902, 1907, 1937, 1951, 1955, 1969, 1970, 1971, 1982, 2000, 2001, 2016, 2035, 2040], "all_reduc": [25, 44, 1674, 2001], "all_gath": 25, "scatter": [25, 29, 49, 508, 510, 512, 1423, 1922, 1953, 1985, 1986, 2001, 2011, 2040], "reduce_scatt": [25, 2001], "all_to_al": 25, "v1": [25, 49, 1318, 1773, 1950, 1982, 2011], "init_method": [25, 1674, 2011], "adher": [25, 1955, 2015], "some_fil": 25, "machine_nam": 25, "share_folder_nam": 25, "tcpstore": [25, 42], "past": [25, 58, 1009, 1056, 1060, 1074, 1075, 1674, 1985, 2037, 2039, 2042], "ask": [25, 53, 54, 1950, 1951, 1984, 1987, 2026, 2047], "infiniband": [25, 1674, 2011], "interconnect": 25, "gpudirect": 25, "ethernet": 25, "ip": [25, 42], "ib": 25, "upcom": [25, 1977], "nccl_socket_ifnam": 25, "eth0": 25, "gloo_socket_ifnam": 25, "comma": [25, 1097, 1955, 1961], "eth1": 25, "eth2": 25, "eth3": 25, "imper": 25, "nccl_debug": 25, "info": [25, 33, 36, 40, 675, 887, 900, 901, 1000, 1001, 1003, 1171, 1280, 1291, 1293, 1294, 1298, 1311, 1339, 1364, 1365, 1735, 1951, 1953, 1961, 1982, 1983, 1984, 2000, 2003, 2032, 2033, 2034, 2045], "nccl_debug_subsi": 25, "coll": 25, "hang": [25, 26, 29, 31, 1674, 1982], "topologi": [25, 27, 30, 33], "effort": [25, 46, 2011, 2039], "socket": [25, 1968, 2011], "nccl_socket_nthread": 25, "nccl_nsocks_perthread": 25, "cloud": [25, 2015, 2020], "aw": [25, 34, 987], "gcp": [25, 2042], "primit": [25, 29, 42, 46, 1321, 1952, 1954, 1956, 1980, 1991, 2000, 2011, 2040], "kind": [25, 36, 46, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 675, 1269, 1675, 1736, 1783, 1847, 1950, 1959, 1983, 1992, 1994, 1998, 2000, 2003, 2006, 2016, 2018, 2038], "connect": [25, 33, 42, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468, 1515, 1968, 2011, 2043], "advantag": [25, 42, 43, 1400, 1447, 1982, 1985, 1997, 1998, 2011, 2015, 2030], "redund": [25, 49, 1113, 1114, 1116, 1118, 1132, 1134, 1881], "averag": [25, 29, 730, 761, 762, 763, 764, 816, 817, 927, 929, 987, 1060, 1074, 1249, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1420, 1422, 1430, 1440, 1446, 1452, 1453, 1454, 1455, 1456, 1460, 1461, 1462, 1478, 1479, 1487, 1490, 1491, 1492, 1493, 1494, 1501, 1518, 1519, 1526, 1535, 1551, 1552, 1553, 1559, 1560, 1561, 1564, 1565, 1575, 1589, 1604, 1613, 1614, 1615, 1628, 1636, 1674, 1738, 1739, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1907, 1951, 1982, 2005], "elimin": [25, 46, 58, 605, 1167, 1918, 1919, 1994, 2037, 2044], "thrash": 25, "recurr": [25, 755, 756, 1265, 1406, 1423, 1438, 1439, 1457, 1502, 1692, 1718, 1752, 1951, 1981], "device_mesh": [25, 30, 49, 1674], "init_device_mesh": [25, 30], "use_distribut": 25, "group_nam": [25, 39], "pg_option": 25, "url": [25, 42, 926, 1950, 1965, 2011], "discov": [25, 967, 2011], "encod": [25, 33, 39, 42, 49, 58, 1297, 1321, 1364, 1365, 1399, 1400, 1530, 1531, 1532, 1533, 1534, 1674, 1828, 1867, 1868, 1869, 1871, 1872, 1952, 1955, 1956, 1983, 1995, 2003, 2012, 2015], "ucc": 25, "lowercas": 25, "deadlock": [25, 1674], "job": [25, 33, 35, 36, 38, 39, 41, 42, 43, 44, 1674, 1760, 1766, 1981, 1989, 2005, 2020, 2047], "exchang": [25, 42, 1001, 1085, 1981, 1997], "timedelta": [25, 42, 1966], "abort": [25, 1981], "crash": [25, 35, 42, 1286, 1968, 1978, 2011, 2013, 2020, 2033], "corrupt": [25, 42, 1423, 1981, 1992], "torch_nccl_blocking_wait": 25, "processgroupopt": 25, "processgroupnccl": [25, 1982], "is_high_priority_stream": 25, "ncclcomminit": 25, "lazi": [25, 980, 1262, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1665, 1951, 2033], "ncclcommsplit": 25, "unnecessari": [25, 29, 1681, 1682, 1722, 1955, 1978, 1981, 1983, 1995, 2003, 2019], "backend_nam": [25, 1925], "custom_backend": 25, "mesh_shap": 25, "mesh_dim_nam": 25, "dimension": [25, 31, 47, 508, 510, 875, 881, 882, 883, 946, 953, 965, 1085, 1087, 1088, 1097, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1134, 1136, 1138, 1139, 1151, 1203, 1212, 1213, 1214, 1282, 1287, 1288, 1289, 1290, 1315, 1320, 1336, 1344, 1351, 1391, 1408, 1409, 1410, 1411, 1412, 1413, 1422, 1423, 1429, 1430, 1459, 1477, 1494, 1508, 1509, 1510, 1511, 1512, 1513, 1520, 1522, 1526, 1542, 1543, 1544, 1575, 1628, 1631, 1663, 1664, 1688, 1728, 1791, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1897, 1900, 1901, 1907, 1955, 1971, 1976, 1979, 1987, 1993, 2015, 2017, 2018, 2021, 2023, 2033], "layout": [25, 30, 47, 58, 146, 187, 204, 229, 338, 339, 430, 440, 441, 442, 443, 444, 453, 539, 576, 577, 578, 579, 580, 582, 583, 612, 684, 860, 888, 893, 936, 945, 1013, 1098, 1099, 1100, 1110, 1115, 1133, 1149, 1152, 1153, 1207, 1208, 1269, 1320, 1336, 1344, 1354, 1383, 1609, 1733, 1734, 1755, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1906, 1911, 1913, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1957, 1971, 1981, 2001, 2003, 2015, 2020, 2021, 2022, 2035, 2040], "spmd": [25, 27], "nd": [25, 1305, 1986, 1993], "inconsist": [25, 49, 860, 1800, 1983], "scene": [25, 1995, 2020], "mesh": [25, 30, 2020], "mesh_1d": 25, "mesh_2d": 25, "dp": 25, "is_initi": [25, 1951], "is_mpi_avail": 25, "is_nccl_avail": 25, "is_gloo_avail": 25, "is_torchelastic_launch": 25, "elast": [25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 1951], "torchelast": [25, 28, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45], "torchelastic_run_id": [25, 43], "proxi": [25, 27, 2006, 2011, 2038], "rendezv": [25, 28, 33, 39, 41, 45, 1982, 2011], "null": [25, 34, 36, 39, 60, 64], "discoveri": [25, 42, 1981, 2003], "reachabl": 25, "multicast": 25, "20": [25, 29, 31, 317, 680, 715, 723, 724, 729, 733, 734, 735, 736, 737, 738, 741, 751, 755, 756, 757, 758, 759, 760, 767, 1203, 1247, 1250, 1261, 1272, 1306, 1372, 1395, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1406, 1413, 1414, 1415, 1416, 1418, 1419, 1424, 1425, 1426, 1427, 1431, 1434, 1435, 1438, 1439, 1441, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1474, 1480, 1481, 1482, 1484, 1485, 1487, 1502, 1504, 1515, 1523, 1526, 1529, 1530, 1531, 1532, 1544, 1567, 1569, 1570, 1572, 1576, 1587, 1588, 1594, 1651, 1688, 1689, 1690, 1714, 1723, 1726, 1744, 1759, 1787, 1897, 1952, 1953, 1963, 1971, 1982, 1983, 1993, 1998, 2002, 2011, 2015, 2032, 2034, 2038], "23456": 25, "clean": [25, 33, 46, 58, 975, 1036, 1950, 1968, 2003], "fcntl": 25, "nf": 25, "init": [25, 33, 35, 49, 1249, 1487, 1495, 1514, 1722, 1951, 1957, 1978, 1983, 1989, 1990, 2033], "brand": [25, 27, 1983], "succe": [25, 42, 46, 54, 1981, 1983, 1996, 2045, 2047], "unexpect": [25, 27, 32, 58, 997, 1148, 1151, 1154, 1249, 1487, 1724, 1737, 1876, 1952, 1978, 1983, 1993, 2034, 2035, 2038], "unsuccess": 25, "mnt": 25, "sharedfil": 25, "port": [25, 33, 41, 42, 43, 1963, 1988], "enum": [25, 60, 791, 1545, 1546, 1547, 1983, 2000, 2005, 2006, 2011, 2038], "backend_str": 25, "uppercas": 25, "classmethod": [25, 42, 60, 62, 727, 733, 734, 735, 740, 741, 751, 759, 787, 788, 789, 810, 811, 812, 819, 849, 923, 1000, 1429, 1430, 1526, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1735, 1955, 1956, 1983, 2006, 2011, 2017, 2046], "register_backend": [25, 2011, 2031], "extended_api": 25, "instanti": [25, 29, 41, 42, 43, 49, 58, 836, 1430, 1584, 1691, 1715, 1722, 1950, 1952, 1954, 1955, 1981, 1983, 1990, 1998, 2017], "3rd": [25, 31, 42, 612, 1768, 1979], "processgroup": [25, 27, 29, 49, 1674], "four": [25, 1295, 1415, 1983, 1987, 2011, 2013], "c10d": [25, 33, 41, 43, 45, 675, 1674, 1982, 2001], "distributedbackendopt": 25, "get_backend": [25, 42], "get_rank": [25, 49, 1526], "consecut": [25, 49, 605, 1717, 1756, 1907, 1918, 1919, 1970, 2000], "get_world_s": 25, "filestor": [25, 42], "hashstor": 25, "client": [25, 29, 42, 1054, 1170, 1174, 2003, 2035], "host_nam": 25, "hostnam": [25, 33, 42, 2005], "listen": 25, "is_mast": 25, "300": [25, 33, 1327, 1400, 1719, 1721, 2002], "wait_for_work": 25, "multi_ten": 25, "underli": [25, 27, 29, 31, 33, 46, 49, 54, 58, 93, 307, 322, 373, 396, 398, 468, 469, 470, 471, 478, 494, 515, 519, 552, 553, 554, 608, 743, 752, 873, 1000, 1149, 1171, 1184, 1185, 1186, 1220, 1224, 1249, 1321, 1382, 1636, 1802, 1906, 1921, 1952, 1955, 1971, 1981, 1985, 1988, 2004, 2011, 2017, 2019, 2026, 2034, 2038], "tcpserver": 25, "master_listen_fd": 25, "datetim": [25, 1966, 2035], "server_stor": 25, "127": [25, 789, 1970, 2006, 2020], "1234": [25, 42, 1226, 1920], "client_stor": 25, "first_kei": 25, "first_valu": 25, "hashmap": 25, "file_nam": [25, 1950, 1965, 2003], "store1": 25, "store2": 25, "prefixstor": 25, "old": [25, 32, 46, 58, 481, 849, 1148, 1426, 1726, 1734, 1768, 1816, 1949, 1951, 1952, 1978, 1981, 1983, 1996, 2006, 2020, 2034, 2038], "throw": [25, 26, 57, 58, 186, 319, 324, 540, 609, 1234, 1249, 1290, 1339, 1487, 1674, 1676, 1677, 1718, 1729, 1780, 1922, 1971, 1978, 1994, 2011, 2021, 2035, 2045], "whose": [25, 31, 49, 58, 539, 854, 893, 957, 982, 1085, 1097, 1102, 1151, 1193, 1203, 1206, 1212, 1249, 1255, 1266, 1274, 1320, 1336, 1338, 1384, 1487, 1674, 1730, 1778, 1835, 1903, 1955, 1978, 1983, 1986, 1987, 2003, 2015, 2020, 2022, 2033, 2045], "quantiti": [25, 50, 55, 1178, 1181, 1285, 1286, 1313, 1452, 1699, 1700, 1702, 1703, 1705, 1708, 1709, 1710, 1711, 1768, 1984, 1987], "compare_set": 25, "arg2": [25, 47, 60, 65, 66], "expected_valu": 25, "desired_valu": 25, "second_valu": 25, "overload": [25, 46, 58, 612, 1954, 1955, 1959, 1998], "bad_kei": 25, "num_kei": 25, "written": [25, 27, 33, 35, 54, 926, 1056, 1149, 1423, 1754, 1952, 1954, 1962, 1964, 1978, 1982, 1983, 1984, 1990, 1995, 1998, 2000, 2003, 2005, 2017, 2020, 2026, 2032, 2033, 2037, 2039, 2044, 2045], "destruct": [25, 1966, 2011, 2013], "delete_kei": 25, "successfulli": [25, 33, 39, 1256, 1829, 1968, 1990, 1995, 2011, 2045], "set_timeout": 25, "grain": [25, 46, 853, 856, 1643, 1978, 2000, 2015, 2026, 2037, 2045], "plai": [25, 2032, 2035], "new_group": [25, 49, 1526], "opaqu": [25, 32, 998, 1032, 1033, 1148, 2041], "pattern": [25, 27, 787, 788, 789, 791, 849, 856, 1040, 1181, 1423, 1546, 1718, 1863, 1952, 1955, 1978, 1981, 1983, 1985, 1988, 1995, 2007, 2008, 2015, 2030, 2033, 2034, 2044, 2047], "use_local_synchron": 25, "enqueu": [25, 57, 1001, 1003, 1004, 1981, 2012], "significantli": [25, 46, 49, 904, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1828, 2015, 2031], "taken": [25, 31, 46, 57, 58, 60, 65, 860, 1118, 1120, 1143, 1144, 1406, 1422, 1430, 1494, 1576, 1584, 1832, 1865, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1989, 1995, 2000, 2003, 2005, 2045, 2047], "get_group_rank": 25, "global_rank": [25, 33], "translat": [25, 1203, 1978, 1997, 1998, 2013, 2038], "get_global_rank": 25, "group_rank": [25, 33, 43], "get_process_group_rank": 25, "inter": [25, 33, 35, 49, 1200, 1830, 1980, 1982, 2004, 2011], "intra": [25, 29, 49, 1980, 1982, 2004], "ndarrai": [25, 32, 453, 874, 1148, 1150, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 2000, 2020, 2022, 2035], "dst": [25, 1950, 2003], "destin": [25, 27, 36, 39, 49, 205, 411, 412, 598, 1012, 1013, 1191, 1249, 1356, 1357, 1487, 1953, 1998, 2011, 2012, 2017], "unspecifi": [25, 476, 815, 816, 817, 820, 914, 915, 1171, 1520, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1864, 1870, 1962, 2015, 2020, 2027], "sender": [25, 2013], "isend": 25, "irecv": 25, "is_complet": 25, "finish": [25, 27, 33, 39, 40, 42, 44, 57, 481, 1155, 1981, 1982, 1996, 2005, 2011, 2013, 2047], "batch_isend_irecv": 25, "p2p_op_list": 25, "p2pop": 25, "op_list": 25, "send_tensor": 25, "recv_tensor": 25, "send_op": 25, "recv_op": 25, "req": 25, "pg": [25, 1674], "set_devic": [25, 27, 49, 1674, 1824, 1951, 2011, 2018], "p2p": [25, 42], "async_op": 25, "onto": [25, 49, 58, 60, 62, 1059, 1257, 1260, 1321, 1694, 1923, 1950, 1963, 1968, 1981, 1984, 1985, 1990, 2005, 2038, 2044, 2047], "get_futur": [25, 1674], "regard": [25, 1417, 1418, 1419, 1429, 1430, 1583, 1584, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1952, 2013, 2015, 2039], "101": [25, 923, 1391], "overwrot": 25, "sent": [25, 27, 1036, 1955, 1968, 1992, 2011, 2012, 2013], "broadcast_object_list": 25, "object_list": 25, "picklabl": [25, 1249, 1487, 2003], "current_devic": [25, 27, 49, 1009, 1017, 1018, 1025, 1026, 1042, 1046, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1073, 1074, 1075, 1925, 1943, 1944, 1951, 2018, 2032], "insecur": [25, 1321], "malici": [25, 1321, 2003], "ineffici": [25, 49, 1981, 2006], "redoptyp": 25, "bitwis": [25, 939, 941, 942, 944, 1956, 1993, 2007, 2023], "reduceop": 25, "int64": [25, 80, 187, 204, 309, 317, 389, 860, 938, 951, 1098, 1111, 1112, 1150, 1575, 1715, 1795, 1799, 1800, 1820, 1867, 1868, 1869, 1871, 1872, 1959, 1981, 2015, 2017, 2018, 2021, 2048], "1j": [25, 693, 980, 981, 1245, 1808, 1809, 1931, 1978, 1987, 1995], "2j": [25, 693, 980, 981, 1808, 1809, 1835, 1931, 1978], "tensor_list": [25, 1971], "all_gather_into_tensor": [25, 2001], "output_tensor": 25, "input_tensor": [25, 2037], "accommod": [25, 1483, 1484, 1485], "ii": [25, 983, 1097, 1457, 1458], "tensor_in": 25, "tensor_out": 25, "tensor_out2": 25, "all_gather_object": 25, "obj": [25, 58, 875, 1021, 1235, 1236, 1255, 1256, 1261, 1816, 1926, 1942, 1953, 1995, 1996, 2003], "pickabl": 25, "popul": [25, 31, 40, 49, 57, 58, 331, 490, 498, 499, 1350, 1379, 1981, 1983, 2034, 2044], "unmodifi": [25, 2032], "responsibl": 25, "gather_object": 25, "gather_list": 25, "object_gather_list": 25, "scatter_list": 25, "tensor_s": 25, "t_one": 25, "t_five": 25, "scatter_object_list": 25, "scatter_object_output_list": 25, "scatter_object_input_list": 25, "output_list": 25, "input_list": 25, "reduce_scatter_tensor": [25, 2001], "all_to_all_singl": [25, 2001], "output_split_s": 25, "input_split_s": 25, "13": [25, 870, 930, 961, 1095, 1098, 1142, 1203, 1213, 1253, 1339, 1407, 1434, 1435, 1484, 1521, 1587, 1588, 1857, 1901, 1935, 1952, 1956, 2001, 2015, 2039, 2045], "14": [25, 60, 68, 69, 317, 512, 960, 1040, 1041, 1080, 1095, 1213, 1302, 1308, 1377, 1407, 1484, 1784, 1791, 1857, 1901, 1902, 1907, 1935, 1952, 1956, 1986, 2001, 2015, 2019, 2020, 2032], "15": [25, 58, 612, 1095, 1192, 1203, 1213, 1272, 1286, 1407, 1484, 1485, 1719, 1721, 1776, 1848, 1857, 1905, 1935, 1952, 1953, 1956, 2000, 2015, 2032], "uneven": [25, 26, 29, 30, 1674], "18": [25, 317, 440, 680, 1098, 1203, 1246, 1322, 1484, 1952, 1998, 2000, 2001, 2015, 2027, 2032], "21": [25, 31, 680, 930, 957, 1080, 1308, 1784, 1907, 1952, 2015], "22": [25, 31, 317, 612, 1322, 1665, 1719, 1721, 1952, 1994, 2015, 2032], "23": [25, 508, 1322, 1843, 1952, 2015, 2045], "31": [25, 943, 1398, 1456, 1482, 1665, 1843, 2000], "33": [25, 733, 734, 735, 736, 737, 738, 767, 1249, 1414, 1415, 1416, 1418, 1419, 1485, 1487, 1567, 1569, 1570, 1572, 1952, 2000], "34": [25, 1920, 2032, 2038, 2045], "35": [25, 1308, 1402, 1403, 1450, 1451, 1526, 1784], "36": [25, 317, 1140, 1203, 2032, 2038], "input_split": 25, "output_split": 25, "5j": 25, "6j": 25, "7j": 25, "8j": 25, "9j": 25, "10j": 25, "11j": 25, "12j": 25, "13j": 25, "14j": 25, "15j": 25, "16j": 25, "output_tensor_list": 25, "input_tensor_list": 25, "monitored_barri": [25, 2001], "wait_all_rank": 25, "pend": [25, 972, 1981, 2011, 2020, 2030], "band": 25, "bor": 25, "bxor": 25, "premul_sum": 25, "suppos": [25, 58, 1246, 1769, 1962, 1986, 2015, 2034, 2035, 2036], "_make_nccl_premul_sum": 25, "__members__": 25, "reduce_op": 25, "mention": [25, 46, 1168, 1950, 1954, 1955, 1970, 1978, 1981, 1990, 2000, 2015, 2019, 2026, 2038, 2039, 2045], "stand": [25, 1161, 1165, 1954, 2003, 2013], "exemplifi": 25, "cpp_extens": [25, 1951, 1983], "cpp_c10d_extens": 25, "torchrun": [25, 28, 34, 41, 45], "benefici": [25, 1681, 1682, 1990], "nproc_per_nod": [25, 34], "num_gpus_you_hav": 25, "your_training_script": [25, 41, 43], "arg3": [25, 47], "192": [25, 612, 2000], "168": 25, "nnode": [25, 41, 43], "offer": [25, 49, 52, 1674, 1922, 1981, 1988, 2003, 2011, 2015, 2031, 2035, 2040], "local_process_rank": 25, "local_rank": [25, 33, 35, 40, 43, 45, 1526], "argpars": [25, 43, 1981], "parser": [25, 43, 1981], "argumentpars": [25, 43, 1981], "add_argu": [25, 43, 1981], "parse_arg": [25, 34, 43, 45, 1981, 2000], "output_devic": [25, 29, 43, 1423, 1526, 1658, 1674], "adjust": [25, 27, 29, 30, 31, 49, 1400, 1951, 1980, 2007, 2027, 2047], "launcher": [25, 43], "filesystem": [25, 27, 1950, 2003], "12042": 25, "wrong": [25, 58, 80, 895, 896, 900, 972, 1247, 1250, 1982, 1992, 1996, 2000, 2002, 2030, 2032], "imagenet": [25, 1976], "suit": [25, 1952, 1954, 1955, 2000, 2007, 2011, 2042], "pdb": [25, 1254, 1261, 1267, 1952, 1954], "streamlin": [25, 47, 77], "attach": [25, 47, 52, 57, 58, 135, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 788, 833, 835, 859, 1665, 1950, 1952, 1954, 1969, 1978, 1983, 2006, 2012, 2024, 2033], "rerout": 25, "termin": [25, 33, 42, 44, 47, 58, 1744, 1968, 2011, 2037], "sync": [25, 29, 49, 57, 58, 481, 1674, 1981, 1982, 2004, 2030, 2034], "group_gloo": 25, "29501": 25, "monitoredbarri": 25, "transport": [25, 2011], "598": 25, "2401": 25, "db00": 25, "eef0": 25, "1100": 25, "3560": 25, "1c05": 25, "25d": 25, "8594": 25, "torch_cpp_log_level": 25, "twolinlayernet": 25, "ddp": [25, 26, 27, 29, 49, 675, 1526, 1674, 1951, 1981, 1982, 2011, 2035], "i0607": 25, "739390": 25, "515217": 25, "logger": [25, 2024, 2025], "173": 25, "broadcast_buff": [25, 1674], "bucket_cap_byt": 25, "26214400": 25, "find_unused_paramet": [25, 1674, 1982], "gradient_as_bucket_view": [25, 1674], "is_multi_device_modul": 25, "num_parameter_tensor": 25, "total_parameter_size_byt": 25, "440": 25, "bucket_s": 25, "cuda_visible_devic": [25, 1066, 1674, 1981], "module_nam": [25, 58, 812, 849, 2003], "nccl_async_error_handl": [25, 1981], "nccl_blocking_wait": 25, "nccl_ib_timeout": 25, "nccl_nthread": 25, "58": [25, 2039], "085681": 25, "544067": 25, "344": 25, "unused_parameter_s": 25, "40838608": 25, "5983335": 25, "4326421": 25, "comp": [25, 31], "4207652": 25, "085693": 25, "544066": 25, "42850427": 25, "3885553": 25, "2357981": 25, "2234674": 25, "enhanc": [25, 49, 2033], "unus": [25, 29, 58, 909, 1036, 1050, 1254, 1261, 1448, 1674, 1737, 1952, 1954, 1955, 1981, 1982, 1988, 2003], "went": [25, 58], "wasn": [25, 42, 1321, 1952], "va": 25, "lue": 25, "indirectli": 25, "outstand": [25, 2011], "stuck": [25, 33, 44], "uninform": 25, "root": [25, 27, 35, 42, 43, 46, 49, 58, 788, 1163, 1287, 1288, 1752, 1815, 1874, 1964, 1978, 1986, 2003, 2011, 2012, 2015, 2035], "nontrivi": [25, 1171, 1179, 1981, 2033], "reveal": [25, 1982], "default_pg": 25, "opt": [25, 29, 1261, 1756, 1757, 1763, 1767, 1769, 1952, 1987], "longtensor": [25, 130, 131, 132, 311, 313, 315, 447, 466, 508, 510, 512, 869, 870, 1191, 1224, 1271, 1373, 1429, 1430, 1490, 1583, 1584, 1630, 1728, 1820, 1857, 1870, 1896, 1904, 1937, 2018, 2021], "set_debug_level": 25, "set_debug_level_from_env": 25, "get_debug_level": 25, "torch_show_cpp_stacktrac": 25, "disterror": 25, "distbackenderror": 25, "thrown": [25, 57, 612, 873, 875, 1054, 1095, 1213, 1249, 1280, 1289, 1291, 1293, 1296, 1297, 1308, 1487, 1679, 1935, 1998, 2003, 2038], "distnetworkerror": 25, "ex": [25, 34, 1171, 1674, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1966, 2044], "diststoreerror": 25, "outlin": [26, 2004, 2012, 2035], "joinabl": [26, 29, 1674, 1951], "joinhook": [26, 1951], "throw_on_early_termin": [26, 1674], "shadow": [26, 29, 1674, 2024, 2025], "notify_join_context": 26, "zeroredundancyoptim": [26, 29, 1674, 1951], "yet": [26, 33, 46, 47, 49, 54, 57, 58, 67, 76, 78, 79, 481, 1000, 1071, 1179, 1252, 1254, 1267, 1355, 1674, 1696, 1700, 1702, 1741, 1742, 1951, 1954, 1955, 1961, 1970, 1971, 1981, 2000, 2001, 2006, 2011, 2013, 2015, 2016, 2018, 2030, 2034, 2035, 2038, 2041, 2045], "vacuou": 26, "inherit": [26, 1707, 1952, 1954, 1971, 1983, 1990, 1992], "join_hook": [26, 29, 1674], "join_devic": [26, 29], "join_process_group": [26, 29], "repeatedli": [26, 1981, 2015], "main_hook": 26, "post_hook": 26, "is_last_join": 26, "dcp": 27, "reshard": [27, 49], "storag": [27, 49, 217, 307, 335, 338, 339, 430, 453, 478, 494, 515, 519, 553, 554, 579, 580, 582, 583, 873, 893, 895, 896, 900, 1021, 1088, 1149, 1220, 1224, 1235, 1249, 1257, 1321, 1343, 1382, 1383, 1423, 1487, 1503, 1802, 1816, 1823, 1853, 1858, 1862, 1876, 1900, 1906, 1923, 1942, 1950, 1951, 1953, 1959, 1965, 1968, 1978, 1981, 1992, 1995, 2003, 2011, 2015, 2018, 2019, 2021, 2034], "entrypoint": [27, 30, 33, 35, 40, 43, 46, 1959, 1968], "checkpoint_id": 27, "storage_read": 27, "planner": 27, "coordinator_rank": 27, "no_dist": 27, "style": [27, 30, 32, 58, 872, 1092, 1148, 1728, 1751, 1952, 1954, 1955, 2000, 2003, 2020, 2036], "fullfil": 27, "shardedtensor": [27, 49], "dtensor": [27, 30, 49], "po": [27, 2000], "pathlik": [27, 46, 58, 1321, 1816, 2003], "storageread": [27, 1951], "storagewrit": [27, 1951], "reader": 27, "loadplann": [27, 1951], "rank0": [27, 49], "my_model": [27, 1674, 1952, 2030, 2035, 2045], "mymodul": [27, 46, 47, 49, 58, 1253, 1254, 1256, 1260, 1261, 1267, 1488, 1489, 1497, 1498, 1952, 1954, 1955, 1985, 1995, 2011], "adagrad": [27, 1429, 1962, 2002, 2011], "model_state_dict": [27, 1998], "fs_storage_read": 27, "filesystemread": [27, 1951], "storage_writ": 27, "save_state_dict": [27, 1951], "fsdp": [27, 49, 481, 675, 1951, 2035], "shardingstrategi": [27, 49, 1951], "hybrid_shard": [27, 49], "shard_group": 27, "writer": [27, 1966, 1990, 2020], "saveplann": [27, 1951], "fs_storage_writ": 27, "filesystemwrit": [27, 1951], "automodul": 27, "act": [27, 31, 33, 40, 54, 853, 1400, 1488, 1489, 1498, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1922, 1981, 1990, 1994, 2002, 2038], "told": [27, 1954], "role": [27, 33, 34, 42, 43, 2038], "read_metadata": 27, "set_up_storage_read": 27, "prepare_local_plan": 27, "prepare_global_plan": 27, "read_data": 27, "central": [27, 60, 1203, 1987, 1989], "loadplan": [27, 1951], "storage_data": 27, "load_byt": 27, "bytesio": [27, 46, 1257, 1260, 1321, 1816, 2000, 2006], "resolve_tensor": 27, "storagelay": 27, "schedul": [27, 33, 35, 41, 57, 675, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1961, 1982, 1986, 1989, 2005, 2035], "checkpiont_id": 27, "is_coordin": 27, "set_up_storage_writ": 27, "write_data": 27, "mark": [27, 42, 46, 57, 58, 60, 65, 69, 481, 821, 895, 896, 897, 900, 923, 970, 972, 1168, 1364, 1365, 1674, 1736, 1952, 1954, 1978, 1982, 1983, 1990, 1995, 2003, 2005, 2012, 2021, 2026, 2030, 2035, 2036], "recover": 27, "writeresult": 27, "saveplan": [27, 1951], "resolve_data": 27, "assumpt": [27, 39, 43, 46, 914, 970, 1406, 1440, 1978, 1982, 1987, 2011, 2012, 2015, 2033, 2035, 2041, 2045], "writeitem": [27, 1951], "tensor_data": 27, "set_up_plann": 27, "create_local_plan": 27, "create_global_plan": 27, "commit_tensor": 27, "defaultloadplann": [27, 1951], "rewrit": [27, 46, 54, 60, 62, 68, 69, 78, 79, 1964, 1978, 1987, 1997, 1998, 2000, 2032], "requit": 27, "intrincaci": 27, "renameplann": 27, "original_state_dict": 27, "foo_": [27, 1155], "v": [27, 39, 46, 53, 58, 482, 483, 539, 893, 904, 906, 907, 908, 934, 951, 1154, 1164, 1166, 1246, 1263, 1285, 1289, 1313, 1317, 1322, 1493, 1535, 1536, 1546, 1583, 1629, 1690, 1721, 1726, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1774, 1807, 1866, 1870, 1885, 1886, 1934, 1952, 1953, 1954, 1955, 1966, 1978, 1987, 1996, 2003, 2015, 2020, 2029], "flatten_sharded_tensor": 27, "_flatten_sharded_tensor": 27, "flatten_state_dict": 27, "read_item": 27, "dest_index": 27, "fqn": [27, 30, 46, 2025], "metamodelmateri": 27, "defaultsaveplann": [27, 1951], "global_plan": 27, "finish_plan": 27, "central_plan": 27, "alia": [27, 31, 36, 87, 88, 107, 183, 184, 349, 402, 431, 432, 439, 518, 536, 677, 861, 862, 863, 864, 865, 866, 867, 889, 932, 963, 977, 978, 1083, 1090, 1093, 1104, 1105, 1106, 1108, 1109, 1135, 1195, 1204, 1205, 1217, 1218, 1219, 1227, 1247, 1249, 1276, 1277, 1284, 1300, 1304, 1307, 1335, 1345, 1346, 1356, 1374, 1376, 1386, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1487, 1603, 1677, 1715, 1731, 1771, 1776, 1779, 1814, 1836, 1851, 1854, 1856, 1883, 1887, 1888, 1908, 1914, 1938, 1955, 1983, 2001, 2016, 2017, 2021, 2034, 2040], "readitem": [27, 1951], "planner_data": 27, "loaditemtyp": 27, "metadataindex": 27, "dest_offset": 27, "storage_index": 27, "storage_offset": [27, 134, 515, 612, 873, 1953, 1959, 2001, 2035, 2040], "tandem": 27, "fp16planner": 27, "write_item": 27, "writeitemtyp": 27, "byte_io": 27, "itertool": [27, 31, 953, 966], "islic": 27, "dataclass": [27, 46, 47, 2038, 2044], "ddploadbalancingplann": 27, "all_plan": 27, "saveextradataplann": 27, "merged_data": 27, "new_plan": 27, "prepar": [27, 30, 49, 58, 792, 834, 836, 852, 854, 856, 857, 858, 1164, 1259, 1956, 2000, 2024, 2025], "idempot": [27, 2011, 2013], "safeti": [27, 33, 46, 58, 481, 969, 970, 1178, 1952, 1955, 1970, 1994, 2036], "hi": [27, 1457, 1458, 1952, 1954, 1987], "peak": [27, 29, 49, 1046, 1048, 1054, 1061, 1062, 1063, 1674, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1760, 1766, 1986, 2004, 2042], "late": [27, 42, 481], "tensor_storage_s": 27, "single_file_per_rank": 27, "sync_fil": 27, "thread_count": 27, "per_thread_copy_ahead": 27, "10000000": 27, "simplif": [27, 2033], "atom": [27, 42, 58, 1956], "distributedtensor": [27, 30], "dedup_replicated_tensor": 27, "lookup_object": 27, "transform_object": 27, "lookup_tensor": 27, "transform_tensor": 27, "get_state_dict": [27, 1951], "fully_shard": 27, "tensor_parallel": 27, "parallelize_modul": [27, 30, 1951], "hide": [27, 55, 1166, 1934, 1984], "saniti": [27, 1984], "canon": [27, 33, 35, 1177, 1952, 2031, 2034], "named_paramet": [27, 46, 49, 51, 53, 1154, 1249, 1253, 1487, 1990, 1995, 2002], "named_buff": [27, 46, 49, 1249, 1487, 1990, 1995], "fullyshardeddataparallel": [27, 675, 1951, 1986], "fsdp_model": [27, 49], "deepcopi": [27, 53, 2006, 2025], "fsdp_optim": 27, "ddp_optim": 27, "ddp_state_dict": 27, "ddp_optim_state_dict": 27, "fsdp_state_dict": 27, "fsdp_optim_state_dict": 27, "ddp_optim_st": 27, "statedictopt": [27, 1951], "valuetyp": 27, "get_model_state_dict": [27, 1951], "get_optimizer_state_dict": [27, 1951], "set_state_dict": [27, 1951], "optim_state_dict": [27, 49], "counterpart": [27, 852, 859, 1319, 1674, 1955, 1964, 2023, 2024, 2033, 2035], "optimizerstatetyp": 27, "missing_kei": [27, 1249, 1487], "miss": [27, 40, 684, 1154, 1172, 1249, 1344, 1354, 1420, 1449, 1450, 1451, 1487, 1609, 1724, 1963, 1983, 1996, 2000, 2015, 2033, 2036, 2038], "unexpected_kei": [27, 1249, 1487], "set_model_state_dict": [27, 1951], "set_optimizer_state_dict": [27, 1951], "full_state_dict": [27, 49], "cpu_offload": [27, 49], "ignore_frozen_param": 27, "keep_submodule_prefix": 27, "offload": [27, 49], "oom": [27, 49, 1985, 2047], "frozen": [27, 29, 49, 1171, 1253, 1259, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1956, 1996], "layer1": [27, 2004], "fault": [28, 33, 41, 42, 1151], "toler": [28, 33, 41, 42, 58, 689, 914, 915, 1238, 1265, 1266, 1304, 1307, 1322, 1737, 1744, 1952, 2022], "quickstart": 28, "agent": [28, 34, 35, 36, 39, 41, 43, 44, 2011], "expir": 28, "metric": [28, 1046, 1048, 1054, 1768, 1966, 1990, 2005, 2020, 2035, 2042], "kubernet": 28, "distributedoptim": [29, 1674, 1951, 2011, 2012], "rref": [29, 1674, 1951, 1955, 2004, 2012], "optimizer_class": 29, "params_rref": 29, "get_gradi": [29, 2001, 2011, 2012], "multithread": [29, 912, 1981], "dist_autograd": [29, 1674, 2011, 2012], "rpc": [29, 57, 1674, 1951, 1955, 2004, 2012, 2013], "context_id": [29, 1674, 2011, 2012], "rref1": [29, 2011, 2012], "worker1": [29, 57, 1674, 2011, 2012], "rref2": [29, 2011, 2012], "to_her": [29, 1674, 2001, 2011, 2012, 2013], "dist_optim": [29, 1674, 2012], "postlocalsgdoptim": [29, 1951], "afer": 29, "modelaverag": 29, "localsgd": 29, "model_averag": 29, "post_localsgd_hook": 29, "postlocalsgdst": 29, "subgroup": 29, "start_localsgd_it": 29, "warmup_step": 29, "local_optim": 29, "periodicmodelaverag": 29, "checkpoint": [29, 43, 45, 49, 926, 1321, 1674, 1950, 1951, 1965, 1985, 1986, 1995, 1998, 2004, 2013, 2030], "parameters_as_bucket_view": 29, "overlap_with_ddp": 29, "consumpt": [29, 53, 1727, 2015, 2020, 2026], "partit": [29, 30, 1391, 1643, 1907, 2000, 2001, 2004, 2012, 2013, 2035, 2044], "registr": [29, 57, 1040, 1667, 1672, 1673, 1674, 1691, 1694, 1959, 1998, 2003, 2031], "offset": [29, 33, 221, 222, 223, 224, 335, 515, 553, 741, 873, 1085, 1086, 1087, 1088, 1151, 1284, 1430, 1548, 1549, 1584, 1674, 1786, 1787, 1865, 1911, 1913, 1953, 1955, 1995, 2032, 2038, 2040], "intact": [29, 2011], "ddp_zero_hook": 29, "disjointli": 29, "trail": [29, 1717, 1719, 1971, 1976, 1979, 1983], "wari": 29, "static_graph": [29, 1674], "third": [29, 31, 1096, 1097, 1339, 1391, 1398, 1416, 1419, 1456, 1482, 1766, 1951, 1952, 1981, 1984, 1990, 2003, 2005], "add_param_group": [29, 1694, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "param_group": [29, 49, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1751, 1752, 1753, 1754, 1755, 1762, 1765], "trainabl": [29, 1043, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1983], "consolidate_state_dict": 29, "consolid": [29, 49, 2004], "pertain": 29, "preced": [29, 33, 49, 675, 1669, 1766, 1906, 1956, 1980, 2002, 2006], "colwis": 30, "rowwis": 30, "parallelize_plan": 30, "tp_mesh_dim": 30, "sub_modul": 30, "parallelstyl": 30, "devicemesh": [30, 1951], "slice": [30, 58, 60, 69, 71, 602, 690, 691, 1401, 1402, 1403, 1520, 1522, 1526, 1649, 1650, 1725, 1805, 1822, 1823, 1853, 1864, 1916, 1952, 1956, 1971, 1981, 2000, 2001, 2015, 2016, 2019, 2021, 2035, 2040], "colwiseparallel": [30, 1951], "tp_mesh": 30, "w1": [30, 58], "w2": [30, 58], "rowwiseparallel": [30, 1951], "mlp": [30, 1665, 1998, 2006], "compos": [30, 31, 53, 58, 733, 734, 735, 736, 737, 738, 761, 762, 767, 768, 769, 777, 778, 958, 1156, 1158, 1159, 1160, 1166, 1249, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1435, 1454, 1455, 1456, 1475, 1480, 1481, 1482, 1487, 1535, 1540, 1541, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1789, 1790, 1934, 1951, 1952, 1955, 1969, 1983, 1984, 1990, 1998, 2000, 2003, 2020, 2038, 2040, 2041], "input_layout": 30, "output_layout": 30, "use_local_output": 30, "sharded_mod": 30, "mind": [30, 1295, 1313, 1429, 1978, 1984, 1987, 2006, 2027, 2035, 2038, 2043], "redistribut": [30, 1996], "preparemoduleinput": [30, 1951], "desired_input_layout": 30, "placehold": [30, 46, 58, 76, 794, 819, 829, 1171, 1448, 1981, 2031, 2032, 2044], "transformerblock": [30, 1986], "attn": [30, 1532, 1534], "preparemoduleoutput": [30, 1951], "desired_output_layout": 30, "parameteriz": 31, "tensorflow": [31, 1752, 1978, 2020], "backpropag": [31, 915, 1753, 1784, 1985, 2026], "surrog": 31, "likelihood": [31, 1391, 1440, 1494, 1501, 1589, 1628, 1636], "ratio": [31, 33, 612, 1434, 1435, 1587, 1588, 1953, 1981, 2015, 2042], "reinforc": [31, 1516, 1646], "polici": [31, 33, 35, 49, 1168, 1760, 1766], "reparameter": [31, 1154, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1713, 1714, 1726], "trick": [31, 906, 1400, 1594, 1978, 1987, 1989, 2035], "autoencod": 31, "whilst": [31, 1981], "densiti": [31, 254, 297, 1211, 1212, 1848, 1953, 2016], "log_prob": [31, 1391, 1406, 1576, 1953], "theta": [31, 1557, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1953], "alpha": [31, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 147, 148, 308, 309, 483, 549, 556, 557, 558, 559, 680, 681, 684, 685, 686, 739, 765, 770, 935, 1040, 1041, 1207, 1221, 1395, 1405, 1428, 1475, 1514, 1558, 1566, 1581, 1582, 1592, 1610, 1644, 1738, 1752, 1844, 1845, 1858, 1863, 1877, 1882, 1883, 1953, 1978, 1983, 2000, 2002, 2035, 2040], "partial": [31, 33, 42, 46, 49, 52, 58, 836, 1043, 1087, 1165, 1203, 1296, 1297, 1298, 1340, 1483, 1484, 1485, 1620, 1621, 1622, 1674, 1701, 1859, 1865, 1955, 1956, 1970, 1978, 1983, 1986, 1987, 1998, 2000, 2013, 2022, 2041], "pi": [31, 169, 373, 693, 945, 1207, 1208, 1301, 1436, 1501, 1590, 1636, 1758, 1759, 1778, 1839, 1840, 1843, 1844, 1845, 1846, 1881, 1954, 1955, 2003, 2016], "reward": 31, "ascent": 31, "prob": [31, 1953], "policy_network": 31, "next_stat": 31, "rsampl": 31, "parameter": [31, 373, 449, 1256, 1972, 2015], "has_rsampl": 31, "batch_shap": 31, "event_shap": 31, "validate_arg": 31, "arg_constraint": 31, "cdf": 31, "cumul": [31, 1076, 1077, 1078, 1079, 1080, 1329, 1401, 1402, 1403, 1436, 1460, 1461, 1462, 1526, 1590], "mass": 31, "enumerate_support": 31, "discret": [31, 48, 476, 481, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1132, 1134, 1594, 1848, 2020, 2023], "cardin": [31, 1351], "univari": 31, "singleton": [31, 250, 1459, 1921, 1979], "cartesian": [31, 953, 1351, 1778], "_instanc": 31, "icdf": 31, "perplex": 31, "sample_shap": 31, "sample_n": 31, "set_default_validate_arg": 31, "mimic": [31, 1766], "stddev": 31, "varianc": [31, 987, 1401, 1402, 1403, 1431, 1440, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1585, 1589, 1684, 1686, 1751, 1752, 1788, 1797, 1798, 1929, 1930, 1976, 1990], "exp_famili": 31, "famili": 31, "p_": [31, 957, 1341, 1754], "langl": 31, "rangl": 31, "denot": [31, 46, 58, 169, 987, 1178, 1270, 1289, 1295, 1308, 1318, 1414, 1415, 1452, 1691, 1694, 1754, 1867, 1868, 1869, 1871, 1872, 1931, 1963, 1987, 2009, 2012, 2015], "carrier": 31, "analyt": [31, 914, 915, 1583, 2015], "bregman": 31, "courtesi": 31, "frank": 31, "nielsen": 31, "richard": 31, "nock": 31, "logit": [31, 387, 1400, 1422, 1565, 1575, 1594, 1953, 2001, 2016], "70": [31, 930, 1308, 1784, 1971], "odd": [31, 1118, 1119, 1120, 1128, 1129, 1130, 1567, 1568, 1569], "interv": [31, 44, 254, 860, 933, 983, 1147, 1364, 1365, 1769, 1793, 1794, 1841, 1966, 1981, 1986, 2005], "lower_bound": 31, "upper_bound": 31, "has_enumerate_support": 31, "param_shap": 31, "concentration1": 31, "concentration0": 31, "concentr": 31, "1046": 31, "1st": [31, 1979, 1986], "2nd": [31, 612, 1495, 1521, 1631, 1979], "greaterthan": 31, "total_count": 31, "71": 31, "trial": [31, 282], "integergreaterthan": 31, "ldot": [31, 282, 1281, 1289, 1320, 1336, 1351, 1459, 1480, 1481, 1482, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "unnorm": [31, 1422, 1565, 1575, 1594], "likewis": [31, 1906], "25": [31, 491, 581, 582, 583, 930, 955, 1211, 1317, 1322, 1432, 1490, 1492, 1495, 1665, 1674, 1719, 1721, 1744, 1766, 1785, 1928, 1952, 2015, 2016], "independentconstraint": 31, "simplex": 31, "loc": [31, 1321], "lorentz": 31, "3214": 31, "width": [31, 774, 780, 853, 1210, 1211, 1212, 1397, 1398, 1415, 1416, 1418, 1419, 1455, 1456, 1481, 1482, 1494, 1521, 1539, 1603, 1662, 1970, 2015], "df": 31, "chi": 31, "continuous_bernoulli": 31, "lim": [31, 1246], "499": 31, "501": 31, "2538": [31, 1281], "pervas": 31, "loaiza": 31, "ganem": 31, "cunningham": 31, "jp": 31, "arxiv": [31, 1457, 1506, 1533, 1690, 1726, 1774, 1828, 1886, 1978, 2021], "ab": [31, 86, 87, 620, 621, 677, 955, 1097, 1281, 1302, 1303, 1305, 1306, 1319, 1322, 1457, 1506, 1533, 1536, 1538, 1633, 1690, 1726, 1729, 1768, 1774, 1778, 1828, 1951, 1953, 1955, 1969, 1970, 1971, 1981, 1990, 2001, 2015, 2021, 2030, 2031, 2032, 2035, 2038, 2040, 2045], "1907": 31, "06845": 31, "8954": 31, "greaterthaneq": 31, "df1": 31, "df2": 31, "fisher": 31, "snedecor": 31, "2453": 31, "degre": [31, 987, 1074, 1081, 1249, 1287, 1288, 1487, 1496, 1535, 1674, 1792, 1812, 1879, 1880, 1929, 1930, 1953, 1987, 2001, 2015], "freedom": [31, 987, 1879, 1880, 1929, 1930, 1987], "geometric_": [31, 1953, 2023], "0124": 31, "half_cauchi": 31, "half_norm": 31, "base_distribut": 31, "reinterpreted_batch_ndim": 31, "reinterpret": [31, 494, 2034], "diagon": [31, 54, 220, 256, 590, 591, 592, 593, 946, 983, 987, 1084, 1085, 1086, 1088, 1097, 1110, 1159, 1160, 1194, 1279, 1291, 1293, 1296, 1308, 1312, 1547, 1548, 1549, 1633, 1643, 1865, 1905, 1909, 1910, 1911, 1912, 1913, 1953, 1983, 2001, 2019, 2040], "multivari": [31, 1373, 2016], "multivariate_norm": 31, "mvn": 31, "scale_tril": 31, "diag": [31, 55, 1158, 1159, 1160, 1285, 1286, 1313, 1774, 1865, 1885, 1886, 1953, 2001], "diagn": 31, "inverse_gamma": 31, "2953": 31, "1729": [31, 1990], "lkj_choleski": 31, "lkj": 31, "matric": [31, 256, 681, 684, 935, 947, 948, 957, 958, 959, 960, 1085, 1194, 1270, 1279, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1322, 1330, 1339, 1341, 1354, 1437, 1496, 1557, 1591, 1688, 1694, 1772, 1774, 1784, 1832, 1858, 1862, 1863, 1885, 1886, 1909, 1910, 1912, 1953, 1969, 1987, 1993, 2015, 2021], "eta": [31, 1738, 1740, 1753], "proport": [31, 1454, 1455, 1456, 1493, 1534], "det": [31, 1287, 1288, 1309, 1330, 1953, 2001], "l": [31, 730, 755, 936, 945, 951, 958, 959, 960, 1097, 1207, 1208, 1249, 1269, 1279, 1280, 1285, 1286, 1287, 1288, 1292, 1296, 1297, 1339, 1341, 1396, 1399, 1400, 1401, 1414, 1422, 1425, 1426, 1433, 1438, 1446, 1447, 1449, 1452, 1453, 1457, 1469, 1478, 1480, 1487, 1489, 1493, 1494, 1502, 1518, 1535, 1536, 1538, 1643, 1700, 1709, 1717, 1719, 1744, 1820, 1881, 1953, 1955, 1978, 2020, 2032, 2045], "lkjcorr": 31, "onion": 31, "3x3": [31, 1080, 1907], "3516": 31, "9361": 31, "1899": [31, 1352], "4748": 31, "8593": 31, "vine": 31, "2009": [31, 1774, 1886], "lewandowski": 31, "dorota": 31, "kurowicka": 31, "harri": [31, 1848], "joe": 31, "journal": [31, 1791], "1016": 31, "jmva": 31, "04": [31, 1140, 1327, 1841, 1848], "008": 31, "corrcholeski": 31, "log_norm": [31, 2001], "lowrank_multivariate_norm": 31, "cov_factor": 31, "cov_diag": 31, "covari": [31, 948, 983, 987, 1401, 1402, 1403, 1526, 1774], "covariance_matrix": 31, "2102": 31, "5429": [31, 1909], "woodburi": 31, "lemma": 31, "formula": [31, 84, 763, 764, 884, 886, 900, 901, 936, 945, 1207, 1208, 1275, 1341, 1342, 1501, 1560, 1561, 1650, 1754, 1787, 1983, 1987, 2005, 2010, 2015, 2033], "capacit": 31, "precision_matrix": 31, "mixture_same_famili": 31, "mixture_distribut": 31, "component_distribut": 31, "rightmost": [31, 948, 1211, 1212, 1955], "gaussian": [31, 1436, 1440, 1516, 1589, 1590, 1646, 1847, 2016], "gmm": 31, "bivari": 31, "categori": [31, 35, 80, 1373, 1955, 1957, 2000, 2002, 2005, 2007, 2018, 2039, 2041], "innermost": [31, 58, 229, 1203, 1212, 1820], "1338": 31, "mathbf": [31, 1270, 1689, 1690, 1723, 1726, 1753], "sigma": [31, 169, 373, 755, 1400, 1437, 1438, 1439, 1457, 1458, 1516, 1517, 1591, 1646, 1689, 1723, 1842, 1879, 1880, 1929, 1930, 1953], "triangular": [31, 958, 959, 960, 1279, 1280, 1286, 1288, 1296, 1297, 1304, 1307, 1308, 1310, 1312, 1546, 1547, 1548, 1549, 1633, 1760, 1784, 1909, 1910, 1911, 1912, 1913], "decomposit": [31, 47, 58, 77, 958, 959, 960, 1194, 1279, 1280, 1285, 1286, 1287, 1288, 1289, 1291, 1296, 1297, 1298, 1299, 1304, 1308, 1309, 1313, 1314, 1339, 1341, 1688, 1772, 1774, 1778, 1784, 1885, 1886, 1951, 1993, 2033, 2034, 2044], "positivedefinit": 31, "lowercholeski": 31, "negative_binomi": 31, "halfopeninterv": 31, "mu": [31, 373, 1752, 1754], "one_hot_categor": 31, "onehot": 31, "5623": 31, "nonneg": [31, 1536, 1774, 1886, 2016], "pmf": 31, "mathrm": [31, 937, 1287, 1288, 1289, 1290, 1301, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1496, 1501, 1526, 1688, 1741, 1742, 1743, 1753, 1788, 1978, 2016], "relaxed_bernoulli": 31, "temperatur": [31, 1594, 1951], "parametr": [31, 1154, 1691, 1698, 1723, 1724, 1726, 1972, 1983], "relax": [31, 998, 1032, 1265, 1266, 1694, 2006, 2035], "reparametriz": 31, "99": [31, 1261, 1752, 1952], "2951": [31, 1349], "3442": 31, "8918": 31, "9021": 31, "maddison": 31, "2017": [31, 1530, 1532, 1534, 1866, 1996], "reparametr": [31, 1594, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1706, 1726], "jang": 31, "relaxed_categor": 31, "1294": [31, 958], "2324": [31, 1249, 1487], "3859": 31, "2523": 31, "student": 31, "transformed_distribut": 31, "composit": [31, 54, 1158, 1297, 1688, 1952, 1955, 1959, 1984, 1990, 2000], "basedistribut": 31, "dx": [31, 1080, 1399, 1907, 1953, 1983, 1984, 2016], "dy": 31, "logist": [31, 1516, 1519, 1646, 2016], "sigmoidtransform": 31, "affinetransform": 31, "invert": [31, 58, 1240, 1281, 1290, 1291, 1297, 1303, 1310, 1312, 1315, 1316, 1330, 1483, 1484, 1485, 1909, 1953, 1993, 2011], "3418": 31, "upper": [31, 46, 47, 60, 68, 69, 70, 71, 177, 178, 179, 589, 790, 946, 951, 958, 959, 960, 962, 1111, 1112, 1174, 1210, 1211, 1279, 1280, 1286, 1288, 1296, 1297, 1308, 1312, 1505, 1547, 1549, 1633, 1641, 1642, 1643, 1760, 1766, 1784, 1799, 1820, 1909, 1912, 1913, 1953, 1976, 2001, 2016, 2022], "von_mis": 31, "circular": [31, 1408, 1409, 1410, 1414, 1415, 1416, 1463, 1464, 1465, 1631], "von": 31, "mise": 31, "unconstrain": [31, 1694], "angl": [31, 750, 879, 1081, 1330, 1473, 1778, 1792, 1835, 1951, 1953, 2001, 2015], "9777": 31, "radian": [31, 693, 879, 1081, 1792, 1953, 2001], "simul": [31, 483, 794, 796, 2006, 2009, 2033], "1979": 31, "152": [31, 612], "157": 31, "_rejection_sampl": 31, "88443": 31, "4784": [31, 1354], "symmetr": [31, 797, 815, 936, 945, 958, 959, 960, 1118, 1119, 1120, 1125, 1127, 1131, 1132, 1134, 1207, 1208, 1269, 1279, 1280, 1285, 1286, 1288, 1292, 1293, 1294, 1301, 1304, 1307, 1313, 1322, 1688, 1694, 1766, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 2006, 2009], "x_ij": 31, "wu": [31, 1322], "chu": 31, "2018": [31, 1322, 1782], "sawyer": 31, "2007": 31, "anderson": 31, "w": [31, 55, 146, 755, 884, 886, 888, 895, 898, 900, 901, 909, 936, 945, 987, 1156, 1172, 1191, 1207, 1208, 1246, 1289, 1389, 1390, 1397, 1398, 1400, 1402, 1403, 1407, 1415, 1416, 1422, 1426, 1427, 1429, 1430, 1431, 1438, 1450, 1451, 1459, 1470, 1471, 1481, 1482, 1492, 1493, 1494, 1499, 1500, 1521, 1537, 1538, 1540, 1541, 1557, 1565, 1583, 1584, 1592, 1628, 1634, 1635, 1689, 1690, 1723, 1726, 1953, 1969, 1970, 1976, 1978, 1983, 1987, 2002, 2003, 2020, 2043], "2003": 31, "ed": [31, 54, 1425, 1426, 1978, 2003, 2026, 2043, 2046], "odel": 31, "feiveson": 31, "1966": 31, "samplecovari": 31, "jasa": 31, "61": 31, "313": 31, "199": 31, "203": [31, 612], "ku": 31, "bloomfield": 31, "2010": [31, 1976], "ox": 31, "max_try_correct": 31, "bartlett": [31, 936], "singular": [31, 1281, 1295, 1296, 1302, 1304, 1306, 1307, 1313, 1314, 1322, 1330, 1339, 1689, 1694, 1774, 1885, 1886, 1993], "inf": [31, 46, 49, 254, 679, 681, 684, 685, 686, 880, 935, 951, 1238, 1239, 1241, 1243, 1244, 1281, 1296, 1302, 1306, 1309, 1319, 1330, 1377, 1477, 1520, 1530, 1643, 1679, 1700, 1709, 1729, 1813, 1820, 1977, 1978, 1984, 1993, 2016, 2022, 2045], "accordingli": [31, 58, 1259, 1457, 1694, 1971, 2011, 2041], "kl_diverg": 31, "kullback": [31, 1452, 1604], "leibler": [31, 1452, 1604], "notimplementederror": [31, 1963, 2003, 2038], "register_kl": 31, "type_p": 31, "type_q": 31, "pairwis": [31, 1446, 1496, 1535], "kl_normal_norm": 31, "ambigu": [31, 58, 1234, 1417, 1418, 1419, 1433, 1483, 1484, 1485, 1539, 1955], "runtimewarn": 31, "basep": 31, "derivedq": 31, "kl_version1": 31, "derivedp": 31, "baseq": 31, "kl_version2": 31, "tie": 31, "abstransform": 31, "cache_s": [31, 2038], "event_dim": 31, "pointwis": [31, 967, 1159, 1160, 1327, 1328, 1452, 1969, 1979, 2034, 2037, 2039], "affin": [31, 49, 467, 468, 469, 470, 471, 744, 746, 747, 748, 797, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1557, 1981, 1990], "cattransform": 31, "tseq": 31, "functor": [31, 1040, 1041], "submatrix": 31, "x0": [31, 2037], "t0": [31, 46, 1203, 1738, 1954], "exptransform": 31, "identity_transform": 31, "composetransform": 31, "corrcholeskytransform": 31, "uncontrain": 31, "euclidean": [31, 955, 1629], "x_i": [31, 54, 962, 1076, 1077, 1078, 1079, 1318, 1325, 1477, 1496, 1520, 1522, 1535, 1612, 1649, 1781, 1864, 1879, 1880, 1907, 1929, 1930, 1931, 2016], "stickbreakingtransform": 31, "r_i": 31, "tanh": [31, 572, 755, 760, 790, 880, 1436, 1438, 1439, 1457, 1458, 1486, 1502, 1504, 1528, 1590, 1623, 1655, 1953, 1969, 1970, 1976, 2001, 2008, 2015, 2040], "unsign": [31, 2009, 2018, 2021, 2022, 2035], "z_i": 31, "s_i": 31, "y_i": [31, 962, 1076, 1077, 1078, 1079, 1318, 1325, 1535, 1907, 1931, 1987], "sqrt": [31, 58, 373, 544, 668, 669, 755, 983, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1216, 1269, 1351, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1436, 1438, 1439, 1441, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1472, 1474, 1502, 1504, 1526, 1590, 1643, 1694, 1739, 1740, 1741, 1742, 1745, 1751, 1752, 1788, 1815, 1847, 1879, 1880, 1953, 1969, 1976, 1977, 1978, 2001, 2015, 2016, 2022, 2040], "cumulativedistributiontransform": 31, "copula": 31, "base_dist": 31, "independenttransform": 31, "base_transform": 31, "log_abs_det_jacobian": 31, "lowercholeskytransform": 31, "positivedefinitetransform": 31, "powertransform": 31, "expon": [31, 264, 265, 276, 463, 464, 1140, 1147, 1273, 1303, 1391, 1475, 1629, 1781, 1791, 1828, 1953, 2018, 2021, 2040], "reshapetransform": 31, "in_shap": 31, "out_shap": 31, "softplustransform": 31, "tanhtransform": 31, "softmaxtransform": 31, "biject": 31, "hmc": 31, "stacktransform": 31, "stick": [31, 2002], "aris": [31, 58, 1978, 2033], "primarili": [31, 47, 57, 810, 811, 812, 818, 1171, 1383, 1966, 2006, 2021], "memoiz": [31, 2034], "_call": 31, "_invers": 31, "codomain": [31, 1978], "iff": [31, 1493], "weaker": [31, 1981], "pseudoinvers": [31, 1290, 1307, 1315], "monoton": [31, 1486, 1623, 1820], "forward_shap": 31, "inverse_shap": 31, "corr_choleski": 31, "greater_than": 31, "greater_than_eq": 31, "integer_interv": 31, "less_than": 31, "lower_choleski": 31, "lower_triangular": 31, "nonnegative_integ": 31, "one_hot": [31, 1953, 2001], "positive_integ": 31, "positive_semidefinit": 31, "positive_definit": 31, "real_vector": 31, "unit_interv": 31, "is_discret": 31, "constrain": [31, 46, 1174, 1179, 1523, 1955, 1990], "_cat": 31, "dependent_properti": 31, "_dependentproperti": 31, "_greaterthan": 31, "_greaterthaneq": 31, "_independentconstraint": 31, "_integerinterv": 31, "_interv": 31, "half_open_interv": 31, "_halfopeninterv": 31, "_lessthan": 31, "_multinomi": 31, "_stack": [31, 2001], "constraintregistri": 31, "biject_to": 31, "transform_to": 31, "overparameter": 31, "rotat": [31, 1812, 1885], "hamiltonian": 31, "mont": 31, "carlo": 31, "invari": [31, 46, 1715, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 2013, 2015, 2030, 2044], "potential_energi": 31, "cheap": [31, 1171, 1391, 2035], "svi": 31, "fewer": [31, 46, 54, 688, 690, 691, 694, 961, 1270, 1271, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1381, 1440, 1574, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1782, 1866, 1879, 1880, 1884, 1903, 1929, 1930, 1961, 1979, 1995, 2022, 2047], "my_constraint": 31, "my_transform": 31, "myconstraintclass": 31, "my_factori": 31, "mytransform": 31, "param1": [31, 1990], "param2": [31, 1990], "constraint_registri": 31, "my_registri": 31, "construct_transform": 31, "myconstraint": 31, "from_dlpack": [32, 875, 1951], "ext_tensor": [32, 1148], "extern": [32, 1001, 1148, 1265, 1925, 1966, 1980, 1981, 1993, 2000, 2026], "immut": [32, 1148, 1955], "__dlpack__": [32, 1148], "capsul": [32, 875, 1148], "pycapsul": [32, 1148], "to_dlpack": [32, 1148, 1951], "t2": [32, 682, 683, 875, 1148, 1203, 1674, 1927, 2011, 2012, 2035, 2045], "dltensor": [32, 1148], "t3": [32, 1148, 2012], "legaci": [32, 43, 46, 1594, 2005, 2018], "idiomat": 32, "inde": [32, 1952, 1962, 2003, 2013, 2038, 2041], "plane": [33, 42, 733, 734, 735, 736, 737, 738, 761, 762, 763, 764, 767, 768, 769, 777, 778, 1085, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1435, 1454, 1455, 1456, 1459, 1475, 1480, 1481, 1482, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1690, 1726, 1789, 1790, 1812], "monitor": [33, 43, 44, 82, 1000, 1361, 1768, 1951, 1981, 1988], "unhealthi": 33, "tear": 33, "react": [33, 2041], "decentr": 33, "diagram": [33, 42, 1249, 1487, 2006, 2013, 2032, 2035, 2045], "elasticag": 33, "quad": [33, 1399, 1400, 1422, 1453, 1478, 1494, 1536, 1797], "group_result": 33, "is_fail": [33, 34], "exit_cod": 33, "return_valu": [33, 34, 40, 2032], "get_worker_group": 33, "workergroup": [33, 43], "mutabl": [33, 1265, 1952, 2003, 2020], "implementor": 33, "defens": 33, "retri": [33, 35, 44, 1054, 2011, 2013], "max_restart": [33, 34, 43], "runresult": 33, "workerspec": [33, 34, 43, 44], "local_world_s": [33, 34, 43], "rdzv_handler": [33, 34, 42], "monitor_interv": [33, 34], "local_addr": [33, 42], "tee": [33, 40], "blueprint": 33, "spec": [33, 34, 44, 46, 47, 60, 788, 789, 814, 815, 816, 819, 820, 821, 1998, 2008, 2021], "homogen": [33, 43], "rendezvoushandl": [33, 34, 42, 43], "rdzv": [33, 41, 43], "chose": [33, 1977, 2033], "consol": [33, 36, 39, 40, 43, 2020], "get_entrypoint_nam": 33, "__qualname__": 33, "workerst": 33, "unknown": [33, 47, 1676, 1677, 2013], "unrecover": 33, "interrupt": [33, 1968, 2043], "succeed": [33, 42, 1339, 2035], "uncaught": [33, 35], "unhandl": 33, "recov": [33, 893, 1118, 1309, 1341, 1674, 1715, 1881, 1977, 1981, 1985, 1987, 2007], "is_run": 33, "role_rank": [33, 43], "role_world_s": [33, 43], "pid": [33, 35, 43, 44, 1526, 1985, 2005], "local_elastic_ag": 33, "localelasticag": [33, 34, 44], "start_method": [33, 34, 40, 44, 1968], "exit_barrier_timeout": 33, "log_dir": [33, 40, 1966, 2020], "log_line_prefix_templ": 33, "local_ranks_filt": [33, 40], "advis": [33, 539, 612, 860, 1992], "pipe": [33, 44, 1951, 2011], "torchelastic_enable_file_tim": 33, "torchelastic_timer_fil": 33, "role_nam": 33, "trainer0": [33, 2011], "foobar": [33, 35, 39, 40], "templat": [33, 967, 1040, 1041, 2002], "substitut": [33, 42, 58, 77, 1262, 1978, 2018], "shared_queu": 33, "get_context": [33, 44, 1992], "nproc_per_process": 33, "other_param": [33, 44], "usr": [33, 40, 42, 1981], "bin": [33, 40, 42, 296, 297, 814, 938, 1210, 1211, 1212, 1953, 1955, 2001, 2020, 2042], "simpleelasticag": 33, "scaffold": 33, "_assign_worker_rank": 33, "group_world_s": 33, "_exit_barri": 33, "guard": [33, 60, 65, 69, 675, 967, 1170, 1171, 1174, 1178, 1180, 1181, 1182, 1187, 1188, 1189, 1190, 1961, 1992, 2001, 2003, 2023, 2026, 2035, 2041, 2045, 2046], "_initialize_work": 33, "worker_group": 33, "fresh": [33, 1088, 1173, 1176, 1823, 1853, 1950], "start_work": 33, "_stop_work": 33, "optimist": 33, "deleg": 33, "_monitor_work": 33, "_rendezv": 33, "_restart_work": 33, "_shutdown": 33, "death_sig": 33, "sigterm": 33, "_start_work": 33, "gracefulli": [33, 42, 43, 54, 1280, 1984, 2035], "meaning": [33, 35, 36, 1054, 1981, 2039], "meaningless": 33, "intention": [33, 1094, 1931, 1988, 2011], "ship": [34, 1155, 1980, 2011], "programmat": [34, 58, 1990], "my_launch": 34, "argv": [34, 45], "trainer_entrypoint_fn": 34, "fn_arg": 34, "run_result": 34, "tricki": [34, 50, 55, 1978, 1990, 2013, 2030], "myrendezvoushandl": 34, "elastic_ag": 34, "servic": [34, 1982, 2033], "metrichandl": [34, 39], "mymetrichandl": 34, "metric_data": [34, 39], "metricdata": 34, "sink": [34, 39, 1966], "eventhandl": 34, "cloudwatch": 34, "nulleventhandl": 34, "myeventhandl": 34, "invalid": [35, 40, 970, 1249, 1373, 1487, 1977, 1978, 1994, 1998, 2000, 2003, 2004, 2034, 2038], "infra": [35, 2044], "start_process": [35, 40, 1968], "torchelastic_error_fil": 35, "smallest": [35, 47, 956, 1271, 1281, 1302, 1306, 1322, 1783, 1904, 2022, 2045, 2048], "timestamp": [35, 36, 39, 43, 1966, 2005, 2020, 2045], "error_handl": 35, "sugar": [35, 1954], "get_error_handl": 35, "childfailederror": 35, "get_first_failur": 35, "dump_error_fil": 35, "error_fil": [35, 40], "exitcod": [35, 43], "nanni": 35, "accur": [35, 921, 1000, 1203, 1325, 1361, 1400, 1428, 1791, 1907, 1981, 2012, 2026, 2034], "diagnost": [35, 75, 76, 77, 78, 79, 82, 675, 1952], "torchelastic_ag": 35, "trainer_0": 35, "trainer_1": 35, "json": [35, 40, 44, 1989, 2005, 2039, 2043], "trainer_n": 35, "errorhandl": 35, "record_except": 35, "processfailur": 35, "test_ev": 36, "eventsourc": 36, "get_logging_handl": 36, "millisecond": [36, 39, 1000, 1361, 1966], "eventmetadatavalu": 36, "readm": [37, 38, 787, 1971], "telemetri": 39, "timeseri": 39, "metric_group": 39, "metric_nam": 39, "sensibl": 39, "my_modul": [39, 47, 49, 58, 1952, 2003], "nullmetricshandl": 39, "consolemetricshandl": 39, "my_method": 39, "put_metr": 39, "calculate_lat": 39, "succinctli": 39, "baz": [39, 58, 849, 2003, 2022], "leaf_modul": 39, "classnam": [39, 1955], "threw": [39, 2047], "my_app": 39, "consolemetrichandl": 39, "toi": [39, 2045], "stdout": [39, 40, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 2000], "stdoutmetrichandl": 39, "1574213883": 39, "4182858": 39, "my_metr": 39, "1574213940": 39, "5237644": 39, "nullmetrichandl": 39, "class_nam": [39, 58], "def_nam": 39, "leaf": [39, 47, 146, 218, 331, 443, 483, 498, 499, 786, 833, 835, 874, 888, 1164, 1736, 1900, 1971, 1977, 1978, 1986, 2000, 2025, 2034], "metric_valu": 39, "metric_group_nam": 39, "popen": 40, "stderr": [40, 1950, 1965], "err": 40, "echo": 40, "hello": [40, 54, 1954, 2003], "pcontext": 40, "multiprocesscontext": 40, "subprocesscontext": 40, "log_line_prefix": 40, "keyset": 40, "bitmask": 40, "bar0": 40, "bar1": 40, "file1": 40, "file2": 40, "caution": [40, 2036], "short": [40, 58, 729, 758, 1097, 1181, 1246, 1406, 1457, 1458, 1576, 1735, 1832, 1881, 1954, 1959, 1969, 1978, 1979, 1990, 2011, 2017, 2018, 2021, 2032], "ing": 40, "cmd": [40, 43], "forkserv": [40, 1674, 1968, 1992], "tee_stdout": 40, "tee_stderr": 40, "processcontext": [40, 1968], "superset": [40, 43], "runprocsresult": 40, "num_nod": [41, 43], "trainers_per_nod": 41, "num_allowed_failur": 41, "job_id": [41, 42, 43], "endpoint": [41, 42, 43], "host_node_addr": [41, 43], "min_siz": [41, 43], "num_allowed_failures_or_membership_chang": 41, "node1": [41, 43], "29400": [41, 43], "sidecar": [41, 42], "agre": [42, 1308, 2013], "resum": [42, 1760, 1766, 1768, 2011, 2013, 2020, 2032, 2035], "retryabl": 42, "announc": 42, "previous": [42, 46, 49, 50, 53, 54, 55, 58, 693, 787, 788, 923, 1166, 1181, 1257, 1879, 1880, 1929, 1930, 1934, 1952, 1979, 1981, 1990, 2003, 2004, 2010, 2011, 2016, 2027, 2038, 2041, 2047], "lose": [42, 45, 49, 187, 204, 1970], "train_loop": [42, 857], "arriv": [42, 43, 2011, 2013], "dynamicrendezvoushandl": 42, "rendezvousbackend": 42, "c10drendezvousbackend": 42, "etcdrendezvousbackend": 42, "supersed": [42, 1172], "etcdrendezvoushandl": 42, "my_run_id": 42, "from_backend": 42, "run_id": [42, 43], "min_nod": 42, "max_nod": 42, "rendezvousparamet": 42, "admit": [42, 43, 1981], "get_as_bool": 42, "get_as_int": 42, "rendezvoushandlerregistri": 42, "create_handl": 42, "creator": [42, 1978, 2011, 2013], "get_run_id": 42, "is_clos": 42, "set_clos": 42, "next_rendezv": 42, "rendezvousclosederror": 42, "rendezvousconnectionerror": 42, "rendezvousstateerror": 42, "rendezvoustimeouterror": 42, "num_nodes_wait": 42, "shutdown": [42, 2011, 2012], "rendezvouserror": 42, "rendezvousgracefulexiterror": 42, "dynamic_rendezv": 42, "join_timeout": 42, "600": 42, "last_call_timeout": 42, "close_timeout": 42, "rendezvoustimeout": 42, "get_stat": [42, 84], "fenc": 42, "token": [42, 998, 1032, 1033, 1950, 1956, 2037], "set_stat": [42, 84], "last_cal": 42, "heartbeat": 42, "keep_al": 42, "c10d_rendezvous_backend": 42, "create_backend": 42, "store_typ": 42, "tcp": [42, 43, 2011], "read_timeout": 42, "60": [42, 44, 930, 1440, 1770, 1897, 1902, 1966, 2011, 2032], "is_host": 42, "skip": [42, 47, 854, 969, 1097, 1151, 1279, 1280, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1853, 1924, 1952, 1977, 1978, 1981, 1982, 1983, 1990, 2002, 2005, 2011, 2033, 2035, 2036, 2038], "cname": 42, "fqdn": [42, 43], "etcd_rendezvous_backend": 42, "ssl_cert": 42, "ssl": 42, "certif": 42, "ssl_cert_kei": 42, "privat": [42, 49, 1171, 1981, 1983, 2003, 2030, 2035], "ca_cert": 42, "rool": 42, "key_prefix": 42, "ttl": 42, "hour": 42, "etcd_rendezv": 42, "rdzv_impl": 42, "etcdrendezv": 42, "etcd_address": 42, "min_work": 42, "max_work": 42, "noqa": 42, "w605": 42, "2379": [42, 1347], "etcd_prefix": 42, "etcdstor": 42, "etcd_stor": 42, "etcd_client": 42, "etcd_store_prefix": 42, "c10": [42, 1989, 2027, 2033], "piggyback": 42, "num": [42, 740, 741, 755, 1373, 1438, 1441, 1457, 1493, 1502, 1530, 1992], "lookuperror": 42, "override_timeout": 42, "etcdserv": 42, "cumbersom": [42, 1955], "highli": [42, 1391, 1674, 1950, 1991, 1998, 2000, 2015, 2022], "etcd_serv": 42, "data_dir": 42, "v3": [42, 43], "torchelastic_etcd_binary_path": 42, "get_client": 42, "etcd_binary_path": 42, "entry_point": [43, 2031], "migrat": [43, 50, 1351, 1726, 2009], "train_script": 43, "aforment": 43, "suffic": [43, 58], "compliant": [43, 45], "num_train": 43, "wors": [43, 1922, 2035], "port_k": 43, "etcd": 43, "v2": [43, 1318, 1773, 1950], "revis": 43, "physic": [43, 229, 1115, 1133, 1956, 1980, 1992, 2015, 2035], "localworkergroup": 43, "rdzv_id": 43, "rdzv_backend": [43, 45], "rdzv_endpoint": [43, 45], "max_nnod": 43, "torchelastic_restart_count": 43, "far": [43, 1259, 1592, 2033], "torchelastic_max_restart": 43, "python_exec": 43, "gang": 43, "departur": 43, "surviv": 43, "kill": [43, 44, 1968, 1985], "frequenc": [43, 938, 987, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1246, 1391, 1429, 1430, 1583, 1584, 1760, 1881, 2044], "ness": [43, 2034], "load_checkpoint": [43, 45], "checkpoint_path": [43, 45], "dataset": [43, 45, 60, 793, 1391, 1400, 1452, 1951, 1985, 1989, 1992, 1996, 2002, 2006, 2007, 2020], "train_step": 43, "should_checkpoint": 43, "save_checkpoint": [43, 45], "acquir": [44, 58, 1990, 2013, 2015], "deadlin": 44, "message_queu": 44, "localtimerserv": 44, "max_interv": 44, "trainer_func": 44, "localtimercli": 44, "expiri": 44, "timer_cli": 44, "countdown": 44, "timefram": [44, 2011], "elig": [44, 2013], "reap": 44, "timerserv": 44, "mp_queue": 44, "daemon": [44, 1968], "filetimerserv": 44, "file_path": 44, "log_ev": [44, 1966], "filetimercli": 44, "fifo": 44, "watchdog": 44, "filetimerrequest": 44, "sigkil": 44, "named_pip": 44, "mkfifo": 44, "timercli": 44, "timerrequest": 44, "scope_id": 44, "expiration_tim": 44, "acquisit": 44, "whatev": [44, 58, 443, 1170, 1674, 1824, 1909, 1955, 1984, 2034, 2035], "request_queu": 44, "entiti": [44, 58], "clear_tim": 44, "get_expired_tim": 44, "register_tim": 44, "timer_request": 44, "use_env": 45, "expositori": 45, "worst": [45, 1983], "total_num_epoch": 45, "visit": [45, 2000, 2038, 2039], "WILL": 46, "BE": 46, "aot": [46, 675, 969, 1961, 2026, 2027, 2035, 2036, 2045], "example_arg": 46, "exported_program": [46, 1998], "exportedprogram": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "arg1_1": [46, 60, 68, 69, 72, 1998], "exportgraphsignatur": [46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "user_input": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "user_output": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "inputs_to_paramet": 46, "inputs_to_buff": 46, "buffers_to_mut": 46, "backward_signatur": 46, "assertion_dep_token": 46, "sound": [46, 58, 969, 970, 1168, 1515, 2020, 2036], "convent": [46, 49, 58, 331, 956, 1097, 1115, 1117, 1141, 1164, 1171, 1401, 1402, 1403, 1449, 1450, 1451, 1526, 1813, 1816, 1915, 1950, 1965, 1971, 1978, 1987, 1990, 1995], "opset": [46, 1998, 2000, 2001, 2031, 2040], "alias": [46, 49, 893, 1155, 1166, 1603, 1934, 1954, 1955, 1959, 1983, 2034], "stacktrac": [46, 47, 60, 69], "leverag": [46, 967, 1997, 1998, 2011, 2026, 2029, 2037], "_dynamo": [46, 60, 71, 967, 1982, 2026, 2030, 2031, 2032, 2033, 2038, 2041, 2043, 2045], "massiv": [46, 2038], "pt2": [46, 2033, 2034], "artifact": [46, 675, 1881, 1961, 1989, 2003, 2027, 2043, 2045], "untrac": [46, 58], "disjoint": [46, 1952], "usabl": [46, 57, 1955, 1999, 2000, 2032], "traceabl": [46, 58, 619, 812, 1175, 1952, 2006, 2033], "symbolic_trac": [46, 47, 58, 2006], "comprehens": [46, 77, 1848, 1955, 1956, 1970, 1981, 1988, 2006, 2027], "simpler": [46, 55, 1166, 1934, 1952, 1978, 1983, 1987, 1990], "straight": [46, 1399, 1594], "conv": [46, 58, 697, 698, 699, 700, 701, 702, 703, 704, 705, 787, 788, 791, 809, 849, 855, 1249, 1259, 1265, 1266, 1414, 1415, 1416, 1417, 1418, 1419, 1487, 1488, 1494, 1683, 1684, 1686, 1964, 1976, 1981, 1993, 2000, 2006, 2007, 2008, 2009, 2039, 2041], "in_channel": [46, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 1259, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468], "out_channel": [46, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 1259, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468], "kernel_s": [46, 707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 763, 764, 777, 778, 1249, 1259, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1435, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1538, 1559, 1560, 1561, 1570, 1571, 1572, 1586, 1587, 1588, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1661, 1789, 1790, 1953, 2020, 2040], "maxpool": [46, 791, 1434, 1435, 1587, 1588, 2000], "maxpool2d": [46, 778, 1484, 1488, 1618, 1621, 2000, 2008], "256": [46, 1406, 1781, 1981, 2000], "example_kwarg": 46, "arg2_1": [46, 60, 68, 69, 1998], "arg3_1": [46, 1998], "max_pool2d_with_indic": [46, 1953, 2001, 2040], "getitem": [46, 60, 63, 68, 69, 72, 2044], "85": [46, 58, 1490, 1766, 2039, 2043], "l__self___conv": 46, "lift": [46, 47, 55, 1166, 1934, 1970, 2001, 2034], "get_attr": [46, 58, 76], "branch1": 46, "64": [46, 52, 53, 55, 930, 967, 1159, 1160, 1164, 1388, 1389, 1390, 1392, 1393, 1394, 1400, 1515, 1643, 1821, 1924, 1971, 1995, 1996, 1998, 2000, 2006, 2010, 2015, 2018, 2020, 2021, 2035, 2037], "branch2": 46, "128": [46, 612, 715, 723, 724, 751, 759, 789, 814, 815, 1404, 1421, 1448, 1474, 1496, 1535, 1536, 1574, 1643, 1970, 1971, 1998, 2006, 2008, 2009, 2011, 2015, 2018, 2021, 2043], "x2": [46, 60, 66, 955, 1297, 1479, 1535, 1536, 1574, 1632, 1953, 2035, 2040], "out1": [46, 1155, 1953, 2035], "out2": [46, 1155, 1953, 2035], "arg4_1": [46, 1998], "arg5_1": [46, 1998], "arg6_1": 46, "permute_1": 46, "addmm_1": 46, "relu_1": [46, 58], "l__self___buff": 46, "rangeconstraint": [46, 47], "min_val": [46, 773, 1445, 1598, 1599, 1953, 2040], "max_val": [46, 773, 1445, 1598, 1599, 1953, 2040], "9223372036854775806": 46, "range_constraint": [46, 47], "dynamic_dim": [46, 1167, 1168, 1171], "saved_exported_program": 46, "example_input": [46, 812, 813, 856, 857, 1261, 1265, 2006, 2025, 2027, 2031, 2032, 2034, 2038], "rewritten": [46, 1987], "const": [46, 1440, 1989], "add_1": [46, 58, 60, 63, 65, 68, 69, 1155], "add_2": [46, 58, 60, 63, 65], "shot": 46, "nearli": [46, 146, 888, 909, 1774, 1992, 2011, 2045], "imposs": [46, 1166, 1178, 1934, 1977], "unsupport": [46, 54, 60, 74, 77, 78, 80, 83, 1952, 1956, 1970, 1998, 2011, 2015, 2035, 2038, 2041], "exportdb": [46, 2023], "combinatori": 46, "explod": [46, 1518], "cond": [46, 47, 54, 60, 63, 69, 1993], "undergo": [46, 75], "refin": [46, 1256, 1970], "fake": [46, 58, 80, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 788, 794, 795, 805, 807, 833, 856, 857, 1111, 1112, 1171, 1998, 2003, 2006, 2009, 2026], "mod": [46, 47, 58, 716, 717, 727, 733, 734, 735, 740, 741, 751, 759, 805, 806, 807, 808, 831, 832, 859, 1154, 1252, 1253, 1259, 1266, 1724, 1926, 1954, 1955, 2003, 2024, 2031, 2045], "preserve_module_call_signatur": 46, "fatal": [46, 1968, 1992], "dim0_x": [46, 60, 62, 68, 69], "verbatim": 46, "bake": [46, 58, 60, 69, 1253, 1259, 1741, 1742, 1754, 2002], "diverg": [46, 1182, 1265, 1266, 1452, 1604, 1951, 1955], "register_dataclass": [46, 47], "ordereddict": [46, 1249, 1487, 1488, 1497, 1515, 1665, 1705, 1953, 1990, 1995, 2022, 2038], "debug_nam": 46, "unbound": [46, 1170, 1174, 1178], "t1": [46, 682, 683, 875, 1203, 1674, 1927, 1954, 2011, 2012], "extra_fil": [46, 1257, 1260], "opset_vers": [46, 1998, 2000, 2001], "txt": [46, 1257, 1260, 2003, 2027, 2045], "decod": [46, 49, 1321, 1530, 1531, 1532, 1674, 2003], "utf": [46, 1321, 2000, 2003], "expected_opset_vers": 46, "rb": [46, 1257, 1321], "seek": [46, 1257, 1321, 2003, 2006], "cl": [46, 60, 62, 135, 1983, 2006, 2011, 2046], "inputdataclass": 46, "outputdataclass": 46, "polymorph": [46, 1954], "graph_signatur": [46, 47], "module_call_graph": 46, "tensor_const": 46, "exportbackwardsignatur": 46, "gradients_to_paramet": 46, "gradients_to_user_input": 46, "loss_output": 46, "input_spec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "output_spec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "gurante": 46, "getattr": [46, 58, 1953, 1983, 1995, 2011, 2038], "parameters_buffers_constant_tensor": 46, "flattened_user_input": 46, "mutated_input": 46, "flattened_user_output": 46, "custommodul": [46, 833, 1998, 2006], "my_paramet": [46, 1954, 1998], "register_buff": [46, 1249, 1487, 1667, 1952, 1954, 1983, 1990, 1998], "my_buffer1": [46, 1998], "my_buffer2": [46, 1998], "add_tensor": [46, 47], "call_funct": [46, 58, 60, 74, 76, 78, 79, 2031, 2032, 2035, 2038, 2044, 2045], "mul_tensor": 46, "mul_tensor_1": 46, "add_tensor_1": 46, "add_tensor_2": 46, "inputspec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "inputkind": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "tensorargu": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "outputspec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "outputkind": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 1998], "buffer_mut": [46, 1998], "modulecallsignatur": 46, "symintargu": [46, 60, 69], "constantargu": [46, 60, 62], "customobjargu": 46, "in_spec": 46, "_pytre": [46, 60], "treespec": 46, "out_spec": 46, "modulecallentri": 46, "nonetyp": [46, 1953, 1955], "replace_all_us": 46, "get_replace_hook": 46, "class_fqn": 46, "unflatten": [46, 49, 1953, 1969, 1970, 1972, 2001, 2019], "flatargsadapt": 46, "target_spec": 46, "input_arg": [46, 1736, 2000], "input_args_with_path": 46, "interpretermodul": 46, "codegen": [46, 47, 58, 1983, 2035, 2039, 2045], "flat_args_adapt": 46, "hierachi": 46, "swap": [46, 56, 58, 612, 783, 784, 785, 788, 792, 859, 1255, 1339, 1535, 1536, 1659, 1660, 1906, 1927, 1953, 1956, 1981, 2006, 2015, 2017, 2024], "submod": [46, 58], "new_mod": 46, "unflattenedmodul": 46, "wrappermodul": 46, "bear": 47, "mlir": 47, "soundli": 47, "audienc": 47, "realiz": [47, 1828], "implic": [47, 1247, 1265, 1983, 2011, 2015], "highlight": [47, 725, 726, 1955], "bundl": [47, 1989], "notabl": [47, 967, 1955, 2027], "graph_modul": [47, 854, 2032, 2044], "sympi": [47, 1171, 1177, 2033], "i0": [47, 302, 1269, 1847, 1953, 2001, 2016], "dag": [47, 1981], "acycl": [47, 787, 1978], "collorari": 47, "_export": [47, 2006, 2027], "textual": 47, "machineri": [47, 58, 1983, 2035], "op_nam": [47, 1959, 1998], "meta": [47, 49, 53, 58, 332, 1951, 1959, 1998, 2011, 2018, 2020, 2022, 2033, 2034, 2036, 2044], "arg4": 47, "arg5": 47, "compact": [47, 1113, 1114, 1116, 1292, 1294, 1297, 1983, 2000, 2006], "args1": 47, "add1": 47, "predefin": [47, 2000], "readign": 47, "referenc": [47, 58, 1001, 1249, 1487, 1909, 1954, 1978, 2000, 2011, 2032, 2038], "19": [47, 680, 741, 960, 1484, 1952, 2000, 2015, 2032, 2039], "dummy_help": 47, "helper_util": 47, "89": [47, 612, 1792, 2039], "val": [47, 60, 63, 68, 1040, 1171, 1183, 1255, 1256, 1953, 1955, 1976, 2034, 2038], "nn_module_stack": 47, "came": [47, 2038], "self_linear": 47, "self_sequenti": 47, "source_fn_stack": 47, "source_fn": 47, "encapsul": [47, 57, 58, 1998, 2011, 2030], "control_flow": [47, 60, 63, 68, 69, 72], "x_1": [47, 1076, 1077, 1078, 1079, 1317, 1404, 1420, 1421, 1563, 1574, 1907], "num_us": [47, 58], "y_1": [47, 1907], "higher_ord": [47, 60, 63, 68, 69, 72], "liter": [47, 1735, 1953, 1956, 1970, 2003, 2044, 2047], "dim_ord": 47, "tensormeta": 47, "promot": [47, 49, 77, 680, 940, 943, 952, 1040, 1092, 1140, 1142, 1143, 1144, 1145, 1372, 1425, 1426, 1427, 1431, 1574, 1783, 1803, 1804, 1810, 1825, 1882, 1955, 1998, 2018, 2022, 2034, 2035, 2040], "max_pool2d_with_index": 47, "add_on": 47, "ph_0": 47, "jax": [47, 50, 53, 54, 55, 1978, 1984, 2035], "int64_t": [47, 1735], "scalartyp": [47, 2040], "memoryformat": [47, 2040], "memory_format": [47, 58, 151, 166, 168, 171, 174, 175, 176, 185, 191, 202, 205, 229, 236, 263, 293, 321, 327, 389, 494, 495, 520, 575, 964, 1098, 1099, 1153, 1249, 1487, 1674, 1681, 1682, 1734, 1794, 1796, 1798, 1949, 1951, 1953, 1983, 2022, 2040], "_register_pytree_nod": 47, "sharding_strategi": 49, "auto_wrap_polici": 49, "backward_prefetch": 49, "backwardprefetch": [49, 1951], "backward_pr": [49, 1249, 1487], "mixed_precis": [49, 1674], "ignored_modul": 49, "param_init_fn": 49, "sync_module_st": 49, "forward_prefetch": [49, 1986], "limit_all_gath": [49, 1986], "use_orig_param": 49, "ignored_st": 49, "inspir": [49, 1744, 1983, 2037], "deepspe": 49, "shorten": 49, "sharded_modul": 49, "0001": [49, 58, 1078, 1294, 1475, 1610, 1738, 1768, 1953, 2002], "stale": 49, "dev_id": 49, "no_sync": [49, 1674], "ping": 49, "77724": 49, "isol": [49, 58, 1665, 1968, 2002, 2004, 2045], "summon_full_param": 49, "illeg": [49, 1981, 2033], "shard_grad_op": 49, "unshard": [49, 1986], "full_shard": 49, "with_grad": 49, "reacquir": 49, "gap": [49, 860, 1800, 1951, 2006, 2043], "delai": [49, 481, 1674, 2013, 2035], "nccl_cross_nic": 49, "cpuoffload": [49, 1951], "modulewrappolici": 49, "custompolici": 49, "proceed": [49, 1000, 1361, 1440, 2012, 2013], "nonwrapped_numel": 49, "travers": [49, 831, 1674, 1982, 1983, 2012, 2024, 2025, 2038], "subtre": 49, "size_based_auto_wrap_polici": 49, "exce": [49, 1327, 1981, 1992], "100m": 49, "numel": [49, 430, 439, 965, 987, 1128, 1234, 1953, 1969, 1978, 2001, 2015], "custom_auto_wrap_polici": 49, "min_num_param": 49, "1e8": 49, "my_auto_wrap_polici": 49, "functool": [49, 52, 60, 836, 1859, 1983, 2022], "1e5": 49, "mixedprecis": [49, 1951], "granular": [49, 76, 1263, 1977, 2043], "is_meta": [49, 2001, 2035], "reset_paramet": 49, "torchdistx": 49, "deferred_init": 49, "materialize_modul": 49, "my_init_fn": 49, "fullstatedictconfig": [49, 1951], "flatparamet": 49, "unifi": [49, 1951, 1970], "check_is_root": 49, "clip_grad_norm_": [49, 1678, 1977], "max_norm": [49, 740, 741, 1429, 1430, 1583, 1584, 1678, 1679, 1953, 1977], "norm_typ": [49, 740, 741, 1429, 1430, 1454, 1455, 1456, 1583, 1584, 1613, 1614, 1615, 1678, 1679, 1953], "clip": [49, 983, 1678, 1679, 1680, 1953, 1972, 1984, 2000, 2001], "infin": [49, 985, 1239, 1241, 1243, 1244, 1377, 1399, 1480, 1481, 1482, 1617, 1618, 1619, 1679, 1743, 1852, 1864, 2015, 2016], "no_shard": 49, "largest": [49, 585, 938, 1141, 1281, 1302, 1304, 1306, 1307, 1322, 1630, 1689, 1904, 1953, 1954, 1955, 2040, 2044, 2048], "fp32": [49, 776, 789, 812, 1082, 1674, 1981, 1986, 1993, 2006, 2007, 2009, 2037], "flatten_sharded_optim_state_dict": 49, "sharded_optim_state_dict": 49, "shard_full_optim_state_dict": 49, "fsdp_modul": 49, "root_onli": 49, "full_optim_state_dict": 49, "optim_input": 49, "rank0_onli": 49, "get_state_dict_typ": 49, "state_dict_typ": 49, "statedictset": [49, 1951], "assertionerror": [49, 58, 60, 62, 67, 69, 80, 729, 1736, 2022, 2045], "differen": 49, "intercept": [49, 58, 1983, 2036], "occurr": [49, 398, 889, 932, 1247, 1350, 1715, 1918, 1919, 2033], "statedicttyp": 49, "fulloptimstatedictconfig": [49, 1951], "set_state_dict_typ": 49, "save_a_checkpoint": 49, "load_a_checkpoint": 49, "optim_state_dict_to_load": 49, "is_named_optim": 49, "load_directli": 49, "original_osd": 49, "namedoptim": 49, "keyedoptim": 49, "torchrec": [49, 1951], "gossipgrad": [49, 1674], "latter": [49, 682, 786, 1249, 1457, 1487, 1494, 1984, 1990, 1992, 1994], "rekey_optim_state_dict": 49, "optim_state_key_typ": 49, "loadabl": [49, 1950], "wrapped_model": 49, "wrapped_optim": 49, "full_osd": 49, "nonwrapped_model": 49, "nonwrapped_optim": 49, "rekeyed_osd": 49, "optimstatekeytyp": 49, "param_id": 49, "osd": 49, "param_nam": 49, "sharded_osd": 49, "scatter_full_optim_state_dict": 49, "new_model": 49, "new_optim": 49, "resid": [49, 57, 192, 285, 333, 1321, 1674, 1981, 2004, 2011], "remap": [49, 84, 1253, 1257, 1321, 1342, 1950, 1965, 2010], "state_dict_config": 49, "optim_state_dict_config": 49, "descend": [49, 58, 132, 537, 871, 1249, 1313, 1314, 1487, 1857, 1885, 1953, 2040], "transpar": [49, 1982, 2004, 2011, 2013], "sharded_state_dict": 49, "shardedstatedictconfig": [49, 1951], "offload_to_cpu": 49, "optimstatedictconfig": [49, 1951], "param_state_dict": 49, "statedictconfig": [49, 1951], "writeback": 49, "summon": 49, "portion": [49, 1146, 1423, 1518, 1633, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 2007, 2036, 2045], "discard": [49, 1246, 1307, 1692, 1950, 1954, 1966], "redundantli": [49, 1977], "materi": [49, 895, 899, 900, 901, 980, 1547, 1548, 1549, 1676, 1677, 1755, 1808, 1809, 1983, 2035], "throughput": [49, 1952, 1980, 1981, 1986], "backward_post": 49, "altogeth": [49, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755], "contend": 49, "volum": [49, 1212], "_hybrid_shard_zero2": 49, "freed": [49, 146, 888, 909, 1006, 1054, 1968, 1981, 1986, 1988, 2011, 2017, 2030, 2047], "param_dtyp": 49, "reduce_dtyp": 49, "buffer_dtyp": 49, "keep_low_precision_grad": 49, "cast_forward_input": 49, "cast_root_forward_input": 49, "_module_classes_to_ignor": 49, "batchnorm": [49, 695, 696, 1163, 1249, 1259, 1487, 1526, 1674, 1683, 1684, 1685, 1686, 1964, 1972, 1978, 1990, 2002, 2004, 2006, 2008, 2009], "_batchnorm": [49, 1683, 1685], "kept": [49, 53, 58, 692, 774, 780, 1401, 1402, 1403, 1449, 1450, 1451, 1526, 1603, 1662, 1955, 1968, 1986, 2009, 2015], "permit": [49, 1170, 1178, 2015], "thereaft": 49, "local_state_dict": 49, "upcast": 49, "recast": 49, "offload_param": 49, "cfg": 49, "finetun": [49, 1249, 1487], "model_fn": 49, "my_checkpoint": 49, "_use_dtensor": 49, "localstatedictconfig": [49, 1951], "shardedoptimstatedictconfig": [49, 1951], "localoptimstatedictconfig": [49, 1951], "love": 50, "hear": 50, "vmap": [50, 52, 53, 58, 900, 901, 903, 905, 909, 914, 915, 1156, 1159, 1160, 1162, 1164], "arbitrarili": [50, 55, 508, 1252, 1557, 1955, 1978, 1983, 1984], "stock": [50, 55], "ensembl": [50, 53, 55, 1164], "maml": [50, 55], "vjp": [50, 53, 54, 884, 885, 895, 900, 901, 1160, 1166, 1934, 1983, 1984], "whirlwind": 50, "tour": 50, "ux": [50, 55, 1168, 2006, 2038], "jacrev": [51, 53, 54, 905, 1158, 1159, 1984], "functional_cal": [51, 53, 1164, 2035], "running_mean": [52, 1163, 1249, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1526, 1562, 1602, 1953, 1990, 1995, 2040], "running_var": [52, 1163, 1249, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1526, 1562, 1602, 1953, 1995, 2040], "groupnorm": [52, 1593], "anywher": [52, 1977], "batchnorm2d": [52, 708, 711, 713, 718, 809, 1259, 1423, 1461, 1562, 1964, 1978, 1990, 2006, 2008], "track_running_stat": [52, 746, 747, 748, 1163, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1995], "resnet": [52, 1950, 1952, 1954, 1990, 2003, 2020, 2024], "regnet": 52, "norm_lay": 52, "resnet18": [52, 58, 1950, 1952, 1954, 1965, 2003, 2043], "num_group": [52, 744, 1441, 1593, 1953], "fragil": 52, "replace_all_batch_norm_modules_": 52, "upstream": [53, 1996], "reflect": [53, 453, 515, 551, 1150, 1151, 1154, 1246, 1414, 1415, 1416, 1463, 1464, 1465, 1508, 1509, 1510, 1592, 1631, 1724, 1769, 1881, 1952, 1953, 1985, 2019, 2030], "coupl": [53, 77, 1952, 1989, 1997, 2012, 2030, 2044], "jvp": [53, 54, 885, 890, 893, 894, 895, 899, 900, 901, 1162, 1983], "jacfwd": [53, 54, 905, 1158, 1984], "carefulli": [53, 57, 481, 1959, 1984, 2003, 2034, 2036], "make_functional_with_buff": 53, "hurri": 53, "gist": [53, 788, 1987, 2038, 2039], "emul": [53, 794, 1956, 1983], "fmodel": 53, "compute_loss": [53, 55, 1154, 1156], "predict": [53, 481, 1391, 1400, 1440, 1575, 2002, 2020, 2027], "And": [53, 792, 819, 1076, 1077, 1154, 1177, 1249, 1271, 1347, 1352, 1406, 1487, 1923, 1925, 1978, 1983, 1984, 1986, 1996, 2000, 2006, 2025, 2031, 2036, 2037, 2038], "argnum": [53, 1156, 1157, 1158, 1159, 1160], "carri": [53, 332, 792, 833, 834, 852, 853, 1959, 1979, 2006], "stack_module_st": 53, "num_model": [53, 1164], "in_featur": [53, 715, 723, 724, 727, 728, 751, 759, 1164, 1249, 1391, 1472, 1474, 1487, 1665, 1688, 1689, 1690, 1722, 1723, 1726, 1963, 1990], "out_featur": [53, 715, 723, 724, 727, 728, 751, 759, 1164, 1249, 1404, 1472, 1474, 1487, 1665, 1688, 1689, 1690, 1722, 1723, 1726, 1963, 1990], "base_model": 53, "clearer": [53, 1306, 1755, 1983, 1998], "call_single_model": 53, "aotautograd": [53, 675, 1961, 1982, 2034, 2035, 2036, 2045], "stori": [53, 1987], "grad_x": [54, 1984, 2035], "has_aux": [54, 1156, 1157, 1159, 1160, 1161, 1165], "mental": [54, 1155], "absenc": [54, 2027], "unbind": [54, 1166, 1934, 1951, 1953, 1969, 2001, 2019], "presenc": [54, 58, 1259, 1378, 1992, 2003, 2015, 2041], "pop": [54, 934, 1058, 1488, 1497, 2001, 2004, 2005, 2038], "lst": 54, "in_dim": [54, 55, 887, 900, 901, 1156, 1166, 1934, 1984], "batchedtensor": 54, "batched_tensor_input": 54, "new_": [54, 1981, 2021], "new_zero": [54, 1953, 2001], "new_empti": [54, 1953, 1959, 2001], "diag_emb": [54, 1087, 1285, 1286, 1313, 1885, 1953, 2001], "vec": [54, 103, 104, 419, 685, 1375, 1725, 1953, 2015, 2040], "copy_": [54, 1155, 1539, 1952, 1953, 1969, 1981, 2017], "arithmet": [54, 940, 943, 957, 1305, 1810, 1956, 1966, 1969, 1970, 1993, 2006, 2018], "extra_arg": 54, "theoret": 54, "custom_dot": 54, "lax": 54, "while_loop": 54, "is_nonzero": [54, 1953, 2001, 2015, 2035], "rag": 54, "unclear": [54, 612], "add_nois": 54, "prng": 54, "cos_x": [55, 1156], "neg_sin_x": [55, 1156], "feature_s": [55, 1156, 1166, 1934], "feature_vec": [55, 1156, 1166, 1934], "mseloss": [55, 1156, 1447, 1518, 1624, 1981, 1982], "grad_weight_per_exampl": [55, 1156], "cotang": [55, 1165], "vjp_fn": [55, 1165], "out_tang": 55, "hessian0": 55, "hessian1": 55, "hess": [55, 1158], "set_overwrite_module_params_on_convers": [56, 1951], "get_overwrite_module_params_on_convers": [56, 1951], "set_swap_module_params_on_convers": [56, 1951], "swap_tensor": [56, 1951], "get_swap_module_params_on_convers": [56, 1951], "rpc_async": [57, 1955, 2001, 2011, 2013], "add_done_callback": 57, "fut": [57, 1252, 1674, 1980, 2011], "set_result": [57, 1674, 2011], "haven": [57, 1990], "set_except": 57, "baseexcept": 57, "valueerror": [57, 60, 80, 889, 932, 1247, 1694, 1695, 1715, 1718, 1983, 1998, 2004, 2022, 2044], "twice": [57, 612, 904, 1162, 1977, 1978, 1985, 1987, 2034], "slow_set_futur": 57, "sleep": 57, "cb1": 57, "cb2": 57, "dedic": [57, 1981], "pool": [57, 761, 762, 763, 764, 777, 778, 998, 1032, 1033, 1043, 1054, 1358, 1359, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1434, 1435, 1454, 1455, 1456, 1480, 1481, 1482, 1483, 1484, 1485, 1488, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1561, 1587, 1588, 1613, 1614, 1615, 1617, 1618, 1619, 1789, 1790, 1951, 1980, 1981, 1983, 1990, 1992, 2008, 2011, 2030], "didn": [57, 1983, 1986, 1996, 2002], "cb_fut": 57, "chain_cb_fut": 57, "cb": [57, 2011], "held": [57, 998, 1022, 1050, 1360, 1977, 2037], "collect_al": [57, 1951], "fut0": 57, "fut1": [57, 2011], "fut_list": 57, "wait_al": [57, 1951], "toolkit": 58, "clamp": [58, 182, 183, 794, 797, 963, 1256, 1399, 1440, 1592, 1603, 1662, 1953, 1964, 1969, 2000, 2001, 2006, 2008, 2009, 2016, 2022, 2040], "call_modul": [58, 76, 2044], "call_method": [58, 76, 2031, 2032, 2038], "feed": [58, 1952, 1985, 1990, 2024, 2034], "theses": 58, "callsit": 58, "constitut": 58, "tracer_class": 58, "gm": [58, 2031, 2032, 2034, 2038, 2044, 2045], "treatment": 58, "topk": [58, 1953, 1969, 2001, 2040], "print_tabular": [58, 2031, 2032, 2038], "opcod": [58, 2003, 2031, 2032, 2038], "linear_weight": 58, "linear_1": 58, "topk_1": 58, "pose": [58, 2012], "explor": [58, 75, 1950, 1978, 1990, 2003, 2047], "edit": [58, 1959, 2003, 2019], "lint": 58, "inserting_aft": [58, 2044], "new_nod": 58, "replace_all_uses_with": [58, 2044], "tediou": 58, "unwieldi": 58, "fusion": [58, 675, 787, 809, 855, 856, 967, 1251, 1258, 1263, 1264, 1265, 1266, 1681, 1682, 1964, 1990, 2006, 2035, 2037, 2044, 2045], "imagin": [58, 2011, 2036], "requisit": 58, "relu_decomposit": 58, "decomposition_rul": 58, "constitu": [58, 1971, 1983, 1986], "new_graph": 58, "graphappendingtrac": 58, "proxy_arg": 58, "output_proxi": 58, "node_copi": 58, "ari": [58, 2000], "unari": [58, 1159, 1160, 1530, 1532, 1534, 1956, 1969], "organiz": 58, "shapeprop": 58, "named_modul": [58, 1249, 1487, 1990], "args_it": 58, "load_arg": 58, "map_arg": 58, "fetch_attr": 58, "target_atom": 58, "attr_itr": 58, "hasattr": [58, 1923, 1953, 1983, 2006, 2032, 2038], "nonexist": [58, 1954, 1955], "elif": [58, 1256, 1452, 1954, 1955, 1988, 1998, 2038, 2044], "self_obj": 58, "encompass": 58, "prove": [58, 1968], "disprov": 58, "led": [58, 2047], "auxiliari": [58, 1156, 1157, 1159, 1160, 1161, 1165, 1950, 1989], "nondeterminist": [58, 309, 311, 317, 494, 510, 512, 938, 1098, 1099, 1100, 1271, 1406, 1414, 1415, 1416, 1417, 1418, 1419, 1483, 1484, 1485, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1584, 1592, 1603, 1631, 1643, 1662, 1663, 1664, 1827, 1922, 2031], "unord": [58, 1488, 1497], "nondetermin": [58, 915, 1994], "dedupl": [58, 2000], "straightforward": [58, 1962, 1971, 1990, 2002, 2015, 2031, 2038], "torchvis": [58, 1950, 1951, 1952, 1954, 2000, 2003, 2006, 2020, 2024, 2043], "transformed_resnet18": 58, "input_imag": 58, "224": [58, 856, 857, 1952, 1954, 2000, 2043], "margin": [58, 1420, 1446, 1479, 1490, 1492, 1535, 1536, 1573, 1600, 1616, 1625, 1659, 1660, 1953, 2020], "commut": 58, "toolbox": 58, "tradit": [58, 1534, 1997, 1998], "luckili": 58, "my_pass": 58, "my_module_transform": 58, "input_valu": 58, "prompt": [58, 1950, 1996], "set_trac": [58, 1254, 1261, 1267, 1952], "examin": [58, 1990, 2000, 2005, 2047], "undergon": 58, "subclassm": 58, "pre_trac": 58, "post_trac": 58, "sake": 58, "tabular": [58, 675, 1961], "transform_graph": 58, "session": [58, 1998], "luck": 58, "input_nod": 58, "stepwis": 58, "breakpoint": [58, 1955, 2044], "excel": [58, 2036], "onlin": [58, 1740], "realpython": 58, "pycharm": 58, "vscode": 58, "graphic": [58, 1967, 1996, 2043], "parlanc": 58, "func_to_trac": 58, "dyn": 58, "155": 58, "__bool__": [58, 1953, 1955], "to_bool": 58, "traceerror": [58, 2006], "hyper": [58, 1518, 1954, 2020], "do_activ": 58, "512": [58, 1530, 1531, 1532, 1533, 1534, 1981, 2029], "without_activ": 58, "with_activ": 58, "traced_without_activ": 58, "traced_with_activ": 58, "concrete_arg": 58, "truli": [58, 1959, 1997, 2000], "__torch_function__": [58, 2046], "161": 58, "len_1": 58, "sqrt_1": 58, "truediv": [58, 2031, 2032], "mycustomtrac": 58, "traced_graph": 58, "runnabl": [58, 1977, 2000, 2020, 2045], "myspecialsubmodul": 58, "neg_1": 58, "is_leaf_modul": [58, 2025], "sparse_coo_tensor": [58, 539, 576, 1866, 1953, 1957, 2001, 2015], "ones_lik": [58, 1159, 1160, 1165, 1953, 1971, 1981, 1983, 1984, 1990, 2001], "zeros_lik": [58, 895, 897, 899, 900, 901, 1953, 1957, 1971, 1981, 2001, 2015], "viabl": [58, 1981], "torch_randn": 58, "gotcha": 58, "dropoutrepro": 58, "assert_clos": [58, 1114, 1116, 1117, 1122, 1123, 1128, 1129, 1130, 1132, 1134, 1951, 1952, 2022], "greatest": [58, 1192, 1377, 2000, 2022], "6207983493804932": 58, "dropoutrepro2": 58, "overspeci": [58, 967, 2033], "ph": 58, "shouldn": [58, 998, 2003, 2015, 2019], "fn_or_nam": 58, "callfunct": 58, "my_custom_funct": 58, "fn_to_be_trac": 58, "reassign": [58, 1981], "regener": 58, "unset": [58, 930, 1993], "add_submodul": 58, "subpath": 58, "get_submodul": [58, 1249, 1487], "delete_all_unused_submodul": 58, "delete_submodul": 58, "print_read": [58, 2032], "print_output": 58, "date": [58, 2003], "pythoncod": 58, "fxmodul": 58, "owning_modul": 58, "tracer_cl": 58, "tracer_extra": 58, "the_funct": 58, "type_expr": 58, "create_nod": 58, "method_nam": 58, "0th": [58, 1166, 1934], "inserting_befor": 58, "influenc": [58, 1998, 2015], "eliminate_dead_cod": 58, "dead": [58, 2044], "topolog": [58, 2000], "attr_1": 58, "is_impur": 58, "bad": [58, 60, 1968, 2000, 2003, 2006, 2034, 2043], "erase_nod": 58, "to_eras": 58, "eras": [58, 60, 65, 66, 2033], "qualified_nam": 58, "graph_copi": 58, "val_map": 58, "return_output_nod": 58, "opoverload": [58, 1959], "companion": 58, "__exit__": [58, 1955, 1956, 2003], "arg_transform": 58, "value_remap": 58, "_node_list": 58, "doubli": 58, "on_generate_cod": 58, "make_transform": 58, "transformcodefunc": 58, "insert_pdb": 58, "bodi": [58, 60, 69, 72, 1261, 1952, 1954, 1955, 1956, 1998, 2032, 2045], "current_tran": 58, "stuff": [58, 2034], "default_valu": 58, "_not_": 58, "tabul": 58, "process_input": 58, "process_output": 58, "python_cod": 58, "root_modul": [58, 788, 2008], "set_codegen": 58, "return_typ": [58, 692, 1076, 1077, 1212, 1271, 1309, 1347, 1350, 1352, 1355, 1379, 1857, 1904, 1909], "printout": [58, 1042, 1055, 2032], "all_input_nod": 58, "format_nod": 58, "placeholder_nam": 58, "maybe_return_typenam": 58, "autogener": [58, 1984], "insert_arg": 58, "impur": 58, "normalized_argu": 58, "arg_typ": 58, "kwarg_typ": 58, "normalize_to_only_use_kwarg": 58, "vararg": 58, "argskwargspair": 58, "bx": 58, "ax": [58, 960, 1281, 1295, 1299, 1310, 1311, 1312, 1340, 1351, 1495, 1505, 1909, 2000, 2035], "prev": [58, 1753], "replace_with": 58, "delete_user_cb": 58, "propagate_meta": 58, "replace_input_with": 58, "old_input": 58, "new_input": 58, "create_proxi": 58, "record_stack_trac": 58, "dynamo": [58, 75, 675, 1171, 1961, 1982, 2031, 2033, 2034, 2035, 2036, 2038, 2039, 2041, 2042, 2043, 2045], "outputgraph": [58, 2038], "update_arg": 58, "update_kwarg": 58, "autowrap_modul": 58, "autowrap_funct": 58, "create_arg": 58, "create_args_for_root": 58, "root_fn": 58, "is_modul": 58, "introspect": [58, 969, 2035], "disallow": [58, 2003, 2011, 2018, 2035, 2036], "proxy_factory_fn": 58, "attr": [58, 60, 62, 146, 1175, 1351, 1813], "attr_val": 58, "parameter_proxy_cach": 58, "module_qualified_nam": [58, 2025], "path_of_modul": 58, "some_hyperparamet": 58, "indexed_item": 58, "proxied_valu": 58, "garbage_collect_valu": 58, "run_nod": 58, "vice": [58, 453, 598, 1150, 1151, 1479, 1978, 2009, 2017, 2033], "versa": [58, 453, 598, 1150, 1151, 1479, 1978, 2009, 2017, 2033], "negsigmswapinterpret": 58, "call_self": 58, "args_tail": 58, "boxed_run": 58, "args_list": 58, "promptli": [58, 1322], "fetch_args_kwargs_from_env": 58, "map_nodes_to_valu": 58, "initial_env": 58, "enable_io_process": 58, "negsigmswapxform": 58, "nodes_map": [58, 2044], "subgraph_rewrit": [58, 2044], "m1": [58, 1932, 1933], "m2": [58, 1722, 1932, 1933, 2006], "traced_modul": [58, 1995, 2044], "despit": [58, 1265, 1266, 1981, 1987], "stack_1": 58, "stack_2": 58, "sum_2": 58, "max_1": 58, "max_2": 58, "exhaust": [60, 1674], "wih": 60, "escap": [60, 70], "hatch": [60, 70], "assumeconstantresult": [60, 71], "burn": [60, 71, 2030], "tracabl": [60, 71], "get_item": [60, 71], "l_x_": [60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 1998], "i64": [60, 65, 66, 70, 71], "slice_1": [60, 69, 71], "myautogradfunct": 60, "autogradfunct": 60, "allow_in_graph": [60, 2035], "mul_1": [60, 66, 2031], "mysubmodul": [60, 68, 69], "condbranchclassmethod": [60, 68, 69], "subm": [60, 68, 69], "condbranchnestedfunct": [60, 68, 69], "inner_true_fn": [60, 68, 69], "inner_false_fn": [60, 68, 69], "condbranchnonlocalvari": [60, 68, 69], "my_tensor_var": [60, 68, 69], "my_primitive_var": [60, 68, 69], "nonloc": [60, 63, 68, 69, 1956], "_lifted_tensor_constant0": [60, 68, 69], "lift_fresh_copi": [60, 68, 69, 2001], "sub_1": [60, 68, 69], "constant_tensor": [60, 68, 69], "condclosedovervari": [60, 63, 68], "l_pred_": [60, 63, 68], "condoperand": [60, 68, 69], "l_y_": [60, 66, 68, 69, 70, 71, 72], "sym_size_int": [60, 68, 69], "valuerang": [60, 68, 69, 70, 71, 1170], "oo": [60, 68, 69], "is_bool": [60, 68, 69, 70, 71], "condpred": [60, 68, 69], "constrainassizeexampl": [60, 70, 71], "hint": [60, 70, 71, 675, 998, 1032, 1171, 1178, 1184, 1250, 1493, 1530, 1531, 1532, 1533, 1534, 1952, 1954, 1955, 1981, 1983, 1998, 2011, 2033, 2038], "constrain_as_valu": [60, 70, 71], "constrain_as_s": [60, 70, 71], "_constrain_as_s": [60, 70, 71], "_local_scalar_dens": [60, 70, 71, 2001, 2040], "u4": [60, 70, 71], "ge": [60, 70, 71, 281, 1205, 1343, 1438, 1443, 1444, 1457, 1596, 1597, 1953, 1969, 2001, 2040], "scalar_tensor": [60, 70, 71, 1953, 2001, 2040], "_assert_async": [60, 70, 71, 2001], "msg": [60, 70, 71, 1057, 1059, 1171, 2005, 2022], "le": [60, 70, 71, 356, 1177, 1277, 1443, 1444, 1596, 1597, 1953, 1969, 2001, 2022, 2040], "scalar_tensor_1": [60, 70, 71], "_assert_async_1": [60, 70, 71], "sym_constrain_range_for_s": [60, 70, 71, 1953, 2001], "u0": [60, 70, 71], "u1": [60, 70, 71], "constrainasvalueexampl": [60, 70, 71], "_constrain_as_valu": [60, 70, 71], "sym_constrain_rang": [60, 70, 71, 1953, 2001], "test_decor": 60, "l_args_1_": [60, 65, 66], "l_args_2_": 60, "dynamicshapeassert": [60, 61], "dynamicshapeconstructor": [60, 69], "dynamicshapeifguard": [60, 65, 69], "dynamicshapemap": [60, 69, 72], "l_xs_": [60, 69, 72], "body_graph_0": [60, 69, 72], "map_impl": [60, 69, 72], "dynamicshapesl": [60, 69], "slice_2": [60, 69], "9223372036854775807": [60, 69, 889, 932, 1247, 1715, 1966, 2047], "dynamicshapeview": [60, 69], "new_x_shap": [60, 69], "support_level": [60, 66], "supportlevel": [60, 66], "fnwithkwarg": [60, 66], "pos0": [60, 66], "tuple0": [60, 66], "myarg": [60, 66], "mykw0": [60, 66], "mykwarg": [60, 66], "input0": [60, 66], "input1": [60, 66, 755, 1404, 1420, 1421, 1479, 1496, 1563, 1573, 1574, 1616, 1953, 1977, 2000], "arg_1": [60, 66], "arg_2": [60, 66], "arg_3": [60, 66], "l_mykw0_": [60, 66], "l_mykwargs_input0_": [60, 66], "l_mykwargs_input1_": [60, 66], "mul_2": [60, 66], "mul_3": [60, 66], "mul_4": [60, 66], "mul_5": [60, 66], "mul_6": [60, 66], "listcontain": [60, 61, 66, 69], "monkei": [60, 61, 66, 69, 1923], "cow": [60, 61, 66, 69], "pig": [60, 61, 66, 69], "listunpack": [60, 65, 66], "nestedfunct": [60, 63], "l_a_": [60, 63, 2032], "l_b_": [60, 63, 2032], "contextlib": [60, 64], "nullcontextmanag": [60, 64], "nullcontext": [60, 64], "pytreeflatten": 60, "tree_flatten": 60, "dim1_x": [60, 69], "scalaroutput": [60, 69], "anim": 60, "moo": 60, "specializedattribut": 60, "staticforloop": [60, 65], "unrol": [60, 65, 1954, 1955, 2000, 2035], "ret": [60, 65, 1983, 2011], "add_3": [60, 65], "add_4": [60, 65], "add_5": [60, 65], "add_6": [60, 65], "add_7": [60, 65], "add_8": [60, 65], "add_9": [60, 65], "staticif": [60, 65], "tensorsetattr": [60, 62], "setattr": [60, 62, 1955], "typereflectionmethod": [60, 62], "overli": [60, 62, 1983], "typereflectionmethodrewrit": [60, 62], "userinputmut": [60, 73], "not_supported_yet": [60, 62, 67, 69, 74], "dynamicshaperound": [60, 62, 69], "modelattrmut": [60, 67], "attr_list": [60, 67], "recreate_list": [60, 67], "optionalinput": [60, 67], "unexpectedli": [60, 67, 481, 2017, 2021], "torchsymmin": [60, 74], "sym_min": [60, 74], "0x7feca6eae310": [60, 74], "gain": [75, 1755, 1976, 2026, 2027, 2037, 2039], "fxe0010": [75, 1998], "diagnosticopt": [75, 77, 1998], "verbosity_level": [75, 77, 1998], "torch_log": [75, 77, 675, 967, 1961, 1982, 2032, 2033, 2035, 2045], "onnx_diagnost": [75, 77, 675], "fxe0008": [75, 1998], "onnxscript": [76, 1998, 1999, 2000], "torchlib": [76, 80], "fxonnxinterpret": 76, "onnx": [77, 78, 80, 81, 82, 675, 1716, 1717, 1735, 1736, 1737, 1951, 1970, 2006, 2026], "endors": 77, "noteworthi": 77, "_intern": [77, 82, 2017], "todo": [78, 79, 821, 854, 856, 857, 1178, 2025, 2034, 2041], "disregard": [80, 81, 83], "indexerror": [80, 1700, 1702], "typeerror": [80, 1705, 1983, 2004, 2022, 2046], "opschema": [80, 1998], "onnxfunct": [81, 83, 1998], "perfect": 81, "nearest": [81, 774, 780, 782, 1380, 1539, 1541, 1592, 1603, 1662, 1664, 1785, 1813, 1981], "highest": [81, 675, 1391, 1795, 1796, 1828, 2007, 2022], "stringent": 81, "op_level_debug": [81, 83, 1998], "elementwise_dtyp": 82, "_ref": 82, "type_promot": 82, "absent": [83, 1982], "signifi": 83, "g_cpu": 84, "g_cuda": 84, "bytetensor": [84, 1029, 1030, 1068, 1069, 1202, 1362, 1369, 1833, 1925, 2010, 2018, 2021], "2147483647": 84, "0x8000_0000_0000_0000": [84, 1342, 2010], "0xffff_ffff_ffff_ffff": [84, 1342, 2010], "random_devic": 84, "1516516984916": 84, "new_stat": [84, 1068, 1069, 1369, 1833, 1925, 2010], "void": [84, 1041, 1981, 1989, 2035], "g_cpu_oth": 84, "abs_": [88, 1953, 1969, 2021], "acosh": [92, 118, 862, 1953, 1969, 2001, 2040], "batch1": [95, 96, 147, 148, 681, 935, 1953], "batch2": [95, 96, 147, 148, 165, 681, 935, 1953], "tensor1": [97, 98, 99, 100, 682, 683, 1344, 1810, 1953], "tensor2": [97, 98, 99, 100, 310, 400, 682, 683, 1344, 1810, 1953], "mat1": [101, 102, 549, 684, 1214, 1270, 1354, 1858, 1862, 1863, 1877, 1953, 2040], "mat2": [101, 102, 409, 549, 684, 947, 1214, 1270, 1354, 1858, 1862, 1863, 1877, 1953, 2040], "mat": [103, 104, 535, 685, 1375, 1791, 1855, 1858, 1877, 1953, 2020], "vec1": [105, 106, 686, 1953], "vec2": [105, 106, 284, 456, 686, 1195, 1773, 1953], "keepdim": [108, 110, 111, 112, 114, 130, 131, 350, 388, 403, 405, 406, 407, 410, 424, 425, 426, 427, 448, 465, 474, 550, 560, 610, 688, 690, 691, 692, 694, 869, 870, 1271, 1302, 1306, 1319, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1379, 1380, 1381, 1496, 1632, 1729, 1782, 1785, 1879, 1880, 1884, 1929, 1930, 1953, 1969, 2016, 2040], "rtol": [109, 340, 689, 914, 915, 1238, 1304, 1307, 1737, 1952, 1953, 2022], "atol": [109, 340, 689, 914, 915, 1238, 1304, 1307, 1316, 1737, 1952, 1953, 1983, 2022], "08": [109, 340, 689, 945, 1238, 1296, 1421, 1501, 1636, 1741, 1742, 1743, 1745, 1751, 1752, 1755, 1768, 1839, 1953], "equal_nan": [109, 340, 689, 1238, 1953, 2022], "arcco": [117, 1953, 2001, 2022], "acosh_": [119, 1953, 1969], "arccosh": [119, 1953, 2001], "arcsin": [121, 876, 1953, 2001, 2015], "arcsinh": [123, 1953, 2001], "atan2_": [126, 1953, 1969], "arctan2": [126, 1953, 2001], "arctan": [127, 1953, 2001], "arctanh": [129, 1953, 2001], "asinh": [139, 864, 1953, 1969, 2001, 2015, 2040], "atan": [143, 626, 627, 865, 1953, 1969, 2001, 2015, 2040], "atanh": [145, 867, 1953, 1969, 2001, 2015, 2040], "wrt": [146, 914, 915], "60521": [146, 888], "issuecom": [146, 888], "867061780": [146, 888], "texttt": [149, 150, 689, 1238, 1391, 2022], "bernoulli": [150, 755, 1395, 1424, 1425, 1426, 1427, 1431, 1438, 1457, 1577, 1578, 1579, 1580, 1585, 1951, 1953, 1969, 2001, 2023], "preserve_format": [151, 166, 168, 171, 174, 175, 176, 185, 202, 205, 236, 263, 293, 321, 389, 520, 575, 964, 1099, 1153, 1734, 1794, 1796, 1798, 1949, 1983, 2018], "minlength": [152, 938, 1953], "bitwise_and": [154, 1953, 2001, 2040], "bitwise_left_shift": [156, 1953, 2001], "bitwise_not": [158, 1953, 1969, 2001, 2040], "bitwise_or": [160, 1953, 2001, 2040], "bitwise_right_shift": [162, 1953, 2001], "bitwise_xor": [164, 1953, 2001, 2040], "uint8": [168, 238, 612, 688, 694, 1150, 1783, 1786, 1787, 1810, 2006, 2017, 2018, 2020, 2021, 2048], "cauchi": [169, 1951, 1978, 1987, 2001, 2023], "dfrac": [169, 373, 603, 1421, 1574, 1689, 1690, 1723, 1726], "complex32": [175, 1414, 1415, 1416, 1567, 1568, 1569, 1735, 2021, 2022], "int8": [176, 443, 724, 939, 940, 941, 942, 943, 944, 1150, 1331, 1332, 1333, 1334, 2006, 2009, 2015, 2017, 2018, 2021, 2048], "input2": [179, 454, 455, 512, 755, 1404, 1420, 1421, 1479, 1496, 1563, 1573, 1574, 1616, 1953, 1977, 2000], "clamp_": [184, 1953, 1969], "uncoalesc": [186, 324, 1870], "coo": [186, 319, 324, 338, 609, 1214, 1858, 1862, 1867, 1868, 1869, 1870, 1871, 1872, 1951, 1962, 2018, 2022], "inttensor": [187, 204, 1224, 1339, 1340, 1429, 2018, 2021], "csr": [187, 204, 339, 578, 583, 1430, 1858, 1862, 1863, 1869, 1872, 1962, 2022], "sparse_csr": [187, 204, 578, 583, 1862, 1863, 1865, 1869, 1872, 2015], "nnz": [187, 539, 578, 579, 580, 582, 583, 1178, 1383, 1860, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1959, 2015], "int32": [187, 204, 309, 317, 321, 442, 612, 951, 1099, 1111, 1112, 1147, 1150, 1151, 1280, 1291, 1292, 1293, 1311, 1339, 1406, 1783, 1820, 2006, 2015, 2017, 2018, 2021, 2037, 2048], "mkl": [187, 204, 1951, 1980, 1996, 2001, 2015], "routin": [187, 204, 871, 1322, 1857, 1885, 2015], "downcast": [187, 204], "to_sparse_csr": [187, 204, 579, 580, 1859, 1862, 1863, 1953, 2001, 2015], "conj_phys": [190, 980, 1953, 2001, 2015, 2040], "contiguous_format": [191, 327, 494, 495, 1098, 1674, 1681, 1682, 2018], "non_block": [192, 205, 575, 598, 1249, 1487, 1715, 1953, 1981, 2017, 2040], "copysign": [194, 1953, 2001], "fweight": [201, 987, 1953], "aweight": [201, 987, 1953], "sparse_dim": [214, 540, 541, 1858, 1862, 1866, 1870, 1953, 2001, 2015], "dim1": [221, 223, 224, 564, 587, 588, 1085, 1087, 1088, 1284, 1888, 1906, 1953, 2040], "dim2": [221, 223, 224, 1085, 1087, 1088, 1284, 1953, 2040], "digamma": [227, 1953, 1969, 2001, 2016, 2040], "laid": 229, "outermost": [229, 1203], "channels_last": [229, 1249, 1487, 1674, 1681, 1682, 2018], "rounding_mod": [231, 232, 233, 234, 1092, 1093, 1142, 1145, 1804, 1914, 1953, 2040], "split_size_or_sect": [237, 298, 614, 1873], "eq": [240, 1953, 1969, 2001, 2040], "erf": [243, 634, 635, 1953, 1969, 2001, 2015, 2016, 2040], "erfc": [245, 636, 637, 1953, 1969, 2001, 2016, 2040], "front": [250, 967, 1322, 1490, 1970, 1984], "lambd": [254, 294, 1442, 1524, 1595, 1652, 1738, 1953], "pdf": [254, 1406, 1848, 1978], "theori": [254, 1978, 1986], "fill_valu": [256, 441, 1152, 1153, 1406, 1953, 1981, 2040], "tall": [256, 1308, 1313, 1983], "start_dim": [259, 1136, 1432, 1953], "end_dim": [259, 1136, 1432, 1953], "float_pow": [265, 1953, 2001], "floor_divid": [269, 1092, 1953, 2001, 2015], "divisor": [272, 273, 484, 485, 763, 764, 1092, 1142, 1145, 1192, 1397, 1398, 1433, 1538, 1560, 1561, 1804, 1914], "fmod": [273, 1804, 1953, 2001, 2040], "mantissa": [276, 476, 1147, 1273, 1828, 1953, 1981, 1993], "gcd": [279, 1953, 2001, 2040], "geometr": [282, 774, 780, 1592, 1603, 1662, 1928, 1951, 2001, 2023, 2042], "ordin": [285, 1867, 1868, 1869, 1871, 1872, 2018], "greater_equ": [290, 1953, 2001], "hypot": [300, 1953, 2001, 2040], "igamma": [304, 1953, 2001, 2040], "igammac": [306, 1953, 2001, 2040], "3100": [307, 478, 1220, 1802], "3553j": [307, 478, 1220, 1802], "5445": [307, 478, 1220, 1802], "7896j": [307, 478, 1220, 1802], "6492": [307, 478, 1220, 1802], "0633j": [307, 478, 1220, 1802], "0638": [307, 478, 1220, 1802], "8119j": [307, 478, 1220, 1802], "3553": [307, 1220], "7896": [307, 1220], "0633": [307, 1220, 1296, 1971], "8119": [307, 1220], "index_add_": [308, 895, 897, 900, 1221, 1222, 1953, 1994], "index_copy_": [310, 1953], "index_fill_": [312, 1953, 1969], "index_put_": [314, 1953], "include_self": [317, 511, 512, 1223, 1819, 1953, 2040], "identit": 317, "floattensor": [317, 482, 681, 682, 683, 684, 685, 730, 914, 915, 935, 1429, 1430, 1490, 1530, 1826, 2018, 2021], "amax": [317, 512, 691, 692, 1862, 1953, 2001, 2040], "amin": [317, 512, 690, 692, 1862, 1953, 2001, 2040], "fill_": [317, 1249, 1275, 1487, 1805, 1953, 1969, 1990, 2017], "72": [317, 612, 1203, 2006], "uint8_t": [322, 1735], "retain_grad": [331, 1953, 1978, 2001], "requires_grad_": [331, 443, 1249, 1406, 1487, 1576, 1859, 1862, 1900, 1953, 1969, 1978, 2021, 2045], "n_fft": [347, 551, 1246, 1881, 1953], "hop_length": [347, 551, 1246, 1881, 1953], "win_length": [347, 551, 1246, 1881, 1953], "center": [347, 551, 774, 780, 1117, 1246, 1557, 1592, 1603, 1662, 1752, 1774, 1841, 1881, 1953, 1978, 2001, 2020], "onesid": [347, 551, 1246, 1881, 1953, 2040], "return_complex": [347, 551, 1246, 1881, 1953], "element_s": [349, 430, 1953, 1969, 2001, 2017], "lcm": [352, 1953, 2001], "ldexp": [354, 1147, 1953, 2001], "lerp": [358, 1953, 2001], "lt": [359, 391, 1177, 1276, 1952, 1953, 1969, 2001, 2031, 2032, 2040], "less_equ": [362, 1953, 2001], "lgamma": [364, 646, 647, 1953, 2001, 2040], "ln": [373, 1278, 2016], "logical_and": [379, 1953, 2001, 2040], "logical_not": [381, 1643, 1953, 1969, 1971, 2001, 2040], "logical_or": [383, 1953, 2001, 2040], "logical_xor": [385, 1953, 2001, 2040], "pivot": [392, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1339, 1340, 1341, 1784, 1953], "get_info": [392, 1339], "lu_data": [393, 1340, 1341, 1953], "lu_pivot": [393, 1340, 1341, 1953], "masked_fill_": [395, 1643, 1953, 1969, 1970], "booltensor": [396, 398, 730, 1343, 1530, 1937, 2018, 2021], "masked_scatter_": [397, 1953], "mvlgamma": [421, 1953, 2001], "posinf": [422, 423, 1377, 1953], "neginf": [422, 423, 1377, 1953], "nan_to_num": [423, 1953, 2001], "interpol": [426, 474, 780, 781, 782, 814, 1275, 1380, 1539, 1540, 1541, 1557, 1592, 1662, 1663, 1664, 1785, 1922, 1953, 2008], "ne": [434, 1689, 1723, 1731, 1953, 1969, 2001, 2040], "8182e": 440, "5765e": 440, "41": [440, 1100, 1308, 1665, 1722, 1784], "0545e": 440, "0949e": 440, "4842e": [440, 1100], "0000e": [440, 1100, 1140, 1327, 1336, 1377, 1722, 1839, 1841, 1842, 1847, 1848], "00": [440, 1100, 1140, 1327, 1336, 1377, 1722, 1736, 1839, 1841, 1842, 1847, 1848, 1952, 2000], "141592": [441, 1152], "1416": [441, 1081, 1152, 1900], "from_numpi": [443, 874, 875, 1824, 1900, 1959, 2035], "array_lik": [443, 874, 1867, 1868, 1869, 1870, 1871, 1872, 1900, 1971], "nextaft": [446, 1953, 2001, 2040], "fro": [448, 1281, 1302, 1306, 1319, 1700, 1709, 1729, 1953], "not_equ": [451, 1953, 2001], "resolve_conj": [453, 980, 1953, 2001], "resolve_neg": [453, 1953, 2001], "shorthand": [453, 1269], "input3": [455, 1953], "transpos": [455, 588, 589, 612, 687, 736, 737, 738, 959, 960, 1097, 1165, 1279, 1280, 1286, 1289, 1292, 1299, 1310, 1313, 1417, 1418, 1419, 1502, 1538, 1570, 1571, 1572, 1643, 1683, 1684, 1686, 1688, 1718, 1772, 1885, 1887, 1888, 1895, 1909, 1953, 1969, 1971, 1978, 1993, 2000, 2001, 2008, 2015, 2019, 2021, 2040], "polygamma": [461, 1953, 2001, 2016], "q_per_channel_axi": [468, 469, 1953, 2001], "zero_point": [469, 471, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 765, 767, 768, 769, 770, 772, 775, 776, 794, 797, 814, 815, 816, 817, 820, 847, 1111, 1112, 1786, 1787, 1788, 1789, 1790, 1953, 2006, 2007], "qtensor": [473, 1953], "uniform": [476, 603, 937, 1422, 1505, 1575, 1793, 1794, 1841, 1951, 1976, 2001, 2023, 2040], "queu": [481, 1004, 1981], "life": [481, 1001], "cycl": [481, 888, 1001, 1171, 1760, 1766, 1978, 2005], "gc": [481, 2013], "poll": 481, "realloc": [481, 967, 1224, 1981], "counterintuit": [481, 1978], "s1": [481, 1171], "some_comm_op": 481, "wouldn": [481, 1181, 2013, 2034], "chrome": [481, 926, 2005, 2039, 2043], "export_chrome_trac": [481, 2005, 2043], "cudacachingalloc": [481, 1981, 1986], "enable_grad": [483, 1957, 2023], "0100": [483, 870, 1303, 1786], "0200": 483, "0300": [483, 1995], "maxnorm": [486, 487, 1805, 1953], "tile": [488, 1953, 1981, 2001, 2015, 2035], "repeat_interleav": [488, 1922, 1953, 2001, 2008], "output_s": [489, 736, 737, 738, 761, 762, 1388, 1389, 1390, 1392, 1393, 1394, 1418, 1433, 1434, 1435, 1483, 1484, 1485, 1538, 1551, 1552, 1553, 1554, 1555, 1556, 1586, 1587, 1588, 1620, 1621, 1622, 1806, 1953, 1971, 2040], "is_leaf": [490, 1953, 1969, 1971, 2001, 2035], "saved_weight": 491, "loaded_weight": 491, "5503": 491, "4926": [491, 1990], "1158": 491, "8303": 491, "1007": 491, "9853": 491, "2316": 491, "6606": 491, "resiz": [494, 495, 519, 540, 541, 1150, 1151, 1155, 1539, 1592, 1603, 1953, 1969, 2001, 2017, 2040], "set_": [494, 1953], "shift": [500, 940, 943, 1117, 1124, 1395, 1401, 1402, 1403, 1431, 1526, 1585, 1811, 1953, 1956, 2040], "decim": [502, 503, 1813, 1953, 1993, 2048], "scatter_": [507, 510, 1817, 1953], "scatter_add_": [508, 509, 1818, 1922, 1953], "scatter_reduce_": [508, 511, 1819, 1953], "axi": [508, 510, 512, 817, 820, 978, 1096, 1111, 1137, 1191, 1215, 1786, 1806, 1811, 1812, 1936, 1953, 1959, 1984, 2000, 2004, 2006, 2035, 2040, 2044], "4600": 508, "2300": 508, "scatter_reduc": [512, 1922, 1953, 2001, 2040], "sgn": [517, 1146, 1837, 1953, 1969, 1971, 2001, 2015], "untypedstorag": [519, 552, 608, 1951, 1995, 2017], "int16": [520, 1150, 1332, 2015, 2017, 2018, 2021, 2048], "dense_dim": [538, 540, 541, 578, 579, 580, 582, 583, 1870, 1953, 2001, 2015], "nse": [539, 2015], "randint": [539, 938, 987, 1140, 1406, 1536, 1575, 1576, 1681, 1682, 1866, 1953, 1957, 1970, 2001, 2020, 2023], "6550": 539, "2397": 539, "1611": 539, "0779": [539, 1286, 1781, 1937], "2326": 539, "0558": 539, "4711": 539, "9678": 539, "5138": 539, "0411": 539, "9417": 539, "5158": 539, "0793": 539, "0036": [539, 1347], "2569": 539, "1055": 539, "sparse_coo": [539, 578, 1383, 1862, 1865, 1866, 1870, 2015, 2018], "split_siz": [542, 1873, 1953, 2040], "squeez": [548, 688, 690, 691, 692, 694, 1271, 1337, 1347, 1349, 1350, 1352, 1355, 1378, 1381, 1574, 1782, 1866, 1879, 1880, 1884, 1929, 1930, 1953, 1969, 2000, 2001, 2008, 2019, 2040], "pad_mod": [551, 1881, 1953], "typedstorag": [552, 1951, 1995, 2017], "untyped_storag": 552, "compute_uv": [562, 1313, 1314, 1885, 1953], "axis0": [563, 1887, 1953], "axis1": [563, 1887, 1953], "dim0": [564, 587, 588, 1888, 1906, 1953], "indices_or_sect": [573, 1095, 1213, 1901, 1935], "5044": 575, "0005": [575, 1764, 1770], "3310": 575, "0584": [575, 1885], "cuda0": [575, 1981, 1988, 2021], "masked_grad": [576, 1953], "sparse_mask": [576, 1953, 2001], "mkldnn": [577, 1259, 1951, 2001], "sparsedim": 578, "blocksiz": [578, 579, 580, 1867, 1868, 1869, 1953, 2015], "sparse_csc": [578, 582, 1865, 1869, 1871, 2015], "sparse_bsr": [578, 580, 1868, 1869, 2015], "sparse_bsc": [578, 579, 1867, 1869, 2015], "bsr": [578, 580, 1868, 1869, 2022], "bsc": [578, 579, 1867, 1869, 2022], "csc": [578, 582, 1869, 1871, 2022], "minu": [578, 579, 580, 582, 583, 2016], "crow_indic": [578, 580, 583, 1860, 1862, 1863, 1865, 1868, 1869, 1872, 1953, 2001, 2015, 2022], "col_indic": [578, 580, 583, 1862, 1863, 1865, 1868, 1869, 1872, 1953, 2001, 2015, 2022], "sparsecsr": [578, 1906, 2015], "row_indic": [579, 582, 1867, 1871, 1953, 2001, 2015, 2022], "ccol_indic": [579, 582, 1867, 1871, 1953, 2001, 2015, 2022], "_nnz": [581, 582, 583, 2001], "012766935862600803": 584, "5415473580360413": 584, "08909505605697632": 584, "7729271650314331": 584, "unitriangular": [589, 1312, 1909, 1953], "tril": [591, 1547, 1548, 1549, 1643, 1953, 2001, 2035], "triu": [593, 1694, 1909, 1953, 2000, 2001, 2035], "trunc": [597, 672, 673, 682, 1092, 1135, 1142, 1145, 1813, 1953, 1969, 2001, 2015, 2040], "sizedim": 602, "return_invers": [604, 605, 1918, 1919, 1953], "return_count": [604, 605, 1918, 1919, 1953], "unsqueez": [607, 1117, 1270, 1310, 1429, 1506, 1694, 1903, 1953, 1983, 2001, 2008, 2015, 2019, 2020, 2040], "subspac": [612, 1313, 1493, 1774, 1885, 1886], "span": [612, 1058, 1059, 1422, 1885, 2005, 2011], "foral": 612, "proportion": [612, 780, 1539, 1662], "9482": [612, 1226], "0310": 612, "4999": 612, "5316": 612, "1520": 612, "7472": 612, "5617": 612, "8649": 612, "4724": [612, 1990], "0334": 612, "2976": 612, "8499": 612, "2109": 612, "9913": 612, "9607": 612, "6123": 612, "1064483442": 612, "1124191867": 612, "1069546515": 612, "1089989247": 612, "1105482831": 612, "1061112040": 612, "1057999968": 612, "1084397505": 612, "1071760287": 612, "1123489973": 612, "1097310419": 612, "1084649136": 612, "1101533110": 612, "1073668768": 612, "1082790149": 612, "1088634448": 612, "1000000000": 612, "0047": 612, "0310j": 612, "5316j": 612, "7472j": 612, "8649j": 612, "0334j": 612, "8499j": 612, "9913j": 612, "6123j": 612, "202": 612, "154": [612, 1996], "59": [612, 1911, 1913], "182": 612, "243": [612, 1246, 1885], "253": 612, "188": 612, "185": [612, 2045], "252": [612, 1996], "191": 612, "63": [612, 1996, 2006], "240": 612, "227": 612, "165": 612, "190": 612, "146": 612, "106": 612, "205": 612, "112": [612, 2045], "206": 612, "189": 612, "95": [612, 1762, 1765, 1766], "147": 612, "43": 612, "246": [612, 2045], "87": 612, "235": 612, "226": 612, "254": [612, 1996], "111": [612, 1736, 2000], "117": 612, "177": 612, "28": [612, 741, 1080, 1907, 1998, 2000, 2032, 2039], "xlogi": [617, 1953, 2001, 2016], "inductor": [675, 967, 1961, 2001, 2006, 2026, 2027, 2030, 2031, 2032, 2033, 2035, 2037, 2039, 2042, 2043, 2045, 2047], "dist_c10d": 675, "dist_ddp": [675, 1982], "dist_fsdp": 675, "aot_graph": [675, 1961], "aot_joint_graph": [675, 1961], "ddp_graph": [675, 1961, 1982], "graph_cod": [675, 1961], "graph_break": [675, 1961, 2030, 2035, 2036, 2043], "graph_siz": 675, "recompiles_verbos": 675, "trace_sourc": 675, "trace_cal": 675, "output_cod": [675, 1961, 2035, 2037, 2045], "perf_hint": [675, 967], "post_grad_graph": 675, "cudagraph": [675, 967, 1032, 1981, 2026, 2035, 2037, 2039, 2042], "sym_nod": 675, "toggl": [675, 1981], "suppress": [675, 1955, 2010], "silenc": 675, "lowest": [675, 957, 1377, 1699, 1700, 1708, 1709, 1795, 1796, 1983, 2022], "notset": 675, "torchinductor": [675, 1961, 2026, 2027, 2032, 2033, 2035, 2037], "joint": [675, 1961], "ddpoptim": [675, 1961], "symnod": [675, 2033], "opter": 675, "unregist": [675, 1961, 1966, 2000], "cosin": [678, 679, 984, 985, 1420, 1421, 1574, 1758, 1759, 1766, 1843, 2002, 2035], "3348": 678, "5889": 678, "2005": [678, 1930, 2045], "1584": 678, "2294": [678, 1349], "2004": 678, "3690": 678, "7298": [678, 1803], "hyperbol": [679, 877, 880, 985, 1527, 1852, 1899], "uniform_": [679, 880, 937, 1951, 1953, 1969, 1976, 1983, 2016, 2023], "3192": 679, "9915": 679, "9674": 679, "7151": 679, "7791": 679, "3120": [679, 982], "2979": 679, "1341": 679, "_i": [680, 681, 682, 683, 684, 935, 937, 940, 943, 947, 962, 1092, 1142, 1273, 1275, 1372, 1535, 1777, 1781, 1797, 1800, 1835, 1882, 1937, 2016], "0202": 680, "0985": 680, "3506": [680, 1339], "6056": 680, "3944": 680, "9732": 680, "3497": 680, "6245": [680, 1281], "4022": [680, 1079, 1885], "3743": 680, "7724": 680, "5811": 680, "8017": 680, "7695": 680, "3930": 680, "3672": [680, 997, 1282], "1450": [680, 1866], "6971": 680, "0736": [680, 1990], "0994": 680, "3216": 680, "7845": 680, "1610": 680, "1868": 680, "4090": 680, "9902": [680, 997, 1282], "3667": [680, 982], "3925": 680, "6147": 680, "sum_": [681, 1246, 1301, 1318, 1396, 1397, 1398, 1414, 1415, 1416, 1422, 1454, 1455, 1456, 1475, 1490, 1494, 1496, 1879, 1880, 1881, 1902, 1907, 1929, 1930, 1931, 2016], "mathbin": [681, 684, 685, 935, 947, 1863], "doubletensor": [681, 682, 683, 684, 685, 935, 1826, 2018, 2021], "tensorfloat32": [681, 684, 935, 947, 1344, 1354, 1414, 1415, 1416, 1417, 1418, 1419, 1474, 1567, 1568, 1569, 1570, 1571, 1572, 1609, 1828, 1981, 1993], "rocm": [681, 684, 935, 947, 1344, 1354, 1414, 1415, 1416, 1417, 1418, 1419, 1439, 1458, 1474, 1951], "6311": 681, "0503": 681, "9768": [681, 1990], "0362": 681, "1653": 681, "8185": 681, "4255": [681, 1372], "6760": 681, "9453": 681, "5743": 681, "8202": 681, "3691": 681, "0943": 681, "1109": [681, 1440, 1848], "4730": [681, 1902], "histor": [682, 1054, 1426, 1980, 1990, 1995], "2312": [682, 1866], "6496": 682, "1312": 682, "0428": 682, "4292": 682, "1030": 682, "5369": 682, "9829": 682, "0430": 682, "8635": 683, "6391": 683, "6174": 683, "7617": 683, "5879": 683, "7388": 683, "8353": 683, "6249": 683, "6511": 683, "8716": 684, "4671": 684, "3746": 684, "7573": 684, "9555": 684, "8681": 684, "3768": 685, "5565": 685, "otim": [686, 1270, 1437, 1591], "conj": [687, 981, 1113, 1114, 1116, 1118, 1125, 1127, 1131, 1132, 1134, 1279, 1280, 1286, 1288, 1307, 1808, 1809, 1953, 1983, 1987, 2001, 2021, 2040], "mh": [687, 958, 959, 960, 1286, 1885, 1953, 2001, 2019, 2021], "lvert": [689, 1238, 1535, 1629, 2022], "rvert": [689, 1238, 2022], "leq": [689, 936, 937, 982, 1115, 1117, 1238, 1270, 1274, 1289, 1295, 1406, 1428, 1490, 1492, 1494, 1576, 1628, 1631, 1838, 1881, 1976, 2016], "elementwis": [689, 982, 1013, 1040, 1041, 1140, 1142, 1387, 1449, 1450, 1451, 1652, 1928, 1955, 1971, 1987, 2016], "07": [689, 814, 815, 816, 817, 820, 958, 1100, 1287, 1290, 1295, 1307, 1308, 1314, 1337, 1340, 1688, 1737, 1744, 1842, 1847, 1885, 2000], "09": [689, 1744, 1756, 1959, 2022], "8177": 690, "4878": 690, "2491": 690, "9130": 690, "7158": 690, "1775": 690, "0992": 690, "4817": 690, "0053": 690, "0164": 690, "3738": 690, "0507": [690, 2000], "9700": 690, "1106": 690, "0318": 690, "0816": [690, 1339], "6451": 691, "4866": [691, 2027], "2987": 691, "3312": 691, "5744": 691, "2980": [691, 1971], "8397": 691, "2713": 691, "9128": 691, "9214": 691, "7268": 691, "2995": 691, "9023": [691, 1280], "4853": 691, "9075": 691, "6165": 691, "180": [693, 1081, 1792], "14159": [693, 1900], "135": 693, "45": [693, 1402, 1403, 1450, 1451, 1526, 1722, 2000], "ao": [695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 2006, 2007, 2008], "batch_norm": [695, 696, 1259, 1953, 2001], "fuse": [695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 787, 788, 797, 799, 800, 801, 809, 842, 854, 855, 967, 1263, 1264, 1643, 1681, 1682, 1683, 1684, 1685, 1686, 1741, 1742, 1754, 1828, 1964, 1969, 1972, 2000, 2002, 2006, 2007, 2008, 2009, 2035, 2037, 2044], "3d": [696, 699, 702, 730, 735, 738, 762, 764, 769, 774, 1351, 1390, 1394, 1398, 1401, 1403, 1416, 1419, 1426, 1427, 1433, 1435, 1449, 1451, 1456, 1482, 1493, 1539, 1553, 1556, 1557, 1561, 1569, 1572, 1580, 1586, 1588, 1603, 1615, 1619, 1631, 1662, 1971, 1993, 2006, 2015, 2020], "bn": [697, 698, 699, 700, 701, 702, 809, 855, 1097, 1259, 1683, 1685, 1995, 2002, 2006, 2007], "qat": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 725, 726, 727, 728, 787, 788, 841, 2006, 2007, 2008], "dilat": [707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 767, 768, 769, 777, 778, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1463, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1482, 1538, 1567, 1568, 1569, 1570, 1571, 1572, 1586, 1617, 1618, 1619, 1661, 1789, 1790, 1953, 2000, 2040], "padding_mod": [707, 708, 709, 710, 711, 712, 713, 714, 720, 721, 722, 725, 726, 733, 734, 735, 736, 737, 738, 767, 768, 769, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468, 1592, 1953, 2040], "momentum": [707, 708, 709, 710, 711, 712, 718, 719, 731, 732, 746, 747, 748, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1526, 1562, 1602, 1745, 1752, 1754, 1760, 1766, 1768, 1953, 1990, 1992, 2002, 2040], "freeze_bn": [707, 708, 709, 710, 711, 712], "qconfig": [707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 783, 784, 786, 789, 790, 791, 792, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 2025], "batchnorm1d": [707, 710, 1460, 1526, 1562, 1995, 2008], "fakequant": [707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 728, 797, 857], "weight_fake_qu": [707, 708, 709, 710, 711, 712, 713, 714, 725, 726], "quant": [707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 726, 727, 785, 787, 788, 833, 856, 857, 1111, 1112, 2006, 2007], "batchnorm3d": [709, 712, 714, 719, 1462, 1526, 1562, 2008], "num_featur": [718, 719, 731, 732, 746, 747, 748, 1249, 1401, 1402, 1403, 1449, 1450, 1451, 1460, 1461, 1462, 1469, 1470, 1471, 1487, 1526, 1594, 1990], "qint8": [723, 724, 751, 756, 759, 760, 767, 768, 769, 776, 787, 789, 794, 815, 836, 853, 854, 856, 857, 1735, 1786, 1787, 2006, 2008, 2009, 2017, 2021, 2022], "from_float": [727, 733, 734, 735, 740, 741, 751, 759, 792, 812, 818, 821, 833, 2006], "qparams_dict": [727, 733, 734, 735, 759], "hidden_s": [729, 755, 756, 760, 1438, 1439, 1457, 1458, 1502, 1503, 1504, 1953], "num_lay": [729, 755, 1438, 1457, 1502, 1503, 1531, 1533, 1953, 1990], "batch_first": [729, 730, 755, 1438, 1457, 1493, 1502, 1503, 1530, 1532, 1534, 1716, 1718, 1719, 1721, 1953, 1985], "bidirect": [729, 755, 1438, 1457, 1502, 1503, 1953], "_lstmlayer": 729, "nnqa": 729, "h0": [729, 755, 757, 1438, 1457, 1502], "c0": [729, 757, 1457, 2045], "hn": [729, 755, 757, 1438, 1439, 1457, 1502], "cn": [729, 757, 1249, 1457, 1797], "weight_ih": [729, 1439, 1458, 1502, 1504], "weight_hh": [729, 1439, 1458, 1502, 1504], "embed_dim": [730, 1493], "num_head": [730, 1493, 1546, 1953], "add_bias_kv": [730, 1493], "add_zero_attn": [730, 1493, 1953], "kdim": [730, 1493], "vdim": [730, 1493], "dequant": [730, 783, 785, 787, 788, 794, 796, 856, 1953, 2001, 2007, 2009, 2022, 2024], "mha": [730, 1493, 1951], "conver": 730, "key_padding_mask": [730, 1493, 1953], "need_weight": [730, 1493, 1953], "attn_mask": [730, 1493, 1643, 1953], "average_attn_weight": [730, 1493, 1953], "is_caus": [730, 1493, 1533, 1534, 1549, 1643, 1953], "attn_output_weight": [730, 1493], "unmask": [730, 1530], "attn_weight": [730, 1493, 1643], "head": [730, 1391, 1493, 1530, 1532, 1534], "attn_output": [730, 1493], "quint8": [733, 734, 735, 736, 737, 738, 740, 741, 751, 767, 768, 769, 776, 787, 789, 794, 814, 815, 816, 817, 820, 822, 854, 856, 1735, 1786, 1787, 1788, 1789, 1790, 2006, 2008, 2009, 2017, 2021, 2022], "learnabl": [733, 734, 735, 736, 737, 738, 740, 741, 751, 755, 759, 1401, 1402, 1403, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1429, 1430, 1438, 1439, 1441, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1495, 1502, 1504, 1526, 1584, 1637, 1990, 2002], "q_input": [733, 734, 735, 736, 737, 738, 767, 768, 769], "quantize_per_tensor": [733, 734, 735, 736, 737, 738, 751, 752, 753, 767, 768, 769, 1788, 1789, 1790, 1953, 2001, 2006], "unequ": [734, 735, 736, 737, 738, 1415, 1416, 1418, 1419], "50": [734, 736, 737, 738, 767, 819, 1305, 1397, 1398, 1406, 1414, 1415, 1416, 1418, 1419, 1434, 1435, 1454, 1455, 1456, 1480, 1481, 1482, 1537, 1569, 1570, 1572, 1576, 1587, 1588, 1753, 1897, 1971, 1981, 2035], "56": [735, 1920, 2015, 2039], "output_pad": [736, 737, 738, 1417, 1418, 1419, 1466, 1467, 1468, 1570, 1571, 1572, 1953, 2040], "qnnpack": [736, 737, 751, 759, 850, 851, 854, 856, 857, 2006, 2008], "convtranspose2d": [736, 1467, 1571, 1681, 1922, 2008], "nnq": [736, 737, 738, 783, 784, 785, 859, 2006], "downsampl": [736, 737, 738, 1418, 1539, 1557, 1592, 1603], "upsampl": [736, 737, 738, 774, 781, 782, 814, 1418, 1540, 1541, 1557, 1592, 1603, 1663, 1664], "fbgemm": [737, 738, 751, 759, 828, 850, 851, 854, 856, 857, 2006, 2007, 2035, 2036], "cubic": [738, 1435, 1588, 1592], "num_embed": [740, 741, 1429, 1430, 1584], "embedding_dim": [740, 741, 1429, 1430, 1459, 1583, 1584], "padding_idx": [740, 1429, 1430, 1583, 1584, 1953, 2040], "scale_grad_by_freq": [740, 741, 1429, 1430, 1583, 1584, 1953, 2040], "_weight": [740, 741, 1429, 1430, 1745, 1751, 2044], "overwritten": [740, 741, 751, 759, 792, 836, 856, 1978, 1983, 2022, 2030], "_embed": [740, 741], "_dim": [740, 741, 1429], "include_last_offset": [741, 1430, 1584, 1953, 2040], "embedding_bag": [741, 1953, 2001], "floatfunct": [742, 2006], "activation_post_process": [742, 794, 2006], "add_relu": [742, 743, 752, 1964, 2001, 2024], "add_scalar": [742, 743, 752, 2001, 2020, 2024], "mul_scalar": [742, 743, 752, 2001, 2024], "collector": 743, "f_add": 743, "num_channel": [744, 1441, 1970], "normalized_shap": [749, 1459, 1606, 1953, 1971, 2040], "elementwise_affin": [749, 1459], "negative_slop": [750, 775, 1473, 1607, 1608, 1953, 1976, 2040], "slope": [750, 775, 1473, 1518, 1976], "bias_": [751, 759], "_featur": [751, 759, 776, 1391, 1404, 1472, 1474, 1563, 1609], "from_refer": [751, 759], "ref_qlinear": [751, 759], "output_scal": [751, 754, 1788, 1953], "output_zero_point": [751, 754, 1788, 1953], "q_add": 752, "qint32": [752, 753, 1735, 1786, 1787, 2006, 2009, 2017, 2021, 2022], "x_0": [753, 1907], "gate": [755, 756, 1437, 1438, 1439, 1457, 1516, 1591, 1646], "r_t": [755, 1438, 1751], "w_": [755, 1389, 1390, 1393, 1394, 1397, 1398, 1400, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1418, 1419, 1422, 1434, 1435, 1438, 1439, 1455, 1456, 1457, 1458, 1481, 1482, 1484, 1485, 1494, 1499, 1500, 1502, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1539, 1540, 1541, 1542, 1543, 1544, 1588, 1592], "x_t": [755, 890, 894, 895, 900, 901, 1401, 1402, 1403, 1438, 1449, 1450, 1451, 1457, 1502, 1526, 1739], "b_": [755, 1438, 1439, 1457, 1458, 1475, 1502, 1504, 1902, 2015], "hr": [755, 1438, 1439, 1457, 1987], "h_": [755, 1389, 1390, 1393, 1394, 1397, 1398, 1404, 1409, 1410, 1412, 1413, 1415, 1416, 1418, 1419, 1434, 1435, 1438, 1439, 1455, 1456, 1457, 1474, 1481, 1482, 1483, 1484, 1485, 1499, 1500, 1502, 1504, 1509, 1510, 1512, 1513, 1539, 1540, 1541, 1543, 1544, 1563, 1588, 1592], "z_t": [755, 1438], "iz": [755, 1438, 1439], "hz": [755, 1009, 1438, 1439, 2020], "n_t": [755, 1438], "odot": [755, 1438, 1439, 1457, 1458], "h_t": [755, 1438, 1457, 1502], "hadamard": [755, 1438, 1439, 1457, 1458], "multilay": [755, 1438, 1457, 1998], "_t": [755, 1438, 1457, 1752, 1754, 1983, 2002], "b_ih": [755, 1438, 1439, 1457, 1458, 1502, 1504, 1953], "b_hh": [755, 1438, 1439, 1457, 1458, 1502, 1504, 1953], "h_0": [755, 1438, 1457, 1458, 1502], "seq_len": [755, 1438, 1457, 1493, 1502], "pack_padded_sequ": [755, 1438, 1457, 1502, 1715, 1717, 1718, 1985], "num_direct": [755, 1438, 1457, 1502], "h_n": [755, 1438, 1457, 1502], "_size": [755, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1435, 1438, 1439, 1454, 1455, 1456, 1457, 1458, 1480, 1481, 1482, 1483, 1484, 1485, 1502, 1504, 1538, 1588], "_layer": [755, 1438, 1457, 1502], "_direct": 755, "output1": [755, 1391, 1977, 2000], "output2": [755, 1391], "weight_ih_l": [755, 1438, 1457, 1502], "w_ir": [755, 1438], "w_iz": [755, 1438], "w_in": [755, 1438], "weight_hh_l": [755, 1438, 1457, 1502], "w_hr": [755, 1438], "w_hz": [755, 1438], "w_hn": [755, 1438], "bias_ih_l": [755, 1438, 1457, 1502], "b_ir": [755, 1438], "b_iz": [755, 1438], "b_in": [755, 1438], "bias_hh_l": [755, 1438, 1457, 1502], "b_hr": [755, 1438], "b_hz": [755, 1438], "b_hn": [755, 1438], "mathcal": [755, 1404, 1414, 1415, 1416, 1417, 1418, 1419, 1429, 1430, 1438, 1439, 1457, 1458, 1472, 1474, 1502, 1504, 1505, 1526, 1797, 1976, 1987], "subtli": [755, 1438, 1754], "gru": [756, 1439, 1503, 1953, 1981, 2001, 2006, 2008], "cell": [756, 758, 760, 1438, 1439, 1457, 1458, 1502, 1504], "hx": [756, 758, 760, 1439, 1458, 1504, 1953], "cx": [758, 1458, 1953], "nonlinear": [760, 1399, 1420, 1446, 1502, 1504, 1514, 1951, 1976, 2015], "elman": [760, 1502, 1504], "adaptiveavgpool2d": [761, 1552, 1922, 2008], "adaptiveavgpool3d": [762, 1553, 1922, 2008], "ceil_mod": [763, 764, 777, 778, 1396, 1397, 1398, 1454, 1455, 1456, 1480, 1481, 1482, 1559, 1560, 1561, 1613, 1614, 1615, 1617, 1618, 1619, 1789, 1790, 1953, 2040], "count_include_pad": [763, 764, 1396, 1397, 1398, 1559, 1560, 1561, 1953, 2040], "divisor_overrid": [763, 764, 1397, 1398, 1560, 1561, 1953, 2040], "kh": [763, 764, 768, 769, 1397, 1398, 1434, 1435, 1481, 1482, 1560, 1561, 1568, 1569, 1571, 1572, 1587, 1588, 1618, 1619], "kw": [763, 764, 768, 769, 1397, 1398, 1434, 1435, 1481, 1482, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1587, 1588, 1617, 1618, 1619], "sh": [763, 764, 768, 769, 1560, 1561, 1568, 1569, 1571, 1572, 1618, 1619, 2045], "sw": [763, 764, 767, 768, 769, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1617, 1618, 1619], "avgpool2d": [763, 1560, 2008], "_channel": [763, 764, 767, 768, 769, 1414, 1415, 1416, 1417, 1418, 1419, 1441, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1617, 1618, 1619, 2011], "ih": [763, 764, 768, 769, 1502, 1504, 1560, 1561, 1568, 1569, 1571, 1572, 1618, 1619], "iw": [763, 764, 767, 768, 769, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572, 1617, 1618, 1619], "padh": [763, 764, 768, 769, 1560, 1561, 1568, 1569, 1571, 1572], "padw": [763, 764, 767, 768, 769, 1559, 1560, 1561, 1567, 1568, 1569, 1570, 1571, 1572], "kd": [764, 769, 1398, 1482], "sd": [764, 769], "padd": [764, 769], "formul": [765, 1405, 1428, 1442, 1477, 1523, 1524, 1611, 1629, 1643, 1987, 2015], "min_": [766, 1285, 1286, 1295, 1313, 1885], "max_": [766, 1480, 1481, 1482, 1689, 1723], "convolv": [767, 768, 769, 1414, 1415, 1416, 1417, 1418, 1419, 1463, 1464, 1465, 1466, 1467, 1468, 1567, 1568, 1569, 1570, 1571, 1572], "dw": [767, 768, 769, 1567, 1568, 1569, 1570, 1571, 1572], "qf": [767, 768, 769], "dtype_input": [767, 768, 769], "dtype_filt": [767, 768, 769], "q_filter": [767, 768, 769], "dh": [768, 769, 1568, 1569, 1571, 1572], "dd": 769, "scale_factor": [774, 780, 781, 782, 1539, 1540, 1541, 1603, 1643, 1662, 1663, 1664, 1953, 2040], "align_corn": [774, 780, 781, 1539, 1540, 1557, 1592, 1603, 1662, 1663, 1953, 2040], "height": [774, 780, 1397, 1398, 1415, 1416, 1418, 1419, 1455, 1456, 1481, 1482, 1494, 1521, 1539, 1603, 1662, 1970], "spatial": [774, 780, 781, 782, 955, 1117, 1402, 1433, 1459, 1499, 1500, 1521, 1538, 1539, 1540, 1541, 1557, 1592, 1603, 1633, 1634, 1635, 1662, 1663, 1664], "pixel": [774, 780, 782, 1415, 1422, 1425, 1426, 1427, 1431, 1494, 1499, 1500, 1539, 1557, 1592, 1603, 1662, 1664], "corner": [774, 780, 946, 1539, 1547, 1548, 1549, 1557, 1592, 1603, 1662, 1998], "leakyrelu": [775, 1488, 1607, 1990, 2008], "_slope": [775, 1473, 1607, 1976], "xa": [776, 1299, 1310, 1311, 1312, 1474, 1609], "return_indic": [777, 778, 1392, 1393, 1394, 1434, 1435, 1480, 1481, 1482, 1483, 1484, 1485, 1554, 1555, 1556, 1587, 1588, 1617, 1618, 1619, 1953], "maxpool1d": [777, 1483, 1617, 1620, 2008], "linearli": [780, 1162, 1308, 1539, 1662, 1763, 1784, 1985, 2002, 2009], "neighbour": [782, 1475, 1603, 1664], "stub": [783, 784, 2003], "calibr": [783, 784, 792, 833, 834, 852, 854, 856, 1977, 2006, 2007, 2009, 2025], "quantstub": [785, 2006], "dequantstub": [785, 2006], "quantwrapp": 786, "backend_config": [787, 788, 789, 790, 791, 812, 813, 854, 855, 856, 857, 2025], "backendpatternconfig": [787, 856], "blob": [787, 1155, 1987, 1989, 2020, 2044], "dtypeconfig": [787, 788, 790, 856], "observationtyp": [787, 788, 856, 2008], "weighted_int8_dtype_config": [787, 856], "input_dtyp": [787, 789, 856, 2008], "output_dtyp": [787, 789, 856, 2008, 2040], "weight_dtyp": [787, 789, 856, 2008], "bias_dtyp": [787, 789, 2008], "fuse_conv2d_relu": 787, "is_qat": [787, 788], "convrelu2d": [787, 2008], "linear_config": 787, "set_observation_typ": [787, 788, 856], "output_use_different_observer_as_input": [787, 788, 791, 856, 2008], "add_dtype_config": [787, 788, 856], "set_root_modul": [787, 788], "set_qat_modul": [787, 788], "set_reference_quantized_modul": [787, 788], "conv_relu_config": 787, "set_fused_modul": [787, 788], "set_fuser_method": [787, 788], "fused_conv_relu_config": 787, "my_backend": [787, 2031], "set_backend_pattern_config": [787, 856], "from_dict": [787, 788, 789, 810, 811, 812, 849], "backend_config_dict": [787, 2006], "set_nam": 787, "to_dict": [787, 788, 789, 810, 811, 812, 849], "backendconfig": [788, 813, 854, 856, 2009], "dtype_config": [788, 2008], "backend_pattern_config_dict": 788, "observation_typ": [788, 2008], "qat_modul": [788, 2008], "reference_quantized_modul": 788, "fused_modul": [788, 2008], "fuser_method": [788, 809, 2008], "pattern_complex_format": 788, "set_dtype_config": 788, "fuser": [788, 1263, 1952], "fuse_linear_relu": 788, "linearrelu": [788, 2008], "8bea7180a8ba3c279f2c9b050f2a69a6": 788, "understood": [788, 954], "output_share_observer_with_input": [788, 791, 2008], "renam": [788, 1923, 1925, 1953, 1969, 1970, 2001, 2039], "quantdequantstub": 788, "set_pattern": 788, "is_dynam": [789, 794, 814, 815, 816, 817, 819, 820, 821, 2008], "quant1": 789, "dequant1": 789, "fp32_linear": 789, "quant2": 789, "dequant2": 789, "bracket": [789, 2012], "dtype_config1": 789, "dtype_config2": 789, "dtypewithconstraint": [789, 2008], "quant_min_lower_bound": [789, 790, 2008], "quant_max_upper_bound": [789, 790, 2008], "255": [789, 797, 1111, 1112, 1151, 1592, 1603, 1662, 2006, 2008, 2020], "input_dtype_with_constraint": 789, "scale_min_lower_bound": [789, 790, 2008], "scale_max_upper_bound": [789, 790, 2008], "dtype_config_dict": 789, "bias_typ": [789, 856], "scale_exact_match": [790, 2008], "zero_point_exact_match": [790, 2008], "quant_min": [790, 794, 797, 814, 815, 816, 817, 820, 821, 1111, 1112, 1953, 2006], "quant_max": [790, 794, 797, 814, 815, 816, 817, 820, 821, 1111, 1112, 1953, 2006], "fixedqparamsobserv": 790, "fixedqparamsfakequant": 790, "input_output_not_observ": [791, 2008], "remove_qconfig": 792, "is_refer": 792, "convert_custom_config_dict": [792, 810, 2006], "from_observ": [792, 810, 2006], "observed_to_quantized_custom_module_class": [792, 810, 2006], "observedcustommodul": [792, 810, 812, 833, 2006], "quantizedcustommodul": [792, 810], "calib_data": 793, "fake_quant": [794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 857, 1111, 1112, 2025], "movingaverageminmaxobserv": [794, 797, 817], "observer_kwarg": [794, 797], "x_out": [794, 797], "quanti": 794, "choose_qparam": 794, "dq": 794, "fake_quant_en": 794, "observer_en": 794, "calculate_qparam": [795, 814, 815, 819], "extra_repr": [796, 1249, 1487, 1983], "qscheme": [797, 814, 815, 816, 817, 820, 821, 822, 1953, 2001, 2006, 2009, 2022], "fake_qu": [798, 802, 803, 804, 2006], "default_fake_qu": 799, "default_per_channel_weight_fake_qu": 800, "default_weight_fake_qu": 801, "histogram": [802, 814, 826, 1210, 1212, 1953, 2001, 2020], "memoryless": [803, 804], "averaging_const": [803, 804, 816, 817, 1953], "modules_to_fus": 809, "fuser_func": 809, "fuse_known_modul": 809, "fuse_custom_config_dict": [809, 811], "convmodul": 809, "bnmodul": 809, "convbnmodul": 809, "additional_fuser_method_map": 809, "fuse_conv_bn": [809, 2008], "conv1": [809, 1261, 1487, 1515, 1952, 1998, 2006, 2020], "bn1": 809, "relu1": [809, 1515, 1665], "fused_m": 809, "custom_config": [810, 811, 812, 813], "convert_fx": [810, 2006, 2025], "convert_custom_config": [810, 854, 2006], "set_observed_to_quantized_map": 810, "set_preserved_attribut": [810, 811, 812], "attr1": [810, 811, 812, 2000], "attr2": [810, 811, 812, 2000], "floatcustommodul": [810, 812], "weight_onli": [810, 854, 2006], "preserved_attribut": [810, 811, 812], "observed_class": [810, 812], "quantized_class": 810, "quant_typ": [810, 812], "quanttyp": [810, 812], "fuse_fx": [811, 2006], "fuse_custom_config": [811, 855], "convertcustomconfig": [811, 854], "prepare_fx": [812, 835, 854, 857, 2006, 2025], "prepare_qat_fx": [812, 854, 2006], "prepare_custom_config": [812, 813, 856, 857, 2006], "set_standalone_module_nam": 812, "module1": [812, 849, 1981], "qconfig_map": [812, 813, 849, 850, 851, 854, 856, 857, 2006], "child_prepare_custom_config": 812, "set_standalone_module_class": 812, "mystandalonemodul": 812, "set_float_to_observed_map": 812, "set_non_traceable_module_nam": 812, "module2": [812, 849, 1981], "module3": [812, 1981], "set_non_traceable_module_class": 812, "nontraceablemodule1": 812, "nontraceablemodule2": 812, "set_input_quantized_index": 812, "set_output_quantized_index": 812, "prepare_custom_config_dict": [812, 833, 835, 2006], "standalone_module_nam": 812, "standalone_module_class": 812, "module_class": 812, "float_to_observed_custom_module_class": [812, 833, 2006], "non_traceable_module_nam": 812, "non_traceable_module_class": 812, "input_quantized_idx": 812, "output_quantized_idx": 812, "float_class": 812, "qconfigmap": [813, 850, 851, 854, 856, 2006, 2009], "preparecustomconfig": [813, 856], "2048": [814, 1530, 1532, 1534, 1981], "upsample_r": 814, "per_tensor_affin": [814, 815, 816, 1787, 1788, 1789, 1790, 2006, 2009], "reduce_rang": [814, 815, 816, 817, 820, 822, 1953, 2006, 2007], "factory_kwarg": [814, 815, 820], "1920928955078125e": [814, 815, 816, 817, 820], "finfo": [814, 815, 816, 817, 820, 1304, 1307, 1387, 1951, 2022], "minmaxobserv": [814, 816, 820, 836, 856, 857, 2009], "x_": [815, 816, 987, 1107, 1323, 1324, 1326, 1329, 1337, 1400, 1422, 1477, 1494, 1520, 1522, 1649, 1862, 1864, 1907, 1978, 2009, 2016], "q_": [815, 2009], "x_orig": 815, "reset_min_max_v": [815, 820], "ch_axi": [817, 820, 1953], "per_channel_affin": [817, 820, 1786, 2006, 2009], "custom_op_nam": [818, 821], "with_arg": [819, 836, 856, 857], "_callable_arg": 819, "_with_arg": 819, "foo_build": 819, "foo_instance1": 819, "foo_instance2": 819, "with_callable_arg": 819, "_with_callable_arg": 819, "cur_tim": 819, "get_time_func": 819, "dan": 819, "creation_tim": 819, "compute_dtyp": 821, "ptq": [826, 2006, 2007, 2009], "obs_dict": 832, "get_observer_state_dict": 832, "allow_list": [833, 2024], "observer_non_leaf_module_list": 833, "preemptiv": [833, 834, 1674], "propagate_qconfig_": 835, "qconfig_dict": [835, 849], "my_qconfig": 836, "default_observ": 836, "default_qat_config": 842, "set_glob": [849, 854, 856, 2006], "set_object_typ": [849, 854, 856], "set_module_name_regex": 849, "regex": 849, "set_module_nam": [849, 854, 856], "set_module_name_object_type_ord": 849, "global_qconfig": 849, "qconfig1": 849, "qconfig2": 849, "qconfig3": 849, "object_typ": 849, "module_name_regex": 849, "module_name_object_type_ord": 849, "conv0": 849, "x86": [850, 851, 1829, 2006, 2008], "run_arg": [852, 858], "qconfig_spec": 853, "quantize_fx": [854, 855, 856, 857, 2006, 2025], "_remove_qconfig": 854, "qconfig_from_prepar": 854, "prepared_model": [854, 856, 857], "xnnpack": [854, 1964, 2006], "get_default_backend_config": [854, 856, 857], "quantized_model": 854, "fusion_pattern": 855, "fusecustomconfig": 855, "_equalization_config": 856, "get_default_qconfig_map": [856, 2006], "float_model": [856, 857, 2006, 2024], "data_load": [856, 857, 1760, 1766, 1992, 2006], "get_default_qconfig": [856, 857, 2006], "linear_pattern_config": 856, "suer": 856, "sample_inference_data": [856, 2006], "get_default_qat_qconfig_map": [857, 2006], "load_weight": 857, "train_data": 857, "get_default_qat_qconfig": [857, 2006], "custom_module_class_map": 859, "lceil": [860, 956], "rceil": [860, 956], "adjac": [860, 946, 1425, 1426, 1427, 1431, 1800, 2015], "set_default_dtyp": [860, 936, 945, 1098, 1100, 1110, 1115, 1133, 1149, 1152, 1197, 1207, 1208, 1269, 1733, 1793, 1797, 1800, 1826, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1948], "get_default_dtyp": [860, 1320, 1336, 1735, 1800, 2017, 2018, 2048], "set_default_devic": [860, 936, 945, 1098, 1100, 1110, 1115, 1133, 1149, 1152, 1207, 1208, 1269, 1320, 1336, 1733, 1793, 1795, 1797, 1799, 1800, 1826, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1867, 1868, 1869, 1870, 1871, 1872, 1911, 1913, 1948, 2018], "5000": [860, 875, 881, 882, 883, 938, 962, 1115, 1117, 1118, 1125, 1128, 1133, 1143, 1145, 1146, 1147, 1203, 1209, 1212, 1275, 1301, 1320, 1378, 1380, 1411, 1412, 1430, 1539, 1785, 1789, 1790, 1791, 1800, 1804, 2016, 2021], "maxim": [869, 1347, 1420, 1483, 1484, 1485, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1752, 1753, 1754, 1755, 2015, 2035, 2045], "3398": 869, "2663": [869, 1981], "2686": 869, "2450": 869, "7401": 869, "8805": 869, "3402": 869, "1936": 869, "4907": [869, 1337], "3948": [869, 982], "0691": 869, "3132": 869, "6092": 869, "5419": 869, "2993": [869, 1884], "3195": 869, "1139": 870, "2254": 870, "1381": [870, 1884], "3687": 870, "1975": [870, 1971], "0102": 870, "4732": 870, "9240": 870, "1207": [870, 1372], "7506": 870, "0213": 870, "7809": 870, "2960": 870, "9384": 870, "1438": 870, "ascend": [871, 1117, 1286, 1288, 1317, 1371, 1820, 1857, 1918], "0785": 871, "5267": 871, "8521": 871, "4065": 871, "1598": 871, "0788": 871, "0745": 871, "2700": 871, "2208": 871, "0722": 871, "7064": 871, "2564": 871, "0669": 871, "2318": 871, "8229": 871, "9280": 871, "lexicograph": [872, 1728, 1955, 2015], "9039": 873, "6291": 873, "0795": [873, 1785, 1990], "1586": 873, "1939": [873, 1983], "4900": 873, "1909": 873, "7503": 873, "9355": 873, "histori": [874, 875, 1164, 1744, 1900, 1951, 1962, 1971, 1983, 1985, 2012], "dlpack": [875, 1148, 1951], "frombuff": [875, 1824], "data_ptr": [875, 921, 1969, 2017, 2019], "addbackward0": [875, 1990, 1995], "__array_interface__": [875, 2035], "5962": 876, "4985": 876, "4396": 876, "4525": [876, 1971], "6387": 876, "4552": 876, "sine": [877, 1840, 1850, 1852], "1606": 877, "4267": 877, "0899": 877, "0250": 877, "1599": 877, "1534": 877, "9435": 877, "8990": [877, 1092], "arctang": [878, 879], "2341": 878, "2539": 878, "6256": 878, "6448": 878, "2299": 878, "2487": 878, "5591": [878, 907], "5727": 878, "quadrant": 879, "9041": [879, 955], "0196": [879, 955], "3108": [879, 955], "4423": [879, 955], "9833": 879, "0811": 879, "9743": 879, "4151": 879, "tangent": [880, 889, 893, 894, 1161, 1162, 1527, 1898, 1899], "9385": 880, "2968": 880, "8591": 880, "1871": 880, "7253": 880, "3060": 880, "2899": 880, "1893": 880, "needs_input_grad": [884, 900, 901, 1983], "setup_context": [885, 900, 901, 1984], "save_for_forward": [885, 895, 900, 901, 1984], "grad_input": [886, 895, 897, 899, 900, 901, 919, 1249, 1487, 1670, 1983, 1990], "underneath": [887, 900, 901], "generate_vmap_rul": [887, 900, 901, 1984], "out_dim": [887, 900, 901, 1166, 1934, 1953, 1970, 1984], "grad_tensor": [888, 909, 1953, 1981], "grad_vari": 888, "forward_ad": [889, 890], "primal": [889, 894, 1157, 1161, 1162, 1165], "unpack_du": [889, 890, 893], "dual": [889, 890, 891, 893, 894, 1727, 1984], "make_du": [890, 894, 895, 900, 901], "your_fn": 890, "grad_aft": 890, "dual_level": [893, 894, 895, 900, 901], "apply_jvp": 895, "mark_dirti": [895, 900, 901, 921, 1983], "x_npy": [895, 896, 900], "once_differenti": [895, 896, 897, 898, 899, 900, 901, 1983], "mark_non_differenti": [895, 900, 901, 1983, 1984], "g1": [895, 897, 899, 900, 901, 1981, 2013], "g2": [895, 897, 899, 900, 901, 1981, 2013], "oppos": [895, 898, 900, 901, 1984], "weren": [895, 898, 900], "grad_out": [895, 898, 900, 901, 1953, 1987, 2040], "gx": [895, 898, 900], "gy": [895, 898, 900], "gz": [895, 898, 900, 2005], "y_t": [895, 900, 901], "fwad": [895, 900, 901], "a_dual": [895, 900, 901], "set_materialize_grad": [895, 900, 901, 1983], "simplefunc": [895, 899, 900, 901], "induc": [895, 899, 900, 901, 1592, 1631, 1976, 2033], "backward_extend": 901, "forward_extend": 901, "outer_jacobian_strategi": 903, "disconnect": [903, 904, 905, 906, 907, 908], "said": [903, 904, 905, 906, 907, 908, 1962, 1993], "cliff": [903, 905, 909], "_debug_only_display_vmap_fallback_warn": [903, 909], "pow_reduc": [903, 904, 907], "2265": 903, "8221": 903, "9456": [903, 937], "2550": 903, "viewbackward": [903, 905, 1986], "pow_adder_reduc": [903, 904, 907], "func_output": [904, 906, 907, 908], "1448": 904, "0239": 904, "6456": 904, "4988": 904, "4310": 904, "sumbackward0": [904, 907, 1983], "3030": 904, "vhp": 904, "batched_grad": 905, "exp_reduc": [905, 906, 908], "4917": 905, "4352": 905, "4369": 905, "3799": 905, "exp_add": 905, "8052": 905, "3963": 905, "3090": 906, "6742": 906, "9114": 906, "2106": 906, "sumbackward1": [906, 908], "squeezebackward1": 906, "adder": [906, 908], "2399": 906, "5005": 906, "0689": 907, "2431": 907, "0989": 907, "4456": 907, "8053": [907, 1815], "7817": 908, "2458": 908, "7830": 908, "7782": 908, "4458": 908, "3962": 908, "3042": [908, 1307], "6354": 908, "1288": [908, 1843], "0652": 908, "5483": 908, "5035": 908, "2046": [908, 982, 1983], "1292": 908, "1432": 908, "3059": 908, "3225": 908, "6652": 908, "7753": 908, "0152": 908, "4225": 908, "3340": 908, "only_input": 909, "allow_unus": [909, 1953], "is_grads_batch": 909, "materialize_grad": 909, "require_grad": [909, 1955, 1978], "inferencemod": [910, 1978, 2027], "bump": 910, "_version": [910, 2001], "doubler": [910, 1101, 1727], "is_train": [911, 2023], "gradgradcheck": [913, 914, 1983], "06": [914, 915, 1290, 1295, 1296, 1307, 1308, 1313, 1440, 1496, 1535, 1538, 1589, 1659, 1739, 1753, 1885, 1953, 2022], "raise_except": [914, 915], "nondet_tol": [914, 915], "check_undefined_grad": [914, 915], "check_grad_dtyp": [914, 915], "check_batched_grad": [914, 915], "check_batched_forward_grad": 914, "check_forward_ad": 914, "check_backward_ad": 914, "fast_mod": [914, 915, 1987], "differenc": [914, 1983], "perturb": [914, 915, 1987], "gen_non_contig_grad_output": 915, "check_fwd_over_rev": 915, "check_rev_over_rev": 915, "noncontigu": [915, 1040, 2022], "inaccuraci": 915, "clonebackward0": 917, "gi": [919, 920, 1990], "removablehandl": [919, 920, 1249, 1487, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 2003], "88446": 923, "profilerstep": 923, "optimizer1step": 923, "optimizer2step": 923, "optimizer1": [923, 1977], "current_step": 923, "erase_step_count": 923, "increment_step": 923, "_kineto_step": 923, "init_step_count": 923, "eventlist": [926, 927], "group_by_stack_n": [927, 2005], "roof": 927, "functioneventavg": [927, 929], "node_id": 930, "77": 930, "47": 930, "470u": 930, "73": 930, "465u": 930, "03": [930, 958, 1327, 1841, 1842, 1847], "121": 930, "891u": 930, "324u": 930, "421u": 930, "503u": 930, "234": 930, "344u": 930, "000u": 930, "profiler_util": [931, 932, 933, 934], "elapsed_u": 931, "mem_record": 933, "in_interv": 933, "start_u": 933, "end_u": 933, "shallow": [934, 1249, 1423, 1487, 1535, 1536, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "default_factori": [934, 2044], "__missing__": 934, "fromkei": [934, 1497], "keyerror": 934, "popitem": [934, 1497, 2001], "lifo": 934, "setdefault": [934, 1497, 2001], "window_length": [936, 945, 1207, 1208, 1269, 1953], "2n": [936, 1838, 2015], "trim": [936, 945, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1207, 1208, 1246], "_length": [936, 945, 1207, 1208, 1246, 1406, 1881], "sim": [937, 1501, 1636, 1777, 1797], "pseudorandom": [937, 1373, 1730, 1774, 1777, 1793, 1795, 1797, 1799, 1886], "1737": 937, "0950": [937, 1863], "3609": 937, "7148": 937, "0289": [937, 1910], "2676": 937, "8937": 937, "7202": 937, "2500": [938, 1115, 1117, 1118, 1128, 1133, 1320, 1539, 1791], "7500": [938, 1118, 1128, 1147, 1203, 1305, 1320, 1539, 1791, 1846], "AND": [939, 1174, 1331, 1955, 1978], "OR": [942, 1188, 1333, 1955], "xor": [944, 1334, 1955], "blackman": [945, 1848], "arrang": 946, "broadcast_tensor": [948, 1953, 2001], "out_int32": [951, 1820, 1953], "opposit": [951, 1118, 1120, 1885, 1906], "formal": [951, 1820, 1962, 1970, 1986], "eg": [951, 1813, 1820, 2044], "tensor_a": [953, 966], "tensor_b": 953, "6580": 954, "0969": 954, "4614": 954, "1034": [954, 1097], "5790": 954, "1497": 954, "compute_mod": [955, 2040], "use_mm_for_euclid_dist_if_necessari": 955, "distanc": [955, 1246, 1285, 1286, 1313, 1446, 1496, 1535, 1536, 1633, 1660, 1760, 1881, 1885, 1951], "infti": [955, 1246, 1301, 1399, 1454, 1455, 1456, 1518, 1633, 1751, 2016], "use_mm_for_euclid_dist": 955, "donot_use_mm_for_euclid_dist": 955, "minkowski": [955, 1633], "ham": [955, 1207, 1633, 1844], "closest": [955, 1633], "xn": [955, 1633], "4821": [955, 958], "059": 955, "0590": 955, "1763": [955, 1803], "4713": [955, 1803], "6986": [955, 1803], "3702": [955, 1803], "1193": [955, 1339], "0959": 955, "7138": 955, "8322": 955, "2830": [955, 1912], "3791": 955, "6341": 956, "4208": 956, "0900": 956, "5826": 956, "clr": [957, 1760], "3375": 957, "9790": 957, "1119": 957, "6577": 957, "5609": [957, 1583], "5095": 957, "2614": 957, "4038": 957, "3378": [957, 1912], "4982": 957, "2457": [957, 1352], "2561": 957, "4684": 957, "7163": 957, "9647": 957, "8917": [957, 1330], "3213": [957, 1326], "2284": [957, 1077], "8615": 957, "2816": 957, "tu": 958, "mt": [958, 1279, 1286, 1288, 1292, 1293, 1294, 1299, 1308, 1784, 1885, 1953, 1962, 2001, 2019, 2021], "4112": 958, "7486": 958, "4551": 958, "3544": 958, "6724": 958, "5528": 958, "0592": [958, 1990], "9371": 958, "5487": 958, "7023": 958, "3842e": [958, 1295], "hermitian": [959, 960, 983, 1113, 1114, 1116, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1279, 1280, 1285, 1286, 1288, 1292, 1293, 1294, 1304, 1307, 1313, 1953], "9314": 959, "2251": [959, 997, 1282, 1324], "0889": 959, "4439": 959, "2122": 959, "1412": 959, "6358e": 959, "lh": [960, 1295], "1625": 960, "6097": 960, "8398": 960, "2387": [960, 983], "3771": [960, 1296], "4173": 960, "1626": [960, 997, 1282], "6881e": 960, "tensor_split": [961, 1095, 1213, 1935, 1953, 2001, 2019], "min_valu": [962, 1445], "max_valu": [962, 1445, 1953], "_valu": [962, 1391, 1680, 1870, 1983, 2001, 2015], "7120": 962, "1734": [962, 1224], "0478": [962, 1937], "0922": 962, "3333": [962, 1203, 1212, 1539, 1540, 1900], "horizont": [965, 1213, 1215, 2002, 2004, 2035], "hstack": [965, 1953, 2001, 2015], "with_replac": [966, 1953], "combinations_with_replac": 966, "fullgraph": [967, 2035, 2045], "cache_size_limit": [967, 2035, 2038, 2045], "list_backend": [967, 2026, 2031, 2037], "autotun": [967, 2039], "triton": [967, 1984, 2026, 2030, 2032, 2035, 2037, 2045], "_inductor": [967, 2035, 2045], "list_mode_opt": 967, "epilogue_fus": 967, "max_autotun": 967, "fallback_random": [967, 2035, 2045], "shape_pad": 967, "graph_diagram": 967, "pictur": 967, "list_opt": 967, "_glibcxx_use_cxx11_abi": 968, "bypass": [969, 1097, 1959, 1971, 1981, 1983, 2036], "rand_foo": 972, "compiler_cudagraph_tre": 972, "exclude_tag": 974, "flip": [980, 1138, 1139, 1317, 1953, 2001, 2002, 2035, 2040], "writeabl": [980, 981], "is_conj": [980, 1808, 1953, 2001, 2035], "geq": [982, 1193, 1281, 1289, 1422, 1473, 1494, 1495, 1505, 1575, 1628, 1688, 1976, 2016], "signbit": [982, 1953, 2001, 2015, 2040], "2557": 982, "0026": 982, "5387": 982, "4740": 982, "9244": 982, "7079": 982, "2778": 982, "0249": [982, 1325], "5719": 982, "0059": 982, "2600": 982, "4475": 982, "9567": [982, 1285, 1884], "5757": 982, "1751": 982, "0742": 982, "2998": 982, "1054": 982, "2373": 982, "3190": [982, 1981], "1128": [982, 1307, 1457], "pearson": 983, "coeffici": [983, 1207, 1739, 1741, 1742, 1743, 1745, 1751, 1755, 1843, 1844, 1845, 1909], "r_": [983, 1902], "ij": [983, 1097, 1329, 1337, 1351, 1490, 1862], "c_": [983, 1414, 1415, 1416, 1417, 1418, 1419, 1457, 1499, 1500], "jj": 983, "cov": [983, 1953, 2001], "2678": [983, 1429], "0908": 983, "3766": 983, "2780": 983, "5812": 983, "1535": [983, 1429], "2350": 983, "3582": 983, "4309": 984, "2706": 984, "8562": 984, "9796": [984, 1295], "1395": 984, "2957": 984, "6553": 984, "5574": 984, "1632": 985, "1835": 985, "6979": 985, "7325": [985, 1087], "0133": 985, "7860": 985, "2536": 985, "2805": 985, "sleef": [985, 1852], "y_": [987, 1107, 1323, 1324, 1326, 1400, 1422, 1452, 1862, 1907, 1978, 2016], "_w": [987, 1434], "w_i": [987, 1289], "mu_x": 987, "mu_i": [987, 1745], "w_ia_i": 987, "whichev": [987, 1166, 1592, 1785, 1934, 1981], "w_ix_": 987, "mathbb": [987, 1203, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1295, 1296, 1299, 1301, 1308, 1310, 1312, 1313, 1422, 1494, 1688], "bessel": [987, 1269, 1847, 1879, 1880, 1929, 1930, 2016], "unbias": [987, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1526, 1879, 1880, 1929, 1930, 1953, 2040], "corrcoef": [987, 1953, 2001], "6667": [987, 1212, 1539, 1540, 1805, 1838, 1995], "fw": 987, "4282": 987, "0255": [987, 1084], "4144": [987, 1981], "4169": 987, "streamcontext": [995, 1072, 1951], "abstractcontextmanag": 995, "3956": [997, 1282], "1455": [997, 1282, 1996], "6895": [997, 1282], "5849": [997, 1282], "3599": [997, 1282], "7180": [997, 1282], "0521": [997, 1282], "1339": [997, 1282], "0225": [997, 1282, 1295], "0257": [997, 1282], "4725": [997, 1282], "1479": [997, 1282], "7005": [997, 1282], "9757": [997, 1282], "3904": [997, 1282], "3726": [997, 1282], "1836": [997, 1282], "9688": [997, 1282], "7153": [997, 1282, 2016], "2159": [997, 1282], "0844": [997, 1282], "5281": [997, 1282], "6120": [997, 1282], "4490": [997, 1282], "5687": [997, 1282], "9792": [997, 1078, 1282], "8304": [997, 1282], "3037": [997, 1282, 1990], "5650": [997, 1282], "2329": [997, 1282], "9883": [997, 1282], "0551": [997, 1282], "capture_begin": [998, 1981], "capture_error_mod": [998, 1032], "make_graphed_cal": [998, 1981], "graph_pool_handl": [998, 1032], "other_graph_inst": [998, 1032], "cudastreamcapturemod": [998, 1032], "thread_loc": [998, 1032], "cudamalloc": [998, 1032, 1054, 1981, 2047], "unsaf": [998, 1032, 1321, 1691, 1694, 1953, 1981, 2003], "capture_end": [998, 1981], "replai": [998, 1032, 1981, 1998, 2030, 2045], "debug_dump": 998, "debug_path": 998, "enable_debug_mod": 998, "path_to_so_fil": 999, "alloc_fn_nam": 999, "free_fn_nam": 999, "enable_tim": [1000, 1361, 1981], "interprocess": 1000, "marker": [1000, 1361], "elapsed_tim": [1000, 1361, 1981], "end_ev": [1000, 1361, 1981], "elaps": [1000, 1361, 1966], "from_ipc_handl": 1000, "reconstruct": [1000, 1339, 1399, 1400, 1987, 1995, 2003], "ipc": [1000, 1036], "ipc_handl": 1000, "cudaeventsynchron": 1000, "cudastreamwaitev": [1000, 1001, 1003], "stream_ptr": 1001, "cudastream_t": [1001, 1981], "record_ev": [1001, 1003], "cudastreamsynchron": [1001, 1003], "wait_ev": [1001, 1003], "interoper": 1005, "caching_allocator_delet": 1005, "mem_ptr": 1006, "caching_allocator_alloc": 1006, "peer_devic": 1007, "_cudaalloc": 1008, "clock": 1009, "sm": 1009, "hertz": 1009, "smi": [1009, 1022, 1050, 1056, 1060, 1074, 1075, 1981, 1985, 1988], "buffer_s": 1011, "10485760": 1011, "chunk_siz": [1014, 1160, 1166, 1934], "cublashandle_t": 1015, "unoccupi": [1022, 1360], "pytorch_cuda_alloc_conf": 1023, "cudamallocasync": [1023, 1054, 1981], "_cudadeviceproperti": 1027, "gencod": 1028, "cuda_graph": 1032, "ordinari": [1034, 1674, 1925, 1977], "code_str": [1040, 1041], "temp": 1040, "typenam": [1040, 1041], "my_kernel": [1040, 1041], "jitted_fn": [1040, 1041], "create_jit_fn": [1040, 1041], "util_fn": 1040, "gelu": [1040, 1516, 1530, 1532, 1534, 1646, 1953, 1971, 2001, 2040], "my_gelu": 1040, "my_lib": [1040, 1959, 1996], "impl": [1040, 1255, 1951, 1959], "num_output": 1041, "sample_arg": 1043, "num_warmup_it": 1043, "allow_unused_input": 1043, "datadistributedparallel": 1043, "amp": [1043, 1925, 1951, 1977, 2039, 2042, 2045], "autocast": [1043, 1493, 1951, 1981, 1983, 2045], "insuffici": [1044, 2033, 2045], "manual_seed_al": [1044, 1925], "occupi": [1046, 1050, 1061, 1358, 1475, 1610, 1981, 1988, 2048], "reset_peak_memory_stat": [1046, 1048, 1061, 1062], "max_memory_reserv": [1047, 1981, 1988], "cudamemgetinfo": 1049, "memory_reserv": [1051, 1981, 1988], "snapshot": [1053, 1951, 1955, 1981, 1988], "large_pool": 1054, "small_pool": 1054, "allocated_byt": 1054, "reserved_byt": 1054, "active_byt": 1054, "inactive_split": 1054, "inactive_split_byt": 1054, "octob": 1054, "1mb": [1054, 2047], "num_alloc_retri": 1054, "num_oom": 1054, "assist": [1054, 1982, 2021], "max_split_s": 1054, "oversize_alloc": 1054, "oversize_seg": 1054, "requested_byt": 1054, "abbrevi": 1055, "percent": [1056, 1075, 2039], "instantan": [1057, 2005], "ascii": [1057, 1059, 1321, 1955, 2005], "sensor": [1060, 1074], "mw": 1060, "milliwatt": 1060, "fermi": 1060, "max_memory_alloc": [1061, 1981, 1988], "max_memory_cach": 1062, "memory_stat": [1063, 1981, 1988], "seed_al": 1064, "environment": [1066, 2039], "total_memori": [1067, 1368], "debug_mod": [1071, 1827], "centigrad": 1074, "x_2": [1076, 1077, 1078, 1079, 1317, 1404, 1420, 1421, 1563, 1574], "x_3": [1076, 1077, 1078, 1079, 1317], "3449": 1076, "5447": 1076, "0685": 1076, "5104": [1076, 1981], "1706": 1076, "2259": 1076, "4696": 1076, "3284": 1076, "9946": 1076, "8209": [1076, 1079], "6628": 1077, "0975": 1077, "2680": [1077, 1980], "3298": [1077, 1084], "4220": 1077, "3885": 1077, "1762": 1077, "9165": 1077, "6684": [1077, 1226], "6001": 1078, "2069": 1078, "1919": 1078, "6727": [1078, 1091], "0062": 1078, "4126": 1078, "2129": 1078, "4206": 1078, "1968": [1078, 2016], "1241": 1078, "0238": 1078, "0233": [1078, 1792], "0157": 1078, "0158": [1078, 1885], "0065": 1078, "0014": [1078, 2016], "0006": 1078, "8286": 1079, "4890": 1079, "5155": 1079, "8443": 1079, "1865": 1079, "1752": [1079, 1087], "0595": 1079, "1850": 1079, "1571": [1079, 1990, 1995], "4243": 1079, "3175": 1079, "8020": [1079, 1782], "0423": 1079, "2289": 1079, "0537": 1079, "0058": 1079, "9780": 1079, "trapezoid": [1080, 1908, 1953, 2001], "360": 1081, "2832": 1081, "diagflat": [1084, 1953, 2001], "5950": 1084, "0872": 1084, "4264": 1084, "1064": [1084, 1990], "8795": 1084, "2429": 1084, "1374": 1084, "1029": 1084, "6482": 1084, "6300": 1084, "5410": 1085, "2934": 1085, "1788": [1085, 2016], "5684": 1085, "0845": [1085, 1852, 1990], "3986": 1085, "2956": [1086, 1282], "9068": 1086, "1695": 1086, "2094": [1086, 1981], "3018": 1086, "1516": 1086, "9342": 1086, "0854": 1087, "1431": 1087, "8536": 1087, "0905": 1087, "0360": [1087, 1372], "6927": 1087, "3735": 1087, "4945": 1087, "2631": [1087, 1371, 1981], "3755": 1087, "5977": [1087, 1983], "8172": 1087, "1065": [1087, 1990], "0401": 1087, "2235": [1087, 1884], "7938": 1087, "3081": 1087, "6166": 1087, "2335": 1087, "0500": 1087, "7336": 1087, "3836": 1087, "1015": 1087, "emb": [1088, 1823, 1853], "5393": 1091, "8675": 1091, "5916": 1091, "6321": 1091, "0967": 1091, "0511": 1091, "6295": 1091, "8360": 1091, "6973": 1091, "6537": 1091, "dividend": [1092, 1142, 1145, 1804, 1914], "true_divid": [1092, 1953, 2001], "3810": [1092, 1211], "2774": 1092, "2972": 1092, "3719": 1092, "4637": [1092, 1983], "7620": 1092, "5548": 1092, "5944": 1092, "7438": 1092, "9274": 1092, "3711": 1092, "9353": 1092, "4605": 1092, "2917": 1092, "1815": [1092, 1330], "0111": [1092, 1841], "9805": 1092, "5923": 1092, "1062": 1092, "4581": [1092, 1289], "7759": 1092, "2344": 1092, "1830": 1092, "0313": 1092, "1908": 1092, "4757": 1092, "8032": 1092, "2930": 1092, "8113": 1092, "2308": 1092, "4620": [1092, 1937], "6051": 1092, "5676": 1092, "2639": 1092, "2260": 1092, "4509": [1092, 1303], "2086": 1092, "1322": 1092, "9764": 1092, "9564": 1092, "3484": 1092, "2278": 1092, "1068": [1092, 1224], "4678": 1092, "3938": [1092, 1895], "depthwis": [1095, 1096, 1414, 1415, 1416], "atleast_3d": [1096, 1953, 2001], "notat": [1097, 1452, 1832, 1956, 1990, 2021], "einstein": 1097, "summat": [1097, 1246, 1329, 1337, 2015], "subscript": [1097, 1956, 1992], "jk": [1097, 2039], "ik": [1097, 1322, 1862], "za": 1097, "alphabet": [1097, 1576, 2011], "arrow": [1097, 2013], "ki": 1097, "ellipsi": [1097, 1955, 1956, 1970], "fourth": 1097, "whitespac": [1097, 1956], "opt_einsum": [1097, 1951], "_the_": 1097, "disclaim": 1097, "sublist": [1097, 2045], "52": 1097, "op1": [1097, 1955], "sublist1": 1097, "op2": [1097, 1955], "sublist2": 1097, "subslist_out": 1097, "2104": 1097, "7952": 1097, "2433": 1097, "4545": 1097, "1156": 1097, "2897": [1097, 1990], "3918": 1097, "4963": 1097, "3744": 1097, "9381": 1097, "2685": 1097, "6070": 1097, "7208": 1097, "8058": 1097, "4419": 1097, "0936": 1097, "1713": 1097, "4291": 1097, "5802": 1097, "7350": [1097, 2016], "5704": 1097, "4290": 1097, "9323": 1097, "4480": 1097, "bij": 1097, "bjk": 1097, "bik": 1097, "0564": 1097, "5904": 1097, "2023": 1097, "1271": 1097, "6706": [1097, 1785], "8097": 1097, "8025": 1097, "1183": 1097, "2239": [1097, 1309], "3107": 1097, "5756": 1097, "2354": 1097, "4558": 1097, "3460": 1097, "5087": 1097, "8530": [1097, 1411, 1542], "8153": 1097, "8787": 1097, "3839": [1097, 1933], "2112": [1097, 1910], "3728": 1097, "1131": [1097, 1782], "0921": 1097, "8305": 1097, "ji": 1097, "anm": 1097, "bm": 1097, "ba": 1097, "3430": [1097, 1330], "2405": 1097, "4494": 1097, "3311": 1097, "5201": 1097, "0356": 1097, "4064e": 1098, "8000e": 1098, "3493e": 1098, "5751e": 1098, "1428e": 1098, "5955e": 1098, "9683e": 1100, "1239e": 1100, "0705e": 1100, "orig_func": [1101, 1727], "set_grad_en": [1101, 1953, 2001, 2023], "tripler": [1101, 1727], "elsewher": [1102, 1110, 1193, 1206, 1239, 1241, 1242, 1245, 1274, 1338, 1384, 1863, 1950], "_max": [1111, 1112, 2006], "_min": [1111, 1112, 2006], "nearbi": [1111, 1112], "_int": [1111, 1112], "_point": [1111, 1112], "2525": 1111, "0466": 1111, "3491": [1111, 1303], "2168": [1111, 1902], "5906": [1111, 2016], "6258": 1111, "6444": 1111, "0542": 1111, "0475": [1111, 2016], "0486": 1111, "3405": 1111, "6134": [1111, 1352], "6323": 1111, "0552": 1112, "9730": 1112, "3973": 1112, "0780": 1112, "4000": [1112, 1115, 1124, 1133, 1539, 1788, 1838], "fourier": [1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1246, 1848, 1881, 1951], "rfft": [1113, 1118, 1128, 1132, 1133, 1134], "chalf": [1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1953, 2001, 2021], "sm53": [1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134], "ortho": [1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1322], "orthonorm": [1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1313, 1688, 1885], "ifft": [1113, 1117, 1118, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130], "fftn": [1114, 1117, 1123, 1126, 1134], "rfft2": [1114, 1129], "ifft2": [1114, 1126], "two_fft": [1114, 1116, 1126, 1132, 1134], "check_strid": [1114, 1116, 1117, 1122, 1123, 1128, 1129, 1130, 1132, 1134, 2022], "nyquist": [1115, 1117, 1125, 1127, 1131, 1132, 1133, 1134], "i_1": [1116, 1134, 1270], "i_n": [1116, 1134, 1166, 1270, 1902, 1934], "rfftn": [1116, 1120, 1126, 1130, 1132], "ifftn": [1116, 1122, 1127], "reorder": [1117, 1305, 1986], "rearrang": [1117, 1124, 1407, 1499, 1500, 1634, 1635, 1970], "fftfreq": [1117, 1124, 1133], "9000": [1117, 1900], "8000": [1117, 1378, 1539, 1785, 1838], "uncent": 1117, "ifftshift": 1117, "x_center": 1117, "x_uncent": 1117, "fft_uncent": 1117, "fft_center": 1117, "x_centered_2": 1117, "ihfft": [1118, 1126, 1127], "irfft": [1118, 1130, 1131], "symmetri": [1118, 1120, 1881], "transformed_dim_s": [1118, 1128], "0000j": [1118, 1125, 1128, 1279, 1280, 1285, 1286, 1288, 1778, 1835], "1250": [1118, 1371], "1720j": 1118, "0406j": 1118, "2809": 1118, "6250": [1118, 1128, 1147, 1539], "9691": 1118, "hfftn": [1119, 1127], "last_dim_s": [1119, 1120, 1129, 1130, 2040], "ihfft2": 1119, "roundtrip": [1119, 1120, 1128, 1129, 1130], "ihfftn": [1120, 1126], "irfftn": [1120, 1129, 1134], "fft2": [1122, 1132], "two_ifft": [1122, 1123, 1127], "fftshift": 1124, "hfft": 1125, "6882j": 1125, "1625j": 1125, "hfft2": 1126, "8602j": 1128, "2031j": 1128, "1562": 1128, "3511": 1128, "7812": 1128, "2114": 1128, "irfft2": 1132, "wider": [1140, 1952, 1955, 2002, 2015], "49": [1140, 1305, 1980], "2500e": 1140, "1000e": 1140, "7656e": 1140, "lfloor": [1141, 1146, 1391, 1396, 1397, 1398, 1414, 1415, 1416, 1433, 1454, 1455, 1456, 1480, 1481, 1482, 1538, 1539, 1540, 1541, 1561, 1631, 1800, 1881], "rfloor": [1141, 1146, 1391, 1396, 1397, 1398, 1414, 1415, 1416, 1433, 1454, 1455, 1456, 1480, 1481, 1482, 1538, 1539, 1540, 1541, 1561, 1631, 1800, 1881], "8166": 1141, "5308": 1141, "2530": 1141, "2091": 1141, "7000": [1143, 1430, 1837], "3000": [1144, 1429, 1837, 1981], "entrywis": [1145, 1804], "modulu": [1145, 1309, 1804], "operatornam": [1146, 1285, 1286, 1287, 1288, 1305, 1313, 1399, 1400, 1406, 1446, 1447, 1453, 1478, 1518, 1536, 1797, 1837], "8750": [1147, 1539], "sizeof": [1149, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 2017, 2038], "map_shar": [1149, 2017], "map_priv": [1149, 2017], "mmap": [1149, 1321, 1968, 2017], "tofil": 1149, "t_map": 1149, "char": [1151, 1735, 1969, 2017, 2035], "parameter_and_buffer_dict": 1154, "tie_weight": [1154, 1724], "submodule_nam": [1154, 1724], "parameter_nam": [1154, 1724], "ti": [1154, 1724, 1813, 1959, 1986, 2034], "ty": [1154, 1724], "foo_ti": [1154, 1724], "new_a": [1154, 1724], "grad_weight": [1154, 1983], "detached_param": 1154, "parameters_and_buffer_dict": 1154, "intermediate_upd": 1155, "mutations_and_view": 1155, "proxy_tensor": [1155, 2034, 2045], "make_fx": [1155, 2033, 2045], "inpt": 1155, "f_trace": 1155, "f_no_mutations_trac": 1155, "f_no_mutations_and_views_trac": 1155, "a_1": [1155, 1270], "view_1": 1155, "view_copi": [1155, 1953, 2001, 2023], "view_copy_1": 1155, "as_strid": [1155, 1953, 2001, 2019, 2040], "native_funct": [1155, 1983, 2040], "yaml": [1155, 1983, 2040], "aux": [1156, 1157, 1159, 1160, 1161, 1165], "my_loss_func": 1156, "y_pred": [1156, 1981], "loss_per_sampl": 1156, "y_true": 1156, "autodiff": [1159, 1160, 1161, 1308], "jacobian_f": [1159, 1160], "f_x": [1159, 1160], "jacboian": [1159, 1160], "expectedx": [1159, 1160], "expectedi": [1159, 1160], "_preallocate_and_copi": 1160, "jvp_out": 1161, "wish": [1161, 1876, 1977, 1981, 1983, 1984], "jvp_fn": 1162, "optimiz": [1164, 1952], "l1": [1164, 1446, 1447, 1518, 1601, 1647, 1699, 1708, 1990, 1995], "l2": [1164, 1447, 1478, 1518, 1738, 1739, 1740, 1741, 1743, 1745, 1751, 1752, 1754, 1977], "vjpfunc": 1165, "unsuccessfulli": [1166, 1934], "rummag": [1166, 1934], "batched_dot": [1166, 1934], "jacobian_row": [1166, 1934], "get_vjp": [1166, 1934], "n1": [1166, 1806, 1934], "n0": [1166, 1934], "batched_pow": [1166, 1934], "autobatch": [1166, 1934], "symbolic_shap": [1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1951, 2033], "symbol_to_sourc": 1167, "var_to_v": 1167, "marked_dynam": 1167, "source_name_to_debug_nam": 1167, "solver": [1167, 1951, 1993], "expr": [1167, 1171, 1177, 1182], "tautologi": 1167, "add_equ": 1167, "forced_speci": 1167, "prettify_result": 1167, "original_signatur": 1167, "constraint_violation_error": 1167, "violat": [1167, 1981, 1984], "erro": 1167, "remove_redundant_dynamic_result": 1167, "rewrite_with_congru": 1167, "congruenc": 1167, "ration": 1167, "inequ": [1167, 1177], "disable_congru": 1167, "disable_equival": 1167, "duck": [1168, 1171, 1983, 2003], "nb": [1168, 1174, 1177, 1179, 1263], "simplic": [1168, 1694, 2011, 2012], "varieti": [1168, 1981, 2012], "assume_static_by_default": 1168, "mark_dynamic_dim": 1168, "warn_onli": [1169, 1170, 1174, 1922], "source_pair": 1169, "transit": [1169, 1249, 1351, 1487, 1881, 1951, 1952, 2026, 2038], "unspeci": 1170, "unspec": 1170, "brittl": 1170, "strictminmaxconstraint": 1170, "should_record_ev": 1171, "tracked_fak": 1171, "bind_symbol": 1171, "littl": [1171, 1983, 1995, 2013, 2038], "evaluate_guard": 1171, "cleanest": 1171, "shenanigan": 1171, "check_equ": 1171, "create_symbol": 1171, "dimdynam": [1171, 1173], "constraint_dim": 1171, "do_not_specialize_zero_on": 1171, "symbolic_context": [1171, 1172, 1173], "create_symbolic_sizes_strides_storage_offset": [1171, 1172, 1173, 1176], "create_symboolnod": 1171, "symbool": [1171, 1185, 1189, 1894, 2023, 2033], "create_symintnod": 1171, "symint": [1171, 1176, 1178, 1179, 1180, 1181, 1186, 1187, 1188, 1889, 1890, 1892, 1893, 1894, 1959, 2023, 2034, 2040], "create_unbacked_symbool": 1171, "create_unbacked_symfloat": 1171, "create_unbacked_symint": 1171, "create_unspecified_symbol": 1171, "specialz": 1171, "create_unspecified_symint_and_symbol": 1171, "defer_runtime_assert": 1171, "orig_expr": 1171, "fx_node": 1171, "evaluate_expr": 1171, "expect_r": 1171, "size_oblivi": 1171, "evaluate_guards_express": 1171, "produce_guards_express": 1171, "evaluate_guards_for_arg": 1171, "ignore_stat": 1171, "format_guard": 1171, "get_nontrivial_guard": 1171, "get_shape_group": 1171, "is_unbacked_symint": 1171, "unback": [1171, 1178, 1180, 1181, 1187, 1188, 2034], "produce_guard": 1171, "source_ref": 1171, "input_context": 1171, "equalities_input": 1171, "_simplifi": 1171, "localsourc": [1171, 2038], "boilerpl": [1171, 1990, 2003], "nice": [1171, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1480, 1481, 1482, 1538, 1970, 1978, 1981, 2003], "size_hint": [1171, 2037], "allow_non": 1171, "suppress_guard": 1171, "dynamic_s": [1172, 1173, 1175], "constraint_s": [1172, 1173, 1175], "tensor_sourc": [1172, 1175], "shape_env_to_source_to_symbol_cach": [1172, 1175], "statelesssymboliccontext": 1172, "owner": [1172, 1950, 1983, 2001, 2011, 2012], "lifecycl": [1172, 2034, 2038], "shape_env": 1172, "dimconstraint": 1173, "vr": 1174, "relaxedunspecconstraint": 1174, "unsoundli": [1174, 1178], "inner_context": 1175, "canonic": 1177, "rh": [1177, 1295, 1340], "Ors": 1177, "cnf": 1177, "subexpr": 1177, "25924": 1177, "lie": [1178, 1520, 1522, 1649, 1864, 2016, 2020, 2034], "intersect": 1178, "fairli": [1178, 1992, 2004, 2033, 2035, 2037], "discharg": 1178, "perfectli": [1178, 1828, 1981, 2004], "definitely_tru": 1180, "parallel_or": 1181, "parallel_and": 1181, "circuit": 1181, "oblivi": 1182, "118579": 1182, "free_symbol": 1183, "sym_and": 1190, "sparse_grad": [1191, 1953, 2040], "tau": [1194, 1289, 1594, 1740, 1754, 1771, 1772, 1841, 1953], "elementari": [1194, 1978, 1987], "reflector": [1194, 1688, 1772], "household": [1194, 1289, 1688, 1772], "householder_product": [1194, 1688, 1771], "gel": [1194, 1295], "set_deterministic_debug_mod": [1198, 1922], "set_float32_matmul_precis": 1199, "edge_ord": [1203, 1953], "rightarrow": 1203, "closer": [1203, 1536, 1785, 1983, 1990, 2006, 2037, 2038, 2039], "interior": 1203, "theorem": 1203, "h_l": 1203, "h_r": 1203, "neighbor": [1203, 1246, 1539, 1541, 1881], "xi_1": 1203, "xi_2": 1203, "approx": [1203, 1886, 1987], "80": [1203, 1305, 1764, 1832, 1981, 2002], "halv": 1203, "coord": 1203, "54": [1207, 1448, 1844], "46": [1207, 1843], "hann_window": [1207, 1881, 1953, 1957, 2001], "hann": [1208, 1844], "hist": [1211, 1212, 1953], "bin_edg": [1211, 1212, 1953], "9524": 1211, "leftmost": [1212, 1971], "leg": 1216, "triangl": [1216, 2020], "hypotenus": 1216, "4031": 1216, "gammainc": [1218, 2016], "gammaincc": [1219, 2016], "index_reduce_": [1223, 1953], "1427": 1224, "0231": 1224, "5414": 1224, "0009": 1224, "4664": [1224, 1902], "2647": 1224, "1228": 1224, "6571": 1224, "7230": 1224, "6004": 1224, "multidimension": [1226, 1319, 1449], "8173": 1226, "0874": 1226, "1784": 1226, "3279": 1226, "7894": 1226, "4682": 1226, "7159": 1226, "1506": 1226, "4034": 1226, "3657": 1226, "0387": 1226, "9892": 1226, "1774": 1226, "3261": 1226, "3917": 1226, "4537": [1226, 1665], "7493": 1226, "1724": 1226, "2291": 1226, "5749": 1226, "2267": 1226, "7920": 1226, "3607": 1226, "3701": 1226, "3666": 1226, "5850": [1226, 1280], "7242": 1226, "9837": 1226, "1560": 1226, "2907": 1226, "6785": 1226, "5671": [1226, 1281], "5452": 1226, "6912": 1226, "5509": 1226, "1782": 1226, "9843": 1226, "7366": 1226, "5672": [1226, 1730], "5115": 1226, "4864": 1226, "2476": 1226, "4337": 1226, "6347": 1226, "1748": 1226, "3567": [1226, 1280], "6558": 1226, "2469": [1226, 1990], "5787": [1226, 1330], "typecheck": [1236, 2001], "mypi": [1236, 1954, 1955], "warn_alwai": 1237, "set_warn_alwai": 1237, "nonfinit": 1238, "test_el": [1240, 1953], "assume_uniqu": [1240, 1953], "0j": [1245, 1931], "nola": 1246, "envelop": 1246, "hop": [1246, 1881], "shorter": [1246, 2000, 2011], "griffin": 1246, "ieee": [1246, 1440, 1848, 1993], "tran": 1246, "assp": 1246, "vol": [1246, 1440, 1848], "pp": [1246, 1440, 1848], "236": 1246, "apr": 1246, "1984": 1246, "slide": [1246, 1396, 1397, 1398, 1433, 1480, 1481, 1482, 1538, 1586, 1617, 1618, 1619, 1661, 1789, 1790, 1881], "fft_size": 1246, "scriptmodul": [1247, 1248, 1253, 1257, 1259, 1260, 1261, 1265, 1266, 1737, 1952, 1954, 1964, 2000], "attributemodul": 1247, "names_ag": 1247, "get_debug_st": 1248, "graphexecutorst": 1248, "_extra_fil": [1248, 1249, 1257, 1260, 1989], "save_to_buff": 1248, "add_modul": [1249, 1487], "init_weight": [1249, 1487, 1990], "buf": [1249, 1487], "20l": [1249, 1487], "1l": [1249, 1487], "5l": [1249, 1487], "pretti": [1249, 1736, 1832, 1952, 2031, 2034, 2038], "syntax": [1249, 1952, 1955, 2003, 2036], "code_with_const": 1249, "constmap": 1249, "get_buff": [1249, 1487], "attributeerror": [1249, 1487, 1983, 2006], "get_extra_st": [1249, 1487], "set_extra_st": [1249, 1487], "get_paramet": [1249, 1487], "net_b": [1249, 1487], "net_c": [1249, 1487], "inlined_graph": 1249, "ipu": [1249, 1487, 1959, 1995], "remove_dupl": [1249, 1487], "named_children": [1249, 1487, 1990], "conv4": [1249, 1487], "conv5": [1249, 1487], "memo": [1249, 1487, 2034], "register_backward_hook": [1249, 1487, 1670], "register_full_backward_hook": [1249, 1487, 1990], "register_forward_hook": [1249, 1487, 1668, 1990], "with_kwarg": [1249, 1487], "always_cal": [1249, 1487, 1668], "fire": [1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1982, 1989, 2041], "register_module_forward_hook": [1249, 1487, 1990], "register_forward_pre_hook": [1249, 1423, 1487, 1669, 1990], "forward_pr": [1249, 1487], "register_module_forward_pre_hook": [1249, 1487, 1990], "register_module_full_backward_hook": [1249, 1487, 1666, 1978, 1990], "register_full_backward_pre_hook": [1249, 1487, 1990], "register_module_full_backward_pre_hook": [1249, 1487, 1990], "register_load_state_dict_post_hook": [1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "incompatible_kei": [1249, 1487], "register_modul": [1249, 1487, 1672], "register_paramet": [1249, 1487, 1673, 1983, 1990], "register_state_dict_pre_hook": [1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "keep_var": [1249, 1487], "gan": [1249, 1487, 1689, 1723], "share_memori": [1249, 1487, 1992], "share_memory_": [1249, 1487, 1968, 2017], "4d": [1249, 1402, 1433, 1450, 1487, 1539, 1586, 1603, 1631, 1662, 1681, 1682, 1788], "1913": [1249, 1487], "3420": [1249, 1487], "5113": [1249, 1487, 1902], "2325": [1249, 1282, 1487], "gpu1": [1249, 1487], "1914": [1249, 1487], "5112": [1249, 1487, 1981], "3741": [1249, 1487], "2382": [1249, 1372, 1487], "5593": [1249, 1487], "4443": [1249, 1487], "6122": [1249, 1487], "1150": [1249, 1487], "to_empti": [1249, 1487, 1963], "dst_type": [1249, 1487], "set_to_non": [1249, 1487, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1752, 1753, 1754, 1755, 1981], "the_typ": 1250, "the_valu": 1250, "script_bar": 1252, "addmod": 1252, "preserved_attr": 1253, "optimize_numer": 1253, "optimize_for_infer": [1253, 2031], "run_frozen_optim": 1253, "scripted_modul": [1253, 1261, 1995], "frozen_modul": 1253, "modified_tensor": 1253, "mymodule2": 1253, "dump_alias_db": 1253, "training_method": 1254, "testcod": [1255, 1256, 1257, 1260, 1954], "interfacetyp": 1255, "impl1": 1255, "impl2": 1255, "user_fn": 1255, "user_fn_jit": 1255, "target_typ": 1256, "key1": 1256, "val1": 1256, "key2": 1256, "val2": 1256, "_restore_shap": 1257, "scriptfunct": [1257, 1261, 1262, 1265, 2000], "readlin": [1257, 1321, 2003], "retrac": 1257, "other_method": 1259, "lesser": [1259, 1978, 1980], "extent": [1259, 1980, 2015], "frozen_mod": 1259, "offlin": 1260, "_frames_up": 1261, "_rcb": 1261, "scriptdict": 1261, "scriptlist": 1261, "test_sum": 1261, "scripted_fn": [1261, 1952], "conv2": [1261, 1487, 1515, 1952, 1998, 2006], "some_entry_point": 1261, "python_only_fn": 1261, "testnnmodul": 1261, "pdt_model": 1261, "scripted_model": [1261, 2003], "un": [1263, 1406, 2006], "unfus": 1263, "check_trac": [1265, 1266], "check_input": [1265, 1266, 1952], "check_toler": [1265, 1266], "_force_outplac": [1265, 1266], "_module_class": [1265, 1266], "_compilation_unit": [1265, 1266], "compilationunit": [1265, 1266], "example_kwarg_input": 1265, "_store_input": [1265, 1266], "trace_modul": [1265, 1952, 1955], "untrack": 1265, "checker": [1265, 1266, 1955, 2000], "traced_foo": [1265, 1952], "example_weight": [1265, 1266], "example_forward_input": [1265, 1266], "example_inputs_is_kwarg": 1266, "method2": 1266, "example_method2_input": 1266, "weighted_kernel_sum": 1266, "use_memory_effici": 1267, "memory_effici": 1267, "scriptabl": 1267, "kaiser": [1269, 1530, 1532, 1534], "i_0": [1269, 1270, 1847, 1902, 2016], "zeroth": [1269, 1847, 2016], "out_i": 1269, "kroneck": 1270, "a_0": 1270, "a_n": 1270, "b_0": 1270, "b_1": 1270, "b_n": 1270, "k_0": [1270, 1902], "k_1": 1270, "k_n": 1270, "j_0": 1270, "j_1": 1270, "j_n": 1270, "k_t": 1270, "i_t": [1270, 1457, 1753], "b_t": 1270, "j_t": 1270, "bmatrix": 1270, "a_": [1270, 1341, 1475, 1902], "cdot": [1270, 1295, 1307, 1399, 1400, 1421, 1422, 1444, 1452, 1490, 1491, 1492, 1493, 1494, 1530, 1574, 1597, 1778, 1881, 2016, 2022], "vdot": [1270, 1317, 1318, 1953, 2001], "ddot": [1270, 1317], "kth": 1271, "full_lik": [1275, 1953, 1957, 2001], "logarithm": [1278, 1283, 1309, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1336, 1406, 1576, 1611, 1861, 2016], "gamma": [1278, 1401, 1402, 1403, 1441, 1449, 1450, 1451, 1459, 1526, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1754, 1756, 1760, 1761, 1764, 1769, 1770, 1788, 1951, 1953, 2000, 2001, 2002, 2016], "5724": [1278, 2016], "1208": [1278, 2016], "mathrlap": [1279, 1285, 1286, 1287, 1288, 1296, 1299, 1308, 1310, 1312, 1313, 1688], "qquad": [1279, 1281, 1285, 1286, 1287, 1288, 1289, 1296, 1299, 1308, 1310, 1312, 1313, 1688], "eigenvalu": [1279, 1285, 1286, 1287, 1288, 1301, 1304, 1307, 1312, 1313, 1322, 1774, 1953], "resp": [1279, 1286, 1288, 1312, 1313, 1330], "5266": 1279, "9586": 1279, "0626j": 1279, "4160": 1279, "5895": 1279, "2322": 1279, "2976j": 1279, "4928": [1279, 1902], "4692e": 1279, "8747e": 1279, "check_error": [1280, 1291, 1293, 1298, 1311, 1953], "opportun": [1280, 1952, 2012, 2034, 2035], "performantli": 1280, "3792": 1280, "9831j": 1280, "8757": 1280, "5425": 1280, "6374j": 1280, "kappa": 1281, "_p": [1281, 1496], "frobeniu": [1281, 1295, 1302, 1306, 1729], "nuc": [1281, 1302, 1306, 1319, 1700, 1709, 1729], "nuclear": [1281, 1302, 1306, 1729], "sigma_1": [1281, 1295, 1304, 1307], "sigma_n": 1281, "kappa_2": 1281, "kappa_": 1281, "4142": [1281, 1306, 1729, 1778], "1623": [1281, 1302], "2426": [1281, 1306, 1729], "7071": [1281, 1840], "5917": 1281, "9941": 1282, "5132": 1282, "5681": 1282, "4653": 1282, "4507": 1282, "4119": 1282, "6163": 1282, "1073": 1282, "3957": 1282, "9666": [1282, 1583], "0840": 1282, "3357": 1282, "2139": 1282, "slogdet": [1283, 1330, 1953, 2001], "0934": 1283, "1990": [1283, 1330], "4099": [1283, 1330], "7386": [1283, 1330], "diagonaliz": [1285, 1287], "eigenvector": [1285, 1286, 1322, 1953], "neq": [1285, 1286, 1289, 1313, 1384, 1490, 1492, 1739, 1740, 1741, 1743, 1745, 1751, 1752, 1754, 1758, 1885], "phi": [1285, 1286, 1313, 1436, 1590, 1885], "shall": [1285, 1286, 1313, 1691, 1695], "lambda_i": [1285, 1286, 1301], "lambda_j": [1285, 1286], "eigval": [1285, 1953], "9828": [1285, 1910, 1990], "3889j": 1285, "4617": 1285, "3010j": 1285, "1662": 1285, "7435j": 1285, "6139": 1285, "0562j": 1285, "1226": [1285, 1287], "5738j": [1285, 1287], "7537": [1285, 1287], "1286j": [1285, 1287], "9218": 1285, "1882": 1285, "2220j": 1285, "0270": 1285, "3867j": 1285, "7119e": 1285, "2841e": 1285, "uplo": [1286, 1288, 1953], "unitari": [1286, 1289, 1308, 1313, 1688, 1772], "ill": [1286, 1557, 1993], "eigvalsh": [1286, 1304], "9228": [1286, 1288], "2029": [1286, 1288], "0862j": [1286, 1288], "3464": [1286, 1288], "3277": [1286, 1288], "9415": [1286, 1288], "0846": 1286, "9964": 1286, "9170": 1286, "3898j": 1286, "0331j": 1286, "1062e": 1286, "5423e": 1286, "polynomi": [1287, 1288, 1767, 2035], "_n": [1287, 1288, 1290, 1688, 1983], "4576e": [1287, 1314], "5797": 1288, "4629": 1288, "1605": 1288, "3780": 1288, "1113": [1288, 1990], "7381": 1288, "h_1h_2": 1289, "h_k": 1289, "h_i": [1289, 1521], "_m": [1289, 1688], "tau_i": 1289, "8034": 1289, "4184j": 1289, "2588": 1289, "0174j": 1289, "6853": 1289, "7953j": 1289, "0790": 1289, "5620j": 1289, "6989j": 1289, "5360": 1289, "1193j": 1289, "3877": 1289, "6691j": 1289, "3512": 1289, "3024j": 1289, "4766": 1289, "5783j": 1289, "0361": [1289, 1990], "6587j": 1289, "6396": [1289, 1990], "1612j": 1289, "3693": 1289, "4481j": 1289, "aa": 1290, "pinv": [1290, 1295, 1776], "moor": [1290, 1307], "penros": [1290, 1307], "ainv": [1290, 1291, 1311, 1315], "1921e": 1290, "9073e": [1290, 1538], "5107e": 1290, "ldl": [1292, 1294], "indefinit": 1292, "ld": [1292, 1293, 1294, 1953], "sytrf": [1292, 1293], "ldl_solv": 1292, "ldl_factor_ex": [1292, 1294], "2079": [1292, 1293, 2016], "2414": [1292, 1293], "9428": [1292, 1293], "4554": [1292, 1293], "3264": [1292, 1293], "3823": [1292, 1293], "5884": [1292, 1293], "9595": [1292, 1293, 1840], "2695": [1292, 1293], "8513": [1292, 1293], "1633": [1292, 1293], "ldl_factor": 1293, "rcond": [1295, 1307, 1776, 1953], "_f": 1295, "gelsi": 1295, "gelsd": 1295, "gelss": 1295, "tridiagon": 1295, "sigma_i": [1295, 1313, 1885], "residu": [1295, 1322, 1953, 1990], "singular_valu": [1295, 1953], "0838": [1295, 1990], "2275": [1295, 1371], "3844": 1295, "5499": 1295, "1175": 1295, "9102": 1295, "0870": 1295, "6772": 1295, "7758": 1295, "5109": 1295, "4382": 1295, "3769": 1295, "1818": 1295, "3450": 1295, "0806": [1295, 1990], "3967": 1295, "3994": 1295, "1521": 1295, "1473": 1295, "9194": 1295, "0458": 1295, "6705": [1295, 1354], "1802": 1295, "4086": 1295, "5152e": 1295, "zero_": [1295, 1583, 1953, 1969, 1970, 1990, 2015], "almost": [1296, 1297, 1996, 2034], "5007": 1296, "9755": 1296, "0489": 1296, "9644": [1296, 1349], "9605e": 1296, "0376e": 1296, "lu_factor_ex": [1297, 1339], "lu_unpack": [1297, 1339, 1953, 2001], "b1": 1297, "b2": [1297, 1981, 1988], "a_factor": 1297, "getrf": [1298, 1311], "adjoint": [1299, 1953, 2001, 2019, 2021], "_exp": 1301, "7183": [1301, 1990], "3891": 1301, "8660": 1301, "ord": [1302, 1306, 1319, 1729, 1953, 1955, 2001], "la": [1302, 1306, 1319, 1990], "2829": 1302, "2627": 1302, "0756": 1303, "4980": 1303, "6617": 1303, "4994": 1303, "9980": 1303, "2731": 1303, "8001": 1303, "2640": 1303, "4571": 1303, "5511": 1303, "0163": [1303, 1349], "5292": 1303, "4899": 1303, "0822": 1303, "2773": [1303, 1971], "varepsilon": [1304, 1307, 1535], "tol": [1304, 1322, 1953], "fewest": 1305, "bc": [1305, 1963, 2002], "75000": 1305, "26": [1305, 1759, 2032, 2045], "148": 1305, "vector_norm": [1306, 1729], "matrix_norm": [1306, 1319, 1689, 1729], "7460": [1306, 1729], "3485": 1306, "8570e": 1306, "8480": 1306, "2361": [1306, 1729, 1730], "7417": [1306, 1729], "computation": [1307, 1987], "5495": [1307, 1371], "0979": 1307, "4092": 1307, "4132": [1307, 1846], "1143": 1307, "3662": 1307, "6374": 1307, "9294": 1307, "3269": [1307, 1990], "5745": [1307, 1879, 1880, 1929, 1930], "0382": [1307, 1372], "5922": 1307, "6759": 1307, "0600": 1307, "1933": 1307, "2090": 1307, "0903": 1307, "0817": 1307, "4752": [1307, 1884], "7124": 1307, "1631": 1307, "2272": 1307, "1356": 1307, "3933": 1307, "5023": 1307, "0308": 1307, "1725": 1307, "5216": 1307, "apinv": 1307, "5633e": 1307, "0830e": 1307, "wide": [1308, 1313, 1688, 1842, 1980, 1983, 1990, 2002, 2035], "51": [1308, 1485, 1784], "167": [1308, 1784], "68": [1308, 1784, 1952, 1954], "8571": [1308, 1784], "3943": [1308, 1784], "3314": [1308, 1784], "4286": [1308, 1784], "9029": [1308, 1784], "0343": [1308, 1784], "2857": [1308, 1784], "1714": [1308, 1784, 1990], "9429": [1308, 1784], "175": [1308, 1784], "q2": 1308, "r2": [1308, 1526], "6099e": 1308, "2158e": 1308, "logabsdet": [1309, 1953], "0032": 1309, "1219": [1309, 1803], "6690": 1309, "1161": 1309, "4053": 1309, "6218": [1309, 1899], "9273": 1309, "0082": 1309, "7576": 1309, "logdet": [1309, 1953, 2001], "linalg_slogdet": [1309, 1953, 2001], "2776": 1309, "solve_triangular": [1310, 1909], "expand_a": [1310, 1953, 1983, 2001, 2019], "rectangular": [1312, 1313, 1341, 1881, 1976, 1998], "triu_": [1312, 1953], "tril_": [1312, 1953], "full_matric": [1313, 1314, 1694, 1885, 1953, 2040], "vh": [1313, 1694, 1885, 1953, 2040], "gesvdj": [1313, 1314, 1885], "jacobi": 1313, "gesvda": [1313, 1314], "gesvd": [1313, 1314, 1885], "u_k": 1313, "v_k": 1313, "sigma_j": [1313, 1885], "eigendecomposit": 1313, "0486e": 1313, "0957e": 1313, "5139": 1314, "1087": 1314, "1066": 1314, "ind": [1315, 1316, 1953, 1984], "tensorsolv": 1315, "ndim": [1315, 1316, 1969, 1971, 2015, 2021, 2032], "atensorinv": 1315, "movedim": [1316, 1356, 1953, 1984, 2001, 2019], "tensorinv": 1316, "vandermond": [1317, 1928], "pmatrix": 1317, "x_n": [1317, 1399, 1400, 1446, 1447, 1453, 1478, 1518, 1907, 1978], "125": [1317, 1505, 1928, 1953], "overlin": [1318, 1931], "3223": 1318, "2815": 1318, "1944": [1318, 1990], "4345": 1319, "pickle_modul": [1321, 1816], "weights_onli": [1321, 1950, 1965], "pickle_load_arg": 1321, "register_packag": [1321, 1995], "binaryio": [1321, 1816, 2003], "mmape": 1321, "untrust": [1321, 1950, 1965, 2003], "tamper": [1321, 2003], "ram": [1321, 1981], "surg": 1321, "unicodedecodeerror": 1321, "codec": 1321, "0x": 1321, "latin1": 1321, "byte_arrai": 1321, "niter": [1322, 1774, 1886], "ortho_iparam": 1322, "ortho_fparam": 1322, "ortho_bparam": 1322, "knyazev": 1322, "knyazev2001": 1322, "stathopoulosetal2002": 1322, "converg": [1322, 1518, 1688, 1741, 1742, 1766, 1977, 1990, 1993], "precondition": 1322, "eigenpair": 1322, "criterion": [1322, 1399, 1400, 1420, 1422, 1447, 1453, 1478, 1479, 1490, 1491, 1492, 1518, 1519, 1535, 1536, 1759, 1791, 1985], "fep": 1322, "eigenproblem": 1322, "iparam": 1322, "fparam": 1322, "bparam": 1322, "ivar": 1322, "fvar": 1322, "bvar": 1322, "tvar": 1322, "istep": 1322, "converged_count": 1322, "rerr": 1322, "force_stop": 1322, "2001": 1322, "precondit": 1322, "eigensolv": 1322, "siam": 1322, "sci": 1322, "517": 1322, "541": 1322, "epub": 1322, "doi": [1322, 1440, 1848], "1137": 1322, "s1064827500366124": 1322, "andrea": 1322, "stathopoulo": 1322, "kesheng": 1322, "2002": [1322, 1848], "2165": 1322, "2182": 1322, "s1064827500370883": 1322, "duerschetal2018": 1322, "jed": 1322, "duersch": 1322, "meiyu": 1322, "shao": 1322, "chao": 1322, "ming": 1322, "gu": 1322, "c655": 1322, "c676": 1322, "17m1129830": 1322, "log_": [1323, 1324, 1325, 1326, 1953, 1969], "7767": 1323, "3234": 1323, "2156": 1323, "2411": 1323, "5739": 1323, "5637": 1323, "4640": 1323, "1952": 1323, "4226": 1323, "5204": [1323, 1793], "5224": 1324, "9354": 1324, "7257": 1324, "1301": 1324, "2820": 1324, "0290": 1324, "1392": 1324, "8857": 1324, "6476": 1324, "0090": [1325, 1385, 1780, 2016], "9923": 1325, "5372": 1325, "2492": 1325, "8653": 1325, "7055": 1325, "7705": 1325, "2225": 1325, "8419": 1326, "8003": [1326, 1994], "9971": 1326, "5287": 1326, "0490": 1326, "2483": 1326, "0042": 1326, "9196": 1326, "3504": [1326, 1902], "logsumexp": [1327, 1953, 1969, 2001, 2016], "3069": 1327, "6867": 1327, "8731": 1327, "30000": 1327, "1269e": 1327, "log_2": 1328, "logaddexp": [1328, 1953, 2001], "limits_": 1329, "42296738": 1329, "04462666": 1329, "86278635": 1329, "94622083": 1329, "05277811": 1329, "39202815": 1329, "83525007": 1329, "84492621": 1329, "06084887": 1329, "06844475": 1329, "2611": [1330, 1899], "9254": 1330, "6213": [1330, 1990], "6843": 1330, "3242": 1330, "9665": 1330, "4539": 1330, "0887": [1330, 2016], "1336": 1330, "4025": 1330, "7089": [1330, 1429], "9032": 1330, "3031": 1330, "2589": 1336, "1135": 1336, "5481": [1336, 1349, 1990], "9566": 1336, "sum_j": [1337, 1477, 1520, 1522, 1649, 1864, 2016], "0593": [1337, 1990], "5696": 1337, "6859e": 1337, "compute_pivot": 1339, "transposit": [1339, 1906, 2015], "perm": 1339, "a_lu": 1339, "5558": 1339, "1684": 1339, "1551": 1339, "1940": 1339, "6189": 1339, "5497": 1339, "4526": 1339, "2526": 1339, "3285": 1339, "7988": 1339, "7175": 1339, "9701": 1339, "2634": 1339, "9255": 1339, "3459": 1339, "00000e": 1340, "8312": 1340, "unpack_data": [1341, 1953], "unpack_pivot": [1341, 1953], "l_": [1341, 1388, 1392, 1396, 1400, 1414, 1415, 1416, 1417, 1454, 1480], "u_": [1341, 1739, 1743], "3552": [1343, 1584], "3825": 1343, "8297": 1343, "3477": 1343, "2035": [1343, 1879, 1880, 1929, 1930], "2252": [1343, 2016], "5002": 1343, "6248": [1343, 1352], "1307": 1343, "0608": [1343, 1857], "1244": 1343, "0139": 1343, "6763": 1347, "7445": 1347, "2369": 1347, "argmax": [1347, 1391, 1480, 1617, 1618, 1619, 1897, 1953, 2001, 2040], "max_indic": 1347, "2360": 1347, "2942": 1347, "1222": [1347, 1990], "8475": 1347, "1949": 1347, "1127": 1347, "6702": 1347, "5717": 1347, "9207": 1347, "1297": 1347, "8768": 1347, "6172": 1347, "6060": 1347, "2432": 1347, "3288": 1349, "3367": 1349, "nanmean": [1349, 1953, 2001], "3841": 1349, "6320": 1349, "4254": 1349, "7384": 1349, "0131": 1349, "6549": [1349, 1840], "4279": 1349, "3350": 1349, "7694": 1349, "5600": [1349, 1539], "0842": 1349, "9580": 1349, "3623": 1349, "2343": [1349, 1971], "5085": 1349, "4599": 1349, "1807": 1349, "5219": 1350, "5212": 1350, "2202": 1350, "2505": 1350, "3982": 1350, "9948": 1350, "3518": 1350, "3131": 1350, "3180": [1350, 2015], "6993": 1350, "0436": 1350, "0438": 1350, "2270": 1350, "2751": 1350, "7303": 1350, "2192": 1350, "3321": 1350, "2488": 1350, "0778": 1350, "9510": 1350, "7048": 1350, "4742": [1350, 1915, 2016], "7125": [1350, 1866], "plot": [1351, 1980, 2005, 2020, 2047], "t_0": [1351, 1759], "t_": [1351, 1435, 1588, 1758, 1759, 1953, 2015, 2034], "s_0": 1351, "s_": [1351, 1389, 1390, 1432, 1537], "g_0": 1351, "g_": [1351, 1743, 1753, 1754], "g_i": 1351, "t_i": 1351, "0d": [1351, 1479], "xy": 1351, "50276": 1351, "cartesian_prod": [1351, 1953, 2001], "grid_x": 1351, "grid_i": 1351, "dstack": [1351, 1953, 2001, 2015], "matplotlib": [1351, 2020], "pyplot": 1351, "plt": 1351, "plot_surfac": 1351, "6750": 1352, "0857": [1352, 1912], "7197": [1352, 1937], "argmin": [1352, 1953, 2001, 2040], "min_indic": [1352, 1953], "1334": 1352, "2803": 1352, "4644": [1352, 1879, 1880, 1929, 1930], "2635": [1352, 1990], "3651": 1352, "0384": 1352, "0128": 1352, "7015": 1352, "1153": 1352, "9849": 1352, "1458": [1352, 2016], "5788": 1352, "deduc": [1354, 2015], "4851": 1354, "5037": 1354, "3633": 1354, "0760": 1354, "3362": [1356, 1357], "8437": [1356, 1357], "9627": [1356, 1357], "1727": [1356, 1357], "5173": [1356, 1357], "1398": [1356, 1357], "mpsalloc": [1358, 1359], "metal": [1359, 1368, 1964, 1967, 1991], "mpsgraph": 1359, "wait_until_complet": [1364, 1365], "signpost": [1364, 1365, 1366], "xcode": 1365, "recommendedmaxworkingsets": 1368, "unlimit": [1368, 1981], "1321": 1371, "4370": [1371, 2015], "1289": 1371, "0527": 1371, "3077": [1371, 1875], "0881": 1371, "1259": 1371, "0284": 1371, "2015": [1372, 1976, 1990], "6087": 1372, "1494": 1372, "5491": 1372, "260": 1372, "8663": 1372, "3137": 1372, "0700": 1372, "8378": 1372, "5146": 1372, "1216": 1372, "5244": 1372, "5767": 1372, "1363": 1372, "5877": 1372, "5083": 1372, "1614": 1372, "1645": 1372, "7021": 1372, "0085": 1372, "0367": 1372, "1567": 1372, "4312": 1372, "1019": 1372, "4394": 1372, "8753": 1372, "stricter": 1373, "_sampl": 1373, "thtensorrandom": 1373, "320": [1373, 1410, 1513], "0404": 1375, "6361": 1375, "multigammaln": [1376, 2016], "4028e": 1377, "38": [1377, 2032], "1400e": 1377, "isnan": [1378, 1953, 2001, 2015, 2040], "midpoint": [1380, 1785], "weakli": [1382, 1383, 2016], "to_spars": [1383, 1862, 1953, 1994, 2001, 2015], "2262": [1385, 1780], "0682": [1385, 1780], "2866": [1385, 1780], "3940": [1385, 1780], "5x7": [1389, 1393], "7x7": [1389, 1393], "10x7": [1389, 1393], "cube": [1390, 1394, 1791], "d_": [1390, 1394, 1398, 1410, 1413, 1416, 1419, 1456, 1482, 1485, 1510, 1513, 1539, 1544, 1592, 1910, 1911, 1912, 1913], "5x7x9": [1390, 1394], "7x7x7": [1390, 1394], "7x9x8": [1390, 1394], "n_class": 1391, "cutoff": [1391, 1976], "div_valu": 1391, "head_bia": 1391, "edouard": 1391, "grave": [1391, 1406], "armand": 1391, "joulin": 1391, "moustapha": 1391, "ciss\u00e9": 1391, "grangier": 1391, "herv\u00e9": 1391, "j\u00e9gou": 1391, "imbalanc": 1391, "zipf": 1391, "law": 1391, "102": [1391, 2039], "1001": 1391, "1002": 1391, "_class": 1391, "maxunpool1d": [1392, 1480, 1620, 1922], "maxunpool2d": [1393, 1434, 1481, 1621, 1922], "maxunpool3d": [1394, 1435, 1482, 1622, 1922], "selu": [1395, 1431, 1585, 1953, 1976, 2000, 2001], "n_i": [1396, 1397, 1398, 1414, 1415, 1416, 1480, 1481, 1482, 1535, 1536], "c_j": [1396, 1397, 1398, 1480, 1481, 1482], "size_averag": [1399, 1400, 1420, 1422, 1446, 1452, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1564, 1565, 1573, 1575, 1600, 1604, 1605, 1616, 1624, 1625, 1626, 1627, 1628, 1636, 1647, 1648, 1659, 1953], "unreduc": [1399, 1400, 1422, 1447, 1453, 1478, 1494, 1518, 1536], "ell": [1399, 1400, 1422, 1446, 1447, 1453, 1478, 1494, 1518, 1536], "l_1": [1399, 1400, 1422, 1446, 1447, 1453, 1478, 1494, 1518, 1536], "l_n": [1399, 1400, 1422, 1446, 1447, 1453, 1478, 1494, 1518, 1536], "w_n": [1399, 1400, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848], "y_n": [1399, 1400, 1422, 1446, 1447, 1453, 1478, 1494, 1518, 1907, 1978], "lim_": [1399, 1978], "secondli": 1399, "rescal": [1399, 1400, 1422, 1491, 1492, 1494, 1520, 1522, 1564, 1565, 1575, 1628, 1694, 1723], "nbatch": [1399, 1400], "meantim": [1399, 1400, 1420, 1422, 1446, 1453, 1478, 1479, 1490, 1491, 1492, 1494, 1501, 1518, 1519, 1535, 1564, 1565, 1575, 1604, 1628, 1636, 2045], "pos_weight": [1400, 1565, 1953], "recal": [1400, 1983, 2020, 2038], "ell_c": 1400, "l_c": 1400, "p_c": 1400, "imbal": 1400, "pai": [1400, 1565, 1996, 2019], "spacial": [1400, 1565], "random_": [1400, 1422, 1494, 1565, 1953, 1969, 2023], "hat": [1401, 1402, 1403, 1449, 1450, 1451, 1526], "terminologi": [1401, 1402, 1403, 1526], "5d": [1403, 1451, 1539, 1592, 1603, 1631, 1662], "volumetr": [1403, 1526, 1539, 1592, 1603, 1662, 1663, 1664], "spatio": [1403, 1526], "in1_featur": 1404, "in2_featur": 1404, "in1": [1404, 1563], "in2": [1404, 1563], "blank": [1406, 1576, 1953, 1956], "zero_infin": [1406, 1576, 1953], "connectionist": [1406, 1576], "unseg": 1406, "longest": [1406, 1716, 1718, 1719, 1985], "input_length": [1406, 1576, 1953, 1985], "target_length": [1406, 1576, 1953], "s_n": 1406, "target_n": 1406, "unbatch": [1406, 1422, 1433, 1438, 1449, 1457, 1493, 1502, 1530, 1586], "s_min": 1406, "toronto": 1406, "edu": [1406, 1791], "icml_2006": 1406, "background": [1406, 1417, 1592, 1631, 1992, 2011], "channel_shuffl": [1407, 1953, 2001], "_left": [1408, 1409, 1410, 1411, 1412, 1413, 1508, 1509, 1510, 1511, 1512, 1513, 1542, 1543, 1544, 1631], "_right": [1408, 1409, 1410, 1411, 1412, 1413, 1508, 1509, 1510, 1511, 1512, 1513, 1542, 1543, 1544, 1631], "_top": [1409, 1410, 1412, 1413, 1509, 1510, 1512, 1513, 1543, 1544, 1631], "_bottom": [1409, 1410, 1412, 1413, 1509, 1510, 1512, 1513, 1543, 1544, 1631], "_front": [1410, 1413, 1510, 1513, 1544, 1631], "_back": [1410, 1413, 1510, 1513, 1544, 1631], "480": [1410, 1513], "0491": [1411, 1542], "7152": [1411, 1542], "0749": [1411, 1542], "3287": [1411, 1542], "8966": [1411, 1542], "1466": [1411, 1542], "2771": [1411, 1542], "6616": [1411, 1542], "4523": [1411, 1542], "1255": [1411, 1542], "6372": [1411, 1542, 1885], "1182": [1411, 1542], "8652": [1411, 1542], "6585": 1412, "4320": [1412, 1895], "8701": 1412, "4649": 1412, "_j": [1414, 1415], "star": [1414, 1415, 1416, 1955], "\u00e0": [1414, 1415, 1416, 1417, 1418, 1419, 1433, 1538], "trou": [1414, 1415, 1416, 1417, 1418, 1419, 1433, 1538], "harder": [1414, 1415, 1416, 1417, 1418, 1419, 1433, 1481, 1482, 1538], "prod_": [1415, 1416, 1418, 1419, 1432, 1537, 1745], "out_j": 1416, "deconvolut": [1417, 1418, 1419, 1570, 1571, 1572], "_pad": [1417, 1418, 1419], "semi": [1420, 1446, 1951, 1976], "supervis": [1420, 1446], "vert": [1421, 1496, 1574], "_2": [1421, 1574, 1689, 1723], "ast_1": [1421, 1437], "ast_2": [1421, 1437], "ignore_index": [1422, 1494, 1575, 1628, 1953], "label_smooth": [1422, 1575, 1953], "unbalanc": [1422, 1494], "d_1": [1422, 1494, 1575, 1628], "d_2": [1422, 1494, 1575, 1628], "d_k": [1422, 1494, 1575, 1628], "_index": [1422, 1494], "logsoftmax": [1422, 1494, 1520, 1611], "nllloss": [1422, 1520, 1628, 1649, 1922], "blend": 1422, "smooth": [1422, 1447, 1518, 1523, 1575, 1601, 1647, 1752], "w_c": 1422, "truth": [1422, 1575, 1962, 2020], "rethink": [1422, 1575], "incept": [1422, 1575], "spectral_norm": [1423, 1713], "neuron": 1424, "detector": 1424, "dropout1d": [1426, 1953], "_freez": 1429, "sparseadam": [1429, 2002], "0251": 1429, "6902": [1429, 1782], "7172": 1429, "6431": 1429, "0748": 1429, "6969": 1429, "4970": 1429, "3448": 1429, "9685": 1429, "3677": 1429, "7265": 1429, "1685": 1429, "4362": 1429, "4004": [1429, 1866], "9400": 1429, "9124": 1429, "3616": 1429, "1151": 1429, "0309": 1429, "9315": 1429, "1655": [1429, 1981], "9897": [1429, 1983], "0635": 1429, "7895": 1429, "0364": 1429, "6778": 1429, "5803": 1429, "from_pretrain": [1429, 1430, 2037], "bag": [1430, 1584], "per_sample_weight": [1430, 1584, 1953, 2040], "embedding_sum": 1430, "8861": 1430, "4350": 1430, "0523": 1430, "1306": 1430, "5798": 1430, "0044": 1430, "7082": [1430, 1584], "2145": [1430, 1584], "6251": [1430, 1584], "6500": 1430, "satur": [1431, 1585], "alphadropout": [1431, 1558], "160": [1432, 2002], "unfold": [1433, 1953, 2001, 2019], "prod_d": [1433, 1538], "neighborhood": [1433, 1538], "col2im": [1433, 1953, 2001, 2040], "fold_param": [1433, 1538], "input_on": [1433, 1538], "output_ratio": [1434, 1435, 1587, 1588, 1953], "_random_sampl": [1434, 1435, 1587, 1588, 1953], "ben": [1434, 1435, 1587, 1588], "graham": [1434, 1435, 1587, 1588], "oh": [1434, 1435, 1587, 1588], "ow": [1434, 1435, 1587, 1588], "_ratio": [1434, 1435, 1588], "_h": 1434, "13x12": [1434, 1587], "kt": [1435, 1561, 1569, 1572, 1588, 1619], "ot": [1435, 1588], "13x12x11": [1435, 1588], "044715": [1436, 1590], "pack_sequ": [1438, 1457, 1502, 1718, 1720], "bias_ih": [1439, 1458, 1502, 1504], "bias_hh": [1439, 1458, 1502, 1504], "homoscedast": [1440, 1589], "heteroscedast": [1440, 1589], "nix": 1440, "weigend": 1440, "1994": 1440, "icnn": 1440, "94": 1440, "orlando": 1440, "fl": 1440, "usa": [1440, 2020], "374138": 1440, "instancenorm": [1441, 2008], "layernorm": [1441, 1449, 1450, 1451, 1530, 1532, 1534, 1606, 1971, 2008, 2045], "shrinkag": [1442, 1524, 1595, 1652], "mobilenetv3": [1444, 1597], "_val": 1445, "dissimilar": 1446, "l1loss": [1447, 1518, 1605], "outlier": [1447, 1518, 2006, 2007], "huber": [1447, 1518, 1601], "smoothl1loss": [1447, 1601, 1647], "insensit": 1448, "unused_argument1": 1448, "unused_argument2": 1448, "ingredi": [1449, 1450, 1451], "styliz": [1449, 1450, 1451], "rgb": [1450, 1451, 2020], "color": [1451, 1954, 1955, 2020, 2036], "log_target": [1452, 1604, 1953], "kl": [1452, 1604, 1951], "summaris": 1452, "loss_pointwis": 1452, "batchmean": [1452, 1604], "kl_loss": 1452, "mae": 1453, "proj_siz": [1457, 1503], "f_t": [1457, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "hf": [1457, 1458], "g_t": [1457, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "ig": [1457, 1458], "hg": [1457, 1458], "o_t": 1457, "ho": [1457, 1458], "c_t": 1457, "forget": [1457, 1954, 1955], "1402": 1457, "c_0": [1457, 1458], "proj": 1457, "c_n": 1457, "w_ii": 1457, "w_if": 1457, "w_ig": 1457, "w_io": 1457, "w_hi": 1457, "w_hf": 1457, "w_hg": 1457, "w_ho": 1457, "b_ii": 1457, "b_if": 1457, "b_ig": 1457, "b_io": 1457, "b_hi": 1457, "b_hf": 1457, "b_hg": 1457, "b_ho": 1457, "weight_hr_l": 1457, "_revers": 1457, "h_1": 1458, "c_1": 1458, "time_step": 1458, "_shape": 1459, "sentence_length": 1459, "lazymodulemixin": [1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472], "cls_to_becom": [1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1677], "convtranspose1d": [1466, 1570, 1922, 2008], "convtranspose3d": [1468, 1572, 1682, 1922, 2008], "instancenorm1d": [1469, 1602, 2008], "instancenorm2d": [1470, 1602, 2008], "instancenorm3d": [1471, 1602, 2008], "uninitializedparamet": [1472, 1665, 1951], "lrn": 1475, "signal_2d": 1475, "signal_4d": 1475, "output_2d": 1475, "output_4d": 1475, "x_j": [1477, 1520, 1522, 1649, 1864, 1987, 2016], "80827": [1483, 1484, 1485], "unpool": [1483, 1484, 1485], "maxpool3d": [1485, 1619, 1622, 1922, 2008], "unpooled_output": 1485, "t_destin": 1487, "lrelu": [1488, 1990], "hing": [1490, 1492], "sum_i": [1491, 1492, 1519], "nelement": [1491, 1519], "jointli": 1493, "multihead": [1493, 1532], "concat": [1493, 1953, 1986, 2001], "head_1": 1493, "head_h": 1493, "head_i": 1493, "qw_i": 1493, "kw_i": 1493, "vw_i": 1493, "inference_mod": [1493, 1534], "nestedtensor": [1493, 1534, 1971], "multihead_attn": 1493, "e_q": 1493, "e_k": 1493, "e_v": 1493, "_head": [1493, 1530], "merge_mask": 1493, "mask_typ": 1493, "merged_mask": 1493, "nll": 1494, "crossentropyloss": [1494, 1575], "num_paramet": 1495, "nchannel": 1495, "decai": [1495, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1761, 1763, 1764, 1767, 1768, 1770, 1841, 2002], "legitim": [1495, 1592, 1984], "vert_p": 1496, "upscale_factor": [1499, 1634, 1953, 2040], "upscal": 1499, "video": [1499, 1500, 1970, 2020, 2032], "shi": [1499, 1500], "2016": [1499, 1500, 1536], "_factor": [1499, 1500, 1539, 1540, 1541], "pixel_shuffl": [1499, 1953, 2001, 2008, 2040], "downscale_factor": [1500, 1635, 1953], "pixelshuffl": [1500, 1634, 1635, 2008], "downscal": 1500, "pixel_unshuffl": [1500, 1953, 2001, 2008], "log_input": [1501, 1636, 1953], "poisson": [1501, 1636, 1841, 1951, 1953, 2001], "stirl": [1501, 1636], "hh": [1502, 1504], "h_t_minus_1": 1502, "flatten_paramet": 1503, "3333333333333333": [1505, 1757, 1763, 1953], "leaki": [1505, 1641, 1976], "rectifi": [1505, 1506, 1638, 1976], "empir": 1505, "crelu": 1506, "1603": 1506, "05201": 1506, "6732632423543772848170429916717": [1514, 1644], "0507009873554804934193349852946": [1514, 1644], "kaiming_norm": 1514, "kaiming_normal_": [1514, 1951, 1957, 1976], "initialis": 1514, "calculate_gain": [1514, 1951, 1957, 1976], "modulelist": [1515, 1990], "cascad": 1515, "relu2": [1515, 1665], "swish": [1516, 1646], "coin": [1516, 1646], "cnn": [1518, 2006], "ross": 1518, "girshick": 1518, "quadrat": [1518, 1985], "huberloss": [1518, 1601], "w_j": 1521, "soft": [1524, 1594, 1652], "softshrinkag": 1524, "convert_sync_batchnorm": 1526, "r1": 1526, "sync_bn_network": 1526, "ddp_sync_bn_network": 1526, "sync_bn_modul": 1526, "d_model": [1530, 1531, 1532, 1533, 1534], "nhead": [1530, 1531, 1532, 1533, 1534], "num_encoder_lay": 1530, "num_decoder_lay": 1530, "dim_feedforward": [1530, 1532, 1534], "custom_encod": 1530, "custom_decod": 1530, "layer_norm_ep": [1530, 1532, 1534], "norm_first": [1530, 1532, 1534], "ashish": [1530, 1532, 1534], "vaswani": [1530, 1532, 1534], "noam": [1530, 1532, 1534], "shazeer": [1530, 1532, 1534], "niki": [1530, 1532, 1534], "parmar": [1530, 1532, 1534], "jakob": [1530, 1532, 1534], "uszkoreit": [1530, 1532, 1534], "llion": [1530, 1532, 1534], "jone": [1530, 1532, 1534], "aidan": [1530, 1532, 1534], "gomez": [1530, 1532, 1534], "lukasz": [1530, 1532, 1534], "illia": [1530, 1532, 1534], "polosukhin": [1530, 1532, 1534], "6000": [1530, 1532, 1534, 1539, 1788, 1835, 1838], "6010": [1530, 1532, 1534], "feedforward": [1530, 1532, 1534, 1976], "transformer_model": 1530, "word_language_model": 1530, "src_mask": [1530, 1534], "tgt_mask": [1530, 1531, 1532], "memory_mask": [1530, 1531, 1532], "src_key_padding_mask": [1530, 1533, 1534], "tgt_key_padding_mask": [1530, 1531, 1532], "memory_key_padding_mask": [1530, 1531, 1532], "src_is_caus": 1530, "tgt_is_caus": [1530, 1531, 1532], "memory_is_caus": [1530, 1531, 1532], "_mask": [1530, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712], "_key_padding_mask": 1530, "generate_square_subsequent_mask": 1530, "sz": 1530, "decoder_lay": [1531, 1532], "transformerdecoderlay": 1531, "transformer_decod": 1531, "encoder_lay": [1533, 1534], "enable_nested_tensor": 1533, "mask_check": 1533, "bert": [1533, 2037], "1810": 1533, "04805": 1533, "transformerencoderlay": 1533, "transformer_encod": 1533, "triplet": [1535, 1536, 1659, 1660], "x3": 1535, "balnta": [1535, 1536], "riba": [1535, 1536], "a_i": [1535, 1536, 1843], "p_i": [1535, 1536], "rm": [1535, 1536], "bf": [1535, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "rvert_p": [1535, 1629], "tripletmarginwithdistanceloss": [1535, 1660], "triplet_loss": [1535, 1536], "distance_funct": [1536, 1660], "l_i": 1536, "tripletmarginloss": [1536, 1659], "l_p": [1536, 1629], "pairwisedist": [1536, 1632], "penal": [1536, 1990, 2002], "distant": 1536, "anchor_id": 1536, "positive_id": 1536, "negative_id": 1536, "l_infin": 1536, "bmva": 1536, "bmvc": 1536, "paper119": 1536, "unflattened_s": 1537, "namedtensor": 1537, "namedshap": 1537, "u_1": 1537, "u_n": 1537, "u_i": 1537, "im2col": [1538, 1953, 2001], "fold": [1538, 1886, 1953, 1964, 2000, 2009, 2015], "2x3": 1538, "3x4": 1538, "inp_unf": 1538, "out_unf": 1538, "recompute_scale_factor": [1539, 1603], "bicub": [1539, 1592, 1603, 1662, 1922], "trilinear": [1539, 1592, 1603, 1662, 1922], "input_3x3": 1539, "4375": 1539, "8125": 1539, "9375": 1539, "2400": [1539, 1902], "1200": [1539, 1813, 1981], "8800": 1539, "4400": [1539, 1902], "7200": 1539, "0400": 1539, "2800": [1539, 1835], "3600": 1539, "5200": 1539, "6400": 1539, "1678": 1543, "4418": 1543, "9466": [1543, 2016], "9604": 1543, "4219": 1543, "5241": 1543, "9162": 1543, "5436": [1543, 1902], "6446": 1543, "sdpa_kernel": 1545, "seq_len_q": 1546, "seq_len_kv": 1546, "causalvari": 1546, "constru": 1546, "causal_upper_left": 1546, "causal_lower_right": 1546, "bsz": 1546, "seqlen_q": 1546, "seqlen_kv": 1546, "head_dim": 1546, "attn_bia": [1546, 1643], "upper_left": [1547, 1549], "lower_right": [1547, 1548], "diagonal_offset": [1547, 1548], "causalbia": [1548, 1549], "sdpbackend": 1550, "adaptiveavgpool1d": [1551, 2008], "tripl": [1553, 1556], "adaptivemaxpool1d": 1554, "adaptivemaxpool2d": [1555, 1922], "adaptivemaxpool3d": 1556, "avgpool1d": [1559, 2008], "st": [1561, 1569, 1572, 1619, 2045], "avgpool3d": [1561, 1922, 2008], "iT": [1561, 1569, 1572], "padt": [1561, 1569, 1572], "score": [1565, 1643, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709, 1951], "dt": [1569, 1572, 2016, 2045], "out_padw": [1570, 1571, 1572], "out_padh": [1571, 1572], "out_padt": 1572, "cosineembeddingloss": 1573, "ctcloss": [1576, 1922], "charact": [1576, 1832, 1952, 1955, 1970, 2011], "elu": [1582, 1953, 2000, 2001, 2008], "embedding_matrix": [1583, 1584], "8490": 1583, "9625": 1583, "6753": 1583, "7761": 1583, "6108": 1583, "6246": 1583, "9751": 1583, "3618": 1583, "4161": [1583, 2015], "2419": 1583, "7383": 1583, "0237": 1583, "7794": 1583, "0528": 1583, "3385": 1583, "8612": 1583, "1867": 1583, "5384": 1583, "8720": 1583, "6262": 1583, "7471": 1583, "embeddingbag": [1584, 1922, 2006, 2008, 2021], "3397": 1584, "5545": 1584, "5893": 1584, "4386": 1584, "5882": 1584, "featurealphadropout": 1585, "gaussiannllloss": 1589, "border": 1592, "affine_grid": [1592, 1953], "extrema": 1592, "pil": [1592, 1603], "overshoot": [1592, 1603, 1662], "gumbel": [1594, 1951], "y_hard": 1594, "y_soft": 1594, "hardtanh": [1599, 1953, 1964, 2001, 2008, 2040], "hingeembeddingloss": 1600, "use_input_stat": [1602, 1953], "antialia": 1603, "anti": 1603, "pillow": [1603, 2020], "buggi": 1603, "inter_nearest": 1603, "104157": 1603, "kldivloss": 1604, "batchsiz": [1604, 1867, 1868, 1869, 1871, 1872, 2015], "leaky_relu": [1608, 1953, 1976, 2001, 2008, 2040], "localresponsenorm": 1610, "_stacklevel": [1611, 1649, 1650, 1953, 1959], "lppool1d": 1613, "lppool2d": 1614, "lppool3d": 1615, "marginrankingloss": 1616, "max_unpool1d": [1617, 1953], "multimarginloss": 1625, "multilabelmarginloss": 1626, "multilabelsoftmarginloss": 1627, "n_0": 1629, "n_": 1629, "n_k": 1629, "everywher": [1630, 1881, 2002], "circularpad2d": 1631, "constantpad2d": 1631, "reflectionpad2d": [1631, 1922], "replicationpad2d": [1631, 1922], "t4d": 1631, "p1d": 1631, "p2d": 1631, "p3d": 1631, "pixelunshuffl": [1635, 2008], "poissonnllloss": 1636, "rrelu": [1642, 1953, 2001], "dropout_p": [1643, 1953], "temp_mask": 1643, "ev": 1643, "legend": 1643, "softmarginloss": 1648, "module_kwarg": 1658, "upsample_trilinear": 1663, "fo": 1663, "spatia": 1664, "mixin": [1665, 1951], "dry": 1665, "lazymlp": 1665, "lazylinear": 1665, "lazy_mlp": 1665, "8832e": 1665, "5636e": 1665, "1598e": 1665, "5637e": 1665, "8788e": 1665, "0042e": 1665, "0019": 1665, "lazymodul": 1665, "full_mlp": 1665, "3837": [1665, 1782], "0907": 1665, "6708": 1665, "5223": 1665, "9028": 1665, "2851": 1665, "6813": 1665, "5766": 1665, "8678": 1665, "1320": 1665, "2938": 1665, "0679": [1665, 1912], "2793": [1665, 1730], "1088": 1665, "1795": 1665, "2301": 1665, "2807": 1665, "2479": 1665, "1091": 1665, "has_uninitialized_param": 1665, "initialize_paramet": 1665, "register_backward_pre_hook": 1671, "check_reduct": 1674, "delay_all_reduce_named_param": 1674, "param_to_hook_all_reduc": 1674, "optimizer_param": 1674, "loss_func": [1674, 2011], "consume_prefix_in_state_dict_if_pres": 1674, "nccl2": 1674, "dictat": [1674, 1955], "megabyt": 1674, "mb": [1674, 1981], "detach_": [1674, 1953, 1969, 2008, 2015], "ddp_logging_data": 1674, "can_set_static_graph": 1674, "model_ddp": 1674, "_get_ddp_logging_data": 1674, "divide_by_initial_world_s": 1674, "caught": [1674, 1968], "syncbatchnorm": 1674, "deplet": 1674, "pariti": 1674, "discrep": [1674, 1791, 1987], "another_input": 1674, "predivid": 1674, "noop": 1674, "encode_and_decod": 1674, "encoded_tensor": 1674, "decoded_tensor": 1674, "error_if_nonfinit": [1678, 1679], "foreach": [1678, 1679, 1680, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 2002], "clip_valu": 1680, "nhwc": [1681, 1682, 2018, 2020], "outweigh": [1681, 1682, 1755, 2045], "_convnd": 1683, "conv_w": 1684, "conv_b": 1684, "bn_rm": [1684, 1686], "bn_rv": [1684, 1686], "bn_ep": [1684, 1686], "bn_w": [1684, 1686], "bn_b": [1684, 1686], "linear_w": 1686, "linear_b": 1686, "orthogonal_map": 1688, "use_trivi": 1688, "qq": 1688, "matrix_exp": [1688, 1953, 2001], "caylei": 1688, "thin": [1688, 1784], "manifold": 1688, "register_parametr": [1688, 1689, 1691, 1692, 1723, 1972], "orth_linear": 1688, "parametrizedlinear": [1688, 1689, 1690], "moduledict": [1688, 1689, 1690, 1954, 1990], "parametrizationlist": [1688, 1689, 1690, 1694], "_orthogon": 1688, "9332e": 1688, "n_power_iter": [1689, 1723], "sn": [1689, 1723], "discrimin": [1689, 1723], "adversari": [1689, 1723], "lipschitz": 1689, "reimplement": [1689, 1723], "_spectralnorm": 1689, "convtranspos": [1689, 1723], "snm": 1689, "0081": 1689, "amaxbackward0": 1689, "decoupl": [1690, 1726, 1742, 1745, 1751], "1602": [1690, 1726], "07868": [1690, 1726], "_weightnorm": 1690, "original0": [1690, 1691, 1694, 1726], "original1": [1690, 1691, 1694, 1726], "tensor_nam": [1691, 1693, 1694, 1695], "right_invers": [1691, 1694], "out_rnn": 1692, "rnn_cell": 1692, "inbuilt": 1694, "unparametr": 1694, "rankon": 1694, "surject": 1694, "s0_sqrt": 1694, "linear_rank_on": 1694, "matrix_rank": 1694, "leave_parametr": 1695, "unparametris": 1695, "prune": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1972, 2015], "skeleton": 1696, "compute_mask": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "importance_scor": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1709], "apply_mask": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "pruned_tensor": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "default_mask": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "_orig": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712], "undon": [1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712], "unprun": [1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711], "basepruningmethod": [1701, 1707], "add_pruning_method": 1701, "pruning_typ": [1701, 1705], "unstructur": [1701, 1705], "ravel": [1701, 1953, 2001], "nonmask": 1701, "bias_mask": [1704, 1706], "pruning_method": 1705, "parameters_to_prun": 1705, "l1unstructur": 1705, "parameters_to_vector": 1705, "forward_pre_hook": [1707, 1990], "random_unstructur": [1707, 1712], "odict_kei": 1708, "weight_orig": 1708, "weight_mask": [1708, 1711], "columns_prun": 1710, "t_modul": [1713, 1714, 1723, 1726], "weight_norm": 1714, "sorted_indic": [1715, 1717, 1718, 1720], "unsorted_indic": [1715, 1717, 1718, 1720], "abc": [1715, 1955], "axbc": 1715, "throughout": [1715, 1987, 1990, 2006], "conform": [1715, 1990], "is_cuda": [1715, 1969, 2001, 2017, 2035], "enforce_sort": [1716, 1717, 1718], "unsort": [1716, 1717, 1820], "shortest": 1716, "uncondition": [1716, 1950, 1983, 2046], "pad_sequ": [1717, 1721, 1953, 2001], "padding_valu": [1718, 1719, 1953], "total_length": [1718, 1985], "seq_unpack": 1718, "lens_unpack": 1718, "packed_sequ": 1720, "unpacked_sequ": 1720, "padded_sequ": 1721, "unpad": 1721, "unstack": 1721, "as_tensor": [1721, 1900, 1953, 1971, 1983, 2001, 2020, 2021, 2022], "unpadded_sequ": 1721, "module_cl": [1722, 2011], "5846e": 1722, "29": [1722, 1848, 2000], "8307e": 1722, "5250e": 1722, "1210e": 1722, "4677e": 1722, "5915e": 1722, "4013e": 1722, "weight_u": 1723, "parameters_and_buff": 1724, "reparamater": 1724, "weight_g": [1726, 1953], "weight_v": 1726, "modern": [1726, 1993, 2029, 2035], "bother": 1726, "102999": 1726, "remove_parametr": 1726, "as_tupl": [1728, 1937], "complexfloat": [1729, 1735], "0425": 1730, "7969": 1730, "2925": 1730, "7229": 1730, "2134": 1730, "0505": 1730, "1408": 1730, "0563": 1730, "0566": 1730, "0732": [1730, 1902], "0687": 1730, "1177": 1730, "2303": 1730, "1552": 1730, "6148": 1730, "6535": 1730, "8318": 1730, "3987": 1730, "9544": [1730, 1792], "6048": 1730, "7909": 1730, "120": [1732, 2020], "from_valu": 1735, "onnx_typ": 1735, "tensorprotodatatyp": 1735, "torch_c_value_with_type_float": 1735, "from_dtyp": 1735, "jit_type_bas": 1735, "safer": [1735, 1962], "onnxexportererror": [1735, 1998, 2000], "symbolicvalueerror": 1735, "onnx_compat": 1735, "scalar_nam": 1735, "complexhalf": 1735, "complexdoubl": 1735, "float8e5m2": 1735, "float8e4m3fn": 1735, "float8e5m2fnuz": 1735, "float8e4m3fnuz": 1735, "torch_nam": 1735, "int8_t": 1735, "int16_t": 1735, "float8_e5m2": [1735, 2017, 2021], "float8_e4m3fn": [1735, 2017, 2021], "float8_e5m2fnuz": [1735, 2017], "float8_e4m3fnuz": [1735, 2017], "verif": [1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 2000], "params_dict": 1736, "export_opt": [1736, 1998], "_excluded_node_kind": 1736, "frozenset": [1736, 1955], "scalarimplicit": [1736, 2001], "prim": [1736, 1952, 2000, 2001], "listconstruct": [1736, 1952], "all_mismatch_leaf_graph_info": 1736, "essential_node_count": 1736, "subgraph": [1736, 1978, 1982, 2000, 2003, 2025, 2032, 2034, 2045], "essential_node_kind": 1736, "export_repro": 1736, "repro_dir": 1736, "repro": [1736, 2035, 2045], "test_": 1736, "test_data_set_0": 1736, "input_0": [1736, 2000], "pb": [1736, 2000], "input_1": [1736, 2000], "output_0": 1736, "output_1": 1736, "find_mismatch": [1736, 2000], "exhibit": [1736, 2000, 2033, 2045], "verificationopt": [1736, 2000], "find_partit": 1736, "has_mismatch": 1736, "pretty_print_mismatch": 1736, "pretty_print_tre": 1736, "graph_info": [1736, 2000], "__2": [1736, 2000], "__1": [1736, 2000], "__3": [1736, 2000], "110": [1736, 2000], "verify_export": 1736, "onnx_graph": 1736, "onnx_out": 1736, "pt_out": 1736, "ignore_non": 1737, "check_shap": 1737, "check_dtyp": [1737, 2022], "onnxbackend": 1737, "onnx_runtime_cpu": 1737, "remained_onnx_input_idx": 1737, "acceptable_error_percentag": 1737, "percentag": [1737, 1766, 1841, 2006], "weight_decai": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1990, 2002], "1e6": 1738, "tensorlist": [1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "prohibit": [1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754, 1981, 1995], "impair": [1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "ungraph": [1738, 1741, 1742, 1743, 1745, 1751], "removeablehandl": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "register_load_state_dict_pre_hook": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "register_state_dict_post_hook": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "register_step_post_hook": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "register_step_pre_hook": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "new_arg": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "new_kwarg": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755], "momentum_buff": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755], "reevalu": [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 2002], "rho": 1739, "110mm": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "4pt": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "textbf": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "theta_0": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "v_0": [1739, 1741, 1742, 1745, 1751, 1752], "leftarrow": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "u_0": [1739, 1743], "hspace": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "5mm": [1739, 1740, 1741, 1742, 1743, 1745, 1752, 1753, 1754], "nabla_": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "theta_": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "10mm": [1739, 1740, 1741, 1742, 1743, 1745, 1752, 1753, 1754], "v_t": [1739, 1741, 1742, 1745, 1751, 1752], "v_": [1739, 1741, 1742, 1745, 1751, 1752, 1754], "2_t": [1739, 1740, 1741, 1742, 1745, 1751, 1752], "21mm": 1739, "u_t": [1739, 1743], "theta_t": [1739, 1740, 1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "oscil": 1739, "lr_decai": 1740, "initial_accumulator_valu": 1740, "12mm": [1740, 1751], "_sum_0": 1740, "tild": [1740, 1752], "_sum_t": 1740, "_sum_": 1740, "subgradi": 1740, "999": [1741, 1742, 1743, 1745, 1751, 1755, 1995, 2002], "amsgrad": [1741, 1742], "beta_1": [1741, 1742, 1743, 1745, 1751], "beta_2": [1741, 1742, 1743, 1745, 1751], "13mm": [1741, 1742, 1743, 1745, 1751, 1752, 1753, 1754], "textit": [1741, 1742, 1745, 1751, 1754], "m_0": [1741, 1742, 1743, 1745, 1751], "widehat": [1741, 1742, 1745, 1751], "m_t": [1741, 1742, 1743, 1745, 1751], "m_": [1741, 1742, 1743, 1745, 1751, 2015], "002": [1743, 1745], "t_1": 1743, "2e": [1743, 1745], "max_it": 1744, "max_ev": 1744, "tolerance_grad": 1744, "tolerance_chang": 1744, "history_s": 1744, "line_search_fn": 1744, "bfg": 1744, "minfunc": 1744, "intens": [1744, 1993], "param_byt": 1744, "strong_wolf": 1744, "momentum_decai": 1745, "004": 1745, "decoupled_weight_decai": [1745, 1751], "gamma_t": 1745, "psi": [1745, 2016], "_decai": [1745, 1751], "15mm": [1745, 1753, 1754], "mu_t": 1745, "96": 1745, "mu_": 1745, "11mm": 1745, "incorpor": [1745, 2006], "nesterov": [1745, 1754], "4e": 1745, "adamw": [1745, 1751, 2002], "nadamw": 1745, "weightdecai": 1751, "18mm": 1751, "rho_": 1751, "6mm": 1751, "rho_t": 1751, "t_2": 1751, "l_t": 1751, "radamw": 1751, "_0": [1752, 1984, 2003, 2047], "av": 1752, "8mm": 1752, "3mm": 1752, "lectur": 1752, "hinton": 1752, "step_siz": [1753, 1770], "resili": [1753, 1993], "eta_": [1753, 1758, 1759], "etaplu": 1753, "etaminu": 1753, "gamma_": [1753, 2016], "0_": 1753, "eta_0": 1753, "i_": [1753, 1902], "eta_t": [1753, 1758, 1759], "dampen": 1754, "sutskev": 1754, "veloc": 1754, "conflat": 1755, "is_spars": [1755, 1969, 2001, 2015, 2017, 2035], "maskedtensor": [1755, 2015], "rig": 1755, "insist": 1755, "lr_schedul": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 2002], "chainabl": [1756, 1766], "081": 1756, "729": [1756, 1769], "6561": [1756, 1932], "59049": 1756, "scheduler1": [1756, 1769, 2002], "constantlr": [1756, 1769], "total_it": [1756, 1757, 1763, 1767, 1769], "scheduler2": [1756, 1769, 2002], "exponentiallr": [1756, 1769, 2002], "get_last_lr": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770], "print_lr": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770], "is_verbos": [1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770], "__dict__": [1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770], "last_epoch": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770], "mileston": [1757, 1763, 1764, 1769, 2002], "simultan": [1757, 1758, 1763, 1764, 1770, 1978, 2011], "025": [1757, 1763], "t_max": [1758, 2002], "eta_min": [1758, 1759], "anneal": [1758, 1759, 1766, 2002], "cur": [1758, 1759], "sgdr": [1758, 1759], "2k": 1758, "sole": 1758, "t_mult": 1759, "interleav": 1759, "base_lr": [1760, 1766], "max_lr": [1760, 1766], "step_size_up": 1760, "step_size_down": 1760, "scale_fn": 1760, "scale_mod": 1760, "cycle_momentum": [1760, 1766], "base_momentum": [1760, 1766], "max_momentum": [1760, 1766], "cyclic": 1760, "forth": [1760, 1928, 1950, 2005, 2030], "amplitud": [1760, 1766], "triangular2": 1760, "exp_rang": 1760, "bckenstler": 1760, "train_batch": [1760, 1766], "get_lr": 1760, "lr_lambda": [1762, 1765], "lambda1": 1762, "lambda2": 1762, "start_factor": 1763, "end_factor": 1763, "03125": 1763, "0375": 1763, "04375": 1763, "005": [1764, 1770], "lmbda": 1765, "total_step": 1766, "steps_per_epoch": 1766, "pct_start": 1766, "anneal_strategi": [1766, 2002], "div_factor": 1766, "final_div_factor": 1766, "three_phas": 1766, "1cycl": 1766, "fastai": 1766, "unpublish": 1766, "initial_lr": 1766, "min_lr": [1766, 1768], "1e4": 1766, "annihil": 1766, "00075": 1767, "00050": 1767, "00025": 1767, "patienc": 1768, "threshold_mod": 1768, "cooldown": 1768, "stagnat": 1768, "new_lr": 1768, "hasn": [1768, 1966, 2003], "optimum": 1768, "dynamic_threshold": 1768, "val_loss": 1768, "81": 1769, "mn": 1772, "pca": [1774, 2015], "overestim": [1774, 1886], "nathan": [1774, 1886], "halko": [1774, 1886], "gunnar": [1774, 1886], "martinsson": [1774, 1886], "tropp": [1774, 1886], "probabilist": [1774, 1886], "0909": [1774, 1886], "4061": [1774, 1886], "na": [1774, 1886], "cmath": [1778, 1953], "4142j": 1778, "4331": 1781, "2475": [1781, 1884], "6834": 1781, "2791": 1781, "1875": 1781, "5561": 1781, "4670": 1781, "5428": 1782, "5854": 1782, "5261": [1782, 1885], "1857": 1782, "2498": 1782, "1646": [1782, 1981], "0705": [1782, 1983], "0629": 1782, "2962": 1782, "0821": [1782, 1841], "1831": 1782, "type1": [1783, 1953], "type2": [1783, 1953], "2117": 1785, "9765": 1785, "1707": 1785, "4884": 1785, "5661": 1785, "5795": 1785, "5280": 1785, "9206": 1785, "quantization_schem": [1786, 1787, 1788, 1789, 1790], "int_repr": [1786, 1787, 1953, 2001], "nchw": [1788, 2020], "qx": [1788, 1789, 1790], "00001": 1788, "max_pool1d": [1789, 1953, 2001, 2008], "max_pool2d": [1790, 1953, 1998, 2001, 2008], "quasirandom": 1791, "scrambl": 1791, "sobol": 1791, "quasi": 1791, "21201": 1791, "web": 1791, "unsw": 1791, "au": [1791, 2003], "fkuo": 1791, "art": 1791, "owen": 1791, "niederreit": 1791, "xing": 1791, "466": 1791, "489": 1791, "decemb": 1791, "1998": 1791, "zh": 1791, "vychisl": 1791, "phy": 1791, "784": 1791, "802": 1791, "1967": 1791, "soboleng": 1791, "draw_base2": 1791, "base2": 1791, "fast_forward": 1791, "142": 1792, "283": 1792, "570": 1792, "359": 1792, "9894": 1792, "2503": 1793, "3525": 1793, "5673": 1793, "8237": 1793, "5781": 1793, "6879": 1793, "3816": 1793, "7249": 1793, "0998": 1793, "im": [1797, 1978], "1436": 1797, "9966": 1797, "3426": 1797, "6366": 1797, "5954": 1797, "8929": 1797, "0923": 1797, "1719": 1797, "4709": 1797, "1996": 1797, "4595": 1803, "4314": 1803, "n2": 1806, "n3": 1806, "negat": [1809, 1894, 1955], "is_neg": [1809, 1953, 2001, 2035], "equidist": 1813, "inexact": 1813, "1234567": 1813, "1230": 1813, "vstack": [1814, 1953, 2001, 2015], "0370": 1815, "2970": 1815, "5420": 1815, "9105": 1815, "8351": 1815, "pickle_protocol": [1816, 2003], "default_protocol": 1816, "_use_new_zipfile_seri": [1816, 1995], "zipfil": [1816, 2003], "sorted_sequ": [1820, 1953], "sorter": [1820, 1953], "sorted_sequence_1d": 1820, "select_copi": [1822, 1953, 2001], "slight": [1824, 2015, 2018], "92701": [1824, 2018], "get_default_devic": 1824, "complaint": 1825, "henry2019": 1828, "briefli": [1828, 1986], "nine": 1828, "fma": 1828, "10x": 1828, "1904": 1828, "06376": 1828, "denorm": [1829, 1993], "sse3": 1829, "323": 1829, "88131e": 1829, "324": 1829, "interop": 1830, "intraop": 1831, "edgeitem": 1832, "linewidth": 1832, "sci_mod": 1832, "shamelessli": 1832, "repr": [1832, 1955], "sane": 1832, "_tensor_str": 1832, "_formatt": 1832, "12345": 1832, "1235": 1832, "excess": [1834, 2035], "24j": 1835, "8000j": 1835, "9600j": 1835, "4472": [1835, 1990], "8944j": 1835, "expit": [1836, 2016], "2222": [1838, 1900], "4444": 1838, "8889": 1838, "4901e": 1839, "4000e": 1839, "0077e": 1839, "4923e": 1839, "waveform": [1840, 1841, 1842], "1564": 1840, "4540": 1840, "8910": 1840, "9877": 1840, "1423": [1840, 1863], "4154": 1840, "8413": [1840, 2016], "0302": 1841, "2231": 1841, "6065": 1841, "5400e": 1841, "3546e": 1841, "4788e": 1841, "8316e": 1841, "02": [1841, 1842, 1847], "3534e": 1841, "0065e": [1842, 1847], "1875e": [1842, 1847], "3937e": [1842, 1847], "2465e": [1842, 1847], "8250e": [1842, 1847], "9858e": [1842, 1847], "1365e": [1842, 1847], "8659e": [1842, 1847], "4658e": [1842, 1847], "3941e": [1842, 1847], "5400": 1843, "3376": 1843, "4200": 1843, "9136": 1843, "wit": [1843, 1952], "0955": [1843, 1844, 1846], "3455": [1843, 1844, 1846], "6545": [1843, 1844, 1846], "9045": [1843, 1844, 1846], "0800": [1844, 1845], "1876": [1844, 1845], "4601": [1844, 1845], "7700": [1844, 1845], "9723": [1844, 1845], "1679": 1845, "3979": 1845, "6821": 1845, "9121": 1845, "1170": 1846, "9698": 1846, "36358": 1848, "z_n": [1848, 1978], "48917": 1848, "2z_n": 1848, "13659": 1848, "3z_n": 1848, "01064": 1848, "4z_n": 1848, "\u03c0": 1848, "sidelob": 1848, "transact": 1848, "acoust": 1848, "speech": 1848, "84": 1848, "91": 1848, "feb": 1848, "1981": 1848, "tassp": 1848, "1163506": 1848, "heinzel": 1848, "spectrum": [1848, 1993], "dft": 1848, "februari": 1848, "holomet": 1848, "fnal": 1848, "gov": 1848, "gh_fft": 1848, "nutal": 1848, "general_ham": 1848, "6280e": 1848, "2698e": 1848, "1052e": 1848, "9826e": 1848, "5461": [1850, 1990], "1347": 1850, "7266": 1850, "2746": 1850, "5194": 1850, "1343": 1850, "4032": 1850, "2711": 1850, "5380": 1852, "8632": 1852, "1265": 1852, "9399": 1852, "5644": 1852, "9744": 1852, "1268": 1852, "2162": 1857, "6719": 1857, "3332": 1857, "5793": [1857, 1990], "0061": 1857, "6058": 1857, "9497": 1857, "5071": 1857, "3343": 1857, "9553": 1857, "0960": 1857, "derivati": [1858, 1862], "to_sparse_coo": 1859, "sparsr": 1860, "run_my_model": 1860, "prev_checks_en": 1860, "is_en": [1860, 1867, 1868, 1869, 1870, 1871, 1872], "check_invari": [1860, 1867, 1868, 1869, 1870, 1871, 1872, 2015], "sparse_csr_tensor": [1860, 1953, 2001, 2015], "z_": [1862, 1978, 2016], "bigoplus_": 1862, "kj": 1862, "bigoplu": 1862, "sparseaddmmbackward0": 1862, "y1": [1862, 1998, 2030], "sparsemmreduceimplbackward0": 1862, "y2": [1862, 1998, 2030], "sparsiti": [1863, 1951, 1962, 1976], "spy": 1863, "2847": 1863, "7805": 1863, "1900": [1863, 1994], "to_dens": [1863, 1865, 1953, 2001, 2015], "3903": 1863, "x_k": 1864, "6438": 1866, "6467": 1866, "3411": 1866, "0918": 1866, "5348": 1866, "0634": 1866, "0494": 1866, "0646": 1866, "1844": 1866, "1276": 1866, "1874": 1866, "6334": 1866, "9682": 1866, "5340": 1866, "7483": 1866, "4512": 1866, "4073": 1866, "8901": 1866, "3183": 1866, "7539": 1866, "6596": 1866, "ncolblock": [1867, 2015], "array_list": [1867, 1868, 1869, 1871, 1872], "nrow": [1867, 1868, 1869, 1871, 1872, 2015], "ncol": [1867, 1868, 1869, 1871, 1872, 2015], "denses": [1867, 1868, 1869, 1871, 1872, 2015], "check_sparse_tensor_invari": [1867, 1868, 1869, 1870, 1871, 1872, 2015], "nrowblock": [1868, 2015], "compressed_indic": [1869, 1953, 2015], "plain_indic": [1869, 1953, 2015], "compressed_dim_s": [1869, 2015], "is_coalesc": [1870, 1953, 2001, 2015, 2035], "rdinat": 1870, "prerequisit": [1870, 1982], "coalescion": 1870, "sparsetensor": 1870, "_indic": [1870, 2001, 2015, 2035], "0755": [1874, 1875], "0226": [1874, 1875], "0831": [1874, 1875], "4806": [1874, 1875], "0112": 1874, "2883": 1874, "6933": 1874, "0457": 1875, "0069": 1875, "2310": 1875, "2959": [1879, 1880, 1929, 1930], "8101": [1879, 1880, 1929, 1930], "5027": [1879, 1880, 1929, 1930], "3270": [1879, 1880, 1929, 1930], "5905": [1879, 1880, 1929, 1930], "6538": [1879, 1880, 1929, 1930, 1990], "3330": [1879, 1880, 1929, 1930], "5596": [1879, 1880, 1929, 1930], "6548": [1879, 1880, 1929, 1930], "1264": [1879, 1880, 1929, 1930], "5080": [1879, 1880, 1885, 1929, 1930, 1990], "6420": [1879, 1880, 1929, 1930], "1992": [1879, 1880, 1929, 1930], "0311": [1879, 2016], "7477": 1879, "2204": 1879, "9087": 1879, "2620": 1880, "0028": [1880, 1906], "0957": 1880, "6038": 1880, "0645": [1880, 1930], "4485": [1880, 1930], "8707": [1880, 1930], "0665": [1880, 1930], "taper": 1881, "librosa": 1881, "omega": 1881, "win": [1881, 1978], "_fft": [1881, 1953], "dimnsion": 1881, "1133": 1884, "2958": 1884, "5475": 1884, "0569": 1884, "0737": 1884, "3429": 1884, "9138": 1884, "9337": 1884, "6864": [1884, 1910], "1132": 1884, "7892": 1884, "1003": 1884, "5688": 1884, "3637": 1884, "9906": 1884, "5197": 1884, "4598": 1884, "3708": 1884, "6217": 1884, "435": 1884, "1335": 1884, "3135": 1884, "gesdd": 1885, "conquer": 1885, "gesvdjbatch": 1885, "fortran": 1885, "2364": 1885, "7752": 1885, "7201": 1885, "7394": 1885, "0504": 1885, "3371": 1885, "5296": 1885, "3550": 1885, "5569": 1885, "2445": 1885, "1414": 1885, "4027": 1885, "0287": 1885, "5434": 1885, "1946": 1885, "8833": 1885, "3679": 1885, "4296": 1885, "2890": 1885, "6604": 1885, "2717": 1885, "2618": 1885, "4234": 1885, "2481": 1885, "4733": 1885, "3289": [1885, 1995], "0315": 1885, "7806": 1885, "0199": 1885, "8766": 1885, "4809": 1885, "4054": 1885, "7600": 1885, "8611": 1885, "2594": 1885, "4373": 1885, "6531e": 1885, "a_big": 1885, "6503e": 1885, "swapax": [1888, 1953, 2001, 2019], "symfloat": [1889, 1890, 2023, 2033], "1995": 1895, "4608": 1895, "7702": 1895, "4875": 1895, "9158": 1895, "5872": 1895, "6929": 1895, "6932": 1895, "take_along_axi": [1897, 1984], "max_idx": 1897, "sorted_idx": 1897, "2027": 1898, "7687": 1898, "4412": 1898, "3856": 1898, "5930": 1898, "9859": 1898, "4722": 1898, "3366": 1898, "8986": 1899, "7279": 1899, "1745": [1899, 1983], "7156": 1899, "8257": 1899, "2553": 1899, "11111": 1900, "222222": 1900, "3333333": 1900, "1111": 1900, "array_split": 1901, "i_d": 1902, "k_": 1902, "4532": 1902, "4874": 1902, "5018": 1902, "4796": [1902, 1994], "5162": 1902, "5306": 1902, "2922": 1902, "7556": 1902, "2741": 1902, "3161": 1902, "0704": 1902, "0187": 1902, "4079": 1902, "3126": 1902, "8744": 1902, "8223": 1902, "9445": 1902, "4117": 1902, "7780": 1902, "7193": 1902, "4867": 1902, "3204": 1902, "5513": 1902, "4737": [1902, 1933], "2850": 1902, "2573": 1902, "5997": 1902, "sparsebsr": 1906, "sparsecsc": 1906, "sparsebsc": 1906, "9893": 1906, "5809": 1906, "1669": 1906, "7299": 1906, "4942": [1906, 1990], "y_0": 1907, "x_diff": 1907, "y_diff": 1907, "riemann": [1907, 1978, 1987, 2016], "badli": 1909, "cloned_coeffici": 1909, "1527": 1909, "0753": 1909, "7986": 1909, "0210": 1909, "3513": 1909, "5492": 1909, "7403": 1909, "0243": 1909, "7841": 1909, "9046": 1909, "5405": 1909, "9320": 1909, "9270": 1909, "2826": 1909, "lbrace": [1910, 1911, 1912, 1913], "rbrace": [1910, 1911, 1912, 1913], "0813": 1910, "8619": 1910, "7105": 1910, "0935": 1910, "1380": 1910, "3409": [1910, 1994], "2219": 1910, "5653": 1910, "2521": 1910, "2345": 1910, "2544": 1910, "3461": 1910, "4785": 1910, "4477": 1910, "6049": 1910, "6368": 1910, "8775": 1910, "7145": 1910, "1502": 1910, "2716": 1910, "1243": 1910, "5413": 1910, "3615": 1910, "0614": 1910, "7344": 1910, "3164": 1910, "7648": 1910, "4024": 1910, "0978": 1910, "col": [1911, 1913, 1953], "2309": 1912, "5207": 1912, "0049": 1912, "2072": 1912, "0680": 1912, "6602": 1912, "3480": 1912, "5211": 1912, "4573": 1912, "5876": 1912, "0794": [1912, 2016], "8373": 1912, "6654": 1912, "2604": 1912, "5235": 1912, "2447": 1912, "9556": 1912, "2919": 1912, "1768": 1912, "4333": 1912, "3146": [1912, 1990], "6576": 1912, "0432": 1912, "9348": [1912, 2016], "4410": 1912, "9888": 1912, "3337": 1912, "6556": 1912, "4798": 1912, "5466": 1915, "8008": 1915, "9079": 1915, "unique_consecut": [1918, 1953, 2001], "inverse_indic": [1918, 1919], "a_unique_dim0": 1918, "ouput": 1920, "5678": [1920, 2011], "78": 1920, "alon": [1922, 1954, 2003], "put_": [1922, 1953], "index_add": [1922, 1953, 2001], "index_select": [1922, 1953, 2001, 2015, 2040], "fractionalmaxpool2d": 1922, "fractionalmaxpool3d": 1922, "reflectionpad1d": 1922, "reflectionpad3d": 1922, "replicationpad1d": 1922, "replicationpad3d": 1922, "histc": [1922, 1953, 2001], "bincount": [1922, 1953, 2001], "kthvalu": [1922, 1953, 1969, 2001], "cublasapi_reproduc": [1922, 1994], "avg_pool3d_backward_cuda": 1922, "for_tensor": 1923, "for_modul": 1923, "for_storag": 1923, "unsupported_dtyp": 1923, "privateuse1": [1923, 1925, 2010], "rename_privateuse1_backend": [1923, 1951], "is_foo": 1923, "frames_to_skip": 1924, "maximum_number_of_fram": 1924, "_register_device_modul": 1925, "backendmodul": 1925, "get_amp_supported_dtyp": 1925, "is_autocast_en": [1925, 1953, 2001], "get_autocast_dtyp": 1925, "set_autocast_dtyp": 1925, "set_autocast_en": 1925, "_is_in_bad_fork": 1925, "bad_fork": 1925, "get_rng_stat": [1925, 1951, 2010], "set_rng_stat": [1925, 1951, 2010], "extend_dispatch": 1925, "pytorch_open_registration_exampl": 1925, "nicer": 1926, "slot": [1927, 2029, 2046], "alexandr": 1928, "theophil": 1928, "0631": 1929, "5590": 1929, "4893": 1929, "8258": 1929, "5926": 1930, "0056": 1930, "3646": 1930, "vecdot": 1931, "mi": [1932, 1933], "6116": 1932, "5772": [1932, 2016], "4606": 1932, "9120": 1932, "0786": 1932, "7497": 1932, "6623": 1932, "5772j": 1932, "9120j": 1932, "7497j": 1932, "6623j": 1932, "3839j": 1933, "2098": 1933, "6699j": 1933, "3470": 1933, "9451j": 1933, "5174": 1933, "3136j": 1933, "6699": 1933, "9451": 1933, "3136": 1933, "vertic": [1935, 1936, 2002, 2004, 2020, 2035], "atleast_2d": [1936, 1953, 2001], "3139": 1937, "3898": 1937, "1657": 1937, "0383": 1937, "8785": 1937, "1089": 1937, "_xpudeviceproperti": 1945, "hubconf": 1950, "entrypoint_nam": 1950, "_resnet18": 1950, "smoother": [1950, 1962], "underscor": [1950, 1970, 2011, 2021], "load_state_dict_from_url": [1950, 1965], "2gb": 1950, "relative_path_to_checkpoint": 1950, "pth": [1950, 1965, 1995], "dirnam": 1950, "__file__": [1950, 1996, 2003, 2037], "5c106cde": [1950, 1965], "force_reload": 1950, "skip_valid": 1950, "trust_repo": 1950, "repo_own": 1950, "repo_nam": 1950, "ref": [1950, 2015, 2033, 2038, 2045], "torchhub": 1950, "github_token": 1950, "repo_or_dir": 1950, "mute": 1950, "resnet50": [1950, 2020, 2037], "resnet50_weight": 1950, "imagenet1k_v1": 1950, "download_url_to_fil": 1950, "hash_prefix": 1950, "temporary_fil": 1950, "sha256": [1950, 1965], "s3": [1950, 1965, 1996], "amazonaw": [1950, 1965, 1996], "model_dir": [1950, 1965], "check_hash": [1950, 1965], "hub_dir": [1950, 1965], "get_dir": [1950, 1965], "ext": [1950, 1965], "eight": [1950, 1965], "hash": [1950, 1953, 1955, 1965, 2001], "succinct": 1950, "set_dir": 1950, "path_to_hub_dir": 1950, "torch_hom": 1950, "xdg_cache_hom": [1950, 1981], "reiniti": [1950, 1963], "path_importer_cach": 1950, "subpackag": [1950, 2003], "offend": [1950, 2036], "classifi": [1951, 1955, 2000, 2002, 2006, 2020], "pypi": 1951, "conda": [1951, 1996], "hip": 1951, "javadoc": 1951, "uninitializedbuff": 1951, "anomali": 1951, "impl_abstract": [1951, 1959, 2034], "get_ctx": [1951, 1959], "can_device_access_p": 1951, "current_blas_handl": 1951, "device_of": 1951, "get_arch_list": 1951, "get_device_cap": 1951, "get_device_nam": 1951, "get_device_properti": 1951, "get_gencode_flag": 1951, "get_sync_debug_mod": 1951, "ipc_collect": 1951, "memory_usag": 1951, "set_stream": 1951, "set_sync_debug_mod": 1951, "power_draw": 1951, "clock_rat": 1951, "outofmemoryerror": 1951, "jiter": 1951, "sanit": 1951, "_record_memory_histori": [1951, 2047], "_snapshot": [1951, 2047], "_dump_snapshot": [1951, 2047], "empty_cach": [1951, 1981, 1988, 2047], "set_per_process_memory_fract": 1951, "current_allocated_memori": 1951, "driver_allocated_memori": 1951, "idiom": [1951, 1996], "nnpack": 1951, "openmp": [1951, 1980, 1996, 2032, 2035], "xeon": [1951, 1980, 2042], "pathwis": 1951, "exponentialfamili": 1951, "binomi": [1951, 1953, 2001], "chi2": 1951, "continuousbernoulli": 1951, "dirichlet": 1951, "fishersnedecor": 1951, "halfcauchi": 1951, "halfnorm": 1951, "inversegamma": 1951, "kumaraswami": 1951, "lkjcholeski": 1951, "laplac": 1951, "lognorm": 1951, "lowrankmultivariatenorm": 1951, "mixturesamefamili": 1951, "multinomi": [1951, 1953, 2001], "multivariatenorm": 1951, "negativebinomi": 1951, "onehotcategor": 1951, "relaxedbernoulli": 1951, "logitrelaxedbernoulli": 1951, "relaxedonehotcategor": 1951, "studentt": 1951, "transformeddistribut": 1951, "vonmis": 1951, "weibul": 1951, "wishart": 1951, "hub": [1951, 1965, 2037], "misc": 1951, "normal_": [1951, 1953, 1969, 1976, 1981, 2023], "constant_": [1951, 1976], "ones_": [1951, 1976], "zeros_": [1951, 1976], "eye_": [1951, 1957, 1976], "dirac_": [1951, 1957, 1976], "xavier_uniform_": [1951, 1976], "xavier_normal_": [1951, 1976, 1990], "kaiming_uniform_": [1951, 1976], "trunc_normal_": [1951, 1976], "orthogonal_": [1951, 1957, 1976, 1990], "sparse_": [1951, 1976], "swa": 1951, "ema": 1951, "powersgd": 1951, "remotemodul": 1951, "fork_rng": [1951, 2010], "doublestorag": [1951, 2017], "floatstorag": [1951, 2017], "halfstorag": [1951, 2017], "longstorag": [1951, 2017], "intstorag": [1951, 2017], "shortstorag": [1951, 2017], "charstorag": [1951, 2017], "bytestorag": [1951, 2017], "boolstorag": [1951, 2017], "bfloat16storag": [1951, 2017], "complexdoublestorag": [1951, 2017], "complexfloatstorag": [1951, 2017], "quint8storag": [1951, 2017], "qint8storag": [1951, 2017], "qint32storag": [1951, 2017], "quint4x2storag": [1951, 2017], "quint2x4storag": [1951, 2017], "make_tensor": [1951, 2022], "assert_allclos": [1951, 2022], "generate_methods_for_privateuse1_backend": 1951, "get_cpp_backtrac": 1951, "set_modul": 1951, "sampler": 1951, "mobile_optim": 1951, "optimize_for_mobil": [1951, 1964], "model_zoo": 1951, "load_url": [1951, 1965], "tensorboard": [1951, 1966, 2005], "summarywrit": [1951, 1966, 2020], "iinfo": 1951, "__config__": [1951, 1980], "__future__": 1951, "_log": [1951, 1955, 2045], "set_log": [1951, 1961, 2045], "torchdata": 1951, "torchserv": 1951, "torchtext": 1951, "xla": [1951, 1959, 1995, 2018, 2033], "disadvantag": 1952, "gentl": 1952, "beam": 1952, "traced_bar": 1952, "myscriptmodul": 1952, "103": [1952, 1954], "939": [1952, 1954], "116": [1952, 1954], "779": [1952, 1954], "123": [1952, 1954], "my_script_modul": [1952, 1954], "ins": 1952, "pytorch_jit": 1952, "traced_fn": 1952, "disable_jit_exampl": 1952, "printer": 1952, "rv": 1952, "rv0": 1952, "rv1": 1952, "ssa": 1952, "block0": 1952, "block1": 1952, "loop_in_traced_fn": 1952, "input_tupl": 1952, "fill_row_zero": 1952, "tracerwarn": 1952, "nr": 1952, "09115803241729736": 1952, "6782537698745728": 1952, "cpu_model": 1952, "gpu_model": 1952, "sample_input_cpu": 1952, "sample_input_gpu": 1952, "traced_cpu": 1952, "traced_gpu": 1952, "use_gpu": 1952, "__constants__": [1952, 1954], "my_module_inst": 1952, "redeclar": 1952, "nn_module_inst": 1952, "my_scripted_model": 1952, "pep": [1952, 1954, 2000, 2032], "526": [1952, 1954, 2000], "script_method": 1952, "implicitly_compiled_method": 1952, "another_forward": 1952, "unused_method": 1952, "some_fn": 1952, "ever": [1952, 2017, 2047], "some_fn2": 1952, "some_fn3": 1952, "some_fn4": 1952, "my_dict": [1952, 1954], "my_int": [1952, 1954], "my_const": 1952, "make_dict": 1952, "nnc": 1952, "nvfuser": 1952, "__and__": 1953, "__iand__": 1953, "__ilshift__": 1953, "__ior__": 1953, "__irshift__": 1953, "__ixor__": 1953, "__lshift__": 1953, "__or__": 1953, "__rshift__": 1953, "__xor__": 1953, "absolute_": 1953, "acos_": [1953, 1969], "addbmm_": 1953, "addcdiv_": 1953, "addcmul_": 1953, "addmv_": [1953, 1969], "addr_": 1953, "align_a": [1953, 1969, 1970, 2001], "align_to": [1953, 1969, 1970, 2001], "ellipsis_idx": 1953, "aminmax": [1953, 2001], "arccos_": 1953, "arccosh_": 1953, "arcsin_": [1953, 2015], "arcsinh_": 1953, "arctan2_": 1953, "arctan_": 1953, "arctanh_": 1953, "argwher": [1953, 2001], "as_strided_": 1953, "as_strided_scatt": [1953, 2001, 2040], "asin_": [1953, 1969, 2015], "asinh_": [1953, 1969], "atan_": [1953, 1969], "atanh_": [1953, 1969], "baddbmm_": 1953, "bernoulli_": [1953, 1969, 2023], "bitwise_and_": 1953, "bitwise_left_shift_": 1953, "bitwise_not_": [1953, 1969], "bitwise_or_": 1953, "bitwise_right_shift_": 1953, "bitwise_xor_": 1953, "broadcast_to": [1953, 2001], "cauchy_": [1953, 1969, 2023], "ceil_": [1953, 1969], "clamp_max": [1953, 2001], "clamp_max_": 1953, "clamp_min": [1953, 2001], "clamp_min_": 1953, "clip_": 1953, "conj_physical_": 1953, "copysign_": 1953, "cos_": [1953, 1969, 1978], "cosh_": [1953, 1969], "count_nonzero": [1953, 2001], "cummax": [1953, 2001], "cummin": [1953, 2001], "cumprod_": 1953, "cumsum_": 1953, "deg2rad": [1953, 1969, 2001, 2015], "deg2rad_": [1953, 1969, 2015], "outdim": 1953, "diagonal_scatt": [1953, 2001], "digamma_": [1953, 1969], "div_": [1953, 1969, 2015], "divide_": 1953, "dsplit": [1953, 2001], "eq_": 1953, "erf_": [1953, 1969], "erfc_": [1953, 1969], "erfinv_": [1953, 1969], "exp2": [1953, 2001, 2016, 2020, 2040], "exp2_": 1953, "exp_": [1953, 1969], "expm1_": [1953, 1969], "exponential_": [1953, 1969, 2023], "fill_diagonal_": 1953, "fix_": 1953, "fliplr": [1953, 2001], "flipud": [1953, 2001], "float_power_": 1953, "floor_": [1953, 1969], "floor_divide_": [1953, 2015], "fmax": [1953, 2001, 2040], "fmin": [1953, 2001, 2040], "fmod_": 1953, "frac_": [1953, 1969], "frexp": [1953, 2001], "gcd_": 1953, "ge_": 1953, "ger": [1953, 2001], "get_devic": [1953, 1969, 2001, 2015, 2017, 2018], "greater_": 1953, "greater_equal_": 1953, "gt_": 1953, "hardshrink": [1953, 2001], "heavisid": [1953, 2001], "heaviside_": 1953, "hsplit": [1953, 2001, 2019], "hypot_": 1953, "i0_": 1953, "igamma_": 1953, "igammac_": 1953, "index_fil": [1953, 1969, 2001], "index_reduc": [1953, 2001], "is_complex": [1953, 1998, 2001, 2015, 2018, 2035], "is_contigu": [1953, 1969, 2001, 2019, 2035], "is_floating_point": [1953, 1969, 2001, 2015, 2018, 2035], "is_infer": [1953, 2001, 2035], "is_same_s": [1953, 2001, 2015, 2035], "is_set_to": [1953, 2001, 2035], "is_sign": [1953, 1969, 2001, 2015, 2035], "isclos": [1953, 2001], "isfinit": [1953, 1993, 2001, 2040], "isinf": [1953, 2001, 2015, 2040], "isneginf": [1953, 2001, 2015], "isposinf": [1953, 2001, 2015], "isreal": [1953, 2001], "istft": [1953, 2001], "kron": [1953, 2001], "lcm_": 1953, "ldexp_": 1953, "le_": 1953, "lerp_": 1953, "less_": 1953, "less_equal_": 1953, "lgamma_": 1953, "log10_": [1953, 1969], "log1p_": [1953, 1969, 2015], "log2_": [1953, 1969], "log_normal_": [1953, 1969, 2023], "logaddexp2": [1953, 2001], "logcumsumexp": [1953, 2001], "logical_and_": 1953, "logical_not_": [1953, 1969], "logical_or_": 1953, "logical_xor_": 1953, "logit_": 1953, "lt_": 1953, "masked_fil": [1953, 1969, 1971, 2001, 2015], "masked_scatt": [1953, 2001], "masked_select": [1953, 1969, 2001], "matrix_pow": [1953, 2001], "moveaxi": [1953, 2001], "msort": [1953, 2001], "multiply_": 1953, "mvlgamma_": 1953, "nan_to_num_": 1953, "nanmedian": [1953, 1969, 2001], "nansum": [1953, 2001], "narrow_copi": [1953, 2001, 2015], "ne_": 1953, "neg_": [1953, 1969, 2015], "negative_": [1953, 2015], "new_empty_strid": [1953, 2001], "new_ful": [1953, 1981, 2001], "new_on": [1953, 2001], "nextafter_": 1953, "nonzero_stat": [1953, 2001], "not_equal_": 1953, "polygamma_": 1953, "pow_": [1953, 1969], "q_per_channel_scal": [1953, 2001], "q_per_channel_zero_point": [1953, 2001], "q_scale": [1953, 2001], "q_zero_point": [1953, 2001], "rad2deg": [1953, 1969, 2001, 2015], "rad2deg_": [1953, 1969, 2015], "reciprocal_": [1953, 1969], "record_stream": [1953, 1981, 2001], "refine_nam": [1953, 1969, 1970, 2001], "relu_": [1953, 2008], "remainder_": 1953, "rename_": [1953, 1969, 1970], "renorm_": 1953, "reshape_a": [1953, 1971, 2001, 2019], "resize_a": [1953, 2001], "the_templ": 1953, "resize_as_": [1953, 1969, 2015], "resize_as_sparse_": 1953, "retains_grad": [1953, 2001], "roll": [1953, 2001, 2040], "rot90": [1953, 2001], "round_": [1953, 1969], "rsqrt_": [1953, 1969], "select_scatt": [1953, 2001, 2040], "sgn_": [1953, 1969], "sigmoid_": [1953, 1969, 2008], "sign_": [1953, 1969], "sinc_": 1953, "sinh_": [1953, 1969], "slice_invers": [1953, 2001], "slice_scatt": [1953, 2001, 2040], "smm": [1953, 2001, 2015], "sparse_resize_": 1953, "sparse_resize_and_clear_": 1953, "split_with_s": [1953, 2001, 2019, 2040], "sqrt_": [1953, 1969], "square_": 1953, "squeeze_": [1953, 2008], "sspaddmm": [1953, 2001, 2015], "sub_": [1953, 1969, 2015], "subtract_": 1953, "sum_to_s": [1953, 2001], "swapaxes_": 1953, "swapdim": [1953, 2001, 2019], "swapdims_": 1953, "take_along_dim": [1953, 2001], "tan_": [1953, 1969], "tanh_": [1953, 1969, 2008], "tensor_indices_or_sect": 1953, "to_mkldnn": [1953, 2001], "to_padded_tensor": [1953, 1971, 2001], "to_sparse_bsc": [1953, 2001], "to_sparse_bsr": [1953, 2001, 2015], "to_sparse_csc": [1953, 2001, 2015], "transpose_": [1953, 2015], "true_divide_": 1953, "trunc_": [1953, 1969], "type_a": [1953, 1969, 2001], "out0": [1953, 1995], "unsafe_chunk": [1953, 2001], "unsafe_split": [1953, 2001], "unsafe_split_with_s": [1953, 2001], "unsqueeze_": [1953, 2008], "view_a": [1953, 2001, 2019], "vsplit": [1953, 2001, 2019], "xlogy_": 1953, "adaptive_avg_pool2d": [1953, 1983, 2001, 2008], "adaptive_max_pool1d_with_indic": [1953, 1983], "adaptive_max_pool2d_with_indic": 1953, "adaptive_max_pool3d_with_indic": 1953, "alpha_dropout": [1953, 2001], "assert_int_or_pair": 1953, "arg_nam": 1953, "binary_cross_entropi": [1953, 2001], "binary_cross_entropy_with_logit": [1953, 2001], "celu": [1953, 2001], "dropout2d": 1953, "dropout3d": 1953, "feature_alpha_dropout": [1953, 2001], "fractional_max_pool2d_with_indic": 1953, "fractional_max_pool3d_with_indic": 1953, "gaussian_nll_loss": 1953, "glu": [1953, 2001], "gumbel_softmax": 1953, "hardsigmoid": [1953, 2001, 2008], "hardswish": [1953, 2001, 2008], "huber_loss": [1953, 2001], "instance_norm": [1953, 2001, 2008], "local_response_norm": 1953, "lp_pool1d": 1953, "lp_pool2d": 1953, "lp_pool3d": 1953, "max_pool1d_with_indic": [1953, 2001], "max_pool3d_with_indic": [1953, 2001, 2040], "mish": [1953, 2001], "multi_head_attention_forward": 1953, "embed_dim_to_check": 1953, "in_proj_weight": 1953, "in_proj_bia": 1953, "bias_k": 1953, "bias_v": 1953, "out_proj_weight": 1953, "out_proj_bia": 1953, "use_separate_proj_weight": 1953, "q_proj_weight": 1953, "k_proj_weight": 1953, "v_proj_weight": 1953, "static_k": 1953, "static_v": 1953, "multilabel_soft_margin_loss": 1953, "relu6": [1953, 2001, 2008], "silu": [1953, 1971, 2001], "softsign": 1953, "tanhshrink": 1953, "adaptive_avg_pool1d": [1953, 1983, 2001, 2008, 2040], "adaptive_max_pool1d": [1953, 1983, 2001], "affine_grid_gener": [1953, 2001], "alias_copi": [1953, 2001], "align_tensor": [1953, 2001], "alpha_dropout_": 1953, "as_strided_copi": [1953, 2001], "atleast_1d": [1953, 2001], "avg_pool1d": [1953, 2001, 2008, 2040], "bartlett_window": [1953, 1957, 2001], "cudnn_en": 1953, "batch_norm_backward_elemt": 1953, "invstd": 1953, "sum_di": 1953, "sum_dy_xmu": 1953, "batch_norm_backward_reduc": 1953, "input_g": 1953, "bias_g": 1953, "out3": 1953, "batch_norm_elemt": [1953, 2001], "batch_norm_gather_stat": [1953, 2001], "batch_norm_gather_stats_with_count": [1953, 2001], "batch_norm_stat": [1953, 2001], "batch_norm_update_stat": [1953, 2001], "blackman_window": [1953, 1957, 2001], "block_diag": [1953, 2001], "can_cast": [1953, 2001], "ccol_indices_copi": [1953, 2001], "celu_": 1953, "choose_qparams_optim": [1953, 2001], "n_bin": 1953, "bit_width": 1953, "col_indices_copi": [1953, 2001], "column_stack": [1953, 2001], "constant_pad_nd": [1953, 2001, 2040], "conv_tbc": [1953, 2001], "crow_indices_copi": [1953, 2001], "cudnn_affine_grid_gener": [1953, 2001], "cudnn_batch_norm": [1953, 2001], "exponential_average_factor": 1953, "cudnn_convolut": [1953, 2001], "cudnn_convolution_add_relu": [1953, 2001], "cudnn_convolution_relu": [1953, 2001], "cudnn_convolution_transpos": [1953, 2001], "cudnn_grid_sampl": [1953, 2001], "cudnn_is_accept": [1953, 2001], "cumulative_trapezoid": [1953, 2001], "detach_copi": [1953, 2001, 2044], "diagonal_copi": [1953, 2001], "dropout_": [1953, 1964], "embedding_renorm_": 1953, "physical_layout": [1953, 2040], "empty_quant": [1953, 2001], "anyenumtyp": 1953, "expand_copi": [1953, 2001], "fake_quantize_per_channel_affin": [1953, 2001], "fbgemm_linear_fp16_weight": [1953, 2001], "packed_weight": 1953, "fbgemm_linear_fp16_weight_fp32_activ": [1953, 2001], "fbgemm_linear_int8_weight": [1953, 2001], "col_offset": 1953, "weight_scal": 1953, "weight_zero_point": 1953, "fbgemm_linear_int8_weight_fp32_activ": [1953, 2001], "fbgemm_linear_quantize_weight": [1953, 2001], "fbgemm_pack_gemm_matrix_fp16": [1953, 2001], "fbgemm_pack_quantized_matrix": [1953, 2001], "feature_alpha_dropout_": 1953, "feature_dropout": [1953, 2001], "feature_dropout_": 1953, "frobenius_norm": [1953, 2001], "from_fil": [1953, 2001, 2017], "fused_moving_avg_obs_fake_qu": [1953, 2001], "observer_on": 1953, "fake_quant_on": 1953, "running_min": 1953, "running_max": 1953, "per_row_fake_qu": 1953, "symmetric_qu": 1953, "interpolation_mod": [1953, 2040], "has_bias": 1953, "gru_cel": [1953, 2001], "w_ih": 1953, "w_hh": 1953, "hamming_window": [1953, 1957, 2001], "histogramdd": [1953, 2001], "hspmm": [1953, 2001, 2015], "indices_copi": [1953, 2001], "is_autocast_cpu_en": [1953, 2001], "is_grad_en": [1953, 2001], "is_vulkan_avail": [1953, 2001], "isin": [1953, 2001], "kaiser_window": [1953, 2001], "lstm_cell": [1953, 2001], "meshgrid": [1953, 2001], "miopen_batch_norm": [1953, 2001], "miopen_convolut": [1953, 2001], "miopen_convolution_add_relu": [1953, 2001], "miopen_convolution_relu": [1953, 2001], "miopen_convolution_transpos": [1953, 2001], "miopen_depthwise_convolut": [1953, 2001], "miopen_rnn": [1953, 2001], "weight_stride0": 1953, "dropout_st": 1953, "out4": 1953, "mkldnn_adaptive_avg_pool2d": [1953, 2001], "mkldnn_convolut": [1953, 2001], "mkldnn_linear_backward_weight": 1953, "bias_defin": 1953, "mkldnn_max_pool2d": [1953, 2001], "mkldnn_max_pool3d": [1953, 2001], "mkldnn_rnn_layer": [1953, 2001], "weight0": 1953, "weight1": 1953, "weight2": 1953, "weight3": 1953, "hx_": 1953, "cx_": 1953, "native_batch_norm": [1953, 2001], "save_mean": 1953, "save_invstd": 1953, "native_channel_shuffl": [1953, 2001], "native_dropout": [1953, 2001, 2040], "native_group_norm": [1953, 2001, 2040], "hxw": [1953, 2040], "native_layer_norm": [1953, 2001, 2040], "native_norm": [1953, 2001, 2015], "norm_except_dim": [1953, 2001], "nuclear_norm": [1953, 2001], "pairwise_dist": [1953, 2001], "permute_copi": [1953, 2001], "promote_typ": [1953, 2001, 2022], "quantize_per_channel": [1953, 2001, 2006], "quantize_per_tensor_dynam": [1953, 2001, 2006], "quantized_batch_norm": [1953, 2001], "quantized_gru_cel": [1953, 2001], "packed_ih": 1953, "packed_hh": 1953, "col_offsets_ih": 1953, "col_offsets_hh": 1953, "scale_ih": 1953, "scale_hh": 1953, "zero_point_ih": 1953, "zero_point_hh": 1953, "quantized_lstm_cel": [1953, 2001], "quantized_max_pool1d": [1953, 2001], "quantized_max_pool2d": [1953, 2001], "quantized_max_pool3d": [1953, 2001], "quantized_rnn_relu_cel": [1953, 2001], "quantized_rnn_tanh_cel": [1953, 2001], "rand_lik": [1953, 1957, 1981, 2001, 2023, 2030], "randint_lik": [1953, 1957, 2001, 2023], "randn_lik": [1953, 1957, 1971, 2001, 2023], "randperm": [1953, 1957, 2001, 2023, 2040], "result_typ": [1953, 2001], "scalar1": 1953, "scalar2": 1953, "rnn_relu": [1953, 2001], "rnn_relu_cel": [1953, 2001], "rnn_tanh": [1953, 2001], "rnn_tanh_cel": [1953, 2001], "row_indices_copi": [1953, 2001], "row_stack": [1953, 2001], "rrelu_": 1953, "rsub": [1953, 2001], "searchsort": [1953, 2001], "segment_reduc": [1953, 2001], "selu_": 1953, "slice_copi": [1953, 2001], "sparse_bsc_tensor": [1953, 2001, 2015], "sparse_bsr_tensor": [1953, 2001, 2015], "sparse_compressed_tensor": [1953, 2001, 2015], "sparse_csc_tensor": [1953, 2001, 2015], "split_copi": [1953, 2001], "split_with_sizes_copi": [1953, 2001], "squeeze_copi": [1953, 2001], "std_mean": [1953, 1969, 2001], "t_copi": [1953, 2001], "threshold_": 1953, "transpose_copi": [1953, 2001], "trapz": [1953, 2001], "tril_indic": [1953, 1957, 2001], "triu_indic": [1953, 1957, 2001], "unbind_copi": [1953, 2001], "unfold_copi": [1953, 2001], "unsqueeze_copi": [1953, 2001], "values_copi": [1953, 2001], "vander": [1953, 1957, 2001], "var_mean": [1953, 1969, 2001], "view_as_complex_copi": [1953, 2001], "view_as_real_copi": [1953, 2001], "_nn": 1953, "adaptive_max_pool2d": [1953, 2001], "avg_pool2d": [1953, 2001, 2008, 2040], "conv_depthwise3d": [1953, 2001], "cross_entropy_loss": [1953, 2001], "input_scal": 1953, "elu_": 1953, "flatten_dense_tensor": [1953, 2001], "random_sampl": 1953, "gelu_": 1953, "hardsigmoid_": [1953, 2008], "hardswish_": 1953, "hardtanh_": [1953, 2008], "leaky_relu_": 1953, "log_sigmoid": [1953, 2001], "mish_": 1953, "mkldnn_linear": [1953, 2001], "mkldnn_reorder_conv2d_weight": [1953, 2001], "mkldnn_reorder_conv3d_weight": [1953, 2001], "nll_loss2d": [1953, 2001], "nll_loss_nd": [1953, 2001], "reflection_pad3d": [1953, 2001, 2040], "relu6_": 1953, "rrelu_with_nois": [1953, 2001], "rrelu_with_noise_": 1953, "silu_": 1953, "slow_conv3d": [1953, 2001], "slow_conv_dilated2d": [1953, 2001], "slow_conv_dilated3d": [1953, 2001], "slow_conv_transpose2d": [1953, 2001], "slow_conv_transpose3d": [1953, 2001], "softshrink": [1953, 2001], "thnn_conv2d": [1953, 2001], "unflatten_dense_tensor": [1953, 2001], "upsample_bicubic2d": [1953, 2001], "scales_h": 1953, "scales_w": 1953, "upsample_bilinear2d": [1953, 2001, 2040], "upsample_linear1d": [1953, 2001], "upsample_nearest1d": [1953, 2001], "upsample_nearest2d": [1953, 2001, 2040], "upsample_nearest3d": [1953, 2001], "scales_d": 1953, "upsample_trilinear3d": [1953, 2001], "fft_fftfreq": [1953, 2001], "fft_fftshift": [1953, 2001], "fft_hfft2": [1953, 2001], "fft_hfftn": [1953, 2001], "fft_ifftshift": [1953, 2001], "fft_ihfft2": [1953, 2001], "fft_ihfftn": [1953, 2001], "fft_rfftfreq": [1953, 2001], "_linalg": 1953, "linalg_cross": [1953, 2001], "linalg_det": [1953, 2001], "linalg_diagon": [1953, 2001], "eigvec": 1953, "linalg_ldl_factor": [1953, 2001], "linalg_ldl_factor_ex": [1953, 2001], "linalg_ldl_solv": [1953, 2001], "linalg_lu": [1953, 2001], "linalg_lu_factor": [1953, 2001], "linalg_lu_factor_ex": [1953, 2001], "linalg_lu_solv": [1953, 2001], "linalg_matmul": [1953, 2001], "linalg_matrix_exp": [1953, 2001], "linalg_matrix_pow": [1953, 2001], "linalg_multi_dot": [1953, 2001], "linalg_norm": [1953, 2001], "linalg_pinv": [1953, 2001], "linalg_solve_ex": [1953, 2001], "linalg_solve_triangular": [1953, 2001], "linalg_vand": [1953, 2001], "linalg_vecdot": [1953, 2001], "linalg_vector_norm": [1953, 2001], "_nest": 1953, "nested_to_padded_tensor": [1953, 2001], "_spars": 1953, "sparse_sampled_addmm": [1953, 2001], "_special": 1953, "special_airy_ai": [1953, 2001], "special_bessel_j0": [1953, 2001], "special_bessel_j1": [1953, 2001], "special_bessel_y0": [1953, 2001], "special_bessel_y1": [1953, 2001], "special_chebyshev_polynomial_t": [1953, 2001], "special_chebyshev_polynomial_u": [1953, 2001], "special_chebyshev_polynomial_v": [1953, 2001], "special_chebyshev_polynomial_w": [1953, 2001], "special_digamma": [1953, 2001], "special_entr": [1953, 2001], "special_erf": [1953, 2001], "special_erfc": [1953, 2001], "special_erfcx": [1953, 2001], "special_erfinv": [1953, 2001], "special_exp2": [1953, 2001], "special_expit": [1953, 2001], "special_expm1": [1953, 2001], "special_gammainc": [1953, 2001], "special_gammaincc": [1953, 2001], "special_gammaln": [1953, 2001], "special_hermite_polynomial_h": [1953, 2001], "special_i0": [1953, 2001], "special_i1": [1953, 2001], "special_laguerre_polynomial_l": [1953, 2001], "special_legendre_polynomial_p": [1953, 2001], "special_log1p": [1953, 2001], "special_log_ndtr": [1953, 2001], "special_log_softmax": [1953, 2001], "special_logit": [1953, 2001], "special_logsumexp": [1953, 2001], "special_modified_bessel_i0": [1953, 2001], "special_modified_bessel_i1": [1953, 2001], "special_modified_bessel_k0": [1953, 2001], "special_modified_bessel_k1": [1953, 2001], "special_multigammaln": [1953, 2001], "special_ndtr": [1953, 2001], "special_ndtri": [1953, 2001], "special_polygamma": [1953, 2001], "special_psi": [1953, 2001], "special_round": [1953, 2001], "special_scaled_modified_bessel_k0": [1953, 2001], "special_scaled_modified_bessel_k1": [1953, 2001], "special_shifted_chebyshev_polynomial_t": [1953, 2001], "special_shifted_chebyshev_polynomial_u": [1953, 2001], "special_shifted_chebyshev_polynomial_v": [1953, 2001], "special_shifted_chebyshev_polynomial_w": [1953, 2001], "special_sinc": [1953, 2001], "special_softmax": [1953, 2001], "special_spherical_bessel_j0": [1953, 2001], "special_xlog1pi": [1953, 2001], "special_xlogi": [1953, 2001], "special_zeta": [1953, 2001], "tval": 1953, "is_accept": 1953, "rect": 1953, "magic": [1953, 1956, 2023, 2034], "__complex__": 1953, "__float__": 1953, "__int__": 1953, "hex": [1953, 1955, 2001], "__hex__": 1953, "oct": [1953, 2001], "__oct__": 1953, "divmod": [1953, 1955, 2001], "chr": [1953, 1955, 2001], "int_float": 1953, "float_int": 1953, "fab": [1953, 2001], "int_int": 1953, "float_float": 1953, "complex_complex": 1953, "int_complex": 1953, "complex_int": 1953, "float_complex": 1953, "complex_float": [1953, 2017], "scalar_scalar": 1953, "int_to_int": 1953, "modf": [1953, 2001], "mathremaind": [1953, 2001], "programm": [1954, 1955, 2006], "tn": 1954, "subtyp": 1954, "an_error": 1954, "noreturn": [1954, 1955], "classvar": [1954, 1955], "anystr": [1954, 1955], "nomin": 1954, "newtyp": [1954, 1955], "tup": [1954, 1955], "emptydatastructur": 1954, "my_list": 1954, "aug_add_x": 1954, "inc": [1954, 1955], "assign_x": [1954, 1955], "sum_pair": 1954, "red": [1954, 1955], "green": [1954, 1955, 2036], "enum_fn": [1954, 1955], "my_variable_nam": 1954, "top_level_method": 1954, "other_help": 1954, "ten": [1954, 2020], "my_submodul": 1954, "tuple_or_list": 1954, "a_tupl": 1954, "de": [1954, 2003, 2006], "is_script": [1954, 1955, 2001], "unsupported_linear_op": 1954, "is_trac": [1954, 1955], "univers": 1954, "typing_extens": 1954, "a_dict": 1954, "some_dict": 1954, "delimit": [1955, 1956], "tstype": 1955, "tsmoduletyp": 1955, "tsalltyp": 1955, "tsmetatyp": 1955, "tsprimitivetyp": 1955, "tsstructuraltyp": 1955, "tsnominaltyp": 1955, "myclass": [1955, 2003], "printabl": [1955, 2003], "sortabl": 1955, "nevertheless": [1955, 2013], "inc_first_el": 1955, "cpufloattyp": 1955, "tstupl": 1955, "tsnamedtupl": 1955, "tslist": 1955, "tsdict": 1955, "tsoption": 1955, "tsunion": 1955, "tsfutur": 1955, "tsrref": 1955, "tsawait": 1955, "await": [1955, 1956, 2011], "keytyp": 1955, "tensortyp": [1955, 2044], "_await": 1955, "mytupl": 1955, "scripted_inc": 1955, "_annotatednamedtupl": 1955, "_namedtupleannot": 1955, "_unannotatednamedtupl": 1955, "mistak": [1955, 1985, 2034], "nameerror": 1955, "remedi": 1955, "tsbuiltinclass": 1955, "tscustomclass": 1955, "tsenum": 1955, "tstensor": 1955, "subtensor": [1955, 1983, 2046], "subwithtorchfunct": 1955, "script_g": 1955, "tsclassdef": 1955, "methoddefinit": 1955, "__torch__": [1955, 2000], "class2": 1955, "tsenumdef": 1955, "tsenumtyp": 1955, "memberidentifi": 1955, "intenum": 1955, "intflag": 1955, "basecolor": 1955, "compli": [1955, 2003], "classbodydefinit": 1955, "moduleobj": 1955, "testmodul": 1955, "mymodel": [1955, 1977, 1992, 1998], "dosometh": 1955, "strateg": 1955, "congruent": 1955, "python3": 1955, "unannot": 1955, "python3annot": 1955, "paramannot": 1955, "returnannot": 1955, "funcormethodbodi": 1955, "mypyannot": 1955, "localvarannot": 1955, "setval": 1955, "moduletyp": [1955, 2003], "classidentifi": 1955, "instanceattridentifi": 1955, "offset_": 1955, "tsstructualtyp": 1955, "grammar": 1955, "chapter": [1955, 1987], "floattyp": 1955, "inttyp": 1955, "stringtyp": 1955, "devicetyp": 1955, "bullet": 1955, "tupletyp": 1955, "listtyp": 1955, "enclosur": 1955, "parenth_form": 1955, "list_displai": 1955, "dict_displai": 1955, "legal": 1955, "stringliter": 1955, "floatnumb": 1955, "expression_list": 1955, "list_comprehens": 1955, "comp_for": 1955, "target_list": 1955, "or_expr": 1955, "key_datum_list": 1955, "dict_comprehens": 1955, "key_datum": 1955, "ongo": [1955, 2000, 2009, 2011], "enclos": 1955, "datum": [1955, 2025], "attributeref": 1955, "slice_list": 1955, "slice_item": 1955, "proper_slic": 1955, "argument_list": 1955, "desugar": [1955, 2034], "u_expr": 1955, "tightli": [1955, 1990], "m_expr": 1955, "a_expr": 1955, "shift_expr": 1955, "and_expr": 1955, "xor_expr": 1955, "comp_oper": 1955, "__contains__": 1955, "or_test": 1955, "and_test": 1955, "not_test": 1955, "conditional_express": 1955, "starred_item": 1955, "expression_stmt": 1955, "starred_express": 1955, "assignment_express": 1955, "assignment_stmt": 1955, "augmented_assignment_stmt": 1955, "augtarget": 1955, "augop": 1955, "annotated_assignment_stmt": 1955, "raise_stmt": 1955, "assert_stmt": 1955, "return_stmt": 1955, "del_stmt": 1955, "pass_stmt": 1955, "print_stmt": 1955, "break_stmt": 1955, "continue_stmt": 1955, "if_stmt": 1955, "while_stmt": 1955, "for_stmt": 1955, "with_stmt": 1955, "with_item": 1955, "__enter__": 1955, "tuple_stmt": 1955, "getattr_stmt": 1955, "hasattr_stmt": 1955, "zip_stmt": 1955, "iterable1": 1955, "iterable2": 1955, "enumerate_stmt": 1955, "five": [1955, 1995], "add_stat_valu": 1955, "sugaredvalu": 1955, "unrecogn": 1955, "honor": 1955, "__abs__": 1955, "bytearrai": 1955, "delattr": 1955, "exec": 1955, "__index__": 1955, "isint": 1955, "issubclass": [1955, 1983], "ndigit": 1955, "__import__": [1955, 2003], "notimpl": [1955, 1956, 1983, 2034], "rpc_sync": [1955, 2001, 2011, 2012, 2013], "synonym": 1955, "_fork": [1955, 1980], "_wait": [1955, 1980], "lexic": 1956, "indent": 1956, "coroutin": 1956, "__del__": [1956, 1978], "__bytes__": 1956, "__slots__": 1956, "metaclass": 1956, "mro": 1956, "__r": 1956, "__": [1956, 2044], "bytesliter": 1956, "imagnumb": 1956, "parenthes": 1956, "ifs": 1956, "customiz": [1956, 2024, 2032], "compound": 1956, "exc_typ": 1956, "exc_valu": 1956, "adaptivelogsoftmaxwithloss": 1957, "gdoc": 1959, "qualnam": 1959, "alias_analysi": 1959, "impl_": 1959, "collis": 1959, "mylib": 1959, "mylibrari": 1959, "dispatch_kei": [1959, 2032], "operator_nam": 1959, "faketensor": [1959, 1998, 2034], "googl": 1959, "1w": 1959, "t6wz8iy8foi0vm8bf44pdbgs283qvpeljzwieqwq": 1959, "custom_linear": 1959, "custom_linear_abstract": 1959, "custom_nonzero": 1959, "custom_nonzero_abstract": 1959, "peek": 1959, "new_dynamic_s": 1959, "custom_nonzero_cpu": 1959, "x_np": 1959, "abstractimplctx": 1959, "2020": 1959, "colab": [1959, 2003, 2034], "keynam": 1959, "conserv": [1959, 1962, 1981, 2034], "fallthrough_kernel": 1959, "fallthrough": 1959, "div_cpu": 1959, "off_by_default": 1961, "_registr": 1961, "spammi": [1961, 2032], "compiled_autograd": 1961, "born": 1962, "citizen": 1962, "afterthought": 1962, "intuit": [1962, 2037], "alik": 1962, "grai": 1962, "systemat": 1962, "onboard": 1962, "maskedarrai": 1962, "masked_tensor": 1962, "faithfulli": [1963, 2033], "principl": [1963, 1981, 2035], "_subclass": [1963, 1998, 2033, 2034], "meta_util": 1963, "undocu": 1963, "fidel": 1963, "mobil": [1964, 2006, 2035], "blocklist": [1964, 2003], "mobileoptimizertyp": 1964, "conv_bn_fus": 1964, "correspondingli": 1964, "prepack": [1964, 2001], "insert_fold_prepack_op": 1964, "arm": [1964, 2006], "remove_dropout": 1964, "hoist": 1964, "hoist_conv_packed_param": 1964, "fuse_add_relu": 1964, "vulkan": 1964, "vulkan_automatic_gpu_transf": 1964, "freeze_modul": 1964, "script_modul": 1964, "optimization_blocklist": 1964, "preserved_method": 1964, "_mobileoptimizertyp": 1964, "recursivescriptmodul": [1964, 1995], "download": [1965, 1996, 2020, 2037], "infrequ": 1966, "window_s": 1966, "max_sampl": 1966, "cap": 1966, "_monitor": 1966, "data_value_t": 1966, "eventhandlerhandl": 1966, "register_event_handl": 1966, "unregister_event_handl": 1966, "tensorboardeventhandl": 1966, "shader": [1967, 1991], "processor": [1967, 2035], "metalperformanceshad": 1967, "shared_memori": 1968, "abruptli": 1968, "get_all_sharing_strategi": 1968, "get_sharing_strategi": 1968, "set_sharing_strategi": 1968, "new_strategi": 1968, "di": [1968, 2030, 2032, 2038], "abnorm": [1968, 1992], "forev": [1968, 1982], "asap": 1968, "queue_2": 1968, "x_clone": 1968, "segfault": [1968, 1993, 2034], "shm_open": [1968, 2017], "prone": [1968, 1992, 2034], "destructor": [1968, 2013], "seriou": [1968, 1981, 2034], "torch_shm_manag": 1968, "unnot": 1968, "spawncontext": 1968, "has_nam": 1969, "is_shar": [1969, 2017, 2035], "is_sparse_csr": [1969, 2001, 2017, 2035], "is_tensor": [1969, 2015], "items": [1969, 2001], "unifies_names_from_input_tensor": 1969, "nbyte": [1969, 2001, 2017], "ndimens": 1969, "register_post_accumulate_grad_hook": [1969, 1978], "position": [1969, 1970], "unnam": [1969, 1970], "misalign": 1969, "inher": 1969, "collaps": [1969, 2001, 2040], "disappear": 1969, "img": [1970, 2020], "renamed_img": 1970, "coexist": 1970, "wildcard": [1970, 2003, 2044], "somewher": [1970, 1989, 2038], "scale_channel": 1970, "more_img": 1970, "named_tensor": 1970, "named_img": 1970, "flat_img": 1970, "named_flat_img": 1970, "unflattened_named_img": 1970, "grad_loss": 1970, "8107": 1970, "6357": 1970, "0783": 1970, "untest": 1970, "rename_map": 1970, "greedili": 1970, "unment": 1970, "49152": 1970, "datastructur": 1971, "seamless": 1971, "nested_tensor": 1971, "nt": 1971, "vein": 1971, "as_nested_tensor": 1971, "irregular": 1971, "indistinguish": 1971, "2286": 1971, "4842": 1971, "7827": 1971, "6745": [1971, 2016], "0658": 1971, "1247": 1971, "4078": 1971, "8083": 1971, "2871": 1971, "5559": 1971, "9885": 1971, "4074": 1971, "4855": 1971, "0733": 1971, "8285": 1971, "6858": 1971, "7030": 1971, "3481": 1971, "0236": 1971, "jag": [1971, 2033], "fake_grad": 1971, "6862": 1971, "1282": 1971, "1031": 1971, "0464": 1971, "3276": 1971, "9967": 1971, "0054": 1971, "8972": 1971, "9174": 1971, "4995": 1971, "8546": 1971, "7194": 1971, "2918": 1971, "1846": 1971, "8793": 1971, "5183": 1971, "6447": 1971, "8009": 1971, "8468": 1971, "9832": 1971, "5272": 1971, "pt_infer": 1971, "pt_larg": 1971, "pt_small": 1971, "bitwidth": [1972, 1990, 2006, 2015], "asymmetr": [1972, 2006, 2009], "alter": [1973, 1977, 1983, 2041], "attention_bias": 1975, "sacrific": [1976, 1981], "dirac": 1976, "xavier": 1976, "glorot": 1976, "bengio": 1976, "fan": 1976, "_in": 1976, "_out": [1976, 1987, 2040], "fan_in": 1976, "kaim": 1976, "delv": 1976, "surpass": 1976, "he": 1976, "_mode": 1976, "fan_out": 1976, "redrawn": 1976, "sax": 1976, "2013": 1976, "marten": 1976, "scaler": [1977, 1981], "clip_grad_value_": 1977, "unscale_": 1977, "optimizer2": 1977, "batch_per_it": 1977, "iters_to_accumul": 1977, "num_proc": 1977, "grad_param": 1977, "grad_norm": 1977, "scaled_grad_param": 1977, "inv_scal": 1977, "get_scal": 1977, "proce": [1977, 1981, 2011, 2045], "optimizer0": 1977, "output0": 1977, "model0": 1977, "model1": 1977, "loss0": 1977, "loss1": 1977, "hundr": [1977, 1989, 2045], "imped": 1977, "poor": [1977, 1978], "dp_model": 1977, "imported_funct": 1977, "mymm": 1977, "myfloat32func": 1977, "fwd_output": 1977, "cleaner": 1978, "mapsto": 1978, "educ": 1978, "_save": 1978, "_saved_self": 1978, "convex": 1978, "concav": 1978, "togglabl": 1978, "drawback": 1978, "0011": 1978, "dirti": 1978, "hogwild": 1978, "train_fn": 1978, "graphtask": 1978, "copyslic": 1978, "mutex": 1978, "gotten": 1978, "curiou": 1978, "\u2102": 1978, "yj": 1978, "holomorph": 1978, "fulfil": [1978, 1984, 2003, 2033, 2038], "homomorph": 1978, "mathematician": 1978, "studi": [1978, 2005], "beauti": 1978, "somewhat": [1978, 1981, 2015], "0906": 1978, "4835": 1978, "audio": [1978, 2020], "\u211d": 1978, "_output": 1978, "vj": 1978, "handi": [1978, 1981], "selfdeletingtempfil": 1978, "tmp_dir": 1978, "uuid": 1978, "uuid4": 1978, "temp_fil": 1978, "forbidden": 1978, "savedtensor": 1978, "_raw_saved_": 1978, "_raw_saved_self": 1978, "save_on_disk_threshold": 1978, "tensor_or_sctf": 1978, "_saved_oth": 1978, "4th": 1979, "backcompat": 1979, "broadcast_warn": 1979, "userwarn": 1979, "compute_z": 1980, "w_z": 1980, "w_y": 1980, "tbb": 1980, "aten_thread": 1980, "omp": 1980, "mkl_thread": 1980, "bla": 1980, "mkldnn_cpu_runtim": 1980, "use_mkldnn": 1980, "use_tbb": 1980, "use_openmp": 1980, "ON": [1980, 1988, 1989], "set_num_interop_thread": 1980, "get_num_interop_thread": 1980, "set_num_thread": [1980, 1992], "get_num_thread": 1980, "omp_num_thread": 1980, "mkl_num_thread": 1980, "1024": [1980, 1981, 2027, 2035], "e5": 1980, "oversubscript": 1980, "memory manag": 1981, "optimize pytorch": 1981, "irrespect": 1981, "spread": 1981, "cuda2": [1981, 1988], "broadli": [1981, 2006], "set_float_32_matmul_precis": 1981, "a100": [1981, 2042, 2045], "a_ful": 1981, "10240": 1981, "b_full": 1981, "ab_ful": 1981, "7277": 1981, "ab_tf32": 1981, "016": 1981, "ga100": 1981, "1747": 1981, "relative_error": 1981, "0022": 1981, "ab_fp32": 1981, "0031": 1981, "000039": 1981, "7x": 1981, "globalcontext": 1981, "setallowtf32cubla": 1981, "setallowtf32cudnn": 1981, "bench_gemm_transform": 1981, "allow_fp16_reduc": 1981, "4048": 1981, "1634": 1981, "1639": 1981, "4056": 1981, "1670": 1981, "1661": 1981, "4080": 1981, "1664": 1981, "1658": 1981, "1651": 1981, "4104": 1981, "1677": 1981, "1674": 1981, "4128": 1981, "1796": [1981, 1990], "2519": 1981, "5096": 1981, "2144": 1981, "2149": 1981, "2766": 1981, "5120": 1981, "2142": 1981, "9728": 1981, "3875": 1981, "5779": 1981, "16384": [1981, 2037], "6182": 1981, "9656": 1981, "setallowfp16reductioncubla": 1981, "instabl": 1981, "setallowbf16reductioncubla": 1981, "invis": [1981, 2035, 2045], "start_ev": 1981, "elapsed_time_m": 1981, "pointless": 1981, "exploit": 1981, "paragraph": [1981, 1987], "initial_grad": 1981, "memory_alloc": [1981, 1988], "memory_snapshot": [1981, 1988], "memcheck": 1981, "pytorch_no_cuda_memory_cach": [1981, 1988], "option2": 1981, "value2": 1981, "max_split_size_mb": 1981, "borderlin": 1981, "memory_summari": 1981, "resort": [1981, 1987, 2003], "roundup_power2_divis": 1981, "1280": 1981, "1536": 1981, "1792": 1981, "256mb": 1981, "512mb": 1981, "1gb": [1981, 2043], "knob": [1981, 2033], "garbage_collection_threshold": 1981, "reclaim": [1981, 2030], "release_cached_block": 1981, "unfavor": 1981, "expandable_seg": 1981, "2mb": 1981, "sliver": 1981, "pinned_use_cuda_host_regist": 1981, "cudahostregist": 1981, "cudahostalloc": 1981, "malloc": [1981, 2038, 2047], "pinned_num_register_thread": 1981, "cuda_runtime_api": 1981, "iostream": [1981, 2027], "fpic": 1981, "my_malloc": 1981, "ssize_t": 1981, "ptr": 1981, "cout": [1981, 2027], "endl": [1981, 1989, 2027], "my_fre": 1981, "cudafre": [1981, 2047], "cudapluggablealloc": 1981, "new_alloc": 1981, "change_current_alloc": 1981, "_cuda_clearcublasworkspac": 1981, "kib": 1981, "lru": 1981, "geometri": 1981, "1023": 1981, "zeta": [1981, 2001, 2016, 2040], "use_pytorch_kernel_cach": 1981, "pytorch_kernel_cache_path": 1981, "store_tru": 1981, "disable_cuda": 1981, "assess": 1981, "cudagetdevicecount": 1981, "cuinit": 1981, "pytorch_nvml_based_cuda_check": 1981, "nvml": 1981, "nvmldevicegetcount_v2": 1981, "poison": 1981, "aforement": [1981, 1992], "train_load": [1981, 1992], "x_cpu": 1981, "x_gpu": 1981, "x_cpu_long": 1981, "y_cpu": 1981, "y_gpu": 1981, "y_cpu_long": 1981, "new_tensor": 1981, "overus": 1981, "cudagraphlaunch": 1981, "elid": 1981, "versatil": 1981, "static_input": 1981, "static_output": 1981, "realist": 1981, "sophist": [1981, 2002], "virtual": [1981, 2017], "d_in": 1981, "d_out": 1981, "640": 1981, "static_target": 1981, "static_y_pr": 1981, "static_loss": 1981, "real_input": [1981, 2034], "real_target": 1981, "refil": 1981, "rejoin": 1981, "cuda_work": 1981, "nsight": 1981, "reorgan": 1981, "graphabl": 1981, "needlessli": [1981, 2033], "econom": 1981, "static_out_1": 1981, "g1_workload": 1981, "static_in_1": 1981, "static_out_2": 1981, "g2_workload": 1981, "static_in_2": 1981, "real_data_1": 1981, "real_data_2": 1981, "occasion": [1981, 2015, 2034], "29500": [1982, 2004, 2011, 2012], "dive": [1982, 1987, 2003, 2038, 2039], "grad0": 1982, "grad1": 1982, "bucket1": 1982, "bucket0": 1982, "hurt": 1982, "kick": [1982, 2011, 2012, 2042], "earliest": 1982, "unreadi": 1982, "perspect": [1982, 1986, 1993, 2012, 2038], "hpp": 1982, "processgroupgloo": 1982, "processgroupmpi": 1982, "_sync_param": 1982, "autograd_hook": 1982, "prepare_for_backward": 1982, "_after_": 1982, "optimize_ddp": 1982, "linearfunct": 1983, "grad_bia": 1983, "mulconst": 1983, "mycub": [1983, 1984], "grad_dx": [1983, 1984], "my_cub": [1983, 1984], "input_featur": 1983, "output_featur": 1983, "__array_function__": [1983, 2035], "nep": [1983, 2035], "0018": 1983, "scalartensor": 1983, "handled_funct": 1983, "mandat": 1983, "update_wrapp": 1983, "ensure_tensor": 1983, "metadatatensor": 1983, "__add__": 1983, "subtensor2": 1983, "othersubtensor": 1983, "loggingtensor": 1983, "permiss": 1983, "_metadata": 1983, "ndata": 1983, "ministri": 1983, "silli": 1983, "superclass": 1983, "troublesom": 1983, "face": [1983, 2003, 2020, 2034], "_get_overridable_funct": 1983, "get_overridable_funct": [1983, 2046], "func_dict": 1983, "nn_func": 1983, "labori": 1983, "_get_testing_overrid": 1983, "get_testing_overrid": [1983, 2046], "override_dict": 1983, "dummy_add": 1983, "get_ignored_funct": [1983, 2046], "__torch_dispatch__": [1983, 2015, 2034], "outdat": 1983, "redispatch": [1983, 2034], "dispatchkei": 1983, "zerotensor": 1983, "compositeimplicitautograd": 1983, "func_nam": [1983, 2011], "overload_nam": 1983, "exot": 1983, "zoo": 1983, "intrus": 1983, "torchfunctionmod": 1983, "_python_dispatch": 1983, "torchdispatchmod": 1983, "resolve_nam": [1983, 2046], "functionlog": 1983, "dispatchlog": 1983, "7164": 1983, "9336": 1983, "4287": 1983, "7989": 1983, "2169": 1983, "7474": 1983, "5624": 1983, "5970": 1983, "4328": 1983, "9794": 1983, "3490": 1983, "8671": 1983, "8573": 1983, "4338": 1983, "4948": 1983, "1249": 1983, "3307": 1983, "2151": 1983, "6018": 1983, "9060": 1983, "2974": 1983, "7708": 1983, "6668": 1983, "0352": 1983, "7948": 1983, "6023": 1983, "4303": 1983, "2036": 1983, "6831": 1983, "8120": 1983, "5949": 1983, "5416": 1983, "3335": 1983, "5897": 1983, "custom_vjp": 1984, "custom_jvp": 1984, "to_numpi": 1984, "numpysort": 1984, "ind_inv": 1984, "_1": [1984, 2003], "numpytak": 1984, "numpy_sort": 1984, "ggx": 1984, "vmappabl": 1984, "x_bdim": 1984, "ind_bdim": 1984, "ind_inv_bdim": 1984, "expanded_x": 1984, "expanded_ind": 1984, "expanded_ind_inv": 1984, "new_dim": 1984, "logical_dim": 1984, "maybe_expand_bdim_at_front": 1984, "pseudocod": 1984, "rapidli": [1985, 1992, 1998, 1999], "fortun": [1985, 2045], "abridg": 1985, "total_loss": 1985, "extrud": 1985, "phenomenon": 1985, "plenti": 1985, "bptt": 1985, "repackag": 1985, "nm": 1985, "blow": 1985, "rememb": [1985, 1992, 2002, 2038], "elf": 1985, "grep": [1985, 2029], "run_model": 1985, "recoveri": 1985, "data_parallel": 1985, "pad_packed_sequ": 1985, "padded_input": 1985, "packed_input": 1985, "packed_output": 1985, "my_lstm": 1985, "dp_m": 1985, "padding_input": 1985, "flava": 1986, "sooner": 1986, "llm": 1986, "llama": 1986, "6b": 1986, "2b": 1986, "8gb": 1986, "1x": 1986, "24gb": 1986, "total_transformer_block_params_in_b": 1986, "dtype_byt": 1986, "num_gpu": 1986, "gb": 1986, "2x": [1986, 2020, 2039], "record_funct": [1986, 2043], "recordstream": 1986, "flat_param": 1986, "splitwithsizesbackward": 1986, "4gb": 1986, "6gb": 1986, "_another_": 1986, "_could_": 1986, "hopefulli": [1986, 2034], "ur": 1987, "ui": [1987, 2020, 2039, 2042], "j_f": 1987, "calculu": 1987, "cw": 1987, "bigger": 1987, "articl": 1987, "58eb23378f2a376565a66ac32c93a316c45b6131": 1987, "l99": 1987, "l105": 1987, "ds_dx": 1987, "compute_gradi": 1987, "ds_dy": 1987, "conj_w_d": 1987, "w_d": 1987, "d_idx": 1987, "albeit": 1987, "wonder": 1987, "amd": [1988, 2026], "dialect": 1988, "portabl": 1988, "rocmdoc": 1988, "programming_guid": 1988, "hip_api_guid": 1988, "cuda_vers": 1988, "cudaruntimegetvers": 1988, "cudadrivergetvers": 1988, "hip_vers": 1988, "hipruntimegetvers": 1988, "hipdrivergetvers": 1988, "11000": 1988, "use_rocm": 1988, "rocm_vers": 1988, "40300": 1988, "cmake": [1988, 1996, 2027], "drocm_force_enable_gpu_assert": 1988, "addglobalcallback": 1989, "recordfunct": 1989, "ivalu": 1989, "threadlocaldebuginfo": 1989, "debuginfoguard": 1989, "recordfunctioncallback": 1989, "onfunctionent": 1989, "onfunctionexit": 1989, "needsinput": 1989, "samplingprob": 1989, "enablerecordfunct": 1989, "cerr": 1989, "broader": [1989, 2023], "inject": 1989, "setapiusagehandl": 1989, "setapiusagelogg": 1989, "event_nam": 1989, "c10_log_api_usage_onc": 1989, "my_api": 1989, "_log_api_usage_onc": 1989, "archiv": [1989, 1995], "akin": [1989, 2027], "jpeg": 1989, "camera": [1989, 2020], "setexportmoduleextrafileshook": 1989, "extrafilesmap": 1989, "producer_info": 1989, "getenv": 1989, "getsourc": 1989, "precompil": 1989, "pyc": 1989, "loos": 1989, "elabor": 1990, "tpu": 1990, "mylinear": 1990, "sample_input": 1990, "0413": 1990, "2057": 1990, "0597": 1990, "8247": 1990, "1045": 1990, "4299": 1990, "5457": 1990, "4793": 1990, "3634": 1990, "8525": 1990, "6749": 1990, "l0": [1990, 1995], "deeper": [1990, 2003, 2038], "bignet": 1990, "big_net": 1990, "dynamicnet": 1990, "dynamic_net": 1990, "2051": 1990, "7601": 1990, "1963": 1990, "4354": 1990, "6598": 1990, "4446": 1990, "4628": 1990, "8774": 1990, "6848": 1990, "5458": 1990, "4647": 1990, "5310": 1990, "0609": 1990, "0940": 1990, "1266": 1990, "0623": 1990, "3508": 1990, "0550": 1990, "5317": 1990, "5562": 1990, "4028": 1990, "6942": 1990, "0140": 1990, "0329": 1990, "1160": 1990, "0434": 1990, "3889": 1990, "1613": 1990, "6340": 1990, "3887": 1990, "9979": 1990, "0767": 1990, "3526": 1990, "8756": 1990, "5847": 1990, "6016": 1990, "1608": 1990, "0829": 1990, "6338": 1990, "9239": 1990, "6943": 1990, "5034": 1990, "0268": 1990, "4489": 1990, "9403": 1990, "2509": 1990, "5052": 1990, "3088": 1990, "4951": 1990, "3381": 1990, "5166": 1990, "beginn": 1990, "examples_nn": 1990, "polynomial_modul": 1990, "teach": 1990, "0013": [1990, 2016], "0030": 1990, "0008": 1990, "modalmodul": 1990, "6614": 1990, "2669": 1990, "0617": 1990, "4519": 1990, "two_layer_net_optim": 1990, "blitz": 1990, "neural_networks_tutori": 1990, "autograd_tutori": 1990, "new_net": 1990, "runningmean": 1990, "1041": 1990, "0647": 1990, "1515": 1990, "m_load": 1990, "unserialized_th": 1990, "statefulmodul": 1990, "param3": 1990, "param_list": 1990, "parameterlist": 1990, "param_dict": 1990, "parameterdict": 1990, "buffer1": 1990, "buffer2": 1990, "buffer3": 1990, "0322": 1990, "9066": 1990, "1409": 1990, "4852": 1990, "6949": 1990, "2911": 1990, "1044": 1990, "4202": 1990, "1953": 1990, "5299": 1990, "8747": 1990, "6289": 1990, "4898": 1990, "6434": 1990, "5187": 1990, "0346": 1990, "4077": 1990, "4324": 1990, "7022": 1990, "3915": 1990, "6176": 1990, "6062": 1990, "5992": 1990, "4452": 1990, "2843": 1990, "3710": 1990, "3947": 1990, "saving_loading_model": 1990, "what_is_state_dict": 1990, "skip_init": 1990, "skip_param_init": 1990, "forward_hook": [1990, 2041], "backward_hook": [1990, 2041], "new_grad_input": 1990, "5059": 1990, "8158": 1990, "2390": 1990, "0043": 1990, "addmmbackward": 1990, "forward_pre_hook_handl": 1990, "5752": 1990, "7421": 1990, "forward_hook_handl": 1990, "0980": 1990, "4666": 1990, "0256": 1990, "4497": 1990, "5046": 1990, "combat": 1990, "mps_devic": 1991, "yourfavoritenet": 1991, "a3c": 1992, "set_start_method": 1992, "simplequeu": 1992, "cope": 1992, "eleg": 1992, "num_process": 1992, "inappropri": 1992, "vcpu": 1992, "htop": 1992, "exceed": 1992, "competit": 1992, "oversubscrib": 1992, "mnist_hogwild": 1992, "dataloader_kwarg": 1992, "train_epoch": 1992, "30x": 1992, "boost": [1992, 2029], "754": 1993, "1e20": 1993, "4142e": 1993, "struggl": 1993, "benign": 1993, "v_dot2": 1993, "mfma": 1993, "fp64": 1993, "rocbla": 1993, "miopen": 1993, "rocblas_internal_fp16_alt_impl": 1993, "miopen_debug_convolution_attrib_fp16_alt_impl": 1993, "_convbackend": 1993, "slownd": 1993, "slownd_transpos": 1993, "slownd_dil": 1993, "slownd_dilated_transpos": 1993, "convbackend": 1993, "miopendepthwis": 1993, "miopentranspos": 1993, "svd_lowrank": [1994, 2015], "22modul": 1994, "20determin": 1994, "index_add_cuda_": 1994, "1509": 1994, "8027": 1994, "0333": 1994, "1444": 1994, "rese": 1994, "seed_work": 1994, "worker_se": 1994, "train_dataset": 1994, "tensor_dict": 1995, "loaded_numb": 1995, "loaded_even": 1995, "loaded_smal": 1995, "num_batches_track": 1995, "bn_state_dict": 1995, "new_bn": 1995, "out0_relu": 1995, "1400": 1995, "4563": 1995, "0271": 1995, "4406": 1995, "2827": 1995, "4588": 1995, "2031": 1995, "1316": 1995, "6533": 1995, "3413": 1995, "1112": 1995, "m_state_dict": 1995, "new_m": 1995, "zip64": 1995, "pkl": [1995, 2003], "byteord": 1995, "original_nam": 1995, "controlflowmodul": 1995, "controlflowmodule_trac": 1995, "3793": 1995, "controlflowmodule_script": 1995, "tagger": 1995, "ipu_tag": 1995, "ipu_deseri": 1995, "startswith": [1995, 2001], "get_default_load_endian": 1995, "loadendian": 1995, "default_load_endian": 1995, "set_default_load_endian": 1995, "endian": 1995, "rem": 1996, "7z": 1996, "curl": 1996, "ossci": 1996, "mkl_2020": 1996, "aoa": 1996, "omkl": 1996, "cuda_prefix": 1996, "cuda102": 1996, "magma_2": 1996, "4_": 1996, "omagma": 1996, "cmake_include_path": 1996, "cd": [1996, 2003, 2005, 2027, 2045], "magma_hom": 1996, "studio": [1996, 1998], "pip": [1996, 1998, 1999, 2000, 2020, 2032], "cmake_gener": 1996, "ffi": 1996, "create_extens": 1996, "_ext": 1996, "define_macro": 1996, "relative_to": 1996, "c99": 1996, "x86_x64": 1996, "packagesnotfounderror": 1996, "anaconda": 1996, "noarch": 1996, "continuum": 1996, "pkg": 1996, "pro": [1996, 2020], "msys2": 1996, "importerror": [1996, 2003], "dll": 1996, "vc2017": 1996, "vc": 1996, "vs2017_runtim": 1996, "mkl_fft": 1996, "intel_openmp": 1996, "vs2017": 1996, "openbla": 1996, "forg": 1996, "emerg": [1996, 2033], "bootstrap": 1996, "forgotten": 1996, "freeze_support": 1996, "forkingpickl": 1996, "brokenpipeerror": 1996, "errno": 1996, "couldn": [1996, 2000], "torch_14808_1591070686": 1996, "thalloc": 1996, "tdr": 1996, "thcudacheck": 1996, "csrc": [1996, 2027, 2033], "storageshar": 1996, "microsoft": [1997, 2006], "flavor": 1997, "polish": [1997, 1998], "orchestr": [1998, 2041], "exportopt": 1998, "onnxregistri": 1998, "extractor": 1998, "fxgraphextractor": 1998, "onnxfakecontext": 1998, "onnxprogram": 1998, "onnxprogramseri": 1998, "upgrad": [1998, 2002, 2022], "perceptron": 1998, "mlpmodel": 1998, "fc0": 1998, "fc3": 1998, "tensor_x": 1998, "97": [1998, 2016], "onnx_program": 1998, "dynamo_export": [1998, 2000], "model_proto": 1998, "modelproto": 1998, "complianc": 1998, "protobuf": [1998, 2000], "netron": 1998, "icon": 1998, "viewer": [1998, 2047], "parseabl": 1998, "fxe0007": 1998, "fxe0011": 1998, "fxe0012": 1998, "fxe0013": 1998, "fxe0014": 1998, "fxe0015": 1998, "fxe0016": 1998, "model_arg": 1998, "model_kwarg": 1998, "my_simple_model": 1998, "my_dynamic_model": 1998, "tensor_typ": 1998, "elem_typ": 1998, "dim_param": [1998, 2000], "arg0_dim_0": 1998, "arg0_dim_1": 1998, "arg0_dim_2": 1998, "fake_context": 1998, "onnx_registri": 1998, "diagnostic_opt": 1998, "enable_fake_mod": 1998, "fake_tensor": [1998, 2033, 2034], "faketensormod": [1998, 2033, 2034], "xdoctest": [1998, 1999], "torch_doctest_onnx": [1998, 1999], "my_nn_modul": 1998, "my_model_without_initi": 1998, "WITH": [1998, 2000], "my_model_with_initi": 1998, "input_adapt": 1998, "output_adapt": 1998, "diagnostic_context": 1998, "export_except": 1998, "model_signatur": 1998, "model_torch": 1998, "io_adapt": 1998, "inputadapt": 1998, "outputadapt": 1998, "diagnosticcontext": 1998, "adapt_torch_inputs_to_onnx": 1998, "model_with_state_dict": 1998, "func_nested_input": 1998, "x_dict": 1998, "y_tupl": 1998, "y3": 1998, "adapt_torch_outputs_to_onnx": 1998, "model_output": 1998, "func_returning_tupl": 1998, "pt_output": 1998, "inputadaptstep": 1998, "outputadaptstep": 1998, "9216": [1998, 2000], "_log_softmax": [1998, 2001, 2040], "bufferediobas": 1998, "save_diagnost": 1998, "protobufonnxprogramseri": 1998, "serializetostr": 1998, "exported_model": 1998, "onnxruntimeopt": 1998, "session_opt": 1998, "execution_provid": 1998, "execution_provider_opt": 1998, "onnxruntim": [1998, 1999, 2000, 2006], "sessionopt": 1998, "invalidexportoptionserror": 1998, "get_op_funct": 1998, "is_registered_op": 1998, "register_op": 1998, "tracedonnxfunct": 1998, "sctip": 1998, "warnings_as_error": 1998, "is_onnxrt_backend_support": 1999, "onnxrt": [1999, 2026], "dummy_input": 2000, "input_nam": 2000, "actual_input_1": 2000, "learned_": 2000, "output_nam": 2000, "learned_0": 2000, "learned_1": 2000, "learned_2": 2000, "learned_3": 2000, "learned_14": 2000, "learned_15": 2000, "kernel_shap": 2000, "transb": 2000, "check_model": 2000, "printable_graph": 2000, "ort": 2000, "ort_sess": 2000, "inferencesess": 2000, "astyp": 2000, "seq_length": 2000, "real_seq_length": 2000, "experienc": 2000, "new_data": 2000, "hope": [2000, 2039], "symbolic_opset": 2000, "symbolic_opset9": 2000, "_variablefunct": 2000, "pyi": 2000, "checkout": 2000, "___torch_mangle_0": 2000, "alpha_f": 2000, "myrelu": 2000, "value_t": 2000, "pythonop": [2000, 2001], "mylogexp": 2000, "operator_export_typ": 2000, "onnx_fallthrough": 2000, "onnx_aten_fallback": 2000, "onnx_opset": 2000, "opset15": 2000, "custom_opset": 2000, "67326": 2000, "alphax": 2000, "castlik": 2000, "gammax": 2000, "settyp": 2000, "custom_selu": 2000, "jit_util": 2000, "graphcontext": 2000, "onnxscript_op": 2000, "register_custom_op_symbol": 2000, "symbolic_nam": 2000, "symbolic_fn": 2000, "Be": [2000, 2042], "symbolic_help": 2000, "symbolic_foo_forward": 2000, "custom_domain": 2000, "attr1_f": 2000, "attr2_i": 2000, "custom_op": [2000, 2034], "foo_forward": 2000, "foomodel": 2000, "example_input1": 2000, "caffe2": [2000, 2020], "torch_script_graph": 2000, "unconvertible_op": 2000, "dynamic_ax": 2000, "export_param": 2000, "trainingmod": 2000, "operatorexporttyp": 2000, "do_constant_fold": 2000, "keep_initializers_as_input": 2000, "export_modules_as_funct": 2000, "autograd_inlin": 2000, "OF": 2000, "input_i": 2000, "input_z": 2000, "fileno": 2000, "untrain": 2000, "doc_str": 2000, "onnx_aten": 2000, "build_caffe2": 2000, "summodul": 2000, "dim_valu": 2000, "my_custom_axis_nam": 2000, "sum_dynamic_axes_1": 2000, "deduplicate_initi": 2000, "74765": 2000, "checkererror": 2000, "unsupportedoperatorerror": 2000, "export_to_pretty_str": 2000, "export_typ": 2000, "google_print": 2000, "add_node_nam": 2000, "nodeproto": 2000, "debugstr": 2000, "contrib": 2000, "test_aten_embedding_2": 2000, "test_oper": 2000, "unregister_custom_op_symbol": 2000, "select_model_mode_for_export": 2000, "is_in_onnx_export": 2000, "middl": 2000, "enable_log": 2000, "disable_log": 2000, "graphinfo": 2000, "incorrect_relu_symbolic_funct": 2000, "2328854203224182": 2000, "699536174352349": 2000, "constantchunk": 2001, "__and_": 2001, "__contains_": 2001, "__derive_index": 2001, "__getitem_": 2001, "__interpol": 2001, "__is_": 2001, "__isnot_": 2001, "__lshift_": 2001, "__not_": 2001, "__or_": 2001, "__range_length": 2001, "__rshift_": 2001, "__xor_": 2001, "_cast_byt": 2001, "_cast_char": 2001, "_cast_doubl": 2001, "_cast_float": 2001, "_cast_half": 2001, "_cast_int": 2001, "_cast_long": 2001, "_cast_short": 2001, "_conj": 2001, "_convolution_mod": 2001, "_dim_arang": 2001, "_pack_padded_sequ": 2001, "_pad_packed_sequ": 2001, "_reshape_from_tensor": 2001, "_sample_dirichlet": 2001, "_set_item": 2001, "_shape_as_tensor": 2001, "_standard_gamma": 2001, "_uniqu": 2001, "_unique2": 2001, "_weight_norm": 2001, "conv1d_relu": 2001, "conv2d_relu": 2001, "conv3d_relu": 2001, "embedding_renorm": 2001, "floordiv": [2001, 2008], "linear_relu": [2001, 2008], "nonzero_numpi": 2001, "numpy_t": 2001, "unchecked_cast": 2001, "unique_dim": 2001, "_c10d_function": 2001, "all_gather_into_tensor_coalesc": 2001, "all_reduce_coalesc": 2001, "reduce_scatter_tensor_coalesc": 2001, "wait_tensor": 2001, "_quantiz": 2001, "conv2d_prepack": 2001, "conv3d_prepack": 2001, "conv_transpose1d_prepack": 2001, "conv_transpose2d_prepack": 2001, "conv_transpose3d_prepack": 2001, "linear_dynam": 2001, "linear_prepack": 2001, "linear_prepack_fp16": 2001, "linear_prepack_fp16_legaci": 2001, "linear_prepack_legaci": 2001, "_test": 2001, "get_first": 2001, "compleximplicit": 2001, "floatimplicit": 2001, "intimplicit": 2001, "__iand_": 2001, "__ilshift_": 2001, "__ior_": 2001, "__irshift_": 2001, "__ixor_": 2001, "__round_to_zero_floordiv": 2001, "__upsampl": 2001, "__upsample_bilinear": 2001, "__upsample_nearest": 2001, "_adaptive_avg_pool2d": [2001, 2040], "_adaptive_avg_pool3d": [2001, 2040], "_add_batch_dim": 2001, "_add_relu": 2001, "_addmm_activ": 2001, "_aminmax": 2001, "_amp_foreach_non_finite_check_and_unscal": 2001, "_amp_update_scal": 2001, "_assert_scalar": 2001, "_assert_tensor_metadata": 2001, "_autocast_to_full_precis": 2001, "_autocast_to_reduced_precis": 2001, "_batch_norm_impl_index": 2001, "_cdist_forward": [2001, 2040], "_cholesky_solve_help": 2001, "_choose_qparams_per_tensor": 2001, "_coalesc": 2001, "_compute_linear_combin": 2001, "_conj_copi": 2001, "_conj_phys": 2001, "_conv_depthwise2d": 2001, "_convert_indices_from_coo_to_csr": 2001, "_convert_indices_from_csr_to_coo": 2001, "_convert_weight_to_int4pack": 2001, "_copy_from": 2001, "_copy_from_and_res": 2001, "_cslt_compress": 2001, "_cslt_sparse_mm": 2001, "_cslt_sparse_mm_search": 2001, "_ctc_loss": 2001, "_cudnn_ctc_loss": 2001, "_cudnn_init_dropout_st": 2001, "_cudnn_rnn": 2001, "_cudnn_rnn_flatten_weight": 2001, "_cufft_clear_plan_cach": 2001, "_cufft_get_plan_cache_max_s": 2001, "_cufft_get_plan_cache_s": 2001, "_cufft_set_plan_cache_max_s": 2001, "_cummax_help": 2001, "_cummin_help": 2001, "_debug_has_internal_overlap": 2001, "_dimi": 2001, "_dimv": 2001, "_dirichlet_grad": 2001, "_efficient_attention_forward": 2001, "_efficientzerotensor": 2001, "_embedding_bag": [2001, 2040], "_embedding_bag_forward_onli": 2001, "_empty_affine_quant": 2001, "_empty_per_channel_affine_quant": 2001, "_euclidean_dist": 2001, "_fake_quantize_learnable_per_channel_affin": 2001, "_fake_quantize_learnable_per_tensor_affin": 2001, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 2001, "_fft_c2c": 2001, "_fft_c2r": 2001, "_fft_r2c": 2001, "_fill_mem_eff_dropout_mask": 2001, "_flash_attention_forward": 2001, "_foobar": [2001, 2045], "_foreach_ab": 2001, "_foreach_aco": 2001, "_foreach_add": 2001, "_foreach_addcdiv": 2001, "_foreach_addcmul": 2001, "_foreach_asin": 2001, "_foreach_atan": 2001, "_foreach_ceil": 2001, "_foreach_clamp_max": 2001, "_foreach_clamp_min": 2001, "_foreach_copi": 2001, "_foreach_co": 2001, "_foreach_cosh": 2001, "_foreach_div": 2001, "_foreach_erf": 2001, "_foreach_erfc": 2001, "_foreach_exp": 2001, "_foreach_expm1": 2001, "_foreach_floor": 2001, "_foreach_frac": 2001, "_foreach_lerp": 2001, "_foreach_lgamma": 2001, "_foreach_log": 2001, "_foreach_log10": 2001, "_foreach_log1p": 2001, "_foreach_log2": 2001, "_foreach_maximum": 2001, "_foreach_minimum": 2001, "_foreach_mul": 2001, "_foreach_neg": 2001, "_foreach_norm": 2001, "_foreach_pow": 2001, "_foreach_reciproc": 2001, "_foreach_round": 2001, "_foreach_sigmoid": 2001, "_foreach_sign": 2001, "_foreach_sin": 2001, "_foreach_sinh": 2001, "_foreach_sqrt": 2001, "_foreach_sub": 2001, "_foreach_tan": 2001, "_foreach_tanh": 2001, "_foreach_trunc": 2001, "_foreach_zero": 2001, "_functional_assert_async": 2001, "_functional_assert_scalar": 2001, "_functional_sym_constrain_rang": 2001, "_functional_sym_constrain_range_for_s": 2001, "_fused_adam": 2001, "_fused_adamw": 2001, "_fused_dropout": 2001, "_fused_moving_avg_obs_fq_help": 2001, "_fused_moving_avg_obs_fq_helper_funct": 2001, "_fused_sdp_choic": 2001, "_fused_sgd": 2001, "_fw_primal": 2001, "_fw_primal_copi": 2001, "_get_cpu_cap": 2001, "_get_tracing_st": 2001, "_grad_sum_to_s": 2001, "_has_compatible_shallow_copy_typ": 2001, "_has_same_storage_numel": 2001, "_histogramdd_bin_edg": 2001, "_histogramdd_from_bin_ct": 2001, "_histogramdd_from_bin_tensor": 2001, "_index_put_impl": 2001, "_indices_copi": 2001, "_infer_s": 2001, "_int_mm": 2001, "_is_all_tru": 2001, "_is_any_tru": 2001, "_is_zerotensor": 2001, "_lazy_clon": 2001, "_linalg_check_error": 2001, "_linalg_det": 2001, "_linalg_eigh": 2001, "_linalg_slogdet": 2001, "_linalg_solve_ex": 2001, "_linalg_svd": 2001, "_list_to_tensor": 2001, "_logcumsumexp": 2001, "_lstm_mp": 2001, "_make_dep_token": 2001, "_make_du": 2001, "_make_dual_copi": 2001, "_make_per_channel_quantized_tensor": 2001, "_make_per_tensor_quantized_tensor": 2001, "_masked_scal": 2001, "_masked_softmax": 2001, "_mixed_dtypes_linear": 2001, "_mkldnn_reshap": 2001, "_mkldnn_transpos": 2001, "_mps_convolut": 2001, "_mps_convolution_transpos": 2001, "_native_batch_norm_legit": [2001, 2040], "_native_batch_norm_legit_funct": 2001, "_native_batch_norm_legit_no_train": [2001, 2040], "_native_multi_head_attent": 2001, "_ncf_unsqueez": 2001, "_ncf_view": 2001, "_neg_view": 2001, "_neg_view_copi": 2001, "_nested_from_pad": 2001, "_nested_from_padded_and_nested_exampl": 2001, "_nested_tensor_from_mask": 2001, "_nested_tensor_from_mask_left_align": 2001, "_nested_tensor_from_tensor_list": 2001, "_nested_tensor_s": 2001, "_nested_tensor_softmax_with_shap": 2001, "_nested_tensor_storage_offset": 2001, "_nested_tensor_strid": 2001, "_nested_view_from_buff": 2001, "_nested_view_from_buffer_copi": 2001, "_new_zeros_with_same_feature_meta": 2001, "_nnpack_avail": 2001, "_nnpack_spatial_convolut": 2001, "_no_grad_embedding_renorm": 2001, "_no_grad_fil": 2001, "_no_grad_norm": 2001, "_no_grad_uniform": 2001, "_no_grad_zero": 2001, "_pack_sequ": 2001, "_pad_circular": 2001, "_pad_enum": 2001, "_pdist_forward": [2001, 2040], "_pin_memori": 2001, "_prelu_kernel": 2001, "_propagate_xla_data": 2001, "_remove_batch_dim": 2001, "_reshape_alia": 2001, "_reshape_alias_copi": 2001, "_reshape_copi": 2001, "_resize_output": 2001, "_rowwise_prun": 2001, "_saturate_weight_to_fp16": 2001, "_scaled_dot_product_attention_math": 2001, "_scaled_dot_product_efficient_attent": 2001, "_scaled_dot_product_flash_attent": 2001, "_scaled_dot_product_flash_attention_for_cpu": 2001, "_scaled_mm": 2001, "_size_if_not_equ": 2001, "_slow_conv2d_forward": 2001, "_sobol_engine_draw": 2001, "_sobol_engine_ff": 2001, "_sobol_engine_initialize_st": 2001, "_sobol_engine_scrambl": 2001, "_softmax": [2001, 2016, 2040], "_sparse_addmm": 2001, "_sparse_broadcast_to": 2001, "_sparse_broadcast_to_copi": 2001, "_sparse_bsc_tensor_unsaf": 2001, "_sparse_bsr_tensor_unsaf": 2001, "_sparse_compressed_tensor_unsaf": 2001, "_sparse_coo_tensor_unsaf": 2001, "_sparse_coo_tensor_with_dim": 2001, "_sparse_coo_tensor_with_dims_and_tensor": 2001, "_sparse_csc_tensor_unsaf": 2001, "_sparse_csr_prod": 2001, "_sparse_csr_sum": 2001, "_sparse_csr_tensor_unsaf": 2001, "_sparse_log_softmax": 2001, "_sparse_mask_project": 2001, "_sparse_mm": 2001, "_sparse_mm_reduce_impl": 2001, "_sparse_semi_structured_linear": 2001, "_sparse_softmax": 2001, "_sparse_sparse_matmul": 2001, "_sparse_sum": 2001, "_spdiag": 2001, "_standard_gamma_grad": 2001, "_tensor_to_list": 2001, "_test_ambiguous_default": 2001, "_test_autograd_multiple_dispatch": 2001, "_test_autograd_multiple_dispatch_view": 2001, "_test_autograd_multiple_dispatch_view_copi": 2001, "_test_check_tensor": 2001, "_test_functorch_fallback": 2001, "_test_optional_filled_intlist": 2001, "_test_optional_floatlist": 2001, "_test_optional_intlist": 2001, "_test_serialization_subcmul": 2001, "_test_string_default": 2001, "_test_warn_in_autograd": 2001, "_thnn_fused_gru_cel": 2001, "_thnn_fused_lstm_cel": 2001, "_to_copi": [2001, 2040], "_to_cpu": 2001, "_to_dens": 2001, "_to_spars": 2001, "_to_sparse_bsc": 2001, "_to_sparse_bsr": 2001, "_to_sparse_csc": 2001, "_to_sparse_csr": 2001, "_to_sparse_semi_structur": 2001, "_transform_bias_rescale_qkv": 2001, "_transformer_encoder_layer_fwd": 2001, "_trilinear": 2001, "_triton_multi_head_attent": 2001, "_triton_scaled_dot_attent": 2001, "_unpack_du": 2001, "_unsafe_index": 2001, "_unsafe_index_put": 2001, "_unsafe_view": 2001, "_unwrap_opt": 2001, "_upsample_bicubic2d_aa": 2001, "_upsample_bilinear2d_aa": 2001, "_upsample_nearest_exact1d": 2001, "_upsample_nearest_exact2d": 2001, "_upsample_nearest_exact3d": 2001, "_use_cudnn_ctc_loss": 2001, "_use_cudnn_rnn_flatten_weight": 2001, "_validate_compressed_sparse_indic": 2001, "_validate_sparse_bsc_tensor_arg": 2001, "_validate_sparse_bsr_tensor_arg": 2001, "_validate_sparse_compressed_tensor_arg": 2001, "_validate_sparse_coo_tensor_arg": 2001, "_validate_sparse_csc_tensor_arg": 2001, "_validate_sparse_csr_tensor_arg": 2001, "_values_copi": 2001, "_weight_int4pack_mm": 2001, "_weight_norm_interfac": 2001, "capit": 2001, "confirmed_by_own": [2001, 2011], "convolution_overrid": 2001, "copy_sparse_to_spars": 2001, "endswith": 2001, "expandtab": 2001, "fake_quantize_per_channel_affine_cachemask": 2001, "fake_quantize_per_tensor_affine_cachemask": 2001, "fill_diagon": 2001, "glu_jvp": 2001, "has_torch_funct": [2001, 2046], "is_non_overlapping_and_dens": 2001, "is_own": [2001, 2011], "is_strides_like_format": 2001, "isalnum": 2001, "isalpha": 2001, "isdecim": 2001, "isdigit": 2001, "isidentifi": 2001, "islow": 2001, "isnumer": 2001, "isprint": 2001, "isspac": 2001, "istitl": 2001, "isupp": 2001, "lift_fresh": 2001, "ljust": 2001, "local_valu": [2001, 2004, 2011], "log_sigmoid_forward": 2001, "lstrip": 2001, "matrix_h": 2001, "nll_loss2d_forward": 2001, "nll_loss_forward": 2001, "normal_funct": 2001, "owner_nam": [2001, 2011], "percentformat": 2001, "quantized_gru": 2001, "quantized_lstm": 2001, "resize_as_spars": 2001, "rfind": 2001, "rindex": 2001, "rjust": 2001, "rpartit": 2001, "rsplit": 2001, "rstrip": 2001, "set_data": 2001, "slow_conv3d_forward": 2001, "sparse_res": 2001, "sparse_resize_and_clear": 2001, "splitlin": 2001, "swapcas": 2001, "sym_numel": [2001, 2040], "sym_storage_offset": [2001, 2040], "sym_strid": [2001, 2040], "unique_dim_consecut": 2001, "zfill": 2001, "_allgather_bas": 2001, "_reduce_scatter_bas": 2001, "allgath": 2001, "allgather_coalesc": 2001, "allgather_into_tensor_coalesc": 2001, "allreduce_coalesc": 2001, "alltoal": 2001, "alltoall_bas": 2001, "recv_any_sourc": 2001, "debugprim": 2001, "load_tensor": 2001, "_alloc_from_pool": 2001, "_mm_plus_mm": 2001, "_reinterpret_tensor": 2001, "accumulate_grad": 2001, "_mkl_linear": 2001, "_mkl_reorder_linear_weight": 2001, "_convolution_pointwis": 2001, "_convolution_transpose_pointwis": 2001, "_is_mkldnn_acl_support": 2001, "_is_mkldnn_bf16_support": 2001, "_is_mkldnn_fp16_support": 2001, "_linear_pointwis": 2001, "_reorder_convolution_transpose_weight": 2001, "_reorder_convolution_weight": 2001, "_reorder_linear_weight": 2001, "_reorder_mkldnn_rnn_layer_weight": 2001, "mkldnn_prepack": 2001, "conv2d_run": 2001, "qconv1d_pointwis": 2001, "qconv2d_pointwis": 2001, "qconv3d_pointwis": 2001, "qconv_prepack": 2001, "qlinear_pointwis": 2001, "qlinear_prepack": 2001, "conv2d_clamp_prepack": 2001, "conv2d_clamp_run": 2001, "conv2d_transpose_clamp_prepack": 2001, "conv2d_transpose_clamp_run": 2001, "linear_clamp_prepack": 2001, "linear_clamp_run": 2001, "unpack_prepacked_sizes_conv2d": 2001, "unpack_prepacked_sizes_linear": 2001, "addstatvalu": 2001, "autogradadd": 2001, "autogradallnonzero": 2001, "autogradallzero": 2001, "autogradanynonzero": 2001, "autogradzero": 2001, "bailout": [2001, 2033], "bailouttempl": 2001, "broadcastmkldnntensor": 2001, "broadcasts": 2001, "chunksiz": 2001, "constantmkldnntensor": 2001, "differentiablegraph": 2001, "enumnam": 2001, "enumvalu": 2001, "fallbackgraph": 2001, "fusedconcat": 2001, "fusiongroup": 2001, "ifthenels": 2001, "ignoredpythonop": 2001, "mkldnnclamp": 2001, "mkldnnhardsigmoid": 2001, "mkldnnhardswish": 2001, "mkldnnhardtanh": 2001, "mkldnnlayernorm": 2001, "mkldnnscalarmul": 2001, "mmbatchsid": 2001, "mmtreereduc": 2001, "modulecontainerindex": 2001, "numtotensor": 2001, "raiseexcept": 2001, "reductions": 2001, "requiresgradcheck": 2001, "staticruntimecopyout": 2001, "staticsubgraph": 2001, "stringindex": 2001, "tensorexprdynamicgroup": 2001, "tensorexprdynamicguard": 2001, "tensorexprgroup": 2001, "timepoint": 2001, "tupleindex": 2001, "tupleunpack": 2001, "varconcat": 2001, "varstack": 2001, "awaitable_nowait": 2001, "awaitable_wait": 2001, "is_cpu": [2001, 2035], "is_ipu": [2001, 2035], "is_mkldnn": [2001, 2035], "is_mp": [2001, 2035], "is_mtia": 2001, "is_nest": [2001, 2035], "is_ort": [2001, 2035], "is_quant": [2001, 2035], "is_vulkan": [2001, 2035], "is_xla": [2001, 2035], "is_xpu": [2001, 2035], "onednnfusiongroup": 2001, "onednnfusionguard": 2001, "profile_ivalu": 2001, "rangelist": 2001, "rpc_remot": 2001, "unchecked_unwrap_opt": 2001, "bessel_i0": [2001, 2040], "bessel_i1": [2001, 2040], "bessel_j0": [2001, 2016, 2040], "bessel_j1": [2001, 2016, 2040], "broadcast_in_dim": [2001, 2040], "cbrt": [2001, 2040], "collapse_view": [2001, 2040], "convert_element_typ": [2001, 2040], "copy_strid": [2001, 2040], "copy_to": [2001, 2040], "device_put": [2001, 2040], "erf_inv": [2001, 2040], "erfcx": [2001, 2016, 2040], "fft_c2c": [2001, 2040], "fft_c2r": [2001, 2040], "fft_r2c": [2001, 2040], "iota": [2001, 2040], "maximum_valu": [2001, 2040], "minimum_valu": [2001, 2040], "ndtri": [2001, 2016, 2040], "rev": [2001, 2040], "shift_left": [2001, 2040], "shift_right_arithmet": [2001, 2040], "slice_in_dim": [2001, 2040], "spherical_bessel_j0": [2001, 2016, 2040], "split_dim": [2001, 2040], "view_of": [2001, 2040], "view_of_dtyp": [2001, 2040], "xor_sum": [2001, 2040], "_call_end_callbacks_on_jit_fut": 2001, "_record_function_ent": 2001, "_record_function_enter_new": 2001, "_record_function_exit": 2001, "_bfloat16quantizedtofloat": 2001, "_floattobfloat16quant": 2001, "add_out": 2001, "add_relu_out": 2001, "add_scalar_out": 2001, "add_scalar_relu": 2001, "add_scalar_relu_out": 2001, "batch_norm1d": 2001, "batch_norm1d_relu": 2001, "batch_norm2d": 2001, "batch_norm2d_relu": 2001, "batch_norm3d": 2001, "batch_norm3d_relu": 2001, "batch_norm_relu": 2001, "cat_out": 2001, "cat_relu": 2001, "cat_relu_out": 2001, "conv1d_dynam": 2001, "conv1d_prepack": 2001, "conv1d_unpack": 2001, "conv2d_add": 2001, "conv2d_add_relu": 2001, "conv2d_dil": 2001, "conv2d_dynam": 2001, "conv2d_group": 2001, "conv2d_output_pad": 2001, "conv2d_pad": 2001, "conv2d_strid": 2001, "conv2d_transpos": 2001, "conv2d_unpack": 2001, "conv2d_unpack_s": 2001, "conv3d_dil": 2001, "conv3d_dynam": 2001, "conv3d_group": 2001, "conv3d_output_pad": 2001, "conv3d_pad": 2001, "conv3d_strid": 2001, "conv3d_transpos": 2001, "conv3d_unpack": 2001, "conv_prepack": 2001, "conv_transpose1d_dynam": 2001, "conv_transpose1d_unpack": 2001, "conv_transpose2d_dil": 2001, "conv_transpose2d_dynam": 2001, "conv_transpose2d_group": 2001, "conv_transpose2d_output_pad": 2001, "conv_transpose2d_pad": 2001, "conv_transpose2d_strid": 2001, "conv_transpose2d_transpos": 2001, "conv_transpose2d_unpack": 2001, "conv_transpose3d_dil": 2001, "conv_transpose3d_dynam": 2001, "conv_transpose3d_group": 2001, "conv_transpose3d_output_pad": 2001, "conv_transpose3d_pad": 2001, "conv_transpose3d_strid": 2001, "conv_transpose3d_transpos": 2001, "conv_transpose3d_unpack": 2001, "conv_unpack": 2001, "embedding_4bit": 2001, "embedding_bag_2bit_prepack": 2001, "embedding_bag_2bit_rowwise_offset": 2001, "embedding_bag_2bit_unpack": 2001, "embedding_bag_4bit": 2001, "embedding_bag_4bit_prepack": 2001, "embedding_bag_4bit_rowwise_offset": 2001, "embedding_bag_4bit_unpack": 2001, "embedding_bag_byt": 2001, "embedding_bag_byte_prepack": 2001, "embedding_bag_byte_rowwise_offset": 2001, "embedding_bag_byte_unpack": 2001, "embedding_bag_prepack": 2001, "embedding_bag_unpack": 2001, "embedding_byt": 2001, "linear_dynamic_fp16": 2001, "linear_leaky_relu": 2001, "linear_relu_dynam": 2001, "linear_relu_dynamic_fp16": 2001, "linear_tanh": 2001, "linear_unpack": 2001, "linear_unpack_fp16": 2001, "linear_with_input_q_dq_qweight_dq_output_fp32": 2001, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 2001, "make_quantized_cell_param": 2001, "make_quantized_cell_params_dynam": 2001, "make_quantized_cell_params_fp16": 2001, "mul_out": 2001, "mul_relu": 2001, "mul_relu_out": 2001, "mul_scalar_out": 2001, "mul_scalar_relu": 2001, "mul_scalar_relu_out": 2001, "quantized_gru_cell_dynam": 2001, "quantized_lstm_cell_dynam": 2001, "quantized_rnn_relu_cell_dynam": 2001, "quantized_rnn_tanh_cell_dynam": 2001, "rngprim": 2001, "philox_rand": 2001, "qlinear": 2001, "qlinear_dynam": 2001, "qlinear_relu": 2001, "qlinear_relu_dynam": 2001, "qlinear_unpack": 2001, "static_runtim": 2001, "vartupleunpack": 2001, "clamp_nan_to_num": 2001, "create_owned_ref": 2001, "dequantize_copi": 2001, "dict_unpack": 2001, "expand_dims_copi": 2001, "flatten_copi": 2001, "fused_equally_split": 2001, "reshape_copi": 2001, "select_tensor": 2001, "signed_log1p": 2001, "to_copi": 2001, "to_maybe_copy_out": 2001, "var1": 2002, "var2": 2002, "bias_param": 2002, "lbfg": 2002, "adadelta": 2002, "adamax": 2002, "asgd": 2002, "nadam": 2002, "radam": 2002, "rmsprop": 2002, "rprop": 2002, "reducelronplateau": 2002, "multisteplr": 2002, "swa_util": 2002, "averagedmodel": 2002, "swalr": 2002, "update_bn": 2002, "optima": 2002, "polyak": 2002, "averaged_model": 2002, "multi_avg_fn": 2002, "get_ema_multi_avg_fn": 2002, "textrm": 2002, "update_paramet": 2002, "avg_fn": 2002, "_foreach": 2002, "ema_model": 2002, "ema_avg": 2002, "averaged_model_paramet": 2002, "model_paramet": 2002, "num_averag": 2002, "swa_schedul": 2002, "anneal_epoch": 2002, "swa_lr": 2002, "swa_model": 2002, "cosineannealinglr": 2002, "swa_start": 2002, "test_input": 2002, "secur": 2003, "unpackag": 2003, "exercis": 2003, "unzip": 2003, "my_packag": 2003, "freeli": 2003, "94304870911616": 2003, "94304900784016": 2003, "extern_modul": 2003, "model_1": 2003, "myzip": 2003, "file_byt": 2003, "writestr": 2003, "new_file_byt": 2003, "vim": 2003, "vimrc": 2003, "bufreadcmd": 2003, "brows": 2003, "amatch": 2003, "vi": 2003, "packageimport": 2003, "queryabl": 2003, "glob": 2003, "packageexport": 2003, "pe": 2003, "save_pickl": 2003, "has_fil": 2003, "importer_file_structur": 2003, "package_a": 2003, "get_rdep": 2003, "all_path": 2003, "dependency_graph_str": 2003, "save_text": 2003, "save_binari": 2003, "my_resourc": 2003, "config_stuff": 2003, "raw_data": 2003, "my_byt": 2003, "complementari": [2003, 2016], "load_pickl": 2003, "load_text": 2003, "load_binari": 2003, "my_tensor": 2003, "__reduce_package__": 2003, "my_str": 2003, "time_import": 2003, "time_export": 2003, "pickler": 2003, "persistent_id": 2003, "persistent_load": 2003, "generated_module_nam": 2003, "get_unique_id": 2003, "clock_gettim": 2003, "unpackage_foo": 2003, "depickl": 2003, "foo_1": 2003, "foo_2": 2003, "foo_packag": 2003, "foo_collect": 2003, "foo1": 2003, "foo2": 2003, "imported_foo": 2003, "9857706": 2003, "650140837": 2003, "652698385": 2003, "__torch_package__": 2003, "is_in_packag": 2003, "userexcept": 2003, "unpackageableexcept": 2003, "loaded_modul": 2003, "import_modul": 2003, "save_source_str": 2003, "save_modul": 2003, "textwrap": 2003, "dedent": 2003, "my_funct": 2003, "is_packag": 2003, "importlib": 2003, "my_pickl": 2003, "get_my_resourc": 2003, "read_text": 2003, "torch_package_import": 2003, "get_my_pickl": 2003, "is_from_packag": 2003, "stdlib": 2003, "my_test": 2003, "f2": [2003, 2004], "sys_import": 2003, "script_model": 2003, "mixed_model": 2003, "python_model_with_scripted_submodul": 2003, "loaded_script": 2003, "loaded_mix": 2003, "convention": 2003, "94286146172688": 2003, "94286146172784": 2003, "consult": [2003, 2033], "essai": 2003, "another_packag": 2003, "pickletool": 2003, "ast": 2003, "deni": 2003, "my_export": 2003, "my_interned_modul": 2003, "package_export": 2003, "my_externed_modul": 2003, "my_mocked_modul": 2003, "unwant": [2003, 2020], "hodg": 2003, "podg": 2003, "bazel": 2003, "buck": 2003, "my_class_inst": 2003, "imported_myclass": 2003, "okai": 2003, "torch_package_0": 2003, "handle_me_this_wai": 2003, "inadvert": 2003, "pun": 2003, "packagingerror": 2003, "dependency_graph": 2003, "emptymatcherror": 2003, "allow_empti": 2003, "_sysimport": 2003, "hermet": 2003, "scan": 2003, "orderedimport": 2003, "add_depend": 2003, "graphviz": 2003, "lang": 2003, "denied_modul": 2003, "my_subpackag": 2003, "digraph": 2003, "externed_modul": 2003, "interned_modul": 2003, "mocked_modul": 2003, "register_extern_hook": 2003, "register_intern_hook": 2003, "register_mock_hook": 2003, "myobject": 2003, "save_source_fil": 2003, "file_or_directori": 2003, "my_subsubpackag": 2003, "file_or_buff": 2003, "module_allow": 2003, "pytorchfileread": 2003, "python_vers": 2003, "is_dir": 2003, "gpipe": 2004, "suffer": 2004, "allevi": [2004, 2035], "microbatch": 2004, "bubbl": 2004, "except_last": 2004, "deferred_batch_norm": 2004, "torchgpip": 2004, "withdevic": 2004, "micro": 2004, "fc": [2004, 2006], "init_rpc": [2004, 2011, 2012], "output_rref": 2004, "fed": [2004, 2020], "nochunk": 2004, "resnext": 2004, "till": 2004, "skippabl": 2004, "1to3": 2004, "f1": 2004, "layer2": 2004, "layer3": 2004, "skip_1to3": 2004, "f3": 2004, "alic": 2004, "bob": 2004, "carol": 2004, "stashstashpop": 2004, "f_alic": 2004, "f_bob": 2004, "verify_skipp": 2004, "unmatch": [2004, 2025], "fairscal": 2004, "_kinetoprofil": 2005, "profileract": 2005, "export_memory_timelin": 2005, "add_metadata": 2005, "add_metadata_json": 2005, "unaggreg": 2005, "suffix": [2005, 2020, 2021], "png": 2005, "gzip": 2005, "numbyt": 2005, "increment_vers": 2005, "_memory_profil": 2005, "export_stack": 2005, "self_cuda_time_tot": 2005, "flamegraph": 2005, "brendangregg": 2005, "pl": 2005, "countnam": 2005, "perf_viz": 2005, "svg": 2005, "on_trace_readi": 2005, "record_and_sav": 2005, "tensorboard_trace_handl": 2005, "dir_nam": 2005, "logdir": [2005, 2020], "plugin": [2005, 2020, 2031], "code_to_profil": 2005, "row_limit": 2005, "trace_handl": 2005, "test_trace_": 2005, "step_num": 2005, "code_iteration_to_profil": 2005, "mtia": 2005, "skip_first": 2005, "worker_nam": [2005, 2011], "use_gzip": 2005, "range_push": 2005, "range_pop": 2005, "4x": 2006, "88": [2006, 2039], "14k": 2006, "domin": 2006, "previous_layer_fp32": 2006, "linear_fp32": 2006, "activation_fp32": 2006, "next_layer_fp32": 2006, "linear_weight_fp32": 2006, "linear_int8_w_fp32_inp": 2006, "linear_weight_int8": 2006, "ptdq": 2006, "model_fp32": 2006, "model_int8": 2006, "quantize_dynam": 2006, "input_fp32": 2006, "previous_layer_int8": 2006, "linear_with_activation_int8": 2006, "next_layer_int8": 2006, "ptsq": 2006, "minmax": 2006, "l2norm": 2006, "model_fp32_fus": 2006, "fuse_modul": [2006, 2007], "model_fp32_prepar": 2006, "fq": 2006, "prepare_qat": 2006, "training_loop": 2006, "requant": 2006, "linear1": 2006, "custom_qconfig": 2006, "fxptq": 2006, "model_fp": 2006, "usermodel": 2006, "model_to_quant": 2006, "default_dynamic_qconfig": 2006, "model_prepar": 2006, "model_quant": 2006, "model_fus": 2006, "quantize_pt2": 2006, "prepare_pt2": 2006, "capture_pre_autograd_graph": 2006, "xnnpackquant": 2006, "get_symmetric_quantization_config": 2006, "shoud": 2006, "prepare_qat_pt2": 2006, "convert_pt2": 2006, "per_tensor_symmetr": [2006, 2009], "per_channel_symmetr": [2006, 2009], "per_channel_scal": 2006, "per_channel_zero_point": 2006, "quantized_tensor": 2006, "qengin": 2006, "in4": 2006, "tensorrt": [2006, 2026, 2031, 2035], "fx2trt": 2006, "float_modul": [2006, 2024], "staticquantcustommodul": 2006, "observed_modul": 2006, "default_qconfig": [2006, 2025], "vnni": 2006, "test_quantized_op": 2006, "testquantizedop": 2006, "test_custom_module_lstm": 2006, "test_quantize_fx": 2006, "testquantizefx": 2006, "test_static_lstm": 2006, "some_oper": 2006, "e2": 2006, "thnn_conv2d_forward": 2006, "quantizedcpu": 2006, "some_qconfig": 2006, "linearpackedparam": 2006, "_modul": 2006, "prepare_orig": 2006, "quantized_orig": 2006, "scripted_quant": 2006, "fp32_op": 2007, "int8_op": 2007, "cooperlak": 2007, "audit": 2007, "op_fp32": 2007, "op_int8": 2007, "_numeric_suit": 2007, "_numeric_suite_fx": 2007, "0x7f466b704b20": 2008, "0x7f46559a9430": 2008, "0x7f46559a94c0": 2008, "num_tensor_args_to_observation_typ": 2008, "convbn1d": 2008, "0x7f4654cf6ca0": 2008, "reference_quantized_module_for_root": 2008, "fuse_convtranspose_bn": 2008, "0x7f4654cf6e50": 2008, "linearbn1d": 2008, "fuse_linear_bn": 2008, "0x7f4654cf6dc0": 2008, "convbn2d": 2008, "convbn3d": 2008, "bnrelu2d": 2008, "bnrelu3d": 2008, "input_type_to_index": 2008, "conv_fus": 2008, "convbnrelu1d": 2008, "convbnrelu2d": 2008, "convbnrelu3d": 2008, "convrelu1d": 2008, "convrelu3d": 2008, "0x7f46559a9550": 2008, "0x7f46559a9b80": 2008, "quint4x2": [2008, 2017, 2021, 2022], "embedding_op": 2008, "0x7f46559aca60": 2008, "00390625": 2008, "0x7f46559ac3a0": 2008, "0x7f46559ac550": 2008, "0x7f46559a9a60": 2008, "0x7f46559ac940": 2008, "0x7f46559451f0": 2008, "0x7f46559ac9d0": 2008, "0x7f46559a9d30": 2008, "linear_fus": 2008, "_sequential_wrapper2": 2008, "0x7f4672858430": 2008, "0x7f46559a9940": 2008, "0x7f4653fac820": 2008, "fuse_conv_bn_relu": 2008, "0x7f4654cf6d30": 2008, "0x7f4653fac8b0": 2008, "0x7f4653fac940": 2008, "0x7f4653fac9d0": 2008, "0x7f4653faca60": 2008, "0x7f4653facaf0": 2008, "0x7f4653facb80": 2008, "0x7f4653facc10": 2008, "0x7f4653facca0": 2008, "0x7f4653facd30": 2008, "0x7f4653facdc0": 2008, "0x7f46559a9af0": 2008, "0078125": 2008, "customconfig": 2009, "custom_module_config": 2009, "_caller": 2010, "_devices_kw": 2010, "slowli": 2010, "unind": 2010, "deivce_typ": 2010, "shortcom": 2011, "stitch": 2011, "rpc_backend_opt": 2011, "trainer3": 2011, "parameterserver2": 2011, "dash": [2011, 2013], "backendtyp": 2011, "rpcbackendopt": 2011, "rpcagent": 2011, "transmit": 2011, "calle": [2011, 2013], "_set_rpc_timeout": 2011, "worker0": 2011, "my_script_add": 2011, "wire": 2011, "fut2": 2011, "meth": 2011, "grace": 2011, "userrref": [2011, 2013], "async_execut": 2011, "paus": 2011, "outmost": 2011, "async_add_chain": 2011, "worker2": 2011, "script_add": 2011, "async_add": 2011, "asyncexecutionclass": 2011, "static_async_add": 2011, "class_async_add": 2011, "ret_fut": 2011, "bound_async_add": 2011, "rpc_timeout": 2011, "incid": [2011, 2013], "nvlink": 2011, "multiplex": 2011, "tensorpiperpcbackendopt": 2011, "num_worker_thread": 2011, "device_map": 2011, "_transport": 2011, "tensorpipeag": 2011, "set_device_map": 2011, "intermitt": 2011, "backoff": 2011, "pyrref": 2011, "type_hint": 2011, "_distributed_rpc": 2011, "dist_autograd_ctx_id": 2011, "ctx_id": 2011, "ownerrref": [2011, 2013], "remote_modul": 2011, "forward_async": 2011, "remote_devic": 2011, "workernam": 2011, "ps0": 2011, "remote_linear_modul": 2011, "get_module_rref": 2011, "remote_paramet": 2011, "my_add": [2012, 2046], "t4": 2012, "t5": 2012, "autograd_message_id": 2012, "autograd_context_id": 2012, "send1": 2012, "kickoff": 2012, "recv2": 2012, "heard": 2012, "send2": 2012, "recv1": 2012, "dist_autograd_simpl": 2012, "random_tensor": 2012, "_run_process": 2012, "dst_rank": 2012, "dst_name": 2012, "run_process": 2012, "rrefid": 2013, "transient": 2013, "udf": 2013, "deliveri": 2013, "knowledg": 2013, "danger": 2013, "ancestor": 2013, "trickier": 2013, "forkid": 2013, "ack": 2013, "solid": 2013, "followup": 2013, "lil": 2015, "stark": 2015, "9093": 2015, "1411": 2015, "7568": 2015, "9589": 2015, "2794": 2015, "catastroph": 2015, "9900": 2015, "metadata_mask": 2015, "rce": 2015, "rc": 2015, "62": 2015, "to_sparse_semi_structur": 2015, "1x4": 2015, "16x16": 2015, "a_spars": 2015, "sparsesemistructuredtensor": 2015, "000": 2015, "400": 2015, "s2": 2015, "plain_dim_s": 2015, "lp64": 2015, "280": 2015, "310": 2015, "sp": 2015, "9078": 2015, "conception": 2015, "sparsesemistructur": 2015, "lobpcg": 2015, "geneig": 2015, "pca_lowrank": 2015, "kindli": 2015, "airy_ai": 2016, "airi": 2016, "onward": 2016, "9635": 2016, "entr": 2016, "3466": 2016, "int_": 2016, "8427": 2016, "0561": 2016, "4769": 2016, "9213": 2016, "8858": 2016, "7683": 2016, "7481": 2016, "2920": 2016, "int_0": 2016, "gammaln": 2016, "a1": 2016, "a2": 2016, "3528": 2016, "5665": 2016, "6472": 2016, "4335": 2016, "2650": 2016, "2661": 2016, "2796": 2016, "8808": 2016, "3019": 2016, "4658": 2016, "3085": 2016, "2430": 2016, "2070": 2016, "i1": 2016, "5652": 2016, "9534": 2016, "7595": 2016, "2153": 2016, "log_ndtr": 2016, "_ndtr": 2016, "6077": 2016, "7832": 2016, "841": 2016, "6931": 2016, "1728": 2016, "023": 2016, "9331": 2016, "6486": 2016, "1523": 2016, "6516": 2016, "6352": 2016, "6131": 2016, "7169": 2016, "6261": 2016, "displaystyl": 2016, "undefiend": 2016, "6835": 2016, "8474": 2016, "1929": 2016, "7162": 2016, "4180": 2016, "3928": 2016, "4007": 2016, "7586": 2016, "3901": 2016, "5049": 2016, "ndtr": 2016, "0228": 2016, "1587": 2016, "9772": 2016, "9987": 2016, "2p": 2016, "64493": 2016, "4041": 2016, "8288": 2016, "4939": 2016, "4091": 2016, "8863": 2016, "771": 2016, "scaled_modified_bessel_k0": 2016, "scaled_modified_bessel_k1": 2016, "2948": 2016, "0267": 2016, "1566": 2016, "9186": 2016, "8631": 2016, "0259": 2016, "1300": 2016, "spheric": 2016, "xlog1pi": 2016, "3863": 2016, "1972": 2016, "6094": 2016, "2189": 2016, "8283": 2016, "7726": 2016, "0986": 2016, "1589": 2016, "hurwitz": 2016, "6449": 2016, "0823": 2016, "untyp": 2017, "wrap_storag": 2017, "complex_doubl": 2017, "from_buff": 2017, "is_hpu": 2017, "pickle_storage_typ": 2017, "byteswap": 2017, "posix": 2017, "shm_unlink": 2017, "unlink": 2017, "quint2x4": [2017, 2022], "twelv": 2018, "halftensor": [2018, 2021], "bfloat16tensor": [2018, 2021], "chartensor": [2018, 2021], "shorttensor": [2018, 2021], "binary16": [2018, 2021], "significand": [2018, 2021], "float_tensor": 2018, "double_tensor": 2018, "complex_float_tensor": 2018, "complex_double_tensor": 2018, "int_tensor": 2018, "long_tensor": 2018, "uint_tensor": 2018, "bool_tensor": 2018, "long_zerodim": 2018, "int_zerodim": 2018, "cuda1": 2018, "channels_last_3d": 2018, "ndhwc": 2018, "blogpost": 2019, "totensor": 2020, "trainset": 2020, "mnist": 2020, "mnist_train": 2020, "trainload": 2020, "grayscal": 2020, "make_grid": 2020, "add_imag": 2020, "add_graph": 2020, "clutter": 2020, "n_iter": 2020, "purge_step": 2020, "max_queu": 2020, "flush_sec": 2020, "filename_suffix": 2020, "current_datetime_hostnam": 2020, "exp1": 2020, "global_step": 2020, "purg": 2020, "event_file_writ": 2020, "eventfilewrit": 2020, "may04_22": 2020, "54_": 2020, "macbook": 2020, "my_experi": 2020, "lr_0": 2020, "1_batch_16": 2020, "locallr_0": 2020, "scalar_valu": 2020, "walltim": 2020, "new_styl": 2020, "double_precis": 2020, "blobnam": 2020, "simple_valu": 2020, "main_tag": 2020, "tag_scalar_dict": 2020, "run_14h": 2020, "xsinx": 2020, "xcosx": 2020, "tanx": 2020, "add_histogram": 2020, "max_bin": 2020, "fd": 2020, "img_tensor": 2020, "dataformat": 2020, "chw": 2020, "hwc": 2020, "hw": 2020, "wh": 2020, "3xhxw": 2020, "img_hwc": 2020, "my_imag": 2020, "my_image_hwc": 2020, "img_batch": 2020, "my_image_batch": 2020, "add_figur": 2020, "add_video": 2020, "vid_tensor": 2020, "fp": 2020, "moviepi": 2020, "add_audio": 2020, "snd_tensor": 2020, "sample_r": 2020, "44100": 2020, "add_text": 2020, "text_str": 2020, "input_to_model": 2020, "use_strict_trac": 2020, "add_embed": 2020, "label_img": 2020, "metadata_head": 2020, "projector": 2020, "kwlist": 2020, "add_pr_curv": 2020, "num_threshold": 2020, "pr_curv": 2020, "add_custom_scalar": 2020, "chart": 2020, "categorynam": 2020, "chartnam": 2020, "listofproperti": 2020, "multilin": 2020, "taiwan": 2020, "twse": 2020, "0050": 2020, "2330": 2020, "dow": 2020, "aaa": 2020, "bbb": 2020, "ccc": 2020, "nasdaq": 2020, "add_mesh": 2020, "config_dict": 2020, "threej": 2020, "vertex": 2020, "number_of_vertic": 2020, "vertices_tensor": 2020, "colors_tensor": 2020, "faces_tensor": 2020, "my_mesh": 2020, "add_hparam": 2020, "hparam_dict": 2020, "metric_dict": 2020, "hparam_domain_discret": 2020, "run_nam": 2020, "hparam": 2020, "bsize": 2020, "uint16": [2021, 2035], "uint32": [2021, 2035], "uint64": [2021, 2035], "e4m3": 2021, "e5m2": 2021, "asid": 2021, "58734": 2021, "2209": 2021, "05433": 2021, "tini": [2021, 2022, 2039, 2048], "_like": 2021, "allow_subclass": 2022, "check_devic": 2022, "check_layout": 2022, "6e": 2022, "3e": 2022, "assert_equ": 2022, "000000000000001e": 2022, "1e0": 2022, "argh": 2022, "nfooter": 2022, "66": 2022, "footer": 2022, "exclude_zero": 2022, "1205": 2022, "2282": 2022, "6380": 2022, "default_gener": 2023, "click": [2023, 2042, 2043], "is_integ": 2023, "data_dependent_output": 2023, "dynamic_output_shap": 2023, "inplace_view": 2023, "needs_fixed_stride_ord": 2023, "nondeterministic_bitwis": 2023, "nondeterministic_seed": 2023, "pt2_compliant_tag": 2023, "compare_weight": 2024, "float_dict": 2024, "quantized_dict": 2024, "wt_compare_dict": 2024, "qmodel": 2024, "compute_error": 2024, "weight_dict": 2024, "get_logger_dict": 2024, "shadowlogg": 2024, "outputlogg": [2024, 2025], "target_dict": 2024, "q_modul": 2024, "logger_cl": [2024, 2025], "prepare_model_with_stub": 2024, "module_swap_list": 2024, "q_model": 2024, "ob_dict": 2024, "compare_model_stub": 2024, "quantizablebasicblock": 2024, "get_matching_activ": 2024, "act_dict": 2024, "prepare_model_output": 2024, "compare_model_output": 2024, "act_compare_dict": 2024, "weight_comparison": 2025, "extract_weight": 2025, "sqnr": 2025, "extend_logger_results_with_comparison": 2025, "compute_sqnr": 2025, "mp_n": 2025, "mq_n": 2025, "add_logg": 2025, "act_comparison": 2025, "extract_logger_info": 2025, "mp_shadows_mq": 2025, "add_shadow_logg": 2025, "shadow_act_comparison": 2025, "extract_shadow_logger_info": 2025, "ref_node_nam": 2025, "prev_node_nam": 2025, "model_nam": 2025, "ref_nam": 2025, "prev_node_target_typ": 2025, "ref_node_target_typ": 2025, "results_typ": 2025, "index_within_arg": 2025, "index_of_arg": 2025, "qconfig_str": 2025, "outputcomparisonlogg": 2025, "x_ref": 2025, "nstracer": 2025, "skipped_module_nam": 2025, "skipped_module_class": 2025, "model_name_a": 2025, "model_a": 2025, "model_name_b": 2025, "model_b": 2025, "base_name_to_sets_of_related_op": 2025, "unmatchable_types_map": 2025, "op_to_type_to_weight_extraction_fn": 2025, "nsresultstyp": 2025, "name_a": 2025, "name_b": 2025, "should_log_input": 2025, "model_a_with_logg": 2025, "model_b_with_logg": 2025, "model_name_to_use_for_layer_nam": 2025, "node_type_to_io_type_map": 2025, "model_a_shadows_b": 2025, "model_name_1": 2025, "model_name_2": 2025, "comparison_fn": 2025, "comparison_nam": 2025, "prepare_n_shadows_model": 2025, "qconfig_multi_map": 2025, "custom_prepare_fn": 2025, "custom_prepare_kwarg": 2025, "custom_trac": 2025, "args_kwargs_m": 2025, "op_m": 2025, "output_m": 2025, "op_m_n": 2025, "log_m_n": 2025, "log_m_0": 2025, "qconfig_n": 2025, "args_m": 2025, "op_m_prepared_with_qconfig_n": 2025, "out_m_n": 2025, "kwargs_m": 2025, "docblock": 2025, "loggers_set_en": 2025, "loggers_set_save_activ": 2025, "save_activ": 2025, "convert_n_shadows_model": 2025, "custom_convert_fn": 2025, "custom_convert_kwarg": 2025, "extract_results_n_shadows_model": 2025, "print_comparisons_n_shadows_model": 2025, "compute_normalized_l2_error": 2025, "compute_cosine_similar": 2025, "surfac": 2026, "openai": 2026, "ipex": 2026, "torch_tensorrt": 2026, "tvm": 2026, "apach": 2026, "openvino": 2026, "aotinductor": 2026, "dashboard": [2026, 2032, 2039], "nnmodul": 2026, "craft": 2027, "aot_compil": 2027, "batch_dim": 2027, "so_path": 2027, "aot_inductor": 2027, "output_path": 2027, "getcwd": 2027, "temporai": 2027, "model_container_runner_cuda": 2027, "model_container_runner_cpu": 2027, "aotimodelcontainerrunnercuda": 2027, "aotimodelcontainerrunnercpu": 2027, "kcuda": 2027, "kcpu": 2027, "aoti_runn": 2027, "runner": 2027, "cmakelist": 2027, "aoti_exampl": 2027, "cmake_minimum_requir": 2027, "fatal_error": 2027, "find_packag": 2027, "add_execut": 2027, "add_custom_command": 2027, "cmake_current_source_dir": 2027, "target_link_librari": 2027, "torch_librari": 2027, "set_properti": 2027, "cxx_standard": 2027, "cmake_prefix_path": 2027, "mkdir": 2027, "5184": 2027, "4462": 2027, "4611": 2027, "4744": 2027, "4811": 2027, "4938": 2027, "4193": 2027, "cudafloattyp": 2027, "4883": 2027, "4703": 2027, "simd": 2029, "isa": 2029, "amx": 2029, "collect_env": 2029, "avx512f": 2029, "avx512bw": 2029, "avx512_vnni": 2029, "amx_til": 2029, "amx_bf16": 2029, "amx_int8": 2029, "debut": 2030, "cachingalloc": 2030, "cudagraph_tre": 2030, "unintend": 2030, "prematur": 2030, "mark_step_begin": 2030, "footgun": [2030, 2034], "my_custom_backend": 2031, "f_opt": 2031, "my_compil": [2031, 2032, 2038], "torch_dynamo_backend": 2031, "your_modul": 2031, "minifi": [2031, 2035], "aot_autograd": 2031, "fw_compil": 2031, "bw_compil": 2031, "make_boxed_func": 2031, "model_opt": 2031, "0x7f1a894649a8": 2031, "mockmodul": 2031, "optimized_mod": 2031, "toy_exampl": [2031, 2032, 2035, 2038, 2045], "abs_1": [2031, 2032], "0x7f8d259298a0": 2031, "superior": 2031, "optimize_for_inference_compil": 2031, "code_to_acceler": 2031, "lookup_backend": 2031, "trt_compil": 2031, "inductor_compil": 2031, "523": 2032, "watch": 2032, "kaichao": 2032, "_dynamo_dynamic_indic": 2032, "utils_devic": 2032, "___skip_backend_check": 2032, "___current_backend": 2032, "___lookup_backend": 2032, "140355900538256": 2032, "check_tensor": 2032, "dispatchkeyset": 2032, "backendselect": 2032, "adinplaceorview": 2032, "autogradcpu": 2032, "recaptur": 2032, "decompil": 2032, "depyf": 2032, "__compiled_fn_0": 2032, "eval_with_kei": 2032, "0x7f9ca082f8a0": 2032, "load_fast": [2032, 2038], "load_glob": 2032, "load_method": 2032, "load_const": [2032, 2038], "binary_add": 2032, "binary_true_divid": 2032, "store_fast": 2032, "compare_op": 2032, "pop_jump_if_fals": 2032, "binary_multipli": [2032, 2038], "unpack_sequ": 2032, "__resume_at_30_1": 2032, "__resume_at_38_2": 2032, "__temp_1": 2032, "youkaichao": 2032, "__resume_at_": 2032, "jump_absolut": 2032, "resume_at": 2032, "eval_fram": 2032, "_debug_get_cache_entry_list": 2032, "__code__": 2032, "codetyp": 2032, "innermost_fn": 2032, "cache_entri": 2032, "check_fn": [2032, 2038], "code_part": 2032, "___guarded_cod": [2032, 2038], "___check_global_st": 2032, "140215810860528": 2032, "___check_tensor": [2032, 2038], "tensor_check_nam": 2032, "co_freevar": 2032, "__closure__": 2032, "___is_grad_en": 2032, "___are_deterministic_algorithms_en": 2032, "___is_torch_function_en": 2032, "value_a": 2032, "value_b": 2032, "__self__": 2032, "compiled_exampl": 2032, "get_cache_entri": 2032, "recompile_and_add_another_cache_entri": 2032, "recognit": 2033, "induct": 2033, "mark_dynam": 2033, "shapeenv": [2033, 2034], "reusabl": 2033, "plumb": 2033, "symnodeimpl": 2033, "python_symnod": 2033, "_meta_registr": 2033, "decomp": [2033, 2034], "primtorch": [2033, 2034], "apparatu": 2033, "precomput": 2033, "constrain_rang": 2033, "wherebi": 2033, "trash": 2034, "subclass_zoo": 2034, "bunch": 2034, "from_real_tensor": 2034, "fakeifi": 2034, "dispatch_devic": 2034, "ly": 2034, "derefer": 2034, "backtrac": 2034, "in_kernel_invocation_manag": 2034, "unwrap": 2034, "test_fake_tensor": 2034, "fake_mod": 2034, "fake_x": 2034, "fake_i": 2034, "fake_z": 2034, "_guard": 2034, "detect_fake_mod": 2034, "fake_arg": 2034, "maybe_disable_fake_tensor_mod": 2034, "nich": 2034, "faketensorprop": 2034, "fake_tensor_prop": 2034, "propagate_dont_convert_input": 2034, "fake_input": 2034, "real_tensor": 2034, "annoi": 2034, "somehow": 2034, "fakecopymod": 2034, "gave": 2034, "fakeif": 2034, "tension": 2034, "analys": 2034, "hardcod": 2034, "metaconvert": 2034, "die": 2034, "saroufim": 2035, "evalfram": 2035, "usercod": 2035, "rob": 2035, "diminish": 2035, "vast": 2035, "nopython": [2035, 2038, 2045], "250k": 2035, "aitempl": 2035, "aot_eag": [2035, 2045], "compile_tim": [2035, 2043, 2045], "torch_compile_debug": [2035, 2037], "troubl": [2035, 2036, 2045], "compileprofil": [2035, 2045], "profiler_model": [2035, 2045], "traffic": 2035, "frozen_toy_exampl": 2035, "multiprocessor": 2035, "some_fun": [2035, 2045], "insurmount": [2035, 2045], "woo": [2035, 2045], "out_guard": [2035, 2045], "ops_per_graph": [2035, 2045], "builtinvari": [2035, 2045], "constantvari": [2035, 2038, 2045], "generic_jump": [2035, 2045], "torchdynamo_dynamic_shap": 2035, "cv": 2035, "app": 2035, "unnecessarili": 2035, "cold": [2035, 2042], "visibli": 2035, "torchdynamo_repro_level": [2035, 2045], "bisect": [2035, 2045], "torchdynamo_repro_aft": [2035, 2045], "dramat": [2035, 2045], "capture_func_transform": 2035, "wrapper_fn": 2035, "my_fn": 2035, "some_list": 2035, "bad_fn": 2035, "pitfal": 2035, "_indices_from": 2035, "recarrai": 2035, "float128": 2035, "complex256": 2035, "esoter": 2035, "ufunc": 2035, "poly1d": 2035, "__array_wrap__": 2035, "ctype": 2035, "numpy_fn": 2035, "tweak": 2035, "wrap_numpi": 2035, "charg": 2035, "oop": 2035, "costli": 2035, "daunt": 2035, "diagnos": 2035, "tackl": 2035, "pinpoint": 2035, "discern": 2035, "trace_numpi": 2035, "_numpi": 2035, "uncommon": 2035, "finer": 2035, "a_fn": [2035, 2036], "aa_fn": [2035, 2036], "ab_fn": [2035, 2036], "handel": 2036, "unblock": 2036, "nnthi": 2036, "black": 2036, "nnnote": 2036, "screen": [2036, 2043], "b_fn": 2036, "white": 2036, "new_fn": 2037, "famou": 2037, "crunch": 2037, "torchinductor_": 2037, "your_usernam": 2037, "triton_meta": 2037, "i32": 2037, "mutated_arg_nam": 2037, "instance_descriptor": 2037, "divisible_by_16": 2037, "equal_to_1": 2037, "triton_": 2037, "in_ptr0": 2037, "out_ptr0": 2037, "xnumel": 2037, "xblock": 2037, "tl": 2037, "constexpr": 2037, "xoffset": 2037, "program_id": 2037, "xindex": 2037, "xmask": 2037, "tmp0": 2037, "tmp1": 2037, "tmp2": 2037, "v0": 2037, "opt_model": 2037, "timm": [2037, 2042], "huggingfac": [2037, 2042], "berttoken": 2037, "bertmodel": 2037, "uncas": 2037, "me": 2037, "encoded_input": 2037, "return_tensor": 2037, "trigonometri": 2037, "skim": 2037, "create_model": 2037, "resnext101_32x8d": 2037, "fn_foo": 2038, "grab": 2038, "dig": 2038, "hole": 2038, "neutral": 2038, "_pyinterpreterstate_setevalframefunc": 2038, "convert_fram": [2038, 2045], "convert_frame_assert": 2038, "gloss": 2038, "compiler_fn": 2038, "one_graph": 2038, "_convert_frame_assert": 2038, "frametyp": 2038, "f_code": 2038, "needless": 2038, "evict": 2038, "transform_code_object": 2038, "output_instruct": 2038, "guardedcod": 2038, "symbolic_loc": 2038, "f_local": 2038, "variablebuild": 2038, "_wrap": 2038, "variabletrack": 2038, "make_guard": 2038, "pump": 2038, "cool": 2038, "get_instruct": 2038, "124": 2038, "opnam": 2038, "argval": 2038, "starts_lin": 2038, "is_jump_target": 2038, "inst": 2038, "unimpl": 2038, "dozen": 2038, "symbolic_convert": [2038, 2045], "spoken": 2038, "quiet": 2038, "replace_guard": 2038, "add_guard": 2038, "behalf": 2038, "python_typ": 2038, "as_proxi": 2038, "as_python_proxi": 2038, "bookkeep": 2038, "flesh": 2038, "relianc": 2038, "build_tupl": 2038, "popn": 2038, "tuplevari": 2038, "pydoc": 2038, "tensorvari": 2038, "instructiontranslatorbas": 2038, "ctor": 2038, "guardsourc": 2038, "create_fn": 2038, "guard_sourc": 2038, "istyp": 2038, "guardbuild": 2038, "equals_match": 2038, "rangevari": 2038, "appar": 2038, "checkfunctionmanag": 2038, "compile_check_fn": 2038, "cacheentri": 2038, "create_cache_entri": 2038, "pyobject": 2038, "guarded_cod": 2038, "debug_null_check": 2038, "pyobject_getattrstr": 2038, "null_check": 2038, "pycodeobject": 2038, "sort_kei": 2038, "guard_nn_modul": 2038, "is_nn_modul": 2038, "local_build": 2038, "global_build": 2038, "___check_type_id": 2038, "94367738391392": 2038, "_eval_fram": 2038, "anew": 2038, "weak": 2038, "moduleinvalid": 2038, "torchinductor_unique_kernel_nam": 2039, "triton_poi_fused_cat_155": 2039, "poi": 2039, "torchinductor_benchmark_kernel": 2039, "har": 2039, "torchinductor_max_autotun": 2039, "mixnet_l": 2039, "timm_model": 2039, "torchinductor_shunt": 2039, "qz": 2039, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 2039, "shunting314": 2039, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 2039, "48efc83b12ec3ead950052e4a0220b10": 2039, "compiled_module_profil": 2039, "browser": [2039, 2043], "zoom": [2039, 2043, 2047], "distort": [2039, 2043], "densenet121": 2039, "69": 2039, "cutlass": 2039, "57": 2039, "ff": 2039, "justifi": 2039, "triton_red_fus": 2039, "__native_batch_norm_legit_functional_16": 2039, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 2039, "_adaptive_avg_pool2d_backward": 2040, "half_to_float": 2040, "no_stat": 2040, "start_step": 2040, "avg_pool2d_backward": 2040, "convolution_backward": 2040, "bias_siz": 2040, "output_mask": 2040, "scalar_mod": 2040, "tensor_mod": 2040, "embedding_dense_backward": 2040, "num_weight": 2040, "max_pool2d_with_indices_backward": 2040, "native_group_norm_backward": 2040, "rstd": 2040, "native_layer_norm_backward": 2040, "tensor_scalar": 2040, "tensor_tensor": 2040, "dim_int": 2040, "dim_intlist": 2040, "broadcast_dimens": 2040, "start_indic": 2040, "limit_indic": 2040, "start_index": 2040, "limit_index": 2040, "outer_length": 2040, "constabl": 2041, "_forward_pre_hook": 2041, "_backward_pre_hook": 2041, "_backward_hook": 2041, "_state_dict_hook": 2041, "load_": 2041, "avoiabl": 2041, "skip_nnmodule_hook_guard": 2041, "pre_backward": 2041, "warn_onc": 2041, "hui": 2042, "nightli": 2042, "night": 2042, "40gb": [2042, 2045], "2ghz": 2042, "torchbench": 2042, "trend": 2042, "droplist": 2042, "with_cudagraph": 2042, "toosl": 2043, "ncu": 2043, "model_c": 2043, "fwd_bwd": 2043, "scroll": 2043, "shortcut": 2043, "compiledfunct": 2043, "compiledfunctionbackward": 2043, "ac2g": 2043, "dropdown": 2043, "525": 2043, "_init_for_cuda_graph": 2043, "warmup_compil": 2043, "fn_c": 2043, "trace_compil": 2043, "synthet": 2043, "modelwithbreak": 2043, "create_sequenti": 2043, "mod1": 2043, "mod2": 2043, "mod3": 2043, "mod4": 2043, "trace_break": 2043, "sit": 2044, "replace_add_with_mul": 2044, "insert_relu_after_add": 2044, "new_relu_nod": 2044, "replaceaddwithmul": 2044, "transformed_graph_modul": 2044, "replaceaddwithmulsub": 2044, "mul_r": 2044, "removedetachpass": 2044, "args_map": 2044, "_schema": 2044, "kwarg_onli": 2044, "scalartotensorpass": 2044, "try_coerc": 2044, "replace_pattern": 2044, "replaced_pattern": 2044, "replace_pattern_with_filt": 2044, "replacedpattern": 2044, "passmanag": 2044, "pass_manag": 2044, "pm": 2044, "replace_add_with_div": 2044, "replace_div_with_mul": 2044, "run_checks_after_each_pass": 2044, "suppress_check_failur": 2044, "graph_module_out": 2044, "set_check": 2044, "check_div_target": 2044, "add_check": 2044, "subgraphmatch": 2044, "matcher_util": 2044, "match_output": 2044, "match_placehold": 2044, "remove_overlapping_match": 2044, "ignore_liter": 2044, "largemodel": 2044, "_bia": 2044, "large_model_graph": 2044, "patternmodel": 2044, "_weight_1": 2044, "_bias_1": 2044, "pattern_graph": 2044, "subgraph_match": 2044, "match_result": 2044, "internalmatch": 2044, "placeholder_nod": 2044, "returning_nod": 2044, "capabilitybasedpartition": 2044, "l34": 2044, "operator_support": 2044, "operatorsupportbas": 2044, "allows_single_node_partit": 2044, "non_compute_op": 2044, "_oper": 2044, "allowed_single_node_partition_op": 2044, "ll28c1": 2044, "l28c1": 2044, "is_node_support": 2044, "l150": 2044, "any_chain": 2044, "l164": 2044, "addmuloperatorsupport": 2044, "capability_partition": 2044, "op_support": 2044, "partition_list": 2044, "propose_partit": 2044, "fused_graph_modul": 2044, "fuse_partit": 2044, "lazo": 2045, "torchdynamo_verbos": 2045, "replay_record_en": 2045, "torchdynamo_debug_funct": 2045, "test_assertion_error": 2045, "compiled_test_assertion_error": 2045, "mlazo": 2045, "837": 2045, "build_map": 2045, "log_level": 2045, "thousand": 2045, "test_backend_error": 2045, "compiled_test_backend_error": 2045, "decomp_fn": 2045, "810": 2045, "repro_aft": 2045, "minifier_launch": 2045, "base_dir": 2045, "rand_strid": 2045, "0a0": 2045, "gitfddfc44": 2045, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 2045, "2022": 2045, "thu_feb_10_18": 2045, "41_pst_2022": 2045, "v11": 2045, "cuda_11": 2045, "r11": 2045, "30978841_0": 2045, "sxm4": 2045, "compile_fx": 2045, "compile_fx_inn": 2045, "toy_compil": 2045, "debug_util": 2045, "run_fwd_maybe_bwd": 2045, "opt_mod": 2045, "rg": 2045, "test_model": 2045, "debug_dir_root": 2045, "torch_compile_debug_dir": 2045, "run_2023_03_01_08_20_52_143510": 2045, "pid_180167": 2045, "model__0_forward_1": 2045, "aot_model___0_debug": 2045, "fx_graph_read": 2045, "fx_graph_runn": 2045, "fx_graph_transform": 2045, "ir_post_fus": 2045, "ir_pre_fus": 2045, "fx_graph": 2045, "buf1": 2045, "schedulernod": 2045, "computedbuff": 2045, "memorydep": 2045, "unmet_depend": 2045, "buf0": 2045, "met_depend": 2045, "primals_2": 2045, "buf1_loop_bodi": 2045, "var_rang": 2045, "z0": 2045, "index0": 2045, "index1": 2045, "get_index": 2045, "get_index_1": 2045, "load_1": 2045, "get_index_2": 2045, "compiled_fun": 2045, "hinder": 2045, "break_reason": 2045, "explanation_verbos": 2045, "compiled_toi": 2045, "as_subclass": 2046, "handle_torch_funct": 2046, "public_api": 2046, "relevant_arg": 2046, "has_torch_function_unari": 2046, "is_tensor_lik": 2046, "notatensor": 2046, "tensorlik": 2046, "is_tensor_method_or_properti": 2046, "__get__": 2046, "__module__": 2046, "wrap_torch_funct": 2046, "drag": 2047, "interactiv": 2047, "memory_viz": 2047, "run_your_cod": 2047, "my_snapshot": 2047, "javascript": 2047, "upload": 2047, "pan": 2047, "mous": 2047, "slider": 2047, "b7f064c000000_0": 2047, "7f064c000000": 2047, "max_entri": 2047, "_memory_viz": 2047, "2u": 2047, "50n": 2047, "currenli": 2047, "typeddict": 2047, "device_trac": 2047, "traceentri": 2047, "total_s": 2047, "segment_typ": 2047, "allocated_s": 2047, "active_s": 2047, "active_awaiting_fre": 2047, "requested_s": 2047, "active_alloc": 2047, "took": 2047, "free_request": 2047, "free_complet": 2047, "segment_alloc": 2047, "segment_fre": 2047, "coorel": 2047, "device_fre": 2047, "dump_snapshot": 2047, "smallest_norm": 2048, "subnorm": 2048, "denormal_numb": 2048, "tailor": 2050}, "objects": {"": [[2023, 0, 0, "-", "torch"], [1952, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[2017, 1, 1, "", "BFloat16Storage"], [2017, 1, 1, "", "BoolStorage"], [2017, 1, 1, "", "ByteStorage"], [2017, 1, 1, "", "CharStorage"], [2017, 1, 1, "", "ComplexDoubleStorage"], [2017, 1, 1, "", "ComplexFloatStorage"], [2017, 1, 1, "", "DoubleStorage"], [2017, 1, 1, "", "FloatStorage"], [84, 1, 1, "", "Generator"], [2017, 1, 1, "", "HalfStorage"], [2017, 1, 1, "", "IntStorage"], [2017, 1, 1, "", "LongStorage"], [2017, 1, 1, "", "QInt32Storage"], [2017, 1, 1, "", "QInt8Storage"], [2017, 1, 1, "", "QUInt2x4Storage"], [2017, 1, 1, "", "QUInt4x2Storage"], [2017, 1, 1, "", "QUInt8Storage"], [2017, 1, 1, "", "ShortStorage"], [2023, 1, 1, "", "SymBool"], [2023, 1, 1, "", "SymFloat"], [2023, 1, 1, "", "SymInt"], [2023, 1, 1, "", "Tag"], [2021, 1, 1, "", "Tensor"], [2017, 1, 1, "", "TypedStorage"], [2017, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [56, 0, 0, "-", "__future__"], [619, 5, 1, "", "_assert"], [620, 5, 1, "", "_foreach_abs"], [621, 5, 1, "", "_foreach_abs_"], [622, 5, 1, "", "_foreach_acos"], [623, 5, 1, "", "_foreach_acos_"], [624, 5, 1, "", "_foreach_asin"], [625, 5, 1, "", "_foreach_asin_"], [626, 5, 1, "", "_foreach_atan"], [627, 5, 1, "", "_foreach_atan_"], [628, 5, 1, "", "_foreach_ceil"], [629, 5, 1, "", "_foreach_ceil_"], [630, 5, 1, "", "_foreach_cos"], [631, 5, 1, "", "_foreach_cos_"], [632, 5, 1, "", "_foreach_cosh"], [633, 5, 1, "", "_foreach_cosh_"], [634, 5, 1, "", "_foreach_erf"], [635, 5, 1, "", "_foreach_erf_"], [636, 5, 1, "", "_foreach_erfc"], [637, 5, 1, "", "_foreach_erfc_"], [638, 5, 1, "", "_foreach_exp"], [639, 5, 1, "", "_foreach_exp_"], [640, 5, 1, "", "_foreach_expm1"], [641, 5, 1, "", "_foreach_expm1_"], [642, 5, 1, "", "_foreach_floor"], [643, 5, 1, "", "_foreach_floor_"], [644, 5, 1, "", "_foreach_frac"], [645, 5, 1, "", "_foreach_frac_"], [646, 5, 1, "", "_foreach_lgamma"], [647, 5, 1, "", "_foreach_lgamma_"], [648, 5, 1, "", "_foreach_log"], [649, 5, 1, "", "_foreach_log10"], [650, 5, 1, "", "_foreach_log10_"], [651, 5, 1, "", "_foreach_log1p"], [652, 5, 1, "", "_foreach_log1p_"], [653, 5, 1, "", "_foreach_log2"], [654, 5, 1, "", "_foreach_log2_"], [655, 5, 1, "", "_foreach_log_"], [656, 5, 1, "", "_foreach_neg"], [657, 5, 1, "", "_foreach_neg_"], [658, 5, 1, "", "_foreach_reciprocal"], [659, 5, 1, "", "_foreach_reciprocal_"], [660, 5, 1, "", "_foreach_round"], [661, 5, 1, "", "_foreach_round_"], [662, 5, 1, "", "_foreach_sigmoid"], [663, 5, 1, "", "_foreach_sigmoid_"], [664, 5, 1, "", "_foreach_sin"], [665, 5, 1, "", "_foreach_sin_"], [666, 5, 1, "", "_foreach_sinh"], [667, 5, 1, "", "_foreach_sinh_"], [668, 5, 1, "", "_foreach_sqrt"], [669, 5, 1, "", "_foreach_sqrt_"], [670, 5, 1, "", "_foreach_tan"], [671, 5, 1, "", "_foreach_tan_"], [672, 5, 1, "", "_foreach_trunc"], [673, 5, 1, "", "_foreach_trunc_"], [674, 5, 1, "", "_foreach_zero_"], [1961, 0, 0, "-", "_logging"], [676, 5, 1, "", "abs"], [677, 5, 1, "", "absolute"], [678, 5, 1, "", "acos"], [679, 5, 1, "", "acosh"], [680, 5, 1, "", "add"], [681, 5, 1, "", "addbmm"], [682, 5, 1, "", "addcdiv"], [683, 5, 1, "", "addcmul"], [684, 5, 1, "", "addmm"], [685, 5, 1, "", "addmv"], [686, 5, 1, "", "addr"], [687, 5, 1, "", "adjoint"], [688, 5, 1, "", "all"], [689, 5, 1, "", "allclose"], [690, 5, 1, "", "amax"], [691, 5, 1, "", "amin"], [692, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [693, 5, 1, "", "angle"], [694, 5, 1, "", "any"], [2006, 0, 0, "-", "ao"], [860, 5, 1, "", "arange"], [861, 5, 1, "", "arccos"], [862, 5, 1, "", "arccosh"], [863, 5, 1, "", "arcsin"], [864, 5, 1, "", "arcsinh"], [865, 5, 1, "", "arctan"], [866, 5, 1, "", "arctan2"], [867, 5, 1, "", "arctanh"], [868, 5, 1, "", "are_deterministic_algorithms_enabled"], [869, 5, 1, "", "argmax"], [870, 5, 1, "", "argmin"], [871, 5, 1, "", "argsort"], [872, 5, 1, "", "argwhere"], [873, 5, 1, "", "as_strided"], [874, 5, 1, "", "as_tensor"], [875, 5, 1, "", "asarray"], [876, 5, 1, "", "asin"], [877, 5, 1, "", "asinh"], [878, 5, 1, "", "atan"], [879, 5, 1, "", "atan2"], [880, 5, 1, "", "atanh"], [881, 5, 1, "", "atleast_1d"], [882, 5, 1, "", "atleast_2d"], [883, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [935, 5, 1, "", "baddbmm"], [936, 5, 1, "", "bartlett_window"], [937, 5, 1, "", "bernoulli"], [938, 5, 1, "", "bincount"], [939, 5, 1, "", "bitwise_and"], [940, 5, 1, "", "bitwise_left_shift"], [941, 5, 1, "", "bitwise_not"], [942, 5, 1, "", "bitwise_or"], [943, 5, 1, "", "bitwise_right_shift"], [944, 5, 1, "", "bitwise_xor"], [945, 5, 1, "", "blackman_window"], [946, 5, 1, "", "block_diag"], [947, 5, 1, "", "bmm"], [948, 5, 1, "", "broadcast_shapes"], [949, 5, 1, "", "broadcast_tensors"], [950, 5, 1, "", "broadcast_to"], [951, 5, 1, "", "bucketize"], [952, 5, 1, "", "can_cast"], [953, 5, 1, "", "cartesian_prod"], [954, 5, 1, "", "cat"], [955, 5, 1, "", "cdist"], [956, 5, 1, "", "ceil"], [957, 5, 1, "", "chain_matmul"], [958, 5, 1, "", "cholesky"], [959, 5, 1, "", "cholesky_inverse"], [960, 5, 1, "", "cholesky_solve"], [961, 5, 1, "", "chunk"], [962, 5, 1, "", "clamp"], [963, 5, 1, "", "clip"], [964, 5, 1, "", "clone"], [965, 5, 1, "", "column_stack"], [966, 5, 1, "", "combinations"], [967, 5, 1, "", "compile"], [968, 5, 1, "", "compiled_with_cxx11_abi"], [2028, 0, 0, "-", "compiler"], [976, 5, 1, "", "complex"], [977, 5, 1, "", "concat"], [978, 5, 1, "", "concatenate"], [979, 5, 1, "", "cond"], [980, 5, 1, "", "conj"], [981, 5, 1, "", "conj_physical"], [2023, 0, 0, "-", "contrib"], [982, 5, 1, "", "copysign"], [983, 5, 1, "", "corrcoef"], [984, 5, 1, "", "cos"], [985, 5, 1, "", "cosh"], [986, 5, 1, "", "count_nonzero"], [987, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [997, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1076, 5, 1, "", "cummax"], [1077, 5, 1, "", "cummin"], [1078, 5, 1, "", "cumprod"], [1079, 5, 1, "", "cumsum"], [1080, 5, 1, "", "cumulative_trapezoid"], [1081, 5, 1, "", "deg2rad"], [1082, 5, 1, "", "dequantize"], [1083, 5, 1, "", "det"], [2018, 1, 1, "", "device"], [1084, 5, 1, "", "diag"], [1085, 5, 1, "", "diag_embed"], [1086, 5, 1, "", "diagflat"], [1087, 5, 1, "", "diagonal"], [1088, 5, 1, "", "diagonal_scatter"], [1089, 5, 1, "", "diff"], [1090, 5, 1, "", "digamma"], [1091, 5, 1, "", "dist"], [25, 0, 0, "-", "distributed"], [31, 0, 0, "-", "distributions"], [1092, 5, 1, "", "div"], [1093, 5, 1, "", "divide"], [1094, 5, 1, "", "dot"], [1095, 5, 1, "", "dsplit"], [1096, 5, 1, "", "dstack"], [2018, 1, 1, "", "dtype"], [1097, 5, 1, "", "einsum"], [1098, 5, 1, "", "empty"], [1099, 5, 1, "", "empty_like"], [1100, 5, 1, "", "empty_strided"], [1101, 1, 1, "", "enable_grad"], [1102, 5, 1, "", "eq"], [1103, 5, 1, "", "equal"], [1104, 5, 1, "", "erf"], [1105, 5, 1, "", "erfc"], [1106, 5, 1, "", "erfinv"], [1107, 5, 1, "", "exp"], [1108, 5, 1, "", "exp2"], [1109, 5, 1, "", "expm1"], [46, 0, 0, "-", "export"], [1110, 5, 1, "", "eye"], [1111, 5, 1, "", "fake_quantize_per_channel_affine"], [1112, 5, 1, "", "fake_quantize_per_tensor_affine"], [48, 0, 0, "-", "fft"], [1135, 5, 1, "", "fix"], [1136, 5, 1, "", "flatten"], [1137, 5, 1, "", "flip"], [1138, 5, 1, "", "fliplr"], [1139, 5, 1, "", "flipud"], [1140, 5, 1, "", "float_power"], [1141, 5, 1, "", "floor"], [1142, 5, 1, "", "floor_divide"], [1143, 5, 1, "", "fmax"], [1144, 5, 1, "", "fmin"], [1145, 5, 1, "", "fmod"], [1146, 5, 1, "", "frac"], [1147, 5, 1, "", "frexp"], [1148, 5, 1, "", "from_dlpack"], [1149, 5, 1, "", "from_file"], [1150, 5, 1, "", "from_numpy"], [1151, 5, 1, "", "frombuffer"], [1152, 5, 1, "", "full"], [1153, 5, 1, "", "full_like"], [51, 0, 0, "-", "func"], [2023, 0, 0, "-", "functional"], [57, 0, 0, "-", "futures"], [58, 0, 0, "-", "fx"], [1191, 5, 1, "", "gather"], [1192, 5, 1, "", "gcd"], [1193, 5, 1, "", "ge"], [1194, 5, 1, "", "geqrf"], [1195, 5, 1, "", "ger"], [1196, 5, 1, "", "get_default_device"], [1197, 5, 1, "", "get_default_dtype"], [1198, 5, 1, "", "get_deterministic_debug_mode"], [1199, 5, 1, "", "get_float32_matmul_precision"], [1200, 5, 1, "", "get_num_interop_threads"], [1201, 5, 1, "", "get_num_threads"], [1202, 5, 1, "", "get_rng_state"], [1203, 5, 1, "", "gradient"], [1204, 5, 1, "", "greater"], [1205, 5, 1, "", "greater_equal"], [1206, 5, 1, "", "gt"], [1207, 5, 1, "", "hamming_window"], [1208, 5, 1, "", "hann_window"], [1209, 5, 1, "", "heaviside"], [1210, 5, 1, "", "histc"], [1211, 5, 1, "", "histogram"], [1212, 5, 1, "", "histogramdd"], [1213, 5, 1, "", "hsplit"], [1214, 5, 1, "", "hspmm"], [1215, 5, 1, "", "hstack"], [1950, 0, 0, "-", "hub"], [1216, 5, 1, "", "hypot"], [1217, 5, 1, "", "i0"], [1218, 5, 1, "", "igamma"], [1219, 5, 1, "", "igammac"], [1220, 5, 1, "", "imag"], [1221, 5, 1, "", "index_add"], [1222, 5, 1, "", "index_copy"], [1223, 5, 1, "", "index_reduce"], [1224, 5, 1, "", "index_select"], [1225, 5, 1, "", "initial_seed"], [1226, 5, 1, "", "inner"], [1227, 5, 1, "", "inverse"], [1228, 5, 1, "", "is_complex"], [1229, 5, 1, "", "is_conj"], [1230, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1231, 5, 1, "", "is_floating_point"], [1232, 5, 1, "", "is_grad_enabled"], [1233, 5, 1, "", "is_inference_mode_enabled"], [1234, 5, 1, "", "is_nonzero"], [1235, 5, 1, "", "is_storage"], [1236, 5, 1, "", "is_tensor"], [1237, 5, 1, "", "is_warn_always_enabled"], [1238, 5, 1, "", "isclose"], [1239, 5, 1, "", "isfinite"], [1240, 5, 1, "", "isin"], [1241, 5, 1, "", "isinf"], [1242, 5, 1, "", "isnan"], [1243, 5, 1, "", "isneginf"], [1244, 5, 1, "", "isposinf"], [1245, 5, 1, "", "isreal"], [1246, 5, 1, "", "istft"], [1952, 0, 0, "-", "jit"], [1269, 5, 1, "", "kaiser_window"], [1270, 5, 1, "", "kron"], [1271, 5, 1, "", "kthvalue"], [2018, 1, 1, "", "layout"], [1272, 5, 1, "", "lcm"], [1273, 5, 1, "", "ldexp"], [1274, 5, 1, "", "le"], [1275, 5, 1, "", "lerp"], [1276, 5, 1, "", "less"], [1277, 5, 1, "", "less_equal"], [1278, 5, 1, "", "lgamma"], [1959, 0, 0, "-", "library"], [1960, 0, 0, "-", "linalg"], [1320, 5, 1, "", "linspace"], [1321, 5, 1, "", "load"], [1322, 5, 1, "", "lobpcg"], [1323, 5, 1, "", "log"], [1324, 5, 1, "", "log10"], [1325, 5, 1, "", "log1p"], [1326, 5, 1, "", "log2"], [1327, 5, 1, "", "logaddexp"], [1328, 5, 1, "", "logaddexp2"], [1329, 5, 1, "", "logcumsumexp"], [1330, 5, 1, "", "logdet"], [1331, 5, 1, "", "logical_and"], [1332, 5, 1, "", "logical_not"], [1333, 5, 1, "", "logical_or"], [1334, 5, 1, "", "logical_xor"], [1335, 5, 1, "", "logit"], [1336, 5, 1, "", "logspace"], [1337, 5, 1, "", "logsumexp"], [1338, 5, 1, "", "lt"], [1339, 5, 1, "", "lu"], [1340, 5, 1, "", "lu_solve"], [1341, 5, 1, "", "lu_unpack"], [1342, 5, 1, "", "manual_seed"], [1962, 0, 0, "-", "masked"], [1343, 5, 1, "", "masked_select"], [1344, 5, 1, "", "matmul"], [1345, 5, 1, "", "matrix_exp"], [1346, 5, 1, "", "matrix_power"], [1347, 5, 1, "", "max"], [1348, 5, 1, "", "maximum"], [1349, 5, 1, "", "mean"], [1350, 5, 1, "", "median"], [2018, 1, 1, "", "memory_format"], [1351, 5, 1, "", "meshgrid"], [1352, 5, 1, "", "min"], [1353, 5, 1, "", "minimum"], [1354, 5, 1, "", "mm"], [1355, 5, 1, "", "mode"], [1966, 0, 0, "-", "monitor"], [1356, 5, 1, "", "moveaxis"], [1357, 5, 1, "", "movedim"], [1967, 0, 0, "-", "mps"], [1371, 5, 1, "", "msort"], [1372, 5, 1, "", "mul"], [1373, 5, 1, "", "multinomial"], [1374, 5, 1, "", "multiply"], [1968, 0, 0, "-", "multiprocessing"], [1375, 5, 1, "", "mv"], [1376, 5, 1, "", "mvlgamma"], [1377, 5, 1, "", "nan_to_num"], [1378, 5, 1, "", "nanmean"], [1379, 5, 1, "", "nanmedian"], [1380, 5, 1, "", "nanquantile"], [1381, 5, 1, "", "nansum"], [1382, 5, 1, "", "narrow"], [1383, 5, 1, "", "narrow_copy"], [1384, 5, 1, "", "ne"], [1385, 5, 1, "", "neg"], [1386, 5, 1, "", "negative"], [1971, 0, 0, "-", "nested"], [1387, 5, 1, "", "nextafter"], [1972, 0, 0, "-", "nn"], [1727, 1, 1, "", "no_grad"], [1728, 5, 1, "", "nonzero"], [1729, 5, 1, "", "norm"], [1730, 5, 1, "", "normal"], [1731, 5, 1, "", "not_equal"], [1732, 5, 1, "", "numel"], [1733, 5, 1, "", "ones"], [1734, 5, 1, "", "ones_like"], [2000, 0, 0, "-", "onnx"], [2002, 0, 0, "-", "optim"], [1771, 5, 1, "", "orgqr"], [1772, 5, 1, "", "ormqr"], [1773, 5, 1, "", "outer"], [2046, 0, 0, "-", "overrides"], [2003, 0, 0, "-", "package"], [1774, 5, 1, "", "pca_lowrank"], [1775, 5, 1, "", "permute"], [1776, 5, 1, "", "pinverse"], [1777, 5, 1, "", "poisson"], [1778, 5, 1, "", "polar"], [1779, 5, 1, "", "polygamma"], [1780, 5, 1, "", "positive"], [1781, 5, 1, "", "pow"], [1782, 5, 1, "", "prod"], [2005, 0, 0, "-", "profiler"], [1783, 5, 1, "", "promote_types"], [1784, 5, 1, "", "qr"], [1785, 5, 1, "", "quantile"], [2009, 0, 0, "-", "quantization"], [1786, 5, 1, "", "quantize_per_channel"], [1787, 5, 1, "", "quantize_per_tensor"], [1788, 5, 1, "", "quantized_batch_norm"], [1789, 5, 1, "", "quantized_max_pool1d"], [1790, 5, 1, "", "quantized_max_pool2d"], [2023, 0, 0, "-", "quasirandom"], [1792, 5, 1, "", "rad2deg"], [1793, 5, 1, "", "rand"], [1794, 5, 1, "", "rand_like"], [1795, 5, 1, "", "randint"], [1796, 5, 1, "", "randint_like"], [1797, 5, 1, "", "randn"], [1798, 5, 1, "", "randn_like"], [2010, 0, 0, "-", "random"], [1799, 5, 1, "", "randperm"], [1800, 5, 1, "", "range"], [1801, 5, 1, "", "ravel"], [1802, 5, 1, "", "real"], [1803, 5, 1, "", "reciprocal"], [1804, 5, 1, "", "remainder"], [1805, 5, 1, "", "renorm"], [1806, 5, 1, "", "repeat_interleave"], [1807, 5, 1, "", "reshape"], [1808, 5, 1, "", "resolve_conj"], [1809, 5, 1, "", "resolve_neg"], [1810, 5, 1, "", "result_type"], [2023, 0, 0, "-", "return_types"], [1811, 5, 1, "", "roll"], [1812, 5, 1, "", "rot90"], [1813, 5, 1, "", "round"], [1814, 5, 1, "", "row_stack"], [1815, 5, 1, "", "rsqrt"], [1816, 5, 1, "", "save"], [1817, 5, 1, "", "scatter"], [1818, 5, 1, "", "scatter_add"], [1819, 5, 1, "", "scatter_reduce"], [1820, 5, 1, "", "searchsorted"], [1821, 5, 1, "", "seed"], [1822, 5, 1, "", "select"], [1823, 5, 1, "", "select_scatter"], [2023, 0, 0, "-", "serialization"], [1824, 5, 1, "", "set_default_device"], [1825, 5, 1, "", "set_default_dtype"], [1826, 5, 1, "", "set_default_tensor_type"], [1827, 5, 1, "", "set_deterministic_debug_mode"], [1828, 5, 1, "", "set_float32_matmul_precision"], [1829, 5, 1, "", "set_flush_denormal"], [1830, 5, 1, "", "set_num_interop_threads"], [1831, 5, 1, "", "set_num_threads"], [1832, 5, 1, "", "set_printoptions"], [1833, 5, 1, "", "set_rng_state"], [1834, 5, 1, "", "set_warn_always"], [1835, 5, 1, "", "sgn"], [1836, 5, 1, "", "sigmoid"], [1837, 5, 1, "", "sign"], [2014, 0, 0, "-", "signal"], [1849, 5, 1, "", "signbit"], [1850, 5, 1, "", "sin"], [1851, 5, 1, "", "sinc"], [1852, 5, 1, "", "sinh"], [1853, 5, 1, "", "slice_scatter"], [1854, 5, 1, "", "slogdet"], [1855, 5, 1, "", "smm"], [1856, 5, 1, "", "softmax"], [1857, 5, 1, "", "sort"], [2015, 0, 0, "-", "sparse"], [1867, 5, 1, "", "sparse_bsc_tensor"], [1868, 5, 1, "", "sparse_bsr_tensor"], [1869, 5, 1, "", "sparse_compressed_tensor"], [1870, 5, 1, "", "sparse_coo_tensor"], [1871, 5, 1, "", "sparse_csc_tensor"], [1872, 5, 1, "", "sparse_csr_tensor"], [2016, 0, 0, "-", "special"], [1873, 5, 1, "", "split"], [1874, 5, 1, "", "sqrt"], [1875, 5, 1, "", "square"], [1876, 5, 1, "", "squeeze"], [1877, 5, 1, "", "sspaddmm"], [1878, 5, 1, "", "stack"], [1879, 5, 1, "", "std"], [1880, 5, 1, "", "std_mean"], [1881, 5, 1, "", "stft"], [2023, 0, 0, "-", "storage"], [1882, 5, 1, "", "sub"], [1883, 5, 1, "", "subtract"], [1884, 5, 1, "", "sum"], [1885, 5, 1, "", "svd"], [1886, 5, 1, "", "svd_lowrank"], [1887, 5, 1, "", "swapaxes"], [1888, 5, 1, "", "swapdims"], [1889, 5, 1, "", "sym_float"], [1890, 5, 1, "", "sym_int"], [1891, 5, 1, "", "sym_ite"], [1892, 5, 1, "", "sym_max"], [1893, 5, 1, "", "sym_min"], [1894, 5, 1, "", "sym_not"], [1895, 5, 1, "", "t"], [1896, 5, 1, "", "take"], [1897, 5, 1, "", "take_along_dim"], [1898, 5, 1, "", "tan"], [1899, 5, 1, "", "tanh"], [1900, 5, 1, "", "tensor"], [1901, 5, 1, "", "tensor_split"], [1902, 5, 1, "", "tensordot"], [2022, 0, 0, "-", "testing"], [1903, 5, 1, "", "tile"], [1904, 5, 1, "", "topk"], [2023, 0, 0, "-", "torch_version"], [1905, 5, 1, "", "trace"], [1906, 5, 1, "", "transpose"], [1907, 5, 1, "", "trapezoid"], [1908, 5, 1, "", "trapz"], [1909, 5, 1, "", "triangular_solve"], [1910, 5, 1, "", "tril"], [1911, 5, 1, "", "tril_indices"], [1912, 5, 1, "", "triu"], [1913, 5, 1, "", "triu_indices"], [1914, 5, 1, "", "true_divide"], [1915, 5, 1, "", "trunc"], [2023, 0, 0, "-", "types"], [1916, 5, 1, "", "unbind"], [1917, 5, 1, "", "unflatten"], [1918, 5, 1, "", "unique"], [1919, 5, 1, "", "unique_consecutive"], [1920, 5, 1, "", "unravel_index"], [1921, 5, 1, "", "unsqueeze"], [1922, 5, 1, "", "use_deterministic_algorithms"], [2049, 0, 0, "-", "utils"], [1928, 5, 1, "", "vander"], [1929, 5, 1, "", "var"], [1930, 5, 1, "", "var_mean"], [1931, 5, 1, "", "vdot"], [2023, 0, 0, "-", "version"], [1932, 5, 1, "", "view_as_complex"], [1933, 5, 1, "", "view_as_real"], [1934, 5, 1, "", "vmap"], [1935, 5, 1, "", "vsplit"], [1936, 5, 1, "", "vstack"], [1937, 5, 1, "", "where"], [1938, 5, 1, "", "xlogy"], [2050, 0, 0, "-", "xpu"], [1948, 5, 1, "", "zeros"], [1949, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[2017, 2, 1, "", "dtype"]], "torch.BoolStorage": [[2017, 2, 1, "", "dtype"]], "torch.ByteStorage": [[2017, 2, 1, "", "dtype"]], "torch.CharStorage": [[2017, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[2017, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[2017, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[2017, 2, 1, "", "dtype"]], "torch.FloatStorage": [[2017, 2, 1, "", "dtype"]], "torch.Generator": [[84, 2, 1, "", "device"], [84, 3, 1, "", "get_state"], [84, 3, 1, "", "initial_seed"], [84, 3, 1, "", "manual_seed"], [84, 3, 1, "", "seed"], [84, 3, 1, "", "set_state"]], "torch.HalfStorage": [[2017, 2, 1, "", "dtype"]], "torch.IntStorage": [[2017, 2, 1, "", "dtype"]], "torch.LongStorage": [[2017, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[2017, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[2017, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[2017, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[2017, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[2017, 2, 1, "", "dtype"]], "torch.ShortStorage": [[2017, 2, 1, "", "dtype"]], "torch.SymFloat": [[2023, 3, 1, "", "is_integer"]], "torch.Tag": [[2023, 4, 1, "", "name"]], "torch.Tensor": [[2021, 2, 1, "", "H"], [2021, 2, 1, "", "T"], [85, 3, 1, "", "abs"], [86, 3, 1, "", "abs_"], [87, 3, 1, "", "absolute"], [88, 3, 1, "", "absolute_"], [89, 3, 1, "", "acos"], [90, 3, 1, "", "acos_"], [91, 3, 1, "", "acosh"], [92, 3, 1, "", "acosh_"], [93, 3, 1, "", "add"], [94, 3, 1, "", "add_"], [95, 3, 1, "", "addbmm"], [96, 3, 1, "", "addbmm_"], [97, 3, 1, "", "addcdiv"], [98, 3, 1, "", "addcdiv_"], [99, 3, 1, "", "addcmul"], [100, 3, 1, "", "addcmul_"], [101, 3, 1, "", "addmm"], [102, 3, 1, "", "addmm_"], [103, 3, 1, "", "addmv"], [104, 3, 1, "", "addmv_"], [105, 3, 1, "", "addr"], [106, 3, 1, "", "addr_"], [107, 3, 1, "", "adjoint"], [1970, 3, 1, "", "align_as"], [1970, 3, 1, "", "align_to"], [108, 3, 1, "", "all"], [109, 3, 1, "", "allclose"], [110, 3, 1, "", "amax"], [111, 3, 1, "", "amin"], [112, 3, 1, "", "aminmax"], [113, 3, 1, "", "angle"], [114, 3, 1, "", "any"], [115, 3, 1, "", "apply_"], [116, 3, 1, "", "arccos"], [117, 3, 1, "", "arccos_"], [118, 3, 1, "", "arccosh"], [119, 3, 1, "", "arccosh_"], [120, 3, 1, "", "arcsin"], [121, 3, 1, "", "arcsin_"], [122, 3, 1, "", "arcsinh"], [123, 3, 1, "", "arcsinh_"], [124, 3, 1, "", "arctan"], [125, 3, 1, "", "arctan2"], [126, 3, 1, "", "arctan2_"], [127, 3, 1, "", "arctan_"], [128, 3, 1, "", "arctanh"], [129, 3, 1, "", "arctanh_"], [130, 3, 1, "", "argmax"], [131, 3, 1, "", "argmin"], [132, 3, 1, "", "argsort"], [133, 3, 1, "", "argwhere"], [134, 3, 1, "", "as_strided"], [135, 3, 1, "", "as_subclass"], [136, 3, 1, "", "asin"], [137, 3, 1, "", "asin_"], [138, 3, 1, "", "asinh"], [139, 3, 1, "", "asinh_"], [140, 3, 1, "", "atan"], [141, 3, 1, "", "atan2"], [142, 3, 1, "", "atan2_"], [143, 3, 1, "", "atan_"], [144, 3, 1, "", "atanh"], [145, 3, 1, "", "atanh_"], [146, 3, 1, "", "backward"], [147, 3, 1, "", "baddbmm"], [148, 3, 1, "", "baddbmm_"], [149, 3, 1, "", "bernoulli"], [150, 3, 1, "", "bernoulli_"], [151, 3, 1, "", "bfloat16"], [152, 3, 1, "", "bincount"], [153, 3, 1, "", "bitwise_and"], [154, 3, 1, "", "bitwise_and_"], [155, 3, 1, "", "bitwise_left_shift"], [156, 3, 1, "", "bitwise_left_shift_"], [157, 3, 1, "", "bitwise_not"], [158, 3, 1, "", "bitwise_not_"], [159, 3, 1, "", "bitwise_or"], [160, 3, 1, "", "bitwise_or_"], [161, 3, 1, "", "bitwise_right_shift"], [162, 3, 1, "", "bitwise_right_shift_"], [163, 3, 1, "", "bitwise_xor"], [164, 3, 1, "", "bitwise_xor_"], [165, 3, 1, "", "bmm"], [166, 3, 1, "", "bool"], [167, 3, 1, "", "broadcast_to"], [168, 3, 1, "", "byte"], [169, 3, 1, "", "cauchy_"], [170, 3, 1, "", "ccol_indices"], [171, 3, 1, "", "cdouble"], [172, 3, 1, "", "ceil"], [173, 3, 1, "", "ceil_"], [174, 3, 1, "", "cfloat"], [175, 3, 1, "", "chalf"], [176, 3, 1, "", "char"], [177, 3, 1, "", "cholesky"], [178, 3, 1, "", "cholesky_inverse"], [179, 3, 1, "", "cholesky_solve"], [180, 3, 1, "", "chunk"], [181, 3, 1, "", "clamp"], [182, 3, 1, "", "clamp_"], [183, 3, 1, "", "clip"], [184, 3, 1, "", "clip_"], [185, 3, 1, "", "clone"], [186, 3, 1, "", "coalesce"], [187, 3, 1, "", "col_indices"], [188, 3, 1, "", "conj"], [189, 3, 1, "", "conj_physical"], [190, 3, 1, "", "conj_physical_"], [191, 3, 1, "", "contiguous"], [192, 3, 1, "", "copy_"], [193, 3, 1, "", "copysign"], [194, 3, 1, "", "copysign_"], [195, 3, 1, "", "corrcoef"], [196, 3, 1, "", "cos"], [197, 3, 1, "", "cos_"], [198, 3, 1, "", "cosh"], [199, 3, 1, "", "cosh_"], [200, 3, 1, "", "count_nonzero"], [201, 3, 1, "", "cov"], [202, 3, 1, "", "cpu"], [203, 3, 1, "", "cross"], [204, 3, 1, "", "crow_indices"], [205, 3, 1, "", "cuda"], [206, 3, 1, "", "cummax"], [207, 3, 1, "", "cummin"], [208, 3, 1, "", "cumprod"], [209, 3, 1, "", "cumprod_"], [210, 3, 1, "", "cumsum"], [211, 3, 1, "", "cumsum_"], [212, 3, 1, "", "data_ptr"], [213, 3, 1, "", "deg2rad"], [214, 3, 1, "", "dense_dim"], [215, 3, 1, "", "dequantize"], [216, 3, 1, "", "det"], [217, 3, 1, "", "detach"], [218, 3, 1, "", "detach_"], [219, 2, 1, "", "device"], [220, 3, 1, "", "diag"], [221, 3, 1, "", "diag_embed"], [222, 3, 1, "", "diagflat"], [223, 3, 1, "", "diagonal"], [224, 3, 1, "", "diagonal_scatter"], [225, 3, 1, "", "diff"], [226, 3, 1, "", "digamma"], [227, 3, 1, "", "digamma_"], [228, 3, 1, "", "dim"], [229, 3, 1, "", "dim_order"], [230, 3, 1, "", "dist"], [231, 3, 1, "", "div"], [232, 3, 1, "", "div_"], [233, 3, 1, "", "divide"], [234, 3, 1, "", "divide_"], [235, 3, 1, "", "dot"], [236, 3, 1, "", "double"], [237, 3, 1, "", "dsplit"], [238, 3, 1, "", "element_size"], [239, 3, 1, "", "eq"], [240, 3, 1, "", "eq_"], [241, 3, 1, "", "equal"], [242, 3, 1, "", "erf"], [243, 3, 1, "", "erf_"], [244, 3, 1, "", "erfc"], [245, 3, 1, "", "erfc_"], [246, 3, 1, "", "erfinv"], [247, 3, 1, "", "erfinv_"], [248, 3, 1, "", "exp"], [249, 3, 1, "", "exp_"], [250, 3, 1, "", "expand"], [251, 3, 1, "", "expand_as"], [252, 3, 1, "", "expm1"], [253, 3, 1, "", "expm1_"], [254, 3, 1, "", "exponential_"], [255, 3, 1, "", "fill_"], [256, 3, 1, "", "fill_diagonal_"], [257, 3, 1, "", "fix"], [258, 3, 1, "", "fix_"], [259, 3, 1, "", "flatten"], [260, 3, 1, "", "flip"], [261, 3, 1, "", "fliplr"], [262, 3, 1, "", "flipud"], [263, 3, 1, "", "float"], [264, 3, 1, "", "float_power"], [265, 3, 1, "", "float_power_"], [266, 3, 1, "", "floor"], [267, 3, 1, "", "floor_"], [268, 3, 1, "", "floor_divide"], [269, 3, 1, "", "floor_divide_"], [270, 3, 1, "", "fmax"], [271, 3, 1, "", "fmin"], [272, 3, 1, "", "fmod"], [273, 3, 1, "", "fmod_"], [274, 3, 1, "", "frac"], [275, 3, 1, "", "frac_"], [276, 3, 1, "", "frexp"], [277, 3, 1, "", "gather"], [278, 3, 1, "", "gcd"], [279, 3, 1, "", "gcd_"], [280, 3, 1, "", "ge"], [281, 3, 1, "", "ge_"], [282, 3, 1, "", "geometric_"], [283, 3, 1, "", "geqrf"], [284, 3, 1, "", "ger"], [285, 3, 1, "", "get_device"], [286, 2, 1, "", "grad"], [287, 3, 1, "", "greater"], [288, 3, 1, "", "greater_"], [289, 3, 1, "", "greater_equal"], [290, 3, 1, "", "greater_equal_"], [291, 3, 1, "", "gt"], [292, 3, 1, "", "gt_"], [293, 3, 1, "", "half"], [294, 3, 1, "", "hardshrink"], [295, 3, 1, "", "heaviside"], [296, 3, 1, "", "histc"], [297, 3, 1, "", "histogram"], [298, 3, 1, "", "hsplit"], [299, 3, 1, "", "hypot"], [300, 3, 1, "", "hypot_"], [301, 3, 1, "", "i0"], [302, 3, 1, "", "i0_"], [303, 3, 1, "", "igamma"], [304, 3, 1, "", "igamma_"], [305, 3, 1, "", "igammac"], [306, 3, 1, "", "igammac_"], [307, 2, 1, "", "imag"], [308, 3, 1, "", "index_add"], [309, 3, 1, "", "index_add_"], [310, 3, 1, "", "index_copy"], [311, 3, 1, "", "index_copy_"], [312, 3, 1, "", "index_fill"], [313, 3, 1, "", "index_fill_"], [314, 3, 1, "", "index_put"], [315, 3, 1, "", "index_put_"], [316, 3, 1, "", "index_reduce"], [317, 3, 1, "", "index_reduce_"], [318, 3, 1, "", "index_select"], [319, 3, 1, "", "indices"], [320, 3, 1, "", "inner"], [321, 3, 1, "", "int"], [322, 3, 1, "", "int_repr"], [323, 3, 1, "", "inverse"], [324, 3, 1, "", "is_coalesced"], [325, 3, 1, "", "is_complex"], [326, 3, 1, "", "is_conj"], [327, 3, 1, "", "is_contiguous"], [328, 2, 1, "", "is_cuda"], [329, 3, 1, "", "is_floating_point"], [330, 3, 1, "", "is_inference"], [331, 2, 1, "", "is_leaf"], [332, 2, 1, "", "is_meta"], [333, 3, 1, "", "is_pinned"], [334, 2, 1, "", "is_quantized"], [335, 3, 1, "", "is_set_to"], [336, 3, 1, "", "is_shared"], [337, 3, 1, "", "is_signed"], [338, 2, 1, "", "is_sparse"], [339, 2, 1, "", "is_sparse_csr"], [340, 3, 1, "", "isclose"], [341, 3, 1, "", "isfinite"], [342, 3, 1, "", "isinf"], [343, 3, 1, "", "isnan"], [344, 3, 1, "", "isneginf"], [345, 3, 1, "", "isposinf"], [346, 3, 1, "", "isreal"], [347, 3, 1, "", "istft"], [348, 3, 1, "", "item"], [349, 2, 1, "", "itemsize"], [350, 3, 1, "", "kthvalue"], [351, 3, 1, "", "lcm"], [352, 3, 1, "", "lcm_"], [353, 3, 1, "", "ldexp"], [354, 3, 1, "", "ldexp_"], [355, 3, 1, "", "le"], [356, 3, 1, "", "le_"], [357, 3, 1, "", "lerp"], [358, 3, 1, "", "lerp_"], [359, 3, 1, "", "less"], [360, 3, 1, "", "less_"], [361, 3, 1, "", "less_equal"], [362, 3, 1, "", "less_equal_"], [363, 3, 1, "", "lgamma"], [364, 3, 1, "", "lgamma_"], [365, 3, 1, "", "log"], [366, 3, 1, "", "log10"], [367, 3, 1, "", "log10_"], [368, 3, 1, "", "log1p"], [369, 3, 1, "", "log1p_"], [370, 3, 1, "", "log2"], [371, 3, 1, "", "log2_"], [372, 3, 1, "", "log_"], [373, 3, 1, "", "log_normal_"], [374, 3, 1, "", "logaddexp"], [375, 3, 1, "", "logaddexp2"], [376, 3, 1, "", "logcumsumexp"], [377, 3, 1, "", "logdet"], [378, 3, 1, "", "logical_and"], [379, 3, 1, "", "logical_and_"], [380, 3, 1, "", "logical_not"], [381, 3, 1, "", "logical_not_"], [382, 3, 1, "", "logical_or"], [383, 3, 1, "", "logical_or_"], [384, 3, 1, "", "logical_xor"], [385, 3, 1, "", "logical_xor_"], [386, 3, 1, "", "logit"], [387, 3, 1, "", "logit_"], [388, 3, 1, "", "logsumexp"], [389, 3, 1, "", "long"], [390, 3, 1, "", "lt"], [391, 3, 1, "", "lt_"], [392, 3, 1, "", "lu"], [393, 3, 1, "", "lu_solve"], [2021, 2, 1, "", "mH"], [2021, 2, 1, "", "mT"], [394, 3, 1, "", "map_"], [395, 3, 1, "", "masked_fill"], [396, 3, 1, "", "masked_fill_"], [397, 3, 1, "", "masked_scatter"], [398, 3, 1, "", "masked_scatter_"], [399, 3, 1, "", "masked_select"], [400, 3, 1, "", "matmul"], [401, 3, 1, "", "matrix_exp"], [402, 3, 1, "", "matrix_power"], [403, 3, 1, "", "max"], [404, 3, 1, "", "maximum"], [405, 3, 1, "", "mean"], [406, 3, 1, "", "median"], [407, 3, 1, "", "min"], [408, 3, 1, "", "minimum"], [409, 3, 1, "", "mm"], [410, 3, 1, "", "mode"], [411, 3, 1, "", "moveaxis"], [412, 3, 1, "", "movedim"], [413, 3, 1, "", "msort"], [414, 3, 1, "", "mul"], [415, 3, 1, "", "mul_"], [416, 3, 1, "", "multinomial"], [417, 3, 1, "", "multiply"], [418, 3, 1, "", "multiply_"], [419, 3, 1, "", "mv"], [420, 3, 1, "", "mvlgamma"], [421, 3, 1, "", "mvlgamma_"], [1970, 2, 1, "", "names"], [422, 3, 1, "", "nan_to_num"], [423, 3, 1, "", "nan_to_num_"], [424, 3, 1, "", "nanmean"], [425, 3, 1, "", "nanmedian"], [426, 3, 1, "", "nanquantile"], [427, 3, 1, "", "nansum"], [428, 3, 1, "", "narrow"], [429, 3, 1, "", "narrow_copy"], [430, 2, 1, "", "nbytes"], [431, 2, 1, "", "ndim"], [432, 3, 1, "", "ndimension"], [433, 3, 1, "", "ne"], [434, 3, 1, "", "ne_"], [435, 3, 1, "", "neg"], [436, 3, 1, "", "neg_"], [437, 3, 1, "", "negative"], [438, 3, 1, "", "negative_"], [439, 3, 1, "", "nelement"], [440, 3, 1, "", "new_empty"], [441, 3, 1, "", "new_full"], [442, 3, 1, "", "new_ones"], [443, 3, 1, "", "new_tensor"], [444, 3, 1, "", "new_zeros"], [445, 3, 1, "", "nextafter"], [446, 3, 1, "", "nextafter_"], [447, 3, 1, "", "nonzero"], [448, 3, 1, "", "norm"], [449, 3, 1, "", "normal_"], [450, 3, 1, "", "not_equal"], [451, 3, 1, "", "not_equal_"], [452, 3, 1, "", "numel"], [453, 3, 1, "", "numpy"], [454, 3, 1, "", "orgqr"], [455, 3, 1, "", "ormqr"], [456, 3, 1, "", "outer"], [457, 3, 1, "", "permute"], [458, 3, 1, "", "pin_memory"], [459, 3, 1, "", "pinverse"], [460, 3, 1, "", "polygamma"], [461, 3, 1, "", "polygamma_"], [462, 3, 1, "", "positive"], [463, 3, 1, "", "pow"], [464, 3, 1, "", "pow_"], [465, 3, 1, "", "prod"], [466, 3, 1, "", "put_"], [467, 3, 1, "", "q_per_channel_axis"], [468, 3, 1, "", "q_per_channel_scales"], [469, 3, 1, "", "q_per_channel_zero_points"], [470, 3, 1, "", "q_scale"], [471, 3, 1, "", "q_zero_point"], [472, 3, 1, "", "qr"], [473, 3, 1, "", "qscheme"], [474, 3, 1, "", "quantile"], [475, 3, 1, "", "rad2deg"], [476, 3, 1, "", "random_"], [477, 3, 1, "", "ravel"], [478, 2, 1, "", "real"], [479, 3, 1, "", "reciprocal"], [480, 3, 1, "", "reciprocal_"], [481, 3, 1, "", "record_stream"], [1970, 3, 1, "", "refine_names"], [482, 3, 1, "", "register_hook"], [483, 3, 1, "", "register_post_accumulate_grad_hook"], [484, 3, 1, "", "remainder"], [485, 3, 1, "", "remainder_"], [1970, 3, 1, "", "rename"], [1970, 3, 1, "", "rename_"], [486, 3, 1, "", "renorm"], [487, 3, 1, "", "renorm_"], [488, 3, 1, "", "repeat"], [489, 3, 1, "", "repeat_interleave"], [490, 2, 1, "", "requires_grad"], [491, 3, 1, "", "requires_grad_"], [492, 3, 1, "", "reshape"], [493, 3, 1, "", "reshape_as"], [494, 3, 1, "", "resize_"], [495, 3, 1, "", "resize_as_"], [496, 3, 1, "", "resolve_conj"], [497, 3, 1, "", "resolve_neg"], [498, 3, 1, "", "retain_grad"], [499, 2, 1, "", "retains_grad"], [500, 3, 1, "", "roll"], [501, 3, 1, "", "rot90"], [502, 3, 1, "", "round"], [503, 3, 1, "", "round_"], [504, 3, 1, "", "row_indices"], [505, 3, 1, "", "rsqrt"], [506, 3, 1, "", "rsqrt_"], [507, 3, 1, "", "scatter"], [508, 3, 1, "", "scatter_"], [509, 3, 1, "", "scatter_add"], [510, 3, 1, "", "scatter_add_"], [511, 3, 1, "", "scatter_reduce"], [512, 3, 1, "", "scatter_reduce_"], [513, 3, 1, "", "select"], [514, 3, 1, "", "select_scatter"], [515, 3, 1, "", "set_"], [516, 3, 1, "", "sgn"], [517, 3, 1, "", "sgn_"], [518, 2, 1, "", "shape"], [519, 3, 1, "", "share_memory_"], [520, 3, 1, "", "short"], [521, 3, 1, "", "sigmoid"], [522, 3, 1, "", "sigmoid_"], [523, 3, 1, "", "sign"], [524, 3, 1, "", "sign_"], [525, 3, 1, "", "signbit"], [526, 3, 1, "", "sin"], [527, 3, 1, "", "sin_"], [528, 3, 1, "", "sinc"], [529, 3, 1, "", "sinc_"], [530, 3, 1, "", "sinh"], [531, 3, 1, "", "sinh_"], [532, 3, 1, "", "size"], [533, 3, 1, "", "slice_scatter"], [534, 3, 1, "", "slogdet"], [535, 3, 1, "", "smm"], [536, 3, 1, "", "softmax"], [537, 3, 1, "", "sort"], [538, 3, 1, "", "sparse_dim"], [539, 3, 1, "", "sparse_mask"], [540, 3, 1, "", "sparse_resize_"], [541, 3, 1, "", "sparse_resize_and_clear_"], [542, 3, 1, "", "split"], [543, 3, 1, "", "sqrt"], [544, 3, 1, "", "sqrt_"], [545, 3, 1, "", "square"], [546, 3, 1, "", "square_"], [547, 3, 1, "", "squeeze"], [548, 3, 1, "", "squeeze_"], [549, 3, 1, "", "sspaddmm"], [550, 3, 1, "", "std"], [551, 3, 1, "", "stft"], [552, 3, 1, "", "storage"], [553, 3, 1, "", "storage_offset"], [554, 3, 1, "", "storage_type"], [555, 3, 1, "", "stride"], [556, 3, 1, "", "sub"], [557, 3, 1, "", "sub_"], [558, 3, 1, "", "subtract"], [559, 3, 1, "", "subtract_"], [560, 3, 1, "", "sum"], [561, 3, 1, "", "sum_to_size"], [562, 3, 1, "", "svd"], [563, 3, 1, "", "swapaxes"], [564, 3, 1, "", "swapdims"], [565, 3, 1, "", "t"], [566, 3, 1, "", "t_"], [567, 3, 1, "", "take"], [568, 3, 1, "", "take_along_dim"], [569, 3, 1, "", "tan"], [570, 3, 1, "", "tan_"], [571, 3, 1, "", "tanh"], [572, 3, 1, "", "tanh_"], [573, 3, 1, "", "tensor_split"], [574, 3, 1, "", "tile"], [575, 3, 1, "", "to"], [576, 3, 1, "", "to_dense"], [577, 3, 1, "", "to_mkldnn"], [578, 3, 1, "", "to_sparse"], [579, 3, 1, "", "to_sparse_bsc"], [580, 3, 1, "", "to_sparse_bsr"], [581, 3, 1, "", "to_sparse_coo"], [582, 3, 1, "", "to_sparse_csc"], [583, 3, 1, "", "to_sparse_csr"], [584, 3, 1, "", "tolist"], [585, 3, 1, "", "topk"], [586, 3, 1, "", "trace"], [587, 3, 1, "", "transpose"], [588, 3, 1, "", "transpose_"], [589, 3, 1, "", "triangular_solve"], [590, 3, 1, "", "tril"], [591, 3, 1, "", "tril_"], [592, 3, 1, "", "triu"], [593, 3, 1, "", "triu_"], [594, 3, 1, "", "true_divide"], [595, 3, 1, "", "true_divide_"], [596, 3, 1, "", "trunc"], [597, 3, 1, "", "trunc_"], [598, 3, 1, "", "type"], [599, 3, 1, "", "type_as"], [600, 3, 1, "", "unbind"], [601, 3, 1, "", "unflatten"], [602, 3, 1, "", "unfold"], [603, 3, 1, "", "uniform_"], [604, 3, 1, "", "unique"], [605, 3, 1, "", "unique_consecutive"], [606, 3, 1, "", "unsqueeze"], [607, 3, 1, "", "unsqueeze_"], [608, 3, 1, "", "untyped_storage"], [609, 3, 1, "", "values"], [610, 3, 1, "", "var"], [611, 3, 1, "", "vdot"], [612, 3, 1, "", "view"], [613, 3, 1, "", "view_as"], [614, 3, 1, "", "vsplit"], [615, 3, 1, "", "where"], [616, 3, 1, "", "xlogy"], [617, 3, 1, "", "xlogy_"], [618, 3, 1, "", "zero_"]], "torch.TypedStorage": [[2017, 3, 1, "", "bfloat16"], [2017, 3, 1, "", "bool"], [2017, 3, 1, "", "byte"], [2017, 3, 1, "", "char"], [2017, 3, 1, "", "clone"], [2017, 3, 1, "", "complex_double"], [2017, 3, 1, "", "complex_float"], [2017, 3, 1, "", "copy_"], [2017, 3, 1, "", "cpu"], [2017, 3, 1, "", "cuda"], [2017, 3, 1, "", "data_ptr"], [2017, 4, 1, "", "device"], [2017, 3, 1, "", "double"], [2017, 2, 1, "", "dtype"], [2017, 3, 1, "", "element_size"], [2017, 4, 1, "", "filename"], [2017, 3, 1, "", "fill_"], [2017, 3, 1, "", "float"], [2017, 3, 1, "", "float8_e4m3fn"], [2017, 3, 1, "", "float8_e4m3fnuz"], [2017, 3, 1, "", "float8_e5m2"], [2017, 3, 1, "", "float8_e5m2fnuz"], [2017, 3, 1, "", "from_buffer"], [2017, 3, 1, "", "from_file"], [2017, 3, 1, "", "get_device"], [2017, 3, 1, "", "half"], [2017, 3, 1, "", "hpu"], [2017, 3, 1, "", "int"], [2017, 4, 1, "", "is_cuda"], [2017, 4, 1, "", "is_hpu"], [2017, 3, 1, "", "is_pinned"], [2017, 3, 1, "", "is_shared"], [2017, 2, 1, "", "is_sparse"], [2017, 3, 1, "", "long"], [2017, 3, 1, "", "nbytes"], [2017, 3, 1, "", "pickle_storage_type"], [2017, 3, 1, "", "pin_memory"], [2017, 3, 1, "", "resizable"], [2017, 3, 1, "", "resize_"], [2017, 3, 1, "", "share_memory_"], [2017, 3, 1, "", "short"], [2017, 3, 1, "", "size"], [2017, 3, 1, "", "tolist"], [2017, 3, 1, "", "type"], [2017, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[2017, 3, 1, "", "bfloat16"], [2017, 3, 1, "", "bool"], [2017, 3, 1, "", "byte"], [2017, 3, 1, "", "byteswap"], [2017, 3, 1, "", "char"], [2017, 3, 1, "", "clone"], [2017, 3, 1, "", "complex_double"], [2017, 3, 1, "", "complex_float"], [2017, 3, 1, "", "copy_"], [2017, 3, 1, "", "cpu"], [2017, 3, 1, "", "cuda"], [2017, 3, 1, "", "data_ptr"], [2017, 2, 1, "", "device"], [2017, 3, 1, "", "double"], [2017, 3, 1, "", "element_size"], [2017, 4, 1, "", "filename"], [2017, 3, 1, "", "fill_"], [2017, 3, 1, "", "float"], [2017, 3, 1, "", "float8_e4m3fn"], [2017, 3, 1, "", "float8_e4m3fnuz"], [2017, 3, 1, "", "float8_e5m2"], [2017, 3, 1, "", "float8_e5m2fnuz"], [2017, 3, 1, "", "from_buffer"], [2017, 3, 1, "", "from_file"], [2017, 3, 1, "", "get_device"], [2017, 3, 1, "", "half"], [2017, 3, 1, "", "hpu"], [2017, 3, 1, "", "int"], [2017, 4, 1, "", "is_cuda"], [2017, 4, 1, "", "is_hpu"], [2017, 3, 1, "", "is_pinned"], [2017, 3, 1, "", "is_shared"], [2017, 2, 1, "", "is_sparse"], [2017, 2, 1, "", "is_sparse_csr"], [2017, 3, 1, "", "long"], [2017, 3, 1, "", "mps"], [2017, 3, 1, "", "nbytes"], [2017, 3, 1, "", "new"], [2017, 3, 1, "", "pin_memory"], [2017, 3, 1, "", "resizable"], [2017, 3, 1, "", "resize_"], [2017, 3, 1, "", "share_memory_"], [2017, 3, 1, "", "short"], [2017, 3, 1, "", "size"], [2017, 3, 1, "", "tolist"], [2017, 3, 1, "", "type"], [2017, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch.__future__": [[56, 5, 1, "", "get_overwrite_module_params_on_conversion"], [56, 5, 1, "", "get_swap_module_params_on_conversion"], [56, 5, 1, "", "set_overwrite_module_params_on_conversion"], [56, 5, 1, "", "set_swap_module_params_on_conversion"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[675, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.ao": [[2006, 0, 0, "-", "nn"], [2006, 0, 0, "-", "ns"], [2006, 0, 0, "-", "pruning"], [2006, 0, 0, "-", "quantization"]], "torch.ao.nn": [[2009, 0, 0, "-", "intrinsic"], [2009, 0, 0, "-", "qat"], [2006, 0, 0, "-", "quantizable"], [2006, 0, 0, "-", "quantized"], [2006, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[695, 1, 1, "", "BNReLU2d"], [696, 1, 1, "", "BNReLU3d"], [697, 1, 1, "", "ConvBn1d"], [698, 1, 1, "", "ConvBn2d"], [699, 1, 1, "", "ConvBn3d"], [700, 1, 1, "", "ConvBnReLU1d"], [701, 1, 1, "", "ConvBnReLU2d"], [702, 1, 1, "", "ConvBnReLU3d"], [703, 1, 1, "", "ConvReLU1d"], [704, 1, 1, "", "ConvReLU2d"], [705, 1, 1, "", "ConvReLU3d"], [706, 1, 1, "", "LinearReLU"], [2009, 0, 0, "-", "modules"], [2009, 0, 0, "-", "qat"], [2009, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[2006, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[707, 1, 1, "", "ConvBn1d"], [708, 1, 1, "", "ConvBn2d"], [709, 1, 1, "", "ConvBn3d"], [710, 1, 1, "", "ConvBnReLU1d"], [711, 1, 1, "", "ConvBnReLU2d"], [712, 1, 1, "", "ConvBnReLU3d"], [713, 1, 1, "", "ConvReLU2d"], [714, 1, 1, "", "ConvReLU3d"], [715, 1, 1, "", "LinearReLU"], [716, 1, 1, "", "freeze_bn_stats"], [2009, 0, 0, "-", "modules"], [717, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[2006, 0, 0, "-", "conv_fused"], [2006, 0, 0, "-", "linear_fused"], [2006, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[718, 1, 1, "", "BNReLU2d"], [719, 1, 1, "", "BNReLU3d"], [720, 1, 1, "", "ConvReLU1d"], [721, 1, 1, "", "ConvReLU2d"], [722, 1, 1, "", "ConvReLU3d"], [723, 1, 1, "", "LinearReLU"], [2009, 0, 0, "-", "dynamic"], [2009, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[724, 1, 1, "", "LinearReLU"], [2009, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2006, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[2006, 0, 0, "-", "bn_relu"], [2006, 0, 0, "-", "conv_add"], [2006, 0, 0, "-", "conv_relu"], [2006, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[725, 1, 1, "", "Conv2d"], [726, 1, 1, "", "Conv3d"], [727, 1, 1, "", "Linear"], [2009, 0, 0, "-", "dynamic"], [2009, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[728, 1, 1, "", "Linear"], [2009, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[2006, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "embedding_ops"], [2006, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[729, 1, 1, "", "LSTM"], [730, 1, 1, "", "MultiheadAttention"], [2006, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[730, 3, 1, "", "dequantize"], [730, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[2006, 0, 0, "-", "activation"], [2006, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[731, 1, 1, "", "BatchNorm2d"], [732, 1, 1, "", "BatchNorm3d"], [733, 1, 1, "", "Conv1d"], [734, 1, 1, "", "Conv2d"], [735, 1, 1, "", "Conv3d"], [736, 1, 1, "", "ConvTranspose1d"], [737, 1, 1, "", "ConvTranspose2d"], [738, 1, 1, "", "ConvTranspose3d"], [739, 1, 1, "", "ELU"], [740, 1, 1, "", "Embedding"], [741, 1, 1, "", "EmbeddingBag"], [742, 1, 1, "", "FXFloatFunctional"], [743, 1, 1, "", "FloatFunctional"], [744, 1, 1, "", "GroupNorm"], [745, 1, 1, "", "Hardswish"], [746, 1, 1, "", "InstanceNorm1d"], [747, 1, 1, "", "InstanceNorm2d"], [748, 1, 1, "", "InstanceNorm3d"], [749, 1, 1, "", "LayerNorm"], [750, 1, 1, "", "LeakyReLU"], [751, 1, 1, "", "Linear"], [752, 1, 1, "", "QFunctional"], [753, 1, 1, "", "ReLU6"], [754, 1, 1, "", "Sigmoid"], [2009, 0, 0, "-", "dynamic"], [2009, 0, 0, "-", "functional"], [2009, 0, 0, "-", "modules"], [2006, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[733, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[740, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[741, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[751, 3, 1, "", "from_float"], [751, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[755, 1, 1, "", "GRU"], [756, 1, 1, "", "GRUCell"], [757, 1, 1, "", "LSTM"], [758, 1, 1, "", "LSTMCell"], [759, 1, 1, "", "Linear"], [760, 1, 1, "", "RNNCell"], [2009, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[759, 3, 1, "", "from_float"], [759, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[761, 1, 1, "", "adaptive_avg_pool2d"], [762, 1, 1, "", "adaptive_avg_pool3d"], [763, 1, 1, "", "avg_pool2d"], [764, 1, 1, "", "avg_pool3d"], [765, 1, 1, "", "celu"], [766, 1, 1, "", "clamp"], [767, 1, 1, "", "conv1d"], [768, 1, 1, "", "conv2d"], [769, 1, 1, "", "conv3d"], [770, 1, 1, "", "elu"], [771, 1, 1, "", "hardsigmoid"], [772, 1, 1, "", "hardswish"], [773, 1, 1, "", "hardtanh"], [774, 1, 1, "", "interpolate"], [775, 1, 1, "", "leaky_relu"], [776, 1, 1, "", "linear"], [777, 1, 1, "", "max_pool1d"], [778, 1, 1, "", "max_pool2d"], [779, 1, 1, "", "threshold"], [780, 1, 1, "", "upsample"], [781, 1, 1, "", "upsample_bilinear"], [782, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[2006, 0, 0, "-", "activation"], [2006, 0, 0, "-", "batchnorm"], [2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "dropout"], [2006, 0, 0, "-", "embedding_ops"], [2006, 0, 0, "-", "functional_modules"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "normalization"], [2006, 0, 0, "-", "rnn"], [2006, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[2006, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "rnn"], [2006, 0, 0, "-", "sparse"], [2006, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[2006, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[2006, 0, 0, "-", "dynamic"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[2006, 0, 0, "-", "linear"]], "torch.ao.ns": [[2024, 0, 0, "-", "_numeric_suite"], [2025, 0, 0, "-", "_numeric_suite_fx"], [2006, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[2024, 1, 1, "", "Logger"], [2024, 1, 1, "", "OutputLogger"], [2024, 1, 1, "", "Shadow"], [2024, 1, 1, "", "ShadowLogger"], [2024, 5, 1, "", "compare_model_outputs"], [2024, 5, 1, "", "compare_model_stub"], [2024, 5, 1, "", "compare_weights"], [2024, 5, 1, "", "get_logger_dict"], [2024, 5, 1, "", "get_matching_activations"], [2024, 5, 1, "", "prepare_model_outputs"], [2024, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[2024, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[2024, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[2024, 3, 1, "", "add"], [2024, 3, 1, "", "add_relu"], [2024, 3, 1, "", "add_scalar"], [2024, 3, 1, "", "cat"], [2024, 3, 1, "", "forward"], [2024, 3, 1, "", "mul"], [2024, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[2024, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[2025, 1, 1, "", "NSTracer"], [2025, 1, 1, "", "OutputComparisonLogger"], [2025, 1, 1, "", "OutputLogger"], [2025, 5, 1, "", "add_loggers"], [2025, 5, 1, "", "add_shadow_loggers"], [2025, 5, 1, "", "convert_n_shadows_model"], [2025, 5, 1, "", "extend_logger_results_with_comparison"], [2025, 5, 1, "", "extract_logger_info"], [2025, 5, 1, "", "extract_results_n_shadows_model"], [2025, 5, 1, "", "extract_shadow_logger_info"], [2025, 5, 1, "", "extract_weights"], [2025, 5, 1, "", "loggers_set_enabled"], [2025, 5, 1, "", "loggers_set_save_activations"], [2025, 5, 1, "", "prepare_n_shadows_model"], [2025, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[2025, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[2025, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[2025, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[2006, 0, 0, "-", "graph_matcher"], [2006, 0, 0, "-", "graph_passes"], [2006, 0, 0, "-", "mappings"], [2006, 0, 0, "-", "n_shadows_utils"], [2006, 0, 0, "-", "ns_types"], [2006, 0, 0, "-", "pattern_utils"], [2006, 0, 0, "-", "qconfig_multi_mapping"], [2006, 0, 0, "-", "utils"], [2006, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[2025, 5, 1, "", "compute_cosine_similarity"], [2025, 5, 1, "", "compute_normalized_l2_error"], [2025, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[2006, 0, 0, "-", "scheduler"], [2006, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[2006, 0, 0, "-", "base_scheduler"], [2006, 0, 0, "-", "cubic_scheduler"], [2006, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2006, 0, 0, "-", "base_sparsifier"], [2006, 0, 0, "-", "nearly_diagonal_sparsifier"], [2006, 0, 0, "-", "utils"], [2006, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[783, 1, 1, "", "DeQuantStub"], [784, 1, 1, "", "QuantStub"], [785, 1, 1, "", "QuantWrapper"], [786, 1, 1, "", "add_quant_dequant"], [2006, 0, 0, "-", "backend_config"], [792, 1, 1, "", "convert"], [793, 1, 1, "", "default_eval_fn"], [2006, 0, 0, "-", "fake_quantize"], [2006, 0, 0, "-", "fuse_modules"], [2006, 0, 0, "-", "fuser_method_mappings"], [2006, 0, 0, "-", "fx"], [2006, 0, 0, "-", "observer"], [833, 1, 1, "", "prepare"], [834, 1, 1, "", "prepare_qat"], [835, 1, 1, "", "propagate_qconfig_"], [2009, 0, 0, "-", "pt2e"], [2006, 0, 0, "-", "qconfig"], [2006, 0, 0, "-", "qconfig_mapping"], [2006, 0, 0, "-", "quant_type"], [2006, 0, 0, "-", "quantization_mappings"], [2006, 0, 0, "-", "quantize"], [853, 1, 1, "", "quantize_dynamic"], [2006, 0, 0, "-", "quantize_fx"], [2006, 0, 0, "-", "quantize_jit"], [2006, 0, 0, "-", "quantize_pt2e"], [858, 1, 1, "", "quantize_qat"], [2009, 0, 0, "-", "quantizer"], [2006, 0, 0, "-", "stubs"], [859, 1, 1, "", "swap_module"], [2006, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[787, 1, 1, "", "BackendConfig"], [788, 1, 1, "", "BackendPatternConfig"], [789, 1, 1, "", "DTypeConfig"], [790, 1, 1, "", "DTypeWithConstraints"], [791, 1, 1, "", "ObservationType"], [2006, 0, 0, "-", "backend_config"], [2006, 0, 0, "-", "executorch"], [2006, 0, 0, "-", "fbgemm"], [2006, 0, 0, "-", "native"], [2006, 0, 0, "-", "observation_type"], [2006, 0, 0, "-", "onednn"], [2006, 0, 0, "-", "qnnpack"], [2006, 0, 0, "-", "tensorrt"], [2006, 0, 0, "-", "utils"], [2006, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[787, 4, 1, "", "configs"], [787, 3, 1, "", "from_dict"], [787, 3, 1, "", "set_backend_pattern_config"], [787, 3, 1, "", "set_backend_pattern_configs"], [787, 3, 1, "", "set_name"], [787, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[788, 3, 1, "", "add_dtype_config"], [788, 3, 1, "", "from_dict"], [788, 3, 1, "", "set_dtype_configs"], [788, 3, 1, "", "set_fused_module"], [788, 3, 1, "", "set_fuser_method"], [788, 3, 1, "", "set_observation_type"], [788, 3, 1, "", "set_pattern"], [788, 3, 1, "", "set_qat_module"], [788, 3, 1, "", "set_reference_quantized_module"], [788, 3, 1, "", "set_root_module"], [788, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[789, 3, 1, "", "from_dict"], [789, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[791, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [791, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [791, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[794, 1, 1, "", "FakeQuantize"], [795, 1, 1, "", "FakeQuantizeBase"], [796, 1, 1, "", "FixedQParamsFakeQuantize"], [797, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [798, 2, 1, "", "default_fake_quant"], [799, 2, 1, "", "default_fused_act_fake_quant"], [800, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [801, 2, 1, "", "default_fused_wt_fake_quant"], [802, 2, 1, "", "default_histogram_fake_quant"], [803, 2, 1, "", "default_per_channel_weight_fake_quant"], [804, 2, 1, "", "default_weight_fake_quant"], [805, 1, 1, "", "disable_fake_quant"], [806, 1, 1, "", "disable_observer"], [807, 1, 1, "", "enable_fake_quant"], [808, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": [[796, 3, 1, "", "extra_repr"]], "torch.ao.quantization.fuse_modules": [[809, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[2006, 0, 0, "-", "convert"], [2006, 0, 0, "-", "custom_config"], [2006, 0, 0, "-", "fuse"], [2006, 0, 0, "-", "fuse_handler"], [2006, 0, 0, "-", "graph_module"], [2006, 0, 0, "-", "lower_to_fbgemm"], [2006, 0, 0, "-", "lower_to_qnnpack"], [2006, 0, 0, "-", "lstm_utils"], [2006, 0, 0, "-", "match_utils"], [2006, 0, 0, "-", "pattern_utils"], [2006, 0, 0, "-", "prepare"], [2006, 0, 0, "-", "qconfig_mapping_utils"], [2006, 0, 0, "-", "quantize_handler"], [2006, 0, 0, "-", "tracer"], [2006, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[810, 1, 1, "", "ConvertCustomConfig"], [811, 1, 1, "", "FuseCustomConfig"], [812, 1, 1, "", "PrepareCustomConfig"], [813, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[810, 3, 1, "", "from_dict"], [810, 3, 1, "", "set_observed_to_quantized_mapping"], [810, 3, 1, "", "set_preserved_attributes"], [810, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[811, 3, 1, "", "from_dict"], [811, 3, 1, "", "set_preserved_attributes"], [811, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[812, 3, 1, "", "from_dict"], [812, 3, 1, "", "set_float_to_observed_mapping"], [812, 3, 1, "", "set_input_quantized_indexes"], [812, 3, 1, "", "set_non_traceable_module_classes"], [812, 3, 1, "", "set_non_traceable_module_names"], [812, 3, 1, "", "set_output_quantized_indexes"], [812, 3, 1, "", "set_preserved_attributes"], [812, 3, 1, "", "set_standalone_module_class"], [812, 3, 1, "", "set_standalone_module_name"], [812, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[814, 1, 1, "", "HistogramObserver"], [815, 1, 1, "", "MinMaxObserver"], [816, 1, 1, "", "MovingAverageMinMaxObserver"], [817, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [818, 1, 1, "", "NoopObserver"], [819, 1, 1, "", "ObserverBase"], [820, 1, 1, "", "PerChannelMinMaxObserver"], [821, 1, 1, "", "PlaceholderObserver"], [822, 1, 1, "", "RecordingObserver"], [823, 2, 1, "", "default_debug_observer"], [824, 2, 1, "", "default_dynamic_quant_observer"], [825, 2, 1, "", "default_float_qparams_observer"], [826, 2, 1, "", "default_histogram_observer"], [827, 2, 1, "", "default_observer"], [828, 2, 1, "", "default_per_channel_weight_observer"], [829, 2, 1, "", "default_placeholder_observer"], [830, 2, 1, "", "default_weight_observer"], [831, 1, 1, "", "get_observer_state_dict"], [832, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[815, 3, 1, "", "calculate_qparams"], [815, 3, 1, "", "forward"], [815, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[819, 3, 1, "", "with_args"], [819, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[820, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[2006, 0, 0, "-", "duplicate_dq_pass"], [2006, 0, 0, "-", "eval_utils"], [2009, 0, 0, "-", "generate_numeric_debug_handle"], [2006, 0, 0, "-", "graph_utils"], [2006, 0, 0, "-", "port_metadata_pass"], [2006, 0, 0, "-", "prepare"], [2006, 0, 0, "-", "qat_utils"], [2009, 0, 0, "-", "representation"], [2006, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.representation": [[2006, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[836, 1, 1, "", "QConfig"], [837, 2, 1, "", "default_activation_only_qconfig"], [838, 2, 1, "", "default_debug_qconfig"], [839, 2, 1, "", "default_dynamic_qconfig"], [840, 2, 1, "", "default_per_channel_qconfig"], [841, 2, 1, "", "default_qat_qconfig"], [842, 2, 1, "", "default_qat_qconfig_v2"], [843, 2, 1, "", "default_qconfig"], [844, 2, 1, "", "default_weight_only_qconfig"], [845, 2, 1, "", "float16_dynamic_qconfig"], [846, 2, 1, "", "float16_static_qconfig"], [847, 2, 1, "", "float_qparams_weight_only_qconfig"], [848, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[849, 1, 1, "", "QConfigMapping"], [850, 1, 1, "", "get_default_qat_qconfig_mapping"], [851, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[849, 3, 1, "", "from_dict"], [849, 3, 1, "", "set_global"], [849, 3, 1, "", "set_module_name"], [849, 3, 1, "", "set_module_name_object_type_order"], [849, 3, 1, "", "set_module_name_regex"], [849, 3, 1, "", "set_object_type"], [849, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[854, 1, 1, "", "convert_fx"], [855, 1, 1, "", "fuse_fx"], [856, 1, 1, "", "prepare_fx"], [857, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[2006, 0, 0, "-", "composable_quantizer"], [2006, 0, 0, "-", "embedding_quantizer"], [2006, 0, 0, "-", "quantizer"], [2006, 0, 0, "-", "utils"], [2006, 0, 0, "-", "x86_inductor_quantizer"], [2006, 0, 0, "-", "xnnpack_quantizer"], [2006, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [888, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [909, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[884, 3, 1, "", "backward"], [885, 3, 1, "", "forward"], [886, 3, 1, "", "jvp"], [887, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[889, 1, 1, "", "UnpackedDualTensor"], [890, 1, 1, "", "dual_level"], [891, 5, 1, "", "enter_dual_level"], [892, 5, 1, "", "exit_dual_level"], [893, 5, 1, "", "make_dual"], [894, 5, 1, "", "unpack_dual"]], "torch.autograd.forward_ad.UnpackedDualTensor": [[889, 3, 1, "", "count"], [889, 3, 1, "", "index"], [889, 2, 1, "", "primal"], [889, 2, 1, "", "tangent"]], "torch.autograd.function": [[895, 1, 1, "", "BackwardCFunction"], [900, 1, 1, "", "InplaceFunction"], [901, 1, 1, "", "NestedIOFunction"], [902, 5, 1, "", "once_differentiable"]], "torch.autograd.function.BackwardCFunction": [[895, 3, 1, "", "apply"], [895, 3, 1, "", "apply_jvp"], [895, 3, 1, "", "mark_dirty"], [895, 3, 1, "", "mark_non_differentiable"], [895, 3, 1, "", "save_for_backward"], [895, 3, 1, "", "save_for_forward"], [895, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.FunctionCtx": [[896, 3, 1, "", "mark_dirty"], [897, 3, 1, "", "mark_non_differentiable"], [898, 3, 1, "", "save_for_backward"], [899, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.InplaceFunction": [[900, 3, 1, "", "backward"], [900, 3, 1, "", "forward"], [900, 3, 1, "", "jvp"], [900, 3, 1, "", "mark_dirty"], [900, 3, 1, "", "mark_non_differentiable"], [900, 3, 1, "", "save_for_backward"], [900, 3, 1, "", "save_for_forward"], [900, 3, 1, "", "set_materialize_grads"], [900, 3, 1, "", "setup_context"], [900, 3, 1, "", "vjp"], [900, 3, 1, "", "vmap"]], "torch.autograd.function.NestedIOFunction": [[901, 3, 1, "", "backward"], [901, 3, 1, "", "backward_extended"], [901, 3, 1, "", "forward"], [901, 3, 1, "", "forward_extended"], [901, 3, 1, "", "jvp"], [901, 3, 1, "", "mark_dirty"], [901, 3, 1, "", "mark_non_differentiable"], [901, 3, 1, "", "save_for_backward"], [901, 3, 1, "", "save_for_forward"], [901, 4, 1, "", "saved_tensors"], [901, 3, 1, "", "set_materialize_grads"], [901, 3, 1, "", "setup_context"], [901, 3, 1, "", "vjp"], [901, 3, 1, "", "vmap"]], "torch.autograd.functional": [[903, 5, 1, "", "hessian"], [904, 5, 1, "", "hvp"], [905, 5, 1, "", "jacobian"], [906, 5, 1, "", "jvp"], [907, 5, 1, "", "vhp"], [908, 5, 1, "", "vjp"]], "torch.autograd.grad_mode": [[910, 1, 1, "", "inference_mode"], [911, 1, 1, "", "set_grad_enabled"], [912, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.grad_mode.inference_mode": [[910, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_grad_enabled": [[911, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_multithreading_enabled": [[912, 3, 1, "", "clone"]], "torch.autograd.gradcheck": [[913, 6, 1, "", "GradcheckError"], [914, 5, 1, "", "gradcheck"], [915, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [921, 5, 1, "", "increment_version"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[916, 3, 1, "", "metadata"], [917, 3, 1, "", "name"], [918, 4, 1, "", "next_functions"], [919, 3, 1, "", "register_hook"], [920, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[922, 1, 1, "", "EnforceUnique"], [923, 1, 1, "", "KinetoStepTracker"], [1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [924, 5, 1, "", "load_nvprof"], [925, 5, 1, "", "parse_nvprof_trace"], [1, 1, 1, "", "profile"], [930, 1, 1, "", "record_function"]], "torch.autograd.profiler.EnforceUnique": [[922, 3, 1, "", "see"]], "torch.autograd.profiler.KinetoStepTracker": [[923, 3, 1, "", "current_step"], [923, 3, 1, "", "erase_step_count"], [923, 3, 1, "", "increment_step"], [923, 3, 1, "", "init_step_count"]], "torch.autograd.profiler.profile": [[926, 3, 1, "", "export_chrome_trace"], [927, 3, 1, "", "key_averages"], [928, 4, 1, "", "self_cpu_time_total"], [929, 3, 1, "", "total_average"]], "torch.autograd.profiler_util": [[931, 1, 1, "", "Interval"], [932, 1, 1, "", "Kernel"], [933, 1, 1, "", "MemRecordsAcc"], [934, 1, 1, "", "StringTable"]], "torch.autograd.profiler_util.Interval": [[931, 3, 1, "", "elapsed_us"]], "torch.autograd.profiler_util.Kernel": [[932, 3, 1, "", "count"], [932, 2, 1, "", "device"], [932, 2, 1, "", "duration"], [932, 3, 1, "", "index"], [932, 2, 1, "", "name"]], "torch.autograd.profiler_util.MemRecordsAcc": [[933, 3, 1, "", "in_interval"]], "torch.autograd.profiler_util.StringTable": [[934, 3, 1, "", "clear"], [934, 3, 1, "", "copy"], [934, 2, 1, "", "default_factory"], [934, 3, 1, "", "fromkeys"], [934, 3, 1, "", "get"], [934, 3, 1, "", "items"], [934, 3, 1, "", "keys"], [934, 3, 1, "", "pop"], [934, 3, 1, "", "popitem"], [934, 3, 1, "", "setdefault"], [934, 3, 1, "", "update"], [934, 3, 1, "", "values"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mha"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "nnpack"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPAParams"], [2, 5, 1, "", "can_use_efficient_attention"], [2, 5, 1, "", "can_use_flash_attention"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mha": [[2, 5, 1, "", "get_fastpath_enabled"], [2, 5, 1, "", "set_fastpath_enabled"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.nnpack": [[2, 5, 1, "", "flags"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "set_flags"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[969, 5, 1, "", "allow_in_graph"], [970, 5, 1, "", "assume_constant_result"], [971, 5, 1, "", "compile"], [972, 5, 1, "", "cudagraph_mark_step_begin"], [973, 5, 1, "", "disable"], [974, 5, 1, "", "list_backends"], [975, 5, 1, "", "reset"]], "torch.cpu": [[988, 1, 1, "", "Stream"], [989, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [990, 5, 1, "", "current_device"], [991, 5, 1, "", "current_stream"], [992, 5, 1, "", "device_count"], [993, 5, 1, "", "is_available"], [994, 5, 1, "", "set_device"], [995, 5, 1, "", "stream"], [996, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda": [[998, 1, 1, "", "CUDAGraph"], [999, 1, 1, "", "CUDAPluggableAllocator"], [1000, 1, 1, "", "Event"], [1001, 1, 1, "", "ExternalStream"], [1002, 6, 1, "", "OutOfMemoryError"], [1003, 1, 1, "", "Stream"], [1004, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1005, 5, 1, "", "caching_allocator_alloc"], [1006, 5, 1, "", "caching_allocator_delete"], [1007, 5, 1, "", "can_device_access_peer"], [1008, 5, 1, "", "change_current_allocator"], [1009, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [1015, 5, 1, "", "current_blas_handle"], [1016, 5, 1, "", "current_device"], [1017, 5, 1, "", "current_stream"], [1018, 5, 1, "", "default_stream"], [1019, 1, 1, "", "device"], [1020, 5, 1, "", "device_count"], [1021, 1, 1, "", "device_of"], [1022, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [1023, 5, 1, "", "get_allocator_backend"], [1024, 5, 1, "", "get_arch_list"], [1025, 5, 1, "", "get_device_capability"], [1026, 5, 1, "", "get_device_name"], [1027, 5, 1, "", "get_device_properties"], [1028, 5, 1, "", "get_gencode_flags"], [1029, 5, 1, "", "get_rng_state"], [1030, 5, 1, "", "get_rng_state_all"], [1031, 5, 1, "", "get_sync_debug_mode"], [1032, 1, 1, "", "graph"], [1033, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1034, 5, 1, "", "init"], [1035, 5, 1, "", "initial_seed"], [1036, 5, 1, "", "ipc_collect"], [1037, 5, 1, "", "is_available"], [1038, 5, 1, "", "is_current_stream_capturing"], [1039, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1042, 5, 1, "", "list_gpu_processes"], [1043, 5, 1, "", "make_graphed_callables"], [1044, 5, 1, "", "manual_seed"], [1045, 5, 1, "", "manual_seed_all"], [1046, 5, 1, "", "max_memory_allocated"], [1047, 5, 1, "", "max_memory_cached"], [1048, 5, 1, "", "max_memory_reserved"], [1049, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1050, 5, 1, "", "memory_allocated"], [1051, 5, 1, "", "memory_cached"], [1052, 5, 1, "", "memory_reserved"], [1053, 5, 1, "", "memory_snapshot"], [1054, 5, 1, "", "memory_stats"], [1055, 5, 1, "", "memory_summary"], [1056, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1060, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1061, 5, 1, "", "reset_max_memory_allocated"], [1062, 5, 1, "", "reset_max_memory_cached"], [1063, 5, 1, "", "reset_peak_memory_stats"], [1064, 5, 1, "", "seed"], [1065, 5, 1, "", "seed_all"], [1066, 5, 1, "", "set_device"], [1067, 5, 1, "", "set_per_process_memory_fraction"], [1068, 5, 1, "", "set_rng_state"], [1069, 5, 1, "", "set_rng_state_all"], [1070, 5, 1, "", "set_stream"], [1071, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1072, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1073, 5, 1, "", "synchronize"], [1074, 5, 1, "", "temperature"], [1075, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[998, 3, 1, "", "capture_begin"], [998, 3, 1, "", "capture_end"], [998, 3, 1, "", "debug_dump"], [998, 3, 1, "", "enable_debug_mode"], [998, 3, 1, "", "pool"], [998, 3, 1, "", "replay"], [998, 3, 1, "", "reset"]], "torch.cuda.Event": [[1000, 3, 1, "", "elapsed_time"], [1000, 3, 1, "", "from_ipc_handle"], [1000, 3, 1, "", "ipc_handle"], [1000, 3, 1, "", "query"], [1000, 3, 1, "", "record"], [1000, 3, 1, "", "synchronize"], [1000, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[1001, 3, 1, "", "query"], [1001, 3, 1, "", "record_event"], [1001, 3, 1, "", "synchronize"], [1001, 3, 1, "", "wait_event"], [1001, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[1003, 3, 1, "", "query"], [1003, 3, 1, "", "record_event"], [1003, 3, 1, "", "synchronize"], [1003, 3, 1, "", "wait_event"], [1003, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.comm": [[1010, 5, 1, "", "broadcast"], [1011, 5, 1, "", "broadcast_coalesced"], [1012, 5, 1, "", "gather"], [1013, 5, 1, "", "reduce_add"], [1014, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1040, 5, 1, "", "_create_jit_fn"], [1041, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[2047, 5, 1, "", "_dump_snapshot"], [2047, 5, 1, "", "_record_memory_history"], [2047, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1057, 5, 1, "", "mark"], [1058, 5, 1, "", "range_pop"], [1059, 5, 1, "", "range_push"]], "torch.distributed": [[25, 1, 1, "", "Backend"], [25, 1, 1, "", "DistBackendError"], [25, 1, 1, "", "DistError"], [25, 1, 1, "", "DistNetworkError"], [25, 1, 1, "", "DistStoreError"], [25, 1, 1, "", "FileStore"], [22, 1, 1, "", "GradBucket"], [25, 1, 1, "", "HashStore"], [25, 1, 1, "", "P2POp"], [25, 1, 1, "", "PrefixStore"], [25, 1, 1, "", "ReduceOp"], [25, 1, 1, "", "Store"], [25, 1, 1, "", "TCPStore"], [25, 1, 1, "", "Work"], [25, 0, 0, "-", "algorithms"], [25, 5, 1, "", "all_gather"], [25, 5, 1, "", "all_gather_into_tensor"], [25, 5, 1, "", "all_gather_object"], [25, 5, 1, "", "all_reduce"], [25, 5, 1, "", "all_to_all"], [25, 5, 1, "", "all_to_all_single"], [25, 0, 0, "-", "argparse_util"], [2011, 0, 0, "-", "autograd"], [25, 5, 1, "", "barrier"], [25, 5, 1, "", "batch_isend_irecv"], [25, 5, 1, "", "breakpoint"], [25, 5, 1, "", "broadcast"], [25, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "c10d_logger"], [27, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "collective_utils"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "device_mesh"], [25, 0, 0, "-", "distributed_c10d"], [25, 0, 0, "-", "elastic"], [49, 0, 0, "-", "fsdp"], [25, 5, 1, "", "gather"], [25, 5, 1, "", "gather_object"], [25, 5, 1, "", "get_backend"], [25, 5, 1, "", "get_global_rank"], [25, 5, 1, "", "get_group_rank"], [25, 5, 1, "", "get_process_group_ranks"], [25, 5, 1, "", "get_rank"], [25, 5, 1, "", "get_world_size"], [25, 5, 1, "", "init_process_group"], [25, 5, 1, "", "irecv"], [25, 5, 1, "", "is_available"], [25, 5, 1, "", "is_gloo_available"], [25, 5, 1, "", "is_initialized"], [25, 5, 1, "", "is_mpi_available"], [25, 5, 1, "", "is_nccl_available"], [25, 5, 1, "", "is_torchelastic_launched"], [25, 5, 1, "", "isend"], [25, 0, 0, "-", "launch"], [25, 0, 0, "-", "launcher"], [25, 0, 0, "-", "logging_handlers"], [25, 5, 1, "", "monitored_barrier"], [25, 5, 1, "", "new_group"], [25, 0, 0, "-", "nn"], [29, 0, 0, "-", "optim"], [25, 0, 0, "-", "pipeline"], [25, 5, 1, "", "recv"], [25, 5, 1, "", "reduce"], [25, 1, 1, "", "reduce_op"], [25, 5, 1, "", "reduce_scatter"], [25, 5, 1, "", "reduce_scatter_tensor"], [25, 0, 0, "-", "remote_device"], [25, 0, 0, "-", "rendezvous"], [2011, 0, 0, "-", "rpc"], [43, 0, 0, "-", "run"], [25, 5, 1, "", "scatter"], [25, 5, 1, "", "scatter_object_list"], [25, 5, 1, "", "send"], [25, 0, 0, "-", "tensor"], [25, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[25, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[22, 5, 1, "", "buffer"], [22, 5, 1, "", "gradients"], [22, 5, 1, "", "index"], [22, 5, 1, "", "is_last"], [22, 5, 1, "", "parameters"], [22, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[25, 5, 1, "", "add"], [25, 5, 1, "", "compare_set"], [25, 5, 1, "", "delete_key"], [25, 5, 1, "", "get"], [25, 5, 1, "", "num_keys"], [25, 5, 1, "", "set"], [25, 5, 1, "", "set_timeout"], [25, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[26, 1, 1, "", "Join"], [26, 1, 1, "", "JoinHook"], [26, 1, 1, "", "Joinable"], [25, 0, 0, "-", "ddp_comm_hooks"], [25, 0, 0, "-", "join"], [25, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[26, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[26, 3, 1, "", "main_hook"], [26, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[26, 4, 1, "", "join_device"], [26, 3, 1, "", "join_hook"], [26, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, 0, 0, "-", "ddp_zero_hook"], [25, 0, 0, "-", "debugging_hooks"], [25, 0, 0, "-", "default_hooks"], [25, 0, 0, "-", "mixed_precision_hooks"], [25, 0, 0, "-", "optimizer_overlap_hooks"], [25, 0, 0, "-", "post_localSGD_hook"], [25, 0, 0, "-", "powerSGD_hook"], [25, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[22, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[22, 5, 1, "", "allreduce_hook"], [22, 5, 1, "", "bf16_compress_hook"], [22, 5, 1, "", "bf16_compress_wrapper"], [22, 5, 1, "", "fp16_compress_hook"], [22, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[22, 1, 1, "", "PowerSGDState"], [22, 5, 1, "", "batched_powerSGD_hook"], [22, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[22, 3, 1, "", "__getstate__"], [22, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[25, 0, 0, "-", "averagers"], [25, 0, 0, "-", "hierarchical_model_averager"], [25, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[2011, 5, 1, "", "backward"], [2011, 1, 1, "", "context"], [2011, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[27, 1, 1, "", "DefaultLoadPlanner"], [27, 1, 1, "", "DefaultSavePlanner"], [27, 1, 1, "", "FileSystemReader"], [27, 1, 1, "", "FileSystemWriter"], [27, 1, 1, "", "LoadPlan"], [27, 1, 1, "", "LoadPlanner"], [27, 1, 1, "", "ReadItem"], [27, 1, 1, "", "SavePlan"], [27, 1, 1, "", "SavePlanner"], [27, 1, 1, "", "StorageReader"], [27, 1, 1, "", "StorageWriter"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "default_planner"], [25, 0, 0, "-", "filesystem"], [27, 5, 1, "", "load"], [27, 5, 1, "", "load_state_dict"], [25, 0, 0, "-", "metadata"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "planner"], [25, 0, 0, "-", "planner_helpers"], [25, 0, 0, "-", "resharding"], [27, 5, 1, "", "save"], [27, 5, 1, "", "save_state_dict"], [25, 0, 0, "-", "state_dict"], [25, 0, 0, "-", "state_dict_loader"], [25, 0, 0, "-", "state_dict_saver"], [25, 0, 0, "-", "stateful"], [25, 0, 0, "-", "storage"], [25, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[27, 3, 1, "", "lookup_tensor"], [27, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[27, 3, 1, "", "lookup_object"], [27, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[27, 3, 1, "", "commit_tensor"], [27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "load_bytes"], [27, 3, 1, "", "resolve_tensor"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "resolve_data"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "read_data"], [27, 3, 1, "", "read_metadata"], [27, 3, 1, "", "reset"], [27, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[27, 3, 1, "", "finish"], [27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "reset"], [27, 3, 1, "", "set_up_storage_writer"], [27, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.planner": [[27, 1, 1, "", "WriteItem"]], "torch.distributed.checkpoint.planner.WriteItem": [[27, 3, 1, "", "tensor_storage_size"]], "torch.distributed.checkpoint.state_dict": [[27, 1, 1, "", "StateDictOptions"], [27, 5, 1, "", "get_model_state_dict"], [27, 5, 1, "", "get_optimizer_state_dict"], [27, 5, 1, "", "get_state_dict"], [27, 5, 1, "", "set_model_state_dict"], [27, 5, 1, "", "set_optimizer_state_dict"], [27, 5, 1, "", "set_state_dict"]], "torch.distributed.checkpoint.stateful": [[27, 1, 1, "", "Stateful"]], "torch.distributed.checkpoint.stateful.Stateful": [[27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"]], "torch.distributed.device_mesh": [[25, 1, 1, "", "DeviceMesh"], [25, 5, 1, "", "init_device_mesh"]], "torch.distributed.elastic": [[33, 0, 0, "-", "agent"], [36, 0, 0, "-", "events"], [39, 0, 0, "-", "metrics"], [40, 0, 0, "-", "multiprocessing"], [42, 0, 0, "-", "rendezvous"], [44, 0, 0, "-", "timer"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[33, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[33, 1, 1, "", "ElasticAgent"], [33, 1, 1, "", "SimpleElasticAgent"], [33, 1, 1, "", "Worker"], [33, 1, 1, "", "WorkerGroup"], [33, 1, 1, "", "WorkerSpec"], [33, 1, 1, "", "WorkerState"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[33, 3, 1, "", "get_worker_group"], [33, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[33, 3, 1, "", "_assign_worker_ranks"], [33, 3, 1, "", "_exit_barrier"], [33, 3, 1, "", "_initialize_workers"], [33, 3, 1, "", "_monitor_workers"], [33, 3, 1, "", "_rendezvous"], [33, 3, 1, "", "_restart_workers"], [33, 3, 1, "", "_shutdown"], [33, 3, 1, "", "_start_workers"], [33, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[33, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[33, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[33, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[33, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[25, 0, 0, "-", "api"], [36, 5, 1, "", "get_logging_handler"], [25, 0, 0, "-", "handlers"], [36, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[36, 1, 1, "", "Event"], [36, 2, 1, "", "EventMetadataValue"], [36, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[25, 0, 0, "-", "api"], [39, 5, 1, "", "configure"], [39, 5, 1, "", "prof"], [39, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[39, 1, 1, "", "ConsoleMetricHandler"], [39, 1, 1, "", "MetricHandler"], [39, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[25, 0, 0, "-", "api"], [35, 0, 0, "-", "errors"], [25, 0, 0, "-", "redirects"], [40, 5, 1, "", "start_processes"], [25, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[40, 1, 1, "", "MultiprocessContext"], [40, 1, 1, "", "PContext"], [40, 1, 1, "", "RunProcsResult"], [40, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.errors": [[35, 1, 1, "", "ChildFailedError"], [35, 1, 1, "", "ErrorHandler"], [35, 1, 1, "", "ProcessFailure"], [25, 0, 0, "-", "error_handler"], [25, 0, 0, "-", "handlers"], [35, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[42, 1, 1, "", "RendezvousClosedError"], [42, 1, 1, "", "RendezvousConnectionError"], [42, 1, 1, "", "RendezvousError"], [42, 1, 1, "", "RendezvousGracefulExitError"], [42, 1, 1, "", "RendezvousHandler"], [42, 1, 1, "", "RendezvousHandlerRegistry"], [42, 1, 1, "", "RendezvousParameters"], [42, 1, 1, "", "RendezvousStateError"], [42, 1, 1, "", "RendezvousTimeoutError"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "c10d_rendezvous_backend"], [25, 0, 0, "-", "dynamic_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous_backend"], [25, 0, 0, "-", "etcd_server"], [25, 0, 0, "-", "etcd_store"], [42, 0, 0, "-", "registry"], [25, 0, 0, "-", "static_tcp_rendezvous"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[42, 3, 1, "", "get_backend"], [42, 3, 1, "", "get_run_id"], [42, 3, 1, "", "is_closed"], [42, 3, 1, "", "next_rendezvous"], [42, 3, 1, "", "num_nodes_waiting"], [42, 3, 1, "", "set_closed"], [42, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[42, 3, 1, "", "create_handler"], [42, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[42, 3, 1, "", "get"], [42, 3, 1, "", "get_as_bool"], [42, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[42, 1, 1, "", "C10dRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[42, 1, 1, "", "DynamicRendezvousHandler"], [42, 1, 1, "", "RendezvousBackend"], [42, 1, 1, "", "RendezvousTimeout"], [42, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[42, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[42, 4, 1, "", "close"], [42, 4, 1, "", "heartbeat"], [42, 4, 1, "", "join"], [42, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[42, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[42, 1, 1, "", "EtcdRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[42, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[42, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[42, 3, 1, "", "add"], [42, 3, 1, "", "check"], [42, 3, 1, "", "get"], [42, 3, 1, "", "set"], [42, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[44, 1, 1, "", "FileTimerClient"], [44, 1, 1, "", "FileTimerServer"], [44, 1, 1, "", "LocalTimerClient"], [44, 1, 1, "", "LocalTimerServer"], [44, 1, 1, "", "TimerClient"], [44, 1, 1, "", "TimerRequest"], [44, 1, 1, "", "TimerServer"], [25, 0, 0, "-", "api"], [44, 5, 1, "", "configure"], [44, 5, 1, "", "expires"], [25, 0, 0, "-", "file_based_local_timer"], [25, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[44, 3, 1, "", "acquire"], [44, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[44, 3, 1, "", "clear_timers"], [44, 3, 1, "", "get_expired_timers"], [44, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "data"], [25, 0, 0, "-", "distributed"], [25, 0, 0, "-", "log_level"], [25, 0, 0, "-", "logging"], [25, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[25, 0, 0, "-", "cycling_iterator"], [25, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[49, 1, 1, "", "BackwardPrefetch"], [49, 1, 1, "", "CPUOffload"], [49, 1, 1, "", "FullOptimStateDictConfig"], [49, 1, 1, "", "FullStateDictConfig"], [49, 1, 1, "", "FullyShardedDataParallel"], [49, 1, 1, "", "LocalOptimStateDictConfig"], [49, 1, 1, "", "LocalStateDictConfig"], [49, 1, 1, "", "MixedPrecision"], [49, 1, 1, "", "OptimStateDictConfig"], [49, 1, 1, "", "ShardedOptimStateDictConfig"], [49, 1, 1, "", "ShardedStateDictConfig"], [49, 1, 1, "", "ShardingStrategy"], [49, 1, 1, "", "StateDictConfig"], [49, 1, 1, "", "StateDictSettings"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "fully_sharded_data_parallel"], [25, 0, 0, "-", "sharded_grad_scaler"], [25, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[49, 3, 1, "", "apply"], [49, 3, 1, "", "check_is_root"], [49, 3, 1, "", "clip_grad_norm_"], [49, 3, 1, "", "flatten_sharded_optim_state_dict"], [49, 3, 1, "", "forward"], [49, 3, 1, "", "fsdp_modules"], [49, 3, 1, "", "full_optim_state_dict"], [49, 3, 1, "", "get_state_dict_type"], [49, 4, 1, "", "module"], [49, 3, 1, "", "named_buffers"], [49, 3, 1, "", "named_parameters"], [49, 3, 1, "", "no_sync"], [49, 3, 1, "", "optim_state_dict"], [49, 3, 1, "", "optim_state_dict_to_load"], [49, 3, 1, "", "register_comm_hook"], [49, 3, 1, "", "rekey_optim_state_dict"], [49, 3, 1, "", "scatter_full_optim_state_dict"], [49, 3, 1, "", "set_state_dict_type"], [49, 3, 1, "", "shard_full_optim_state_dict"], [49, 3, 1, "", "sharded_optim_state_dict"], [49, 3, 1, "", "state_dict_type"], [49, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[25, 0, 0, "-", "api"]], "torch.distributed.nn": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "functional"], [25, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[25, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[2011, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[2011, 3, 1, "", "get_module_rref"], [2011, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[25, 0, 0, "-", "instantiator"], [25, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[25, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[29, 1, 1, "", "DistributedOptimizer"], [29, 1, 1, "", "PostLocalSGDOptimizer"], [29, 1, 1, "", "ZeroRedundancyOptimizer"], [25, 0, 0, "-", "apply_optimizer_in_backward"], [25, 0, 0, "-", "functional_adadelta"], [25, 0, 0, "-", "functional_adagrad"], [25, 0, 0, "-", "functional_adam"], [25, 0, 0, "-", "functional_adamax"], [25, 0, 0, "-", "functional_adamw"], [25, 0, 0, "-", "functional_rmsprop"], [25, 0, 0, "-", "functional_rprop"], [25, 0, 0, "-", "functional_sgd"], [25, 0, 0, "-", "named_optimizer"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "post_localSGD_optimizer"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[29, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[29, 3, 1, "", "add_param_group"], [29, 3, 1, "", "consolidate_state_dict"], [29, 4, 1, "", "join_device"], [29, 3, 1, "", "join_hook"], [29, 4, 1, "", "join_process_group"], [29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.pipeline": [[25, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[2004, 1, 1, "", "Pipe"], [25, 0, 0, "-", "batchnorm"], [25, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "copy"], [25, 0, 0, "-", "dependency"], [25, 0, 0, "-", "microbatch"], [25, 0, 0, "-", "phony"], [25, 0, 0, "-", "pipe"], [25, 0, 0, "-", "pipeline"], [25, 0, 0, "-", "skip"], [25, 0, 0, "-", "stream"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[2004, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[25, 0, 0, "-", "layout"], [25, 0, 0, "-", "namespace"], [25, 0, 0, "-", "portal"], [25, 0, 0, "-", "skippable"], [25, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[2004, 1, 1, "", "pop"], [2004, 5, 1, "", "skippable"], [2004, 1, 1, "", "stash"], [2004, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[2011, 1, 1, "", "BackendType"], [2011, 1, 1, "", "PyRRef"], [2011, 1, 1, "", "RpcBackendOptions"], [2011, 1, 1, "", "TensorPipeRpcBackendOptions"], [2011, 1, 1, "", "WorkerInfo"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "backend_registry"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "functions"], [2011, 5, 1, "", "get_worker_info"], [2011, 5, 1, "", "init_rpc"], [25, 0, 0, "-", "internal"], [25, 0, 0, "-", "options"], [2011, 5, 1, "", "remote"], [2011, 5, 1, "", "rpc_async"], [2011, 5, 1, "", "rpc_sync"], [25, 0, 0, "-", "rref_proxy"], [25, 0, 0, "-", "server_process_global_profiler"], [2011, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[2011, 3, 1, "", "backward"], [2011, 3, 1, "", "confirmed_by_owner"], [2011, 3, 1, "", "is_owner"], [2011, 3, 1, "", "local_value"], [2011, 3, 1, "", "owner"], [2011, 3, 1, "", "owner_name"], [2011, 3, 1, "", "remote"], [2011, 3, 1, "", "rpc_async"], [2011, 3, 1, "", "rpc_sync"], [2011, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[2011, 4, 1, "", "init_method"], [2011, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[2011, 4, 1, "", "device_maps"], [2011, 4, 1, "", "devices"], [2011, 4, 1, "", "init_method"], [2011, 4, 1, "", "num_worker_threads"], [2011, 4, 1, "", "rpc_timeout"], [2011, 3, 1, "", "set_device_map"], [2011, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[2011, 4, 1, "", "id"], [2011, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[2011, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[30, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[30, 1, 1, "", "ColwiseParallel"], [30, 1, 1, "", "PrepareModuleInput"], [30, 1, 1, "", "PrepareModuleOutput"], [30, 1, 1, "", "RowwiseParallel"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "ddp"], [25, 0, 0, "-", "fsdp"], [25, 0, 0, "-", "input_reshard"], [30, 5, 1, "", "parallelize_module"], [25, 0, 0, "-", "style"]], "torch.distributions": [[31, 0, 0, "-", "bernoulli"], [31, 0, 0, "-", "beta"], [31, 0, 0, "-", "binomial"], [31, 0, 0, "-", "categorical"], [31, 0, 0, "-", "cauchy"], [31, 0, 0, "-", "chi2"], [31, 0, 0, "-", "constraint_registry"], [31, 0, 0, "-", "constraints"], [31, 0, 0, "-", "continuous_bernoulli"], [31, 0, 0, "-", "dirichlet"], [31, 0, 0, "-", "distribution"], [31, 0, 0, "-", "exp_family"], [31, 0, 0, "-", "exponential"], [31, 0, 0, "-", "fishersnedecor"], [31, 0, 0, "-", "gamma"], [31, 0, 0, "-", "geometric"], [31, 0, 0, "-", "gumbel"], [31, 0, 0, "-", "half_cauchy"], [31, 0, 0, "-", "half_normal"], [31, 0, 0, "-", "independent"], [31, 0, 0, "-", "inverse_gamma"], [31, 0, 0, "-", "kl"], [31, 0, 0, "-", "kumaraswamy"], [31, 0, 0, "-", "laplace"], [31, 0, 0, "-", "lkj_cholesky"], [31, 0, 0, "-", "log_normal"], [31, 0, 0, "-", "logistic_normal"], [31, 0, 0, "-", "lowrank_multivariate_normal"], [31, 0, 0, "-", "mixture_same_family"], [31, 0, 0, "-", "multinomial"], [31, 0, 0, "-", "multivariate_normal"], [31, 0, 0, "-", "negative_binomial"], [31, 0, 0, "-", "normal"], [31, 0, 0, "-", "one_hot_categorical"], [31, 0, 0, "-", "pareto"], [31, 0, 0, "-", "poisson"], [31, 0, 0, "-", "relaxed_bernoulli"], [31, 0, 0, "-", "relaxed_categorical"], [31, 0, 0, "-", "studentT"], [31, 0, 0, "-", "transformed_distribution"], [31, 0, 0, "-", "transforms"], [31, 0, 0, "-", "uniform"], [31, 0, 0, "-", "utils"], [31, 0, 0, "-", "von_mises"], [31, 0, 0, "-", "weibull"], [31, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[31, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.beta": [[31, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "concentration0"], [31, 4, 1, "", "concentration1"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.binomial": [[31, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.categorical": [[31, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[31, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.chi2": [[31, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "df"], [31, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[31, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[31, 3, 1, "", "register"]], "torch.distributions.constraints": [[31, 1, 1, "", "Constraint"], [31, 2, 1, "", "cat"], [31, 2, 1, "", "dependent_property"], [31, 2, 1, "", "greater_than"], [31, 2, 1, "", "greater_than_eq"], [31, 2, 1, "", "half_open_interval"], [31, 2, 1, "", "independent"], [31, 2, 1, "", "integer_interval"], [31, 2, 1, "", "interval"], [31, 2, 1, "", "less_than"], [31, 2, 1, "", "multinomial"], [31, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[31, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[31, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[31, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.distribution": [[31, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[31, 4, 1, "", "arg_constraints"], [31, 4, 1, "", "batch_shape"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 4, 1, "", "event_shape"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "perplexity"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 3, 1, "", "sample_n"], [31, 3, 1, "", "set_default_validate_args"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[31, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[31, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[31, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[31, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gamma": [[31, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.geometric": [[31, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[31, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[31, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[31, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.independent": [[31, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_enumerate_support"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.inverse_gamma": [[31, 1, 1, "", "InverseGamma"]], "torch.distributions.inverse_gamma.InverseGamma": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "concentration"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "rate"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.kl": [[31, 5, 1, "", "kl_divergence"], [31, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[31, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.laplace": [[31, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[31, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"]], "torch.distributions.log_normal": [[31, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "loc"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[31, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[31, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 4, 1, "", "component_distribution"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mixture_distribution"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[31, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 2, 1, "", "total_count"], [31, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[31, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[31, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.normal": [[31, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[31, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.pareto": [[31, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.poisson": [[31, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[31, 1, 1, "", "LogitRelaxedBernoulli"], [31, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[31, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[31, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[31, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"]], "torch.distributions.transforms": [[31, 1, 1, "", "AbsTransform"], [31, 1, 1, "", "AffineTransform"], [31, 1, 1, "", "CatTransform"], [31, 1, 1, "", "ComposeTransform"], [31, 1, 1, "", "CorrCholeskyTransform"], [31, 1, 1, "", "CumulativeDistributionTransform"], [31, 1, 1, "", "ExpTransform"], [31, 1, 1, "", "IndependentTransform"], [31, 1, 1, "", "LowerCholeskyTransform"], [31, 1, 1, "", "PositiveDefiniteTransform"], [31, 1, 1, "", "PowerTransform"], [31, 1, 1, "", "ReshapeTransform"], [31, 1, 1, "", "SigmoidTransform"], [31, 1, 1, "", "SoftmaxTransform"], [31, 1, 1, "", "SoftplusTransform"], [31, 1, 1, "", "StackTransform"], [31, 1, 1, "", "StickBreakingTransform"], [31, 1, 1, "", "TanhTransform"], [31, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[31, 3, 1, "", "forward_shape"], [31, 4, 1, "", "inv"], [31, 3, 1, "", "inverse_shape"], [31, 3, 1, "", "log_abs_det_jacobian"], [31, 4, 1, "", "sign"]], "torch.distributions.uniform": [[31, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[31, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.weibull": [[31, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.wishart": [[31, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.export": [[46, 1, 1, "", "Constraint"], [46, 1, 1, "", "ExportBackwardSignature"], [46, 1, 1, "", "ExportGraphSignature"], [46, 1, 1, "", "ExportedProgram"], [46, 1, 1, "", "ModuleCallEntry"], [46, 1, 1, "", "ModuleCallSignature"], [46, 0, 0, "-", "custom_obj"], [46, 5, 1, "", "dims"], [46, 0, 0, "-", "dynamic_shapes"], [46, 5, 1, "", "export"], [46, 0, 0, "-", "exported_program"], [46, 0, 0, "-", "graph_signature"], [46, 5, 1, "", "load"], [46, 5, 1, "", "register_dataclass"], [46, 5, 1, "", "save"], [46, 0, 0, "-", "unflatten"], [46, 0, 0, "-", "wrapper"]], "torch.export.ExportedProgram": [[46, 3, 1, "", "buffers"], [46, 3, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "parameters"]], "torch.export.dynamic_shapes": [[46, 5, 1, "", "Dim"], [46, 5, 1, "", "dynamic_dim"]], "torch.export.graph_signature": [[46, 1, 1, "", "CustomObjArgument"], [46, 1, 1, "", "ExportGraphSignature"], [46, 1, 1, "", "InputKind"], [46, 1, 1, "", "InputSpec"], [46, 1, 1, "", "OutputKind"], [46, 1, 1, "", "OutputSpec"]], "torch.export.graph_signature.ExportGraphSignature": [[46, 3, 1, "", "get_replace_hook"], [46, 3, 1, "", "replace_all_uses"]], "torch.export.unflatten": [[46, 1, 1, "", "FlatArgsAdapter"], [46, 1, 1, "", "InterpreterModule"], [46, 5, 1, "", "unflatten"]], "torch.export.unflatten.FlatArgsAdapter": [[46, 3, 1, "", "adapt"]], "torch.export.wrapper": [[46, 1, 1, "", "WrapperModule"]], "torch.export.wrapper.WrapperModule": [[46, 3, 1, "", "forward"]], "torch.fft": [[1113, 5, 1, "", "fft"], [1114, 5, 1, "", "fft2"], [1115, 5, 1, "", "fftfreq"], [1116, 5, 1, "", "fftn"], [1117, 5, 1, "", "fftshift"], [1118, 5, 1, "", "hfft"], [1119, 5, 1, "", "hfft2"], [1120, 5, 1, "", "hfftn"], [1121, 5, 1, "", "ifft"], [1122, 5, 1, "", "ifft2"], [1123, 5, 1, "", "ifftn"], [1124, 5, 1, "", "ifftshift"], [1125, 5, 1, "", "ihfft"], [1126, 5, 1, "", "ihfft2"], [1127, 5, 1, "", "ihfftn"], [1128, 5, 1, "", "irfft"], [1129, 5, 1, "", "irfft2"], [1130, 5, 1, "", "irfftn"], [1131, 5, 1, "", "rfft"], [1132, 5, 1, "", "rfft2"], [1133, 5, 1, "", "rfftfreq"], [1134, 5, 1, "", "rfftn"]], "torch.func": [[1154, 5, 1, "", "functional_call"], [1155, 5, 1, "", "functionalize"], [1156, 5, 1, "", "grad"], [1157, 5, 1, "", "grad_and_value"], [1158, 5, 1, "", "hessian"], [1159, 5, 1, "", "jacfwd"], [1160, 5, 1, "", "jacrev"], [1161, 5, 1, "", "jvp"], [1162, 5, 1, "", "linearize"], [1163, 5, 1, "", "replace_all_batch_norm_modules_"], [1164, 5, 1, "", "stack_module_state"], [1165, 5, 1, "", "vjp"], [1166, 5, 1, "", "vmap"]], "torch.futures": [[57, 1, 1, "", "Future"], [57, 5, 1, "", "collect_all"], [57, 5, 1, "", "wait_all"]], "torch.futures.Future": [[57, 3, 1, "", "add_done_callback"], [57, 3, 1, "", "done"], [57, 3, 1, "", "set_exception"], [57, 3, 1, "", "set_result"], [57, 3, 1, "", "then"], [57, 3, 1, "", "value"], [57, 3, 1, "", "wait"]], "torch.fx": [[58, 1, 1, "", "Graph"], [58, 1, 1, "", "GraphModule"], [58, 1, 1, "", "Interpreter"], [58, 1, 1, "", "Node"], [58, 1, 1, "", "Proxy"], [58, 1, 1, "", "Tracer"], [58, 1, 1, "", "Transformer"], [58, 0, 0, "-", "annotate"], [58, 0, 0, "-", "config"], [58, 0, 0, "-", "experimental"], [58, 0, 0, "-", "graph"], [58, 0, 0, "-", "graph_module"], [58, 0, 0, "-", "immutable_collections"], [58, 0, 0, "-", "interpreter"], [58, 0, 0, "-", "node"], [58, 0, 0, "-", "operator_schemas"], [58, 0, 0, "-", "passes"], [58, 0, 0, "-", "proxy"], [58, 5, 1, "", "replace_pattern"], [58, 0, 0, "-", "subgraph_rewriter"], [58, 5, 1, "", "symbolic_trace"], [58, 0, 0, "-", "tensor_type"], [58, 0, 0, "-", "traceback"], [58, 5, 1, "", "wrap"]], "torch.fx.Graph": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_method"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "create_node"], [58, 3, 1, "", "eliminate_dead_code"], [58, 3, 1, "", "erase_node"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "graph_copy"], [58, 3, 1, "", "inserting_after"], [58, 3, 1, "", "inserting_before"], [58, 3, 1, "", "lint"], [58, 3, 1, "", "node_copy"], [58, 4, 1, "", "nodes"], [58, 3, 1, "", "on_generate_code"], [58, 3, 1, "", "output"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "print_tabular"], [58, 3, 1, "", "process_inputs"], [58, 3, 1, "", "process_outputs"], [58, 3, 1, "", "python_code"], [58, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "add_submodule"], [58, 4, 1, "", "code"], [58, 3, 1, "", "delete_all_unused_submodules"], [58, 3, 1, "", "delete_submodule"], [58, 4, 1, "", "graph"], [58, 3, 1, "", "print_readable"], [58, 3, 1, "", "recompile"], [58, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[58, 3, 1, "", "boxed_run"], [58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_method"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "fetch_args_kwargs_from_env"], [58, 3, 1, "", "fetch_attr"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "map_nodes_to_values"], [58, 3, 1, "", "output"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "run"], [58, 3, 1, "", "run_node"]], "torch.fx.Node": [[58, 4, 1, "", "all_input_nodes"], [58, 3, 1, "", "append"], [58, 4, 1, "", "args"], [58, 3, 1, "", "format_node"], [58, 3, 1, "", "insert_arg"], [58, 3, 1, "", "is_impure"], [58, 4, 1, "", "kwargs"], [58, 4, 1, "", "next"], [58, 3, 1, "", "normalized_arguments"], [58, 3, 1, "", "prepend"], [58, 4, 1, "", "prev"], [58, 3, 1, "", "replace_all_uses_with"], [58, 3, 1, "", "replace_input_with"], [58, 4, 1, "", "stack_trace"], [58, 3, 1, "", "update_arg"], [58, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[58, 3, 1, "", "call_module"], [58, 3, 1, "", "create_arg"], [58, 3, 1, "", "create_args_for_root"], [58, 3, 1, "", "create_node"], [58, 3, 1, "", "create_proxy"], [58, 3, 1, "", "getattr"], [58, 3, 1, "", "is_leaf_module"], [58, 3, 1, "", "iter"], [58, 3, 1, "", "keys"], [58, 3, 1, "", "path_of_module"], [58, 3, 1, "", "proxy"], [58, 3, 1, "", "to_bool"], [58, 3, 1, "", "trace"]], "torch.fx.Transformer": [[58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "transform"]], "torch.fx.experimental": [[58, 0, 0, "-", "accelerator_partitioner"], [58, 0, 0, "-", "const_fold"], [58, 0, 0, "-", "debug"], [58, 0, 0, "-", "graph_gradual_typechecker"], [58, 0, 0, "-", "merge_matmul"], [58, 0, 0, "-", "meta_tracer"], [58, 0, 0, "-", "migrate_gradual_types"], [58, 0, 0, "-", "normalize"], [58, 0, 0, "-", "optimization"], [58, 0, 0, "-", "partitioner_utils"], [58, 0, 0, "-", "proxy_tensor"], [58, 0, 0, "-", "recording"], [58, 0, 0, "-", "refinement_types"], [58, 0, 0, "-", "rewriter"], [58, 0, 0, "-", "schema_type_annotation"], [58, 0, 0, "-", "sym_node"], [59, 0, 0, "-", "symbolic_shapes"], [58, 0, 0, "-", "unification"], [58, 0, 0, "-", "unify_refinements"], [58, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[58, 0, 0, "-", "constraint"], [58, 0, 0, "-", "constraint_generator"], [58, 0, 0, "-", "constraint_transformation"], [58, 0, 0, "-", "operation"], [58, 0, 0, "-", "transform_to_z3"], [58, 0, 0, "-", "util"], [58, 0, 0, "-", "z3_types"]], "torch.fx.experimental.symbolic_shapes": [[1167, 1, 1, "", "DimConstraints"], [1168, 1, 1, "", "DimDynamic"], [1169, 1, 1, "", "EqualityConstraint"], [1170, 1, 1, "", "RelaxedUnspecConstraint"], [1171, 1, 1, "", "ShapeEnv"], [1172, 1, 1, "", "StatefulSymbolicContext"], [1173, 1, 1, "", "StatelessSymbolicContext"], [1174, 1, 1, "", "StrictMinMaxConstraint"], [1175, 1, 1, "", "SubclassSymbolicContext"], [1176, 1, 1, "", "SymbolicContext"], [1177, 5, 1, "", "canonicalize_bool_expr"], [1178, 5, 1, "", "constrain_range"], [1179, 5, 1, "", "constrain_unify"], [1180, 5, 1, "", "definitely_false"], [1181, 5, 1, "", "definitely_true"], [1182, 5, 1, "", "guard_size_oblivious"], [1183, 5, 1, "", "has_free_symbols"], [1184, 5, 1, "", "hint_int"], [1185, 5, 1, "", "is_concrete_bool"], [1186, 5, 1, "", "is_concrete_int"], [1187, 5, 1, "", "parallel_and"], [1188, 5, 1, "", "parallel_or"], [1189, 5, 1, "", "statically_known_true"], [1190, 5, 1, "", "sym_eq"]], "torch.fx.experimental.symbolic_shapes.DimConstraints": [[1167, 3, 1, "", "add"], [1167, 3, 1, "", "add_equality"], [1167, 3, 1, "", "forced_specializations"], [1167, 3, 1, "", "prettify_results"], [1167, 3, 1, "", "remove_redundant_dynamic_results"], [1167, 3, 1, "", "rewrite_with_congruences"], [1167, 3, 1, "", "solve"]], "torch.fx.experimental.symbolic_shapes.ShapeEnv": [[1171, 3, 1, "", "bind_symbols"], [1171, 3, 1, "", "check_equal"], [1171, 3, 1, "", "cleanup"], [1171, 3, 1, "", "create_symbol"], [1171, 3, 1, "", "create_symbolic_sizes_strides_storage_offset"], [1171, 3, 1, "", "create_symboolnode"], [1171, 3, 1, "", "create_symintnode"], [1171, 3, 1, "", "create_unbacked_symbool"], [1171, 3, 1, "", "create_unbacked_symfloat"], [1171, 3, 1, "", "create_unbacked_symint"], [1171, 3, 1, "", "create_unspecified_symbol"], [1171, 3, 1, "", "create_unspecified_symint_and_symbol"], [1171, 3, 1, "", "defer_runtime_assert"], [1171, 3, 1, "", "evaluate_expr"], [1171, 3, 1, "", "evaluate_guards_expression"], [1171, 3, 1, "", "evaluate_guards_for_args"], [1171, 3, 1, "", "format_guards"], [1171, 3, 1, "", "freeze"], [1171, 3, 1, "", "get_nontrivial_guards"], [1171, 3, 1, "", "get_shape_groups"], [1171, 3, 1, "", "is_unbacked_symint"], [1171, 3, 1, "", "produce_guards"], [1171, 3, 1, "", "produce_guards_expression"], [1171, 3, 1, "", "replace"], [1171, 3, 1, "", "simplify"], [1171, 3, 1, "", "size_hint"], [1171, 3, 1, "", "suppress_guards"]], "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint": [[1174, 3, 1, "", "render"]], "torch.fx.experimental.unification": [[58, 0, 0, "-", "core"], [58, 0, 0, "-", "dispatch"], [58, 0, 0, "-", "match"], [58, 0, 0, "-", "more"], [58, 0, 0, "-", "multipledispatch"], [58, 0, 0, "-", "unification_tools"], [58, 0, 0, "-", "utils"], [58, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[58, 0, 0, "-", "conflict"], [58, 0, 0, "-", "core"], [58, 0, 0, "-", "dispatcher"], [58, 0, 0, "-", "utils"], [58, 0, 0, "-", "variadic"]], "torch.fx.passes": [[58, 0, 0, "-", "annotate_getitem_nodes"], [58, 0, 0, "-", "backends"], [58, 0, 0, "-", "dialect"], [58, 0, 0, "-", "fake_tensor_prop"], [58, 0, 0, "-", "graph_drawer"], [58, 0, 0, "-", "graph_manipulation"], [58, 0, 0, "-", "infra"], [58, 0, 0, "-", "net_min_base"], [58, 0, 0, "-", "operator_support"], [58, 0, 0, "-", "param_fetch"], [58, 0, 0, "-", "pass_manager"], [58, 0, 0, "-", "reinplace"], [58, 0, 0, "-", "shape_prop"], [58, 0, 0, "-", "split_module"], [58, 0, 0, "-", "split_utils"], [58, 0, 0, "-", "splitter_base"], [58, 0, 0, "-", "tests"], [58, 0, 0, "-", "tools_common"], [58, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[58, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[58, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[58, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[58, 0, 0, "-", "partitioner"], [58, 0, 0, "-", "pass_base"], [58, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[58, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[58, 0, 0, "-", "common"], [58, 0, 0, "-", "fuser_utils"], [58, 0, 0, "-", "matcher_utils"], [58, 0, 0, "-", "matcher_with_name_node_map_utils"], [58, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[1950, 5, 1, "", "download_url_to_file"], [1950, 5, 1, "", "get_dir"], [1950, 5, 1, "", "help"], [1950, 5, 1, "", "list"], [1950, 5, 1, "", "load"], [1950, 5, 1, "", "load_state_dict_from_url"], [1950, 5, 1, "", "set_dir"]], "torch.jit": [[1247, 1, 1, "", "Attribute"], [1248, 1, 1, "", "ScriptFunction"], [1249, 1, 1, "", "ScriptModule"], [1250, 5, 1, "", "annotate"], [1952, 0, 0, "-", "annotations"], [1251, 5, 1, "", "enable_onednn_fusion"], [1952, 5, 1, "", "export"], [1252, 5, 1, "", "fork"], [1253, 5, 1, "", "freeze"], [1952, 0, 0, "-", "frontend"], [1952, 0, 0, "-", "generate_bytecode"], [1254, 5, 1, "", "ignore"], [1255, 5, 1, "", "interface"], [1954, 5, 1, "", "is_scripting"], [1954, 5, 1, "", "is_tracing"], [1256, 5, 1, "", "isinstance"], [1257, 5, 1, "", "load"], [1952, 0, 0, "-", "mobile"], [1258, 5, 1, "", "onednn_fusion_enabled"], [1259, 5, 1, "", "optimize_for_inference"], [1952, 0, 0, "-", "quantized"], [1260, 5, 1, "", "save"], [1261, 5, 1, "", "script"], [1262, 5, 1, "", "script_if_tracing"], [1263, 5, 1, "", "set_fusion_strategy"], [1264, 1, 1, "", "strict_fusion"], [1953, 0, 0, "-", "supported_ops"], [1265, 5, 1, "", "trace"], [1266, 5, 1, "", "trace_module"], [1957, 0, 0, "-", "unsupported_tensor_ops"], [1267, 5, 1, "", "unused"], [1268, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1247, 3, 1, "", "count"], [1247, 3, 1, "", "index"], [1247, 2, 1, "", "type"], [1247, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1248, 3, 1, "", "get_debug_state"], [1248, 3, 1, "", "save"], [1248, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1249, 3, 1, "", "add_module"], [1249, 3, 1, "", "apply"], [1249, 3, 1, "", "bfloat16"], [1249, 3, 1, "", "buffers"], [1249, 3, 1, "", "children"], [1249, 4, 1, "", "code"], [1249, 4, 1, "", "code_with_constants"], [1249, 3, 1, "", "compile"], [1249, 3, 1, "", "cpu"], [1249, 3, 1, "", "cuda"], [1249, 3, 1, "", "double"], [1249, 3, 1, "", "eval"], [1249, 3, 1, "", "extra_repr"], [1249, 3, 1, "", "float"], [1249, 3, 1, "", "get_buffer"], [1249, 3, 1, "", "get_extra_state"], [1249, 3, 1, "", "get_parameter"], [1249, 3, 1, "", "get_submodule"], [1249, 4, 1, "", "graph"], [1249, 3, 1, "", "half"], [1249, 4, 1, "", "inlined_graph"], [1249, 3, 1, "", "ipu"], [1249, 3, 1, "", "load_state_dict"], [1249, 3, 1, "", "modules"], [1249, 3, 1, "", "named_buffers"], [1249, 3, 1, "", "named_children"], [1249, 3, 1, "", "named_modules"], [1249, 3, 1, "", "named_parameters"], [1249, 3, 1, "", "parameters"], [1249, 3, 1, "", "register_backward_hook"], [1249, 3, 1, "", "register_buffer"], [1249, 3, 1, "", "register_forward_hook"], [1249, 3, 1, "", "register_forward_pre_hook"], [1249, 3, 1, "", "register_full_backward_hook"], [1249, 3, 1, "", "register_full_backward_pre_hook"], [1249, 3, 1, "", "register_load_state_dict_post_hook"], [1249, 3, 1, "", "register_module"], [1249, 3, 1, "", "register_parameter"], [1249, 3, 1, "", "register_state_dict_pre_hook"], [1249, 3, 1, "", "requires_grad_"], [1249, 3, 1, "", "save"], [1249, 3, 1, "", "set_extra_state"], [1249, 3, 1, "", "share_memory"], [1249, 3, 1, "", "state_dict"], [1249, 3, 1, "", "to"], [1249, 3, 1, "", "to_empty"], [1249, 3, 1, "", "train"], [1249, 3, 1, "", "type"], [1249, 3, 1, "", "xpu"], [1249, 3, 1, "", "zero_grad"]], "torch.library": [[1959, 1, 1, "", "Library"], [1959, 5, 1, "", "define"], [1959, 5, 1, "", "fallthrough_kernel"], [1959, 5, 1, "", "get_ctx"], [1959, 5, 1, "", "impl"], [1959, 5, 1, "", "impl_abstract"]], "torch.library.Library": [[1959, 3, 1, "", "define"], [1959, 3, 1, "", "impl"]], "torch.linalg": [[1279, 5, 1, "", "cholesky"], [1280, 5, 1, "", "cholesky_ex"], [1281, 5, 1, "", "cond"], [1282, 5, 1, "", "cross"], [1283, 5, 1, "", "det"], [1284, 5, 1, "", "diagonal"], [1285, 5, 1, "", "eig"], [1286, 5, 1, "", "eigh"], [1287, 5, 1, "", "eigvals"], [1288, 5, 1, "", "eigvalsh"], [1289, 5, 1, "", "householder_product"], [1290, 5, 1, "", "inv"], [1291, 5, 1, "", "inv_ex"], [1292, 5, 1, "", "ldl_factor"], [1293, 5, 1, "", "ldl_factor_ex"], [1294, 5, 1, "", "ldl_solve"], [1295, 5, 1, "", "lstsq"], [1296, 5, 1, "", "lu"], [1297, 5, 1, "", "lu_factor"], [1298, 5, 1, "", "lu_factor_ex"], [1299, 5, 1, "", "lu_solve"], [1300, 5, 1, "", "matmul"], [1301, 5, 1, "", "matrix_exp"], [1302, 5, 1, "", "matrix_norm"], [1303, 5, 1, "", "matrix_power"], [1304, 5, 1, "", "matrix_rank"], [1305, 5, 1, "", "multi_dot"], [1306, 5, 1, "", "norm"], [1307, 5, 1, "", "pinv"], [1308, 5, 1, "", "qr"], [1309, 5, 1, "", "slogdet"], [1310, 5, 1, "", "solve"], [1311, 5, 1, "", "solve_ex"], [1312, 5, 1, "", "solve_triangular"], [1313, 5, 1, "", "svd"], [1314, 5, 1, "", "svdvals"], [1315, 5, 1, "", "tensorinv"], [1316, 5, 1, "", "tensorsolve"], [1317, 5, 1, "", "vander"], [1318, 5, 1, "", "vecdot"], [1319, 5, 1, "", "vector_norm"]], "torch.masked": [[1962, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[1962, 0, 0, "-", "binary"], [1962, 0, 0, "-", "core"], [1962, 0, 0, "-", "creation"], [1962, 0, 0, "-", "passthrough"], [1962, 0, 0, "-", "reductions"], [1962, 0, 0, "-", "unary"]], "torch.monitor": [[1966, 1, 1, "", "Aggregation"], [1966, 1, 1, "", "Event"], [1966, 1, 1, "", "EventHandlerHandle"], [1966, 1, 1, "", "Stat"], [1966, 1, 1, "", "TensorboardEventHandler"], [1966, 1, 1, "", "data_value_t"], [1966, 5, 1, "", "log_event"], [1966, 5, 1, "", "register_event_handler"], [1966, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1966, 4, 1, "", "name"]], "torch.monitor.Event": [[1966, 3, 1, "", "__init__"], [1966, 4, 1, "", "data"], [1966, 4, 1, "", "name"], [1966, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1966, 3, 1, "", "__init__"], [1966, 3, 1, "", "add"], [1966, 4, 1, "", "count"], [1966, 3, 1, "", "get"], [1966, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1966, 3, 1, "", "__init__"]], "torch.mps": [[1358, 5, 1, "", "current_allocated_memory"], [1359, 5, 1, "", "driver_allocated_memory"], [1360, 5, 1, "", "empty_cache"], [1967, 0, 0, "-", "event"], [1362, 5, 1, "", "get_rng_state"], [1363, 5, 1, "", "manual_seed"], [1967, 0, 0, "-", "profiler"], [1367, 5, 1, "", "seed"], [1368, 5, 1, "", "set_per_process_memory_fraction"], [1369, 5, 1, "", "set_rng_state"], [1370, 5, 1, "", "synchronize"]], "torch.mps.event": [[1361, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1361, 3, 1, "", "elapsed_time"], [1361, 3, 1, "", "query"], [1361, 3, 1, "", "record"], [1361, 3, 1, "", "synchronize"], [1361, 3, 1, "", "wait"]], "torch.mps.profiler": [[1364, 5, 1, "", "profile"], [1365, 5, 1, "", "start"], [1366, 5, 1, "", "stop"]], "torch.multiprocessing": [[1968, 1, 1, "", "SpawnContext"], [1968, 5, 1, "", "get_all_sharing_strategies"], [1968, 5, 1, "", "get_sharing_strategy"], [1968, 0, 0, "-", "pool"], [1968, 0, 0, "-", "queue"], [1968, 0, 0, "-", "reductions"], [1968, 5, 1, "", "set_sharing_strategy"], [1968, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[1968, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[1968, 5, 1, "", "spawn"]], "torch.nested": [[1971, 5, 1, "", "as_nested_tensor"], [1971, 5, 1, "", "nested_tensor"], [1971, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1388, 1, 1, "", "AdaptiveAvgPool1d"], [1389, 1, 1, "", "AdaptiveAvgPool2d"], [1390, 1, 1, "", "AdaptiveAvgPool3d"], [1391, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1392, 1, 1, "", "AdaptiveMaxPool1d"], [1393, 1, 1, "", "AdaptiveMaxPool2d"], [1394, 1, 1, "", "AdaptiveMaxPool3d"], [1395, 1, 1, "", "AlphaDropout"], [1396, 1, 1, "", "AvgPool1d"], [1397, 1, 1, "", "AvgPool2d"], [1398, 1, 1, "", "AvgPool3d"], [1399, 1, 1, "", "BCELoss"], [1400, 1, 1, "", "BCEWithLogitsLoss"], [1401, 1, 1, "", "BatchNorm1d"], [1402, 1, 1, "", "BatchNorm2d"], [1403, 1, 1, "", "BatchNorm3d"], [1404, 1, 1, "", "Bilinear"], [1405, 1, 1, "", "CELU"], [1406, 1, 1, "", "CTCLoss"], [1407, 1, 1, "", "ChannelShuffle"], [1408, 1, 1, "", "CircularPad1d"], [1409, 1, 1, "", "CircularPad2d"], [1410, 1, 1, "", "CircularPad3d"], [1411, 1, 1, "", "ConstantPad1d"], [1412, 1, 1, "", "ConstantPad2d"], [1413, 1, 1, "", "ConstantPad3d"], [1414, 1, 1, "", "Conv1d"], [1415, 1, 1, "", "Conv2d"], [1416, 1, 1, "", "Conv3d"], [1417, 1, 1, "", "ConvTranspose1d"], [1418, 1, 1, "", "ConvTranspose2d"], [1419, 1, 1, "", "ConvTranspose3d"], [1420, 1, 1, "", "CosineEmbeddingLoss"], [1421, 1, 1, "", "CosineSimilarity"], [1422, 1, 1, "", "CrossEntropyLoss"], [1423, 1, 1, "", "DataParallel"], [1424, 1, 1, "", "Dropout"], [1425, 1, 1, "", "Dropout1d"], [1426, 1, 1, "", "Dropout2d"], [1427, 1, 1, "", "Dropout3d"], [1428, 1, 1, "", "ELU"], [1429, 1, 1, "", "Embedding"], [1430, 1, 1, "", "EmbeddingBag"], [1431, 1, 1, "", "FeatureAlphaDropout"], [1432, 1, 1, "", "Flatten"], [1433, 1, 1, "", "Fold"], [1434, 1, 1, "", "FractionalMaxPool2d"], [1435, 1, 1, "", "FractionalMaxPool3d"], [1436, 1, 1, "", "GELU"], [1437, 1, 1, "", "GLU"], [1438, 1, 1, "", "GRU"], [1439, 1, 1, "", "GRUCell"], [1440, 1, 1, "", "GaussianNLLLoss"], [1441, 1, 1, "", "GroupNorm"], [1442, 1, 1, "", "Hardshrink"], [1443, 1, 1, "", "Hardsigmoid"], [1444, 1, 1, "", "Hardswish"], [1445, 1, 1, "", "Hardtanh"], [1446, 1, 1, "", "HingeEmbeddingLoss"], [1447, 1, 1, "", "HuberLoss"], [1448, 1, 1, "", "Identity"], [1449, 1, 1, "", "InstanceNorm1d"], [1450, 1, 1, "", "InstanceNorm2d"], [1451, 1, 1, "", "InstanceNorm3d"], [1452, 1, 1, "", "KLDivLoss"], [1453, 1, 1, "", "L1Loss"], [1454, 1, 1, "", "LPPool1d"], [1455, 1, 1, "", "LPPool2d"], [1456, 1, 1, "", "LPPool3d"], [1457, 1, 1, "", "LSTM"], [1458, 1, 1, "", "LSTMCell"], [1459, 1, 1, "", "LayerNorm"], [1460, 1, 1, "", "LazyBatchNorm1d"], [1461, 1, 1, "", "LazyBatchNorm2d"], [1462, 1, 1, "", "LazyBatchNorm3d"], [1463, 1, 1, "", "LazyConv1d"], [1464, 1, 1, "", "LazyConv2d"], [1465, 1, 1, "", "LazyConv3d"], [1466, 1, 1, "", "LazyConvTranspose1d"], [1467, 1, 1, "", "LazyConvTranspose2d"], [1468, 1, 1, "", "LazyConvTranspose3d"], [1469, 1, 1, "", "LazyInstanceNorm1d"], [1470, 1, 1, "", "LazyInstanceNorm2d"], [1471, 1, 1, "", "LazyInstanceNorm3d"], [1472, 1, 1, "", "LazyLinear"], [1473, 1, 1, "", "LeakyReLU"], [1474, 1, 1, "", "Linear"], [1475, 1, 1, "", "LocalResponseNorm"], [1476, 1, 1, "", "LogSigmoid"], [1477, 1, 1, "", "LogSoftmax"], [1478, 1, 1, "", "MSELoss"], [1479, 1, 1, "", "MarginRankingLoss"], [1480, 1, 1, "", "MaxPool1d"], [1481, 1, 1, "", "MaxPool2d"], [1482, 1, 1, "", "MaxPool3d"], [1483, 1, 1, "", "MaxUnpool1d"], [1484, 1, 1, "", "MaxUnpool2d"], [1485, 1, 1, "", "MaxUnpool3d"], [1486, 1, 1, "", "Mish"], [1487, 1, 1, "", "Module"], [1488, 1, 1, "", "ModuleDict"], [1489, 1, 1, "", "ModuleList"], [1490, 1, 1, "", "MultiLabelMarginLoss"], [1491, 1, 1, "", "MultiLabelSoftMarginLoss"], [1492, 1, 1, "", "MultiMarginLoss"], [1493, 1, 1, "", "MultiheadAttention"], [1494, 1, 1, "", "NLLLoss"], [1495, 1, 1, "", "PReLU"], [1496, 1, 1, "", "PairwiseDistance"], [1497, 1, 1, "", "ParameterDict"], [1498, 1, 1, "", "ParameterList"], [1499, 1, 1, "", "PixelShuffle"], [1500, 1, 1, "", "PixelUnshuffle"], [1501, 1, 1, "", "PoissonNLLLoss"], [1502, 1, 1, "", "RNN"], [1503, 1, 1, "", "RNNBase"], [1504, 1, 1, "", "RNNCell"], [1505, 1, 1, "", "RReLU"], [1506, 1, 1, "", "ReLU"], [1507, 1, 1, "", "ReLU6"], [1508, 1, 1, "", "ReflectionPad1d"], [1509, 1, 1, "", "ReflectionPad2d"], [1510, 1, 1, "", "ReflectionPad3d"], [1511, 1, 1, "", "ReplicationPad1d"], [1512, 1, 1, "", "ReplicationPad2d"], [1513, 1, 1, "", "ReplicationPad3d"], [1514, 1, 1, "", "SELU"], [1515, 1, 1, "", "Sequential"], [1516, 1, 1, "", "SiLU"], [1517, 1, 1, "", "Sigmoid"], [1518, 1, 1, "", "SmoothL1Loss"], [1519, 1, 1, "", "SoftMarginLoss"], [1520, 1, 1, "", "Softmax"], [1521, 1, 1, "", "Softmax2d"], [1522, 1, 1, "", "Softmin"], [1523, 1, 1, "", "Softplus"], [1524, 1, 1, "", "Softshrink"], [1525, 1, 1, "", "Softsign"], [1526, 1, 1, "", "SyncBatchNorm"], [1527, 1, 1, "", "Tanh"], [1528, 1, 1, "", "Tanhshrink"], [1529, 1, 1, "", "Threshold"], [1530, 1, 1, "", "Transformer"], [1531, 1, 1, "", "TransformerDecoder"], [1532, 1, 1, "", "TransformerDecoderLayer"], [1533, 1, 1, "", "TransformerEncoder"], [1534, 1, 1, "", "TransformerEncoderLayer"], [1535, 1, 1, "", "TripletMarginLoss"], [1536, 1, 1, "", "TripletMarginWithDistanceLoss"], [1537, 1, 1, "", "Unflatten"], [1538, 1, 1, "", "Unfold"], [1539, 1, 1, "", "Upsample"], [1540, 1, 1, "", "UpsamplingBilinear2d"], [1541, 1, 1, "", "UpsamplingNearest2d"], [1542, 1, 1, "", "ZeroPad1d"], [1543, 1, 1, "", "ZeroPad2d"], [1544, 1, 1, "", "ZeroPad3d"], [1973, 0, 0, "-", "attention"], [1972, 0, 0, "-", "backends"], [1972, 0, 0, "-", "common_types"], [1972, 0, 0, "-", "cpp"], [1972, 0, 0, "-", "functional"], [1972, 0, 0, "-", "grad"], [1972, 0, 0, "-", "init"], [2009, 0, 0, "-", "intrinsic"], [1972, 0, 0, "-", "modules"], [1972, 0, 0, "-", "parallel"], [1972, 0, 0, "-", "parameter"], [2009, 0, 0, "-", "qat"], [2009, 0, 0, "-", "quantizable"], [2009, 0, 0, "-", "quantized"], [1972, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1391, 3, 1, "", "log_prob"], [1391, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1429, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1430, 3, 1, "", "forward"], [1430, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1460, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1461, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1462, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1463, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1464, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1465, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1466, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1467, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1468, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1469, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1470, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1471, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1472, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1487, 3, 1, "", "add_module"], [1487, 3, 1, "", "apply"], [1487, 3, 1, "", "bfloat16"], [1487, 3, 1, "", "buffers"], [1487, 3, 1, "", "children"], [1487, 3, 1, "", "compile"], [1487, 3, 1, "", "cpu"], [1487, 3, 1, "", "cuda"], [1487, 3, 1, "", "double"], [1487, 3, 1, "", "eval"], [1487, 3, 1, "", "extra_repr"], [1487, 3, 1, "", "float"], [1487, 3, 1, "", "forward"], [1487, 3, 1, "", "get_buffer"], [1487, 3, 1, "", "get_extra_state"], [1487, 3, 1, "", "get_parameter"], [1487, 3, 1, "", "get_submodule"], [1487, 3, 1, "", "half"], [1487, 3, 1, "", "ipu"], [1487, 3, 1, "", "load_state_dict"], [1487, 3, 1, "", "modules"], [1487, 3, 1, "", "named_buffers"], [1487, 3, 1, "", "named_children"], [1487, 3, 1, "", "named_modules"], [1487, 3, 1, "", "named_parameters"], [1487, 3, 1, "", "parameters"], [1487, 3, 1, "", "register_backward_hook"], [1487, 3, 1, "", "register_buffer"], [1487, 3, 1, "", "register_forward_hook"], [1487, 3, 1, "", "register_forward_pre_hook"], [1487, 3, 1, "", "register_full_backward_hook"], [1487, 3, 1, "", "register_full_backward_pre_hook"], [1487, 3, 1, "", "register_load_state_dict_post_hook"], [1487, 3, 1, "", "register_module"], [1487, 3, 1, "", "register_parameter"], [1487, 3, 1, "", "register_state_dict_pre_hook"], [1487, 3, 1, "", "requires_grad_"], [1487, 3, 1, "", "set_extra_state"], [1487, 3, 1, "", "share_memory"], [1487, 3, 1, "", "state_dict"], [1487, 3, 1, "", "to"], [1487, 3, 1, "", "to_empty"], [1487, 3, 1, "", "train"], [1487, 3, 1, "", "type"], [1487, 3, 1, "", "xpu"], [1487, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1488, 3, 1, "", "clear"], [1488, 3, 1, "", "items"], [1488, 3, 1, "", "keys"], [1488, 3, 1, "", "pop"], [1488, 3, 1, "", "update"], [1488, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1489, 3, 1, "", "append"], [1489, 3, 1, "", "extend"], [1489, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1493, 3, 1, "", "forward"], [1493, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1497, 3, 1, "", "clear"], [1497, 3, 1, "", "copy"], [1497, 3, 1, "", "fromkeys"], [1497, 3, 1, "", "get"], [1497, 3, 1, "", "items"], [1497, 3, 1, "", "keys"], [1497, 3, 1, "", "pop"], [1497, 3, 1, "", "popitem"], [1497, 3, 1, "", "setdefault"], [1497, 3, 1, "", "update"], [1497, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1498, 3, 1, "", "append"], [1498, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1503, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1515, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1526, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1530, 3, 1, "", "forward"], [1530, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1531, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1532, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1533, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1534, 3, 1, "", "forward"]], "torch.nn.attention": [[1545, 1, 1, "", "SDPBackend"], [1974, 0, 0, "-", "bias"], [1550, 5, 1, "", "sdpa_kernel"]], "torch.nn.attention.SDPBackend": [[1545, 4, 1, "", "name"]], "torch.nn.attention.bias": [[1546, 1, 1, "", "CausalBias"], [1547, 1, 1, "", "CausalVariant"], [1548, 5, 1, "", "causal_lower_right"], [1549, 5, 1, "", "causal_upper_left"]], "torch.nn.backends": [[1972, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1551, 5, 1, "", "adaptive_avg_pool1d"], [1552, 5, 1, "", "adaptive_avg_pool2d"], [1553, 5, 1, "", "adaptive_avg_pool3d"], [1554, 5, 1, "", "adaptive_max_pool1d"], [1555, 5, 1, "", "adaptive_max_pool2d"], [1556, 5, 1, "", "adaptive_max_pool3d"], [1557, 5, 1, "", "affine_grid"], [1558, 5, 1, "", "alpha_dropout"], [1559, 5, 1, "", "avg_pool1d"], [1560, 5, 1, "", "avg_pool2d"], [1561, 5, 1, "", "avg_pool3d"], [1562, 5, 1, "", "batch_norm"], [1563, 5, 1, "", "bilinear"], [1564, 5, 1, "", "binary_cross_entropy"], [1565, 5, 1, "", "binary_cross_entropy_with_logits"], [1566, 5, 1, "", "celu"], [1567, 5, 1, "", "conv1d"], [1568, 5, 1, "", "conv2d"], [1569, 5, 1, "", "conv3d"], [1570, 5, 1, "", "conv_transpose1d"], [1571, 5, 1, "", "conv_transpose2d"], [1572, 5, 1, "", "conv_transpose3d"], [1573, 5, 1, "", "cosine_embedding_loss"], [1574, 5, 1, "", "cosine_similarity"], [1575, 5, 1, "", "cross_entropy"], [1576, 5, 1, "", "ctc_loss"], [1577, 5, 1, "", "dropout"], [1578, 5, 1, "", "dropout1d"], [1579, 5, 1, "", "dropout2d"], [1580, 5, 1, "", "dropout3d"], [1581, 5, 1, "", "elu"], [1582, 5, 1, "", "elu_"], [1583, 5, 1, "", "embedding"], [1584, 5, 1, "", "embedding_bag"], [1585, 5, 1, "", "feature_alpha_dropout"], [1586, 5, 1, "", "fold"], [1587, 5, 1, "", "fractional_max_pool2d"], [1588, 5, 1, "", "fractional_max_pool3d"], [1589, 5, 1, "", "gaussian_nll_loss"], [1590, 5, 1, "", "gelu"], [1591, 5, 1, "", "glu"], [1592, 5, 1, "", "grid_sample"], [1593, 5, 1, "", "group_norm"], [1594, 5, 1, "", "gumbel_softmax"], [1595, 5, 1, "", "hardshrink"], [1596, 5, 1, "", "hardsigmoid"], [1597, 5, 1, "", "hardswish"], [1598, 5, 1, "", "hardtanh"], [1599, 5, 1, "", "hardtanh_"], [1600, 5, 1, "", "hinge_embedding_loss"], [1601, 5, 1, "", "huber_loss"], [1602, 5, 1, "", "instance_norm"], [1603, 5, 1, "", "interpolate"], [1604, 5, 1, "", "kl_div"], [1605, 5, 1, "", "l1_loss"], [1606, 5, 1, "", "layer_norm"], [1607, 5, 1, "", "leaky_relu"], [1608, 5, 1, "", "leaky_relu_"], [1609, 5, 1, "", "linear"], [1610, 5, 1, "", "local_response_norm"], [1611, 5, 1, "", "log_softmax"], [1612, 5, 1, "", "logsigmoid"], [1613, 5, 1, "", "lp_pool1d"], [1614, 5, 1, "", "lp_pool2d"], [1615, 5, 1, "", "lp_pool3d"], [1616, 5, 1, "", "margin_ranking_loss"], [1617, 5, 1, "", "max_pool1d"], [1618, 5, 1, "", "max_pool2d"], [1619, 5, 1, "", "max_pool3d"], [1620, 5, 1, "", "max_unpool1d"], [1621, 5, 1, "", "max_unpool2d"], [1622, 5, 1, "", "max_unpool3d"], [1623, 5, 1, "", "mish"], [1624, 5, 1, "", "mse_loss"], [1625, 5, 1, "", "multi_margin_loss"], [1626, 5, 1, "", "multilabel_margin_loss"], [1627, 5, 1, "", "multilabel_soft_margin_loss"], [1628, 5, 1, "", "nll_loss"], [1629, 5, 1, "", "normalize"], [1630, 5, 1, "", "one_hot"], [1631, 5, 1, "", "pad"], [1632, 5, 1, "", "pairwise_distance"], [1633, 5, 1, "", "pdist"], [1634, 5, 1, "", "pixel_shuffle"], [1635, 5, 1, "", "pixel_unshuffle"], [1636, 5, 1, "", "poisson_nll_loss"], [1637, 5, 1, "", "prelu"], [1638, 5, 1, "", "relu"], [1639, 5, 1, "", "relu6"], [1640, 5, 1, "", "relu_"], [1641, 5, 1, "", "rrelu"], [1642, 5, 1, "", "rrelu_"], [1643, 5, 1, "", "scaled_dot_product_attention"], [1644, 5, 1, "", "selu"], [1645, 5, 1, "", "sigmoid"], [1646, 5, 1, "", "silu"], [1647, 5, 1, "", "smooth_l1_loss"], [1648, 5, 1, "", "soft_margin_loss"], [1649, 5, 1, "", "softmax"], [1650, 5, 1, "", "softmin"], [1651, 5, 1, "", "softplus"], [1652, 5, 1, "", "softshrink"], [1653, 5, 1, "", "softsign"], [1654, 5, 1, "", "tanh"], [1655, 5, 1, "", "tanhshrink"], [1656, 5, 1, "", "threshold"], [1657, 5, 1, "", "threshold_"], [1659, 5, 1, "", "triplet_margin_loss"], [1660, 5, 1, "", "triplet_margin_with_distance_loss"], [1661, 5, 1, "", "unfold"], [1662, 5, 1, "", "upsample"], [1663, 5, 1, "", "upsample_bilinear"], [1664, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1976, 5, 1, "", "calculate_gain"], [1976, 5, 1, "", "constant_"], [1976, 5, 1, "", "dirac_"], [1976, 5, 1, "", "eye_"], [1976, 5, 1, "", "kaiming_normal_"], [1976, 5, 1, "", "kaiming_uniform_"], [1976, 5, 1, "", "normal_"], [1976, 5, 1, "", "ones_"], [1976, 5, 1, "", "orthogonal_"], [1976, 5, 1, "", "sparse_"], [1976, 5, 1, "", "trunc_normal_"], [1976, 5, 1, "", "uniform_"], [1976, 5, 1, "", "xavier_normal_"], [1976, 5, 1, "", "xavier_uniform_"], [1976, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[2009, 0, 0, "-", "modules"], [2009, 0, 0, "-", "qat"], [2009, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[2006, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[2009, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[2006, 0, 0, "-", "conv_fused"], [2006, 0, 0, "-", "linear_fused"], [2006, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[2009, 0, 0, "-", "dynamic"], [2009, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[2009, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2006, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[2006, 0, 0, "-", "bn_relu"], [2006, 0, 0, "-", "conv_relu"], [2006, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[1972, 0, 0, "-", "activation"], [1972, 0, 0, "-", "adaptive"], [1972, 0, 0, "-", "batchnorm"], [1972, 0, 0, "-", "channelshuffle"], [1972, 0, 0, "-", "container"], [1972, 0, 0, "-", "conv"], [1972, 0, 0, "-", "distance"], [1972, 0, 0, "-", "dropout"], [1972, 0, 0, "-", "flatten"], [1972, 0, 0, "-", "fold"], [1972, 0, 0, "-", "instancenorm"], [1972, 0, 0, "-", "lazy"], [1972, 0, 0, "-", "linear"], [1972, 0, 0, "-", "loss"], [1972, 0, 0, "-", "module"], [1972, 0, 0, "-", "normalization"], [1972, 0, 0, "-", "padding"], [1972, 0, 0, "-", "pixelshuffle"], [1972, 0, 0, "-", "pooling"], [1972, 0, 0, "-", "rnn"], [1972, 0, 0, "-", "sparse"], [1972, 0, 0, "-", "transformer"], [1972, 0, 0, "-", "upsampling"], [1972, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1665, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1665, 3, 1, "", "has_uninitialized_params"], [1665, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1666, 5, 1, "", "register_module_backward_hook"], [1667, 5, 1, "", "register_module_buffer_registration_hook"], [1668, 5, 1, "", "register_module_forward_hook"], [1669, 5, 1, "", "register_module_forward_pre_hook"], [1670, 5, 1, "", "register_module_full_backward_hook"], [1671, 5, 1, "", "register_module_full_backward_pre_hook"], [1672, 5, 1, "", "register_module_module_registration_hook"], [1673, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1674, 1, 1, "", "DistributedDataParallel"], [1972, 0, 0, "-", "comm"], [1972, 0, 0, "-", "data_parallel"], [1972, 0, 0, "-", "distributed"], [1972, 0, 0, "-", "parallel_apply"], [1972, 0, 0, "-", "replicate"], [1972, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1674, 3, 1, "", "join"], [1674, 3, 1, "", "join_hook"], [1674, 3, 1, "", "no_sync"], [1674, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1675, 1, 1, "", "Parameter"], [1676, 1, 1, "", "UninitializedBuffer"], [1677, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1677, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[2009, 0, 0, "-", "dynamic"], [2009, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[2009, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[2006, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "embedding_ops"], [2006, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[2009, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[2006, 0, 0, "-", "activation"], [2006, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[2009, 0, 0, "-", "dynamic"], [2006, 0, 0, "-", "functional"], [2009, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[2009, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[2006, 0, 0, "-", "activation"], [2006, 0, 0, "-", "batchnorm"], [2006, 0, 0, "-", "conv"], [2006, 0, 0, "-", "dropout"], [2006, 0, 0, "-", "embedding_ops"], [2006, 0, 0, "-", "functional_modules"], [2006, 0, 0, "-", "linear"], [2006, 0, 0, "-", "normalization"], [2006, 0, 0, "-", "rnn"], [2006, 0, 0, "-", "utils"]], "torch.nn.utils": [[1972, 0, 0, "-", "clip_grad"], [1678, 5, 1, "", "clip_grad_norm"], [1679, 5, 1, "", "clip_grad_norm_"], [1680, 5, 1, "", "clip_grad_value_"], [1681, 5, 1, "", "convert_conv2d_weight_memory_format"], [1682, 5, 1, "", "convert_conv3d_weight_memory_format"], [1972, 0, 0, "-", "convert_parameters"], [1683, 5, 1, "", "fuse_conv_bn_eval"], [1684, 5, 1, "", "fuse_conv_bn_weights"], [1685, 5, 1, "", "fuse_linear_bn_eval"], [1686, 5, 1, "", "fuse_linear_bn_weights"], [1972, 0, 0, "-", "fusion"], [1972, 0, 0, "-", "init"], [1972, 0, 0, "-", "memory_format"], [1687, 5, 1, "", "parameters_to_vector"], [1972, 0, 0, "-", "parametrizations"], [1972, 0, 0, "-", "parametrize"], [1972, 0, 0, "-", "prune"], [1713, 5, 1, "", "remove_spectral_norm"], [1714, 5, 1, "", "remove_weight_norm"], [1972, 0, 0, "-", "rnn"], [1722, 5, 1, "", "skip_init"], [1972, 0, 0, "-", "spectral_norm"], [1972, 0, 0, "-", "stateless"], [1725, 5, 1, "", "vector_to_parameters"], [1972, 0, 0, "-", "weight_norm"]], "torch.nn.utils.parametrizations": [[1688, 5, 1, "", "orthogonal"], [1689, 5, 1, "", "spectral_norm"], [1690, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrize": [[1691, 1, 1, "", "ParametrizationList"], [1692, 5, 1, "", "cached"], [1693, 5, 1, "", "is_parametrized"], [1694, 5, 1, "", "register_parametrization"], [1695, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1691, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1696, 1, 1, "", "BasePruningMethod"], [1697, 1, 1, "", "CustomFromMask"], [1698, 1, 1, "", "Identity"], [1699, 1, 1, "", "L1Unstructured"], [1700, 1, 1, "", "LnStructured"], [1701, 1, 1, "", "PruningContainer"], [1702, 1, 1, "", "RandomStructured"], [1703, 1, 1, "", "RandomUnstructured"], [1704, 5, 1, "", "custom_from_mask"], [1705, 5, 1, "", "global_unstructured"], [1706, 5, 1, "", "identity"], [1707, 5, 1, "", "is_pruned"], [1708, 5, 1, "", "l1_unstructured"], [1709, 5, 1, "", "ln_structured"], [1710, 5, 1, "", "random_structured"], [1711, 5, 1, "", "random_unstructured"], [1712, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1696, 3, 1, "", "apply"], [1696, 3, 1, "", "apply_mask"], [1696, 3, 1, "", "compute_mask"], [1696, 3, 1, "", "prune"], [1696, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1697, 3, 1, "", "apply"], [1697, 3, 1, "", "apply_mask"], [1697, 3, 1, "", "prune"], [1697, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1698, 3, 1, "", "apply"], [1698, 3, 1, "", "apply_mask"], [1698, 3, 1, "", "prune"], [1698, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1699, 3, 1, "", "apply"], [1699, 3, 1, "", "apply_mask"], [1699, 3, 1, "", "prune"], [1699, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1700, 3, 1, "", "apply"], [1700, 3, 1, "", "apply_mask"], [1700, 3, 1, "", "compute_mask"], [1700, 3, 1, "", "prune"], [1700, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1701, 3, 1, "", "add_pruning_method"], [1701, 3, 1, "", "apply"], [1701, 3, 1, "", "apply_mask"], [1701, 3, 1, "", "compute_mask"], [1701, 3, 1, "", "prune"], [1701, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1702, 3, 1, "", "apply"], [1702, 3, 1, "", "apply_mask"], [1702, 3, 1, "", "compute_mask"], [1702, 3, 1, "", "prune"], [1702, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1703, 3, 1, "", "apply"], [1703, 3, 1, "", "apply_mask"], [1703, 3, 1, "", "prune"], [1703, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1715, 1, 1, "", "PackedSequence"], [1716, 5, 1, "", "pack_padded_sequence"], [1717, 5, 1, "", "pack_sequence"], [1718, 5, 1, "", "pad_packed_sequence"], [1719, 5, 1, "", "pad_sequence"], [1720, 5, 1, "", "unpack_sequence"], [1721, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1715, 2, 1, "", "batch_sizes"], [1715, 3, 1, "", "count"], [1715, 2, 1, "", "data"], [1715, 3, 1, "", "index"], [1715, 4, 1, "", "is_cuda"], [1715, 3, 1, "", "is_pinned"], [1715, 2, 1, "", "sorted_indices"], [1715, 3, 1, "", "to"], [1715, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1724, 5, 1, "", "functional_call"]], "torch.onnx": [[1998, 1, 1, "", "DiagnosticOptions"], [1998, 1, 1, "", "ExportOptions"], [1998, 1, 1, "", "InvalidExportOptionsError"], [1735, 1, 1, "", "JitScalarType"], [1998, 1, 1, "", "ONNXProgram"], [1998, 1, 1, "", "ONNXProgramSerializer"], [1998, 1, 1, "", "ONNXRuntimeOptions"], [1998, 1, 1, "", "OnnxExporterError"], [1998, 1, 1, "", "OnnxRegistry"], [2000, 5, 1, "", "disable_log"], [1998, 5, 1, "", "dynamo_export"], [1998, 5, 1, "", "enable_fake_mode"], [2000, 5, 1, "", "enable_log"], [1997, 0, 0, "-", "errors"], [2000, 5, 1, "", "export"], [2000, 5, 1, "", "export_to_pretty_string"], [2000, 5, 1, "", "is_in_onnx_export"], [1999, 5, 1, "", "is_onnxrt_backend_supported"], [1997, 0, 0, "-", "operators"], [2000, 5, 1, "", "register_custom_op_symbolic"], [2000, 5, 1, "", "select_model_mode_for_export"], [1997, 0, 0, "-", "symbolic_caffe2"], [1997, 0, 0, "-", "symbolic_helper"], [1997, 0, 0, "-", "symbolic_opset10"], [1997, 0, 0, "-", "symbolic_opset11"], [1997, 0, 0, "-", "symbolic_opset12"], [1997, 0, 0, "-", "symbolic_opset13"], [1997, 0, 0, "-", "symbolic_opset14"], [1997, 0, 0, "-", "symbolic_opset15"], [1997, 0, 0, "-", "symbolic_opset16"], [1997, 0, 0, "-", "symbolic_opset17"], [1997, 0, 0, "-", "symbolic_opset18"], [1997, 0, 0, "-", "symbolic_opset7"], [1997, 0, 0, "-", "symbolic_opset8"], [1997, 0, 0, "-", "symbolic_opset9"], [2000, 5, 1, "", "unregister_custom_op_symbolic"], [1997, 0, 0, "-", "utils"], [1997, 0, 0, "-", "verification"]], "torch.onnx.JitScalarType": [[1735, 3, 1, "", "dtype"], [1735, 3, 1, "", "from_dtype"], [1735, 3, 1, "", "from_value"], [1735, 3, 1, "", "onnx_compatible"], [1735, 3, 1, "", "onnx_type"], [1735, 3, 1, "", "scalar_name"], [1735, 3, 1, "", "torch_name"]], "torch.onnx.ONNXProgram": [[1998, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1998, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1998, 4, 1, "", "diagnostic_context"], [1998, 4, 1, "", "fake_context"], [1998, 4, 1, "", "model_proto"], [1998, 4, 1, "", "model_signature"], [1998, 3, 1, "", "save"], [1998, 3, 1, "", "save_diagnostics"]], "torch.onnx.ONNXProgramSerializer": [[1998, 3, 1, "", "serialize"]], "torch.onnx.OnnxRegistry": [[1998, 3, 1, "", "get_op_functions"], [1998, 3, 1, "", "is_registered_op"], [1998, 4, 1, "", "opset_version"], [1998, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1736, 1, 1, "", "GraphInfo"], [1737, 1, 1, "", "VerificationOptions"], [2000, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1736, 3, 1, "", "all_mismatch_leaf_graph_info"], [1736, 3, 1, "", "clear"], [1736, 3, 1, "", "essential_node_count"], [1736, 3, 1, "", "essential_node_kinds"], [1736, 3, 1, "", "export_repro"], [1736, 3, 1, "", "find_mismatch"], [1736, 3, 1, "", "find_partition"], [1736, 3, 1, "", "has_mismatch"], [1736, 3, 1, "", "pretty_print_mismatch"], [1736, 3, 1, "", "pretty_print_tree"], [1736, 3, 1, "", "verify_export"]], "torch.optim": [[1738, 1, 1, "", "ASGD"], [1739, 1, 1, "", "Adadelta"], [1740, 1, 1, "", "Adagrad"], [1741, 1, 1, "", "Adam"], [1742, 1, 1, "", "AdamW"], [1743, 1, 1, "", "Adamax"], [1744, 1, 1, "", "LBFGS"], [1745, 1, 1, "", "NAdam"], [2002, 1, 1, "", "Optimizer"], [1751, 1, 1, "", "RAdam"], [1752, 1, 1, "", "RMSprop"], [1753, 1, 1, "", "Rprop"], [1754, 1, 1, "", "SGD"], [1755, 1, 1, "", "SparseAdam"], [2002, 0, 0, "-", "adadelta"], [2002, 0, 0, "-", "adagrad"], [2002, 0, 0, "-", "adam"], [2002, 0, 0, "-", "adamax"], [2002, 0, 0, "-", "adamw"], [2002, 0, 0, "-", "asgd"], [2002, 0, 0, "-", "lbfgs"], [2002, 0, 0, "-", "lr_scheduler"], [2002, 0, 0, "-", "nadam"], [2002, 0, 0, "-", "optimizer"], [2002, 0, 0, "-", "radam"], [2002, 0, 0, "-", "rmsprop"], [2002, 0, 0, "-", "rprop"], [2002, 0, 0, "-", "sgd"], [2002, 0, 0, "-", "sparse_adam"], [2002, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1738, 3, 1, "", "add_param_group"], [1738, 3, 1, "", "load_state_dict"], [1738, 3, 1, "", "register_load_state_dict_post_hook"], [1738, 3, 1, "", "register_load_state_dict_pre_hook"], [1738, 3, 1, "", "register_state_dict_post_hook"], [1738, 3, 1, "", "register_state_dict_pre_hook"], [1738, 3, 1, "", "register_step_post_hook"], [1738, 3, 1, "", "register_step_pre_hook"], [1738, 3, 1, "", "state_dict"], [1738, 3, 1, "", "step"], [1738, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1739, 3, 1, "", "add_param_group"], [1739, 3, 1, "", "load_state_dict"], [1739, 3, 1, "", "register_load_state_dict_post_hook"], [1739, 3, 1, "", "register_load_state_dict_pre_hook"], [1739, 3, 1, "", "register_state_dict_post_hook"], [1739, 3, 1, "", "register_state_dict_pre_hook"], [1739, 3, 1, "", "register_step_post_hook"], [1739, 3, 1, "", "register_step_pre_hook"], [1739, 3, 1, "", "state_dict"], [1739, 3, 1, "", "step"], [1739, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1740, 3, 1, "", "add_param_group"], [1740, 3, 1, "", "load_state_dict"], [1740, 3, 1, "", "register_load_state_dict_post_hook"], [1740, 3, 1, "", "register_load_state_dict_pre_hook"], [1740, 3, 1, "", "register_state_dict_post_hook"], [1740, 3, 1, "", "register_state_dict_pre_hook"], [1740, 3, 1, "", "register_step_post_hook"], [1740, 3, 1, "", "register_step_pre_hook"], [1740, 3, 1, "", "state_dict"], [1740, 3, 1, "", "step"], [1740, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1741, 3, 1, "", "add_param_group"], [1741, 3, 1, "", "load_state_dict"], [1741, 3, 1, "", "register_load_state_dict_post_hook"], [1741, 3, 1, "", "register_load_state_dict_pre_hook"], [1741, 3, 1, "", "register_state_dict_post_hook"], [1741, 3, 1, "", "register_state_dict_pre_hook"], [1741, 3, 1, "", "register_step_post_hook"], [1741, 3, 1, "", "register_step_pre_hook"], [1741, 3, 1, "", "state_dict"], [1741, 3, 1, "", "step"], [1741, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1742, 3, 1, "", "add_param_group"], [1742, 3, 1, "", "load_state_dict"], [1742, 3, 1, "", "register_load_state_dict_post_hook"], [1742, 3, 1, "", "register_load_state_dict_pre_hook"], [1742, 3, 1, "", "register_state_dict_post_hook"], [1742, 3, 1, "", "register_state_dict_pre_hook"], [1742, 3, 1, "", "register_step_post_hook"], [1742, 3, 1, "", "register_step_pre_hook"], [1742, 3, 1, "", "state_dict"], [1742, 3, 1, "", "step"], [1742, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1743, 3, 1, "", "add_param_group"], [1743, 3, 1, "", "load_state_dict"], [1743, 3, 1, "", "register_load_state_dict_post_hook"], [1743, 3, 1, "", "register_load_state_dict_pre_hook"], [1743, 3, 1, "", "register_state_dict_post_hook"], [1743, 3, 1, "", "register_state_dict_pre_hook"], [1743, 3, 1, "", "register_step_post_hook"], [1743, 3, 1, "", "register_step_pre_hook"], [1743, 3, 1, "", "state_dict"], [1743, 3, 1, "", "step"], [1743, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1744, 3, 1, "", "add_param_group"], [1744, 3, 1, "", "load_state_dict"], [1744, 3, 1, "", "register_load_state_dict_post_hook"], [1744, 3, 1, "", "register_load_state_dict_pre_hook"], [1744, 3, 1, "", "register_state_dict_post_hook"], [1744, 3, 1, "", "register_state_dict_pre_hook"], [1744, 3, 1, "", "register_step_post_hook"], [1744, 3, 1, "", "register_step_pre_hook"], [1744, 3, 1, "", "state_dict"], [1744, 3, 1, "", "step"], [1744, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1745, 3, 1, "", "add_param_group"], [1745, 3, 1, "", "load_state_dict"], [1745, 3, 1, "", "register_load_state_dict_post_hook"], [1745, 3, 1, "", "register_load_state_dict_pre_hook"], [1745, 3, 1, "", "register_state_dict_post_hook"], [1745, 3, 1, "", "register_state_dict_pre_hook"], [1745, 3, 1, "", "register_step_post_hook"], [1745, 3, 1, "", "register_step_pre_hook"], [1745, 3, 1, "", "state_dict"], [1745, 3, 1, "", "step"], [1745, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1746, 3, 1, "", "add_param_group"], [1747, 3, 1, "", "load_state_dict"], [1748, 3, 1, "", "state_dict"], [1749, 3, 1, "", "step"], [1750, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1751, 3, 1, "", "add_param_group"], [1751, 3, 1, "", "load_state_dict"], [1751, 3, 1, "", "register_load_state_dict_post_hook"], [1751, 3, 1, "", "register_load_state_dict_pre_hook"], [1751, 3, 1, "", "register_state_dict_post_hook"], [1751, 3, 1, "", "register_state_dict_pre_hook"], [1751, 3, 1, "", "register_step_post_hook"], [1751, 3, 1, "", "register_step_pre_hook"], [1751, 3, 1, "", "state_dict"], [1751, 3, 1, "", "step"], [1751, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1752, 3, 1, "", "add_param_group"], [1752, 3, 1, "", "load_state_dict"], [1752, 3, 1, "", "register_load_state_dict_post_hook"], [1752, 3, 1, "", "register_load_state_dict_pre_hook"], [1752, 3, 1, "", "register_state_dict_post_hook"], [1752, 3, 1, "", "register_state_dict_pre_hook"], [1752, 3, 1, "", "register_step_post_hook"], [1752, 3, 1, "", "register_step_pre_hook"], [1752, 3, 1, "", "state_dict"], [1752, 3, 1, "", "step"], [1752, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1753, 3, 1, "", "add_param_group"], [1753, 3, 1, "", "load_state_dict"], [1753, 3, 1, "", "register_load_state_dict_post_hook"], [1753, 3, 1, "", "register_load_state_dict_pre_hook"], [1753, 3, 1, "", "register_state_dict_post_hook"], [1753, 3, 1, "", "register_state_dict_pre_hook"], [1753, 3, 1, "", "register_step_post_hook"], [1753, 3, 1, "", "register_step_pre_hook"], [1753, 3, 1, "", "state_dict"], [1753, 3, 1, "", "step"], [1753, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1754, 3, 1, "", "add_param_group"], [1754, 3, 1, "", "load_state_dict"], [1754, 3, 1, "", "register_load_state_dict_post_hook"], [1754, 3, 1, "", "register_load_state_dict_pre_hook"], [1754, 3, 1, "", "register_state_dict_post_hook"], [1754, 3, 1, "", "register_state_dict_pre_hook"], [1754, 3, 1, "", "register_step_post_hook"], [1754, 3, 1, "", "register_step_pre_hook"], [1754, 3, 1, "", "state_dict"], [1754, 3, 1, "", "step"], [1754, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1755, 3, 1, "", "add_param_group"], [1755, 3, 1, "", "load_state_dict"], [1755, 3, 1, "", "register_load_state_dict_post_hook"], [1755, 3, 1, "", "register_load_state_dict_pre_hook"], [1755, 3, 1, "", "register_state_dict_post_hook"], [1755, 3, 1, "", "register_state_dict_pre_hook"], [1755, 3, 1, "", "register_step_post_hook"], [1755, 3, 1, "", "register_step_pre_hook"], [1755, 3, 1, "", "state_dict"], [1755, 3, 1, "", "step"], [1755, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1756, 1, 1, "", "ChainedScheduler"], [1757, 1, 1, "", "ConstantLR"], [1758, 1, 1, "", "CosineAnnealingLR"], [1759, 1, 1, "", "CosineAnnealingWarmRestarts"], [1760, 1, 1, "", "CyclicLR"], [1761, 1, 1, "", "ExponentialLR"], [1762, 1, 1, "", "LambdaLR"], [1763, 1, 1, "", "LinearLR"], [1764, 1, 1, "", "MultiStepLR"], [1765, 1, 1, "", "MultiplicativeLR"], [1766, 1, 1, "", "OneCycleLR"], [1767, 1, 1, "", "PolynomialLR"], [1768, 1, 1, "", "ReduceLROnPlateau"], [1769, 1, 1, "", "SequentialLR"], [1770, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1756, 3, 1, "", "get_last_lr"], [1756, 3, 1, "", "load_state_dict"], [1756, 3, 1, "", "print_lr"], [1756, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1757, 3, 1, "", "get_last_lr"], [1757, 3, 1, "", "load_state_dict"], [1757, 3, 1, "", "print_lr"], [1757, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1758, 3, 1, "", "get_last_lr"], [1758, 3, 1, "", "load_state_dict"], [1758, 3, 1, "", "print_lr"], [1758, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1759, 3, 1, "", "get_last_lr"], [1759, 3, 1, "", "load_state_dict"], [1759, 3, 1, "", "print_lr"], [1759, 3, 1, "", "state_dict"], [1759, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1760, 3, 1, "", "get_last_lr"], [1760, 3, 1, "", "get_lr"], [1760, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1761, 3, 1, "", "get_last_lr"], [1761, 3, 1, "", "load_state_dict"], [1761, 3, 1, "", "print_lr"], [1761, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1762, 3, 1, "", "get_last_lr"], [1762, 3, 1, "", "load_state_dict"], [1762, 3, 1, "", "print_lr"], [1762, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1763, 3, 1, "", "get_last_lr"], [1763, 3, 1, "", "load_state_dict"], [1763, 3, 1, "", "print_lr"], [1763, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1764, 3, 1, "", "get_last_lr"], [1764, 3, 1, "", "load_state_dict"], [1764, 3, 1, "", "print_lr"], [1764, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1765, 3, 1, "", "get_last_lr"], [1765, 3, 1, "", "load_state_dict"], [1765, 3, 1, "", "print_lr"], [1765, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1766, 3, 1, "", "get_last_lr"], [1766, 3, 1, "", "load_state_dict"], [1766, 3, 1, "", "print_lr"], [1766, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1767, 3, 1, "", "get_last_lr"], [1767, 3, 1, "", "load_state_dict"], [1767, 3, 1, "", "print_lr"], [1767, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1768, 3, 1, "", "get_last_lr"], [1768, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1769, 3, 1, "", "get_last_lr"], [1769, 3, 1, "", "load_state_dict"], [1769, 3, 1, "", "print_lr"], [1769, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1770, 3, 1, "", "get_last_lr"], [1770, 3, 1, "", "load_state_dict"], [1770, 3, 1, "", "print_lr"], [1770, 3, 1, "", "state_dict"]], "torch.overrides": [[2046, 5, 1, "", "get_ignored_functions"], [2046, 5, 1, "", "get_overridable_functions"], [2046, 5, 1, "", "get_testing_overrides"], [2046, 5, 1, "", "handle_torch_function"], [2046, 5, 1, "", "has_torch_function"], [2046, 5, 1, "", "is_tensor_like"], [2046, 5, 1, "", "is_tensor_method_or_property"], [2046, 5, 1, "", "resolve_name"], [2046, 5, 1, "", "wrap_torch_function"]], "torch.package": [[2003, 1, 1, "", "Directory"], [2003, 1, 1, "", "EmptyMatchError"], [2003, 1, 1, "", "PackageExporter"], [2003, 1, 1, "", "PackageImporter"], [2003, 1, 1, "", "PackagingError"], [2003, 0, 0, "-", "analyze"], [2003, 0, 0, "-", "file_structure_representation"], [2003, 0, 0, "-", "find_file_dependencies"], [2003, 0, 0, "-", "glob_group"], [2003, 0, 0, "-", "importer"], [2003, 0, 0, "-", "package_exporter"], [2003, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[2003, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[2003, 3, 1, "", "__init__"], [2003, 3, 1, "", "add_dependency"], [2003, 3, 1, "", "all_paths"], [2003, 3, 1, "", "close"], [2003, 3, 1, "", "denied_modules"], [2003, 3, 1, "", "deny"], [2003, 3, 1, "", "dependency_graph_string"], [2003, 3, 1, "", "extern"], [2003, 3, 1, "", "externed_modules"], [2003, 3, 1, "", "get_rdeps"], [2003, 3, 1, "", "get_unique_id"], [2003, 3, 1, "", "intern"], [2003, 3, 1, "", "interned_modules"], [2003, 3, 1, "", "mock"], [2003, 3, 1, "", "mocked_modules"], [2003, 3, 1, "", "register_extern_hook"], [2003, 3, 1, "", "register_intern_hook"], [2003, 3, 1, "", "register_mock_hook"], [2003, 3, 1, "", "save_binary"], [2003, 3, 1, "", "save_module"], [2003, 3, 1, "", "save_pickle"], [2003, 3, 1, "", "save_source_file"], [2003, 3, 1, "", "save_source_string"], [2003, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[2003, 3, 1, "", "__init__"], [2003, 3, 1, "", "file_structure"], [2003, 3, 1, "", "id"], [2003, 3, 1, "", "import_module"], [2003, 3, 1, "", "load_binary"], [2003, 3, 1, "", "load_pickle"], [2003, 3, 1, "", "load_text"], [2003, 3, 1, "", "python_version"]], "torch.package.analyze": [[2003, 0, 0, "-", "find_first_use_of_broken_modules"], [2003, 0, 0, "-", "is_from_package"], [2003, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[2005, 1, 1, "", "ProfilerAction"], [2005, 1, 1, "", "ProfilerActivity"], [2005, 1, 1, "", "_KinetoProfile"], [2005, 0, 0, "-", "itt"], [2005, 1, 1, "", "profile"], [2005, 0, 0, "-", "profiler"], [2005, 0, 0, "-", "python_tracer"], [2005, 5, 1, "", "schedule"], [2005, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[2005, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[2005, 3, 1, "", "add_metadata"], [2005, 3, 1, "", "add_metadata_json"], [2005, 3, 1, "", "events"], [2005, 3, 1, "", "export_chrome_trace"], [2005, 3, 1, "", "export_memory_timeline"], [2005, 3, 1, "", "export_stacks"], [2005, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[2005, 5, 1, "", "is_available"], [2005, 5, 1, "", "mark"], [2005, 5, 1, "", "range_pop"], [2005, 5, 1, "", "range_push"]], "torch.profiler.profile": [[2005, 3, 1, "", "step"]], "torch.quantization": [[2006, 0, 0, "-", "fake_quantize"], [2006, 0, 0, "-", "fuse_modules"], [2006, 0, 0, "-", "fuser_method_mappings"], [2009, 0, 0, "-", "fx"], [2006, 0, 0, "-", "observer"], [2006, 0, 0, "-", "qconfig"], [2006, 0, 0, "-", "quant_type"], [2006, 0, 0, "-", "quantization_mappings"], [2006, 0, 0, "-", "quantize"], [2006, 0, 0, "-", "quantize_fx"], [2006, 0, 0, "-", "quantize_jit"], [2006, 0, 0, "-", "stubs"], [2006, 0, 0, "-", "utils"]], "torch.quantization.fx": [[2006, 0, 0, "-", "convert"], [2006, 0, 0, "-", "fuse"], [2006, 0, 0, "-", "fusion_patterns"], [2006, 0, 0, "-", "graph_module"], [2006, 0, 0, "-", "match_utils"], [2006, 0, 0, "-", "pattern_utils"], [2006, 0, 0, "-", "prepare"], [2006, 0, 0, "-", "quantization_patterns"], [2006, 0, 0, "-", "quantization_types"], [2006, 0, 0, "-", "utils"]], "torch.quasirandom": [[1791, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1791, 3, 1, "", "draw"], [1791, 3, 1, "", "draw_base2"], [1791, 3, 1, "", "fast_forward"], [1791, 3, 1, "", "reset"]], "torch.random": [[2010, 5, 1, "", "fork_rng"], [2010, 5, 1, "", "get_rng_state"], [2010, 5, 1, "", "initial_seed"], [2010, 5, 1, "", "manual_seed"], [2010, 5, 1, "", "seed"], [2010, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1995, 5, 1, "", "get_default_load_endianness"], [1995, 5, 1, "", "register_package"], [1995, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[2014, 0, 0, "-", "windows"]], "torch.signal.windows": [[1838, 5, 1, "", "bartlett"], [1839, 5, 1, "", "blackman"], [1840, 5, 1, "", "cosine"], [1841, 5, 1, "", "exponential"], [1842, 5, 1, "", "gaussian"], [1843, 5, 1, "", "general_cosine"], [1844, 5, 1, "", "general_hamming"], [1845, 5, 1, "", "hamming"], [1846, 5, 1, "", "hann"], [1847, 5, 1, "", "kaiser"], [1848, 5, 1, "", "nuttall"], [2023, 0, 0, "-", "windows"]], "torch.sparse": [[1858, 5, 1, "", "addmm"], [1859, 5, 1, "", "as_sparse_gradcheck"], [1860, 1, 1, "", "check_sparse_tensor_invariants"], [1861, 5, 1, "", "log_softmax"], [1862, 5, 1, "", "mm"], [1863, 5, 1, "", "sampled_addmm"], [2023, 0, 0, "-", "semi_structured"], [1864, 5, 1, "", "softmax"], [1865, 5, 1, "", "spdiags"], [1866, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1860, 3, 1, "", "disable"], [1860, 3, 1, "", "enable"], [1860, 3, 1, "", "is_enabled"]], "torch.special": [[2016, 5, 1, "", "airy_ai"], [2016, 5, 1, "", "bessel_j0"], [2016, 5, 1, "", "bessel_j1"], [2016, 5, 1, "", "digamma"], [2016, 5, 1, "", "entr"], [2016, 5, 1, "", "erf"], [2016, 5, 1, "", "erfc"], [2016, 5, 1, "", "erfcx"], [2016, 5, 1, "", "erfinv"], [2016, 5, 1, "", "exp2"], [2016, 5, 1, "", "expit"], [2016, 5, 1, "", "expm1"], [2016, 5, 1, "", "gammainc"], [2016, 5, 1, "", "gammaincc"], [2016, 5, 1, "", "gammaln"], [2016, 5, 1, "", "i0"], [2016, 5, 1, "", "i0e"], [2016, 5, 1, "", "i1"], [2016, 5, 1, "", "i1e"], [2016, 5, 1, "", "log1p"], [2016, 5, 1, "", "log_ndtr"], [2016, 5, 1, "", "log_softmax"], [2016, 5, 1, "", "logit"], [2016, 5, 1, "", "logsumexp"], [2016, 5, 1, "", "multigammaln"], [2016, 5, 1, "", "ndtr"], [2016, 5, 1, "", "ndtri"], [2016, 5, 1, "", "polygamma"], [2016, 5, 1, "", "psi"], [2016, 5, 1, "", "round"], [2016, 5, 1, "", "scaled_modified_bessel_k0"], [2016, 5, 1, "", "scaled_modified_bessel_k1"], [2016, 5, 1, "", "sinc"], [2016, 5, 1, "", "softmax"], [2016, 5, 1, "", "spherical_bessel_j0"], [2016, 5, 1, "", "xlog1py"], [2016, 5, 1, "", "xlogy"], [2016, 5, 1, "", "zeta"]], "torch.testing": [[2022, 5, 1, "", "assert_allclose"], [2022, 5, 1, "", "assert_close"], [2022, 5, 1, "", "make_tensor"]], "torch.torch": [[2023, 2, 1, "", "default_generator"], [2048, 1, 1, "", "finfo"], [2048, 1, 1, "", "iinfo"]], "torch.utils": [[2023, 0, 0, "-", "backcompat"], [2049, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [2049, 0, 0, "-", "bundled_inputs"], [2049, 0, 0, "-", "checkpoint"], [2049, 0, 0, "-", "collect_env"], [2049, 0, 0, "-", "cpp_backtrace"], [2049, 0, 0, "-", "cpp_extension"], [21, 0, 0, "-", "data"], [24, 0, 0, "-", "deterministic"], [2049, 0, 0, "-", "dlpack"], [2049, 0, 0, "-", "file_baton"], [2049, 0, 0, "-", "flop_counter"], [1923, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1924, 5, 1, "", "get_cpp_backtrace"], [2023, 0, 0, "-", "hipify"], [2049, 0, 0, "-", "hooks"], [1958, 0, 0, "-", "jit"], [2049, 0, 0, "-", "mkldnn"], [2049, 0, 0, "-", "mobile_optimizer"], [2023, 0, 0, "-", "model_dump"], [1965, 0, 0, "-", "model_zoo"], [1925, 5, 1, "", "rename_privateuse1_backend"], [1926, 5, 1, "", "set_module"], [2049, 0, 0, "-", "show_pickle"], [1927, 5, 1, "", "swap_tensors"], [2020, 0, 0, "-", "tensorboard"], [2049, 0, 0, "-", "throughput_benchmark"], [2023, 0, 0, "-", "viz"], [2049, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[2049, 0, 0, "-", "blas_compare_setup"], [2049, 0, 0, "-", "compare"], [2049, 0, 0, "-", "fuzzer"], [2049, 0, 0, "-", "op_benchmark"], [2049, 0, 0, "-", "simple_timeit"], [2049, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[2049, 0, 0, "-", "binary"], [2049, 0, 0, "-", "sparse_binary"], [2049, 0, 0, "-", "sparse_unary"], [2049, 0, 0, "-", "spectral"], [2049, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[2049, 0, 0, "-", "common"], [2049, 0, 0, "-", "compare"], [2049, 0, 0, "-", "compile"], [2049, 0, 0, "-", "cpp_jit"], [2049, 0, 0, "-", "fuzzer"], [2049, 0, 0, "-", "sparse_fuzzer"], [2049, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[2049, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[21, 1, 1, "", "BatchSampler"], [21, 1, 1, "", "ChainDataset"], [21, 1, 1, "", "ConcatDataset"], [21, 1, 1, "", "DataLoader"], [21, 1, 1, "", "Dataset"], [21, 1, 1, "", "IterableDataset"], [21, 1, 1, "", "RandomSampler"], [21, 1, 1, "", "Sampler"], [21, 1, 1, "", "SequentialSampler"], [21, 1, 1, "", "StackDataset"], [21, 1, 1, "", "Subset"], [21, 1, 1, "", "SubsetRandomSampler"], [21, 1, 1, "", "TensorDataset"], [21, 1, 1, "", "WeightedRandomSampler"], [2049, 0, 0, "-", "backward_compatibility"], [2049, 0, 0, "-", "dataloader"], [21, 0, 0, "-", "datapipes"], [2049, 0, 0, "-", "dataset"], [21, 5, 1, "", "default_collate"], [21, 5, 1, "", "default_convert"], [2049, 0, 0, "-", "distributed"], [21, 5, 1, "", "get_worker_info"], [2049, 0, 0, "-", "graph"], [2049, 0, 0, "-", "graph_settings"], [21, 5, 1, "", "random_split"], [2049, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[21, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[21, 0, 0, "-", "dataframe"], [2049, 0, 0, "-", "datapipe"], [2049, 0, 0, "-", "gen_pyi"], [21, 0, 0, "-", "iter"], [21, 0, 0, "-", "map"], [21, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[2049, 0, 0, "-", "dataframe_wrapper"], [2049, 0, 0, "-", "dataframes"], [2049, 0, 0, "-", "datapipes"], [2049, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[2049, 0, 0, "-", "callable"], [2049, 0, 0, "-", "combinatorics"], [2049, 0, 0, "-", "combining"], [2049, 0, 0, "-", "filelister"], [2049, 0, 0, "-", "fileopener"], [2049, 0, 0, "-", "grouping"], [2049, 0, 0, "-", "routeddecoder"], [2049, 0, 0, "-", "selecting"], [2049, 0, 0, "-", "sharding"], [2049, 0, 0, "-", "streamreader"], [2049, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[2049, 0, 0, "-", "callable"], [2049, 0, 0, "-", "combinatorics"], [2049, 0, 0, "-", "combining"], [2049, 0, 0, "-", "grouping"], [2049, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[2049, 0, 0, "-", "common"], [2049, 0, 0, "-", "decoder"], [2049, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[21, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[24, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[32, 5, 1, "", "from_dlpack"], [32, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[2049, 0, 0, "-", "constants"], [2049, 0, 0, "-", "cuda_to_hip_mappings"], [2049, 0, 0, "-", "hipify_python"], [2049, 0, 0, "-", "version"]], "torch.utils.jit": [[2049, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[1964, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1965, 5, 1, "", "load_url"]], "torch.utils.tensorboard": [[2049, 0, 0, "-", "summary"], [2049, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[2020, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[2020, 3, 1, "", "__init__"], [2020, 3, 1, "", "add_audio"], [2020, 3, 1, "", "add_custom_scalars"], [2020, 3, 1, "", "add_embedding"], [2020, 3, 1, "", "add_figure"], [2020, 3, 1, "", "add_graph"], [2020, 3, 1, "", "add_histogram"], [2020, 3, 1, "", "add_hparams"], [2020, 3, 1, "", "add_image"], [2020, 3, 1, "", "add_images"], [2020, 3, 1, "", "add_mesh"], [2020, 3, 1, "", "add_pr_curve"], [2020, 3, 1, "", "add_scalar"], [2020, 3, 1, "", "add_scalars"], [2020, 3, 1, "", "add_text"], [2020, 3, 1, "", "add_video"], [2020, 3, 1, "", "close"], [2020, 3, 1, "", "flush"]], "torch.xpu": [[1939, 5, 1, "", "current_device"], [1940, 1, 1, "", "device"], [1941, 5, 1, "", "device_count"], [1942, 1, 1, "", "device_of"], [1943, 5, 1, "", "get_device_capability"], [1944, 5, 1, "", "get_device_name"], [1945, 5, 1, "", "get_device_properties"], [1946, 5, 1, "", "is_available"], [1947, 5, 1, "", "set_device"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 21, 1952, 1977, 1984], "mix": [0, 1952, 1977], "precis": [0, 1977, 1981, 1993], "packag": [0, 1, 15, 25, 1968, 1996, 2003], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 21, 23, 24, 25, 27, 28, 30, 31, 32, 43, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 918, 919, 920, 921, 924, 925, 926, 927, 928, 929, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 993, 994, 995, 996, 997, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1746, 1747, 1748, 1749, 1750, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1965, 1966, 1967, 1968, 1971, 1972, 1973, 1974, 1975, 1976, 1981, 1983, 1984, 1988, 1993, 1995, 1997, 2000, 2002, 2003, 2005, 2009, 2010, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2035, 2036, 2043, 2046, 2048, 2049, 2050], "amp": [0, 1981], "autocast": [0, 1977], "gradient": [0, 1, 55, 1203, 1977, 1978, 1984, 2023, 2035], "scale": [0, 1977, 1989], "op": [0, 12, 80, 1957, 1977, 2000, 2023], "refer": [0, 12, 18, 46, 47, 51, 58, 1952, 1954, 1955, 1956, 1966, 1970, 1988, 1998, 2003, 2005, 2006, 2009, 2013, 2021, 2028, 2047], "elig": 0, "cuda": [0, 2, 10, 17, 18, 205, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1968, 1977, 1981, 1985, 1988, 1992, 1994, 1996, 2030, 2035, 2043, 2047], "specif": [0, 21, 47, 2015], "behavior": [0, 21, 1978, 1987], "can": [0, 1978, 1985, 2035, 2042], "float16": 0, "float32": 0, "promot": [0, 7, 82], "widest": 0, "input": [0, 46, 1969, 1977, 1987], "type": [0, 21, 47, 82, 598, 1954, 1955, 1983, 2000, 2003, 2021, 2048], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1565], "over": [0, 8, 1954], "binary_cross_entropi": [0, 1564], "cpu": [0, 2, 10, 16, 202, 990, 991, 992, 993, 994, 995, 996, 1978, 1980, 1992, 2006, 2029], "bfloat16": [0, 151], "differenti": [1, 1978], "autograd": [1, 10, 11, 15, 54, 884, 885, 886, 887, 888, 891, 892, 893, 894, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 918, 919, 920, 921, 924, 925, 926, 927, 928, 929, 1970, 1977, 1978, 1983, 1984, 2000, 2011, 2012], "forward": [1, 885, 1983, 2012], "mode": [1, 43, 52, 410, 1355, 1978, 1983, 1987, 2000, 2006, 2012], "function": [1, 25, 31, 48, 50, 51, 53, 55, 58, 78, 81, 884, 885, 886, 887, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907, 908, 1155, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1952, 1953, 1954, 1955, 1957, 1960, 1962, 1969, 1971, 1972, 1975, 1977, 1978, 1984, 1987, 1995, 2000, 2009, 2015, 2016, 2035, 2046], "higher": 1, "level": [1, 10, 80, 1959, 2009], "api": [1, 10, 12, 15, 18, 28, 36, 46, 51, 54, 58, 1951, 1952, 1955, 1959, 1966, 1970, 1980, 1981, 1983, 1988, 1989, 1998, 2000, 2003, 2004, 2005, 2006, 2009, 2028, 2033, 2034, 2035, 2036, 2047], "local": [1, 1955, 1978, 2023, 2042, 2044], "disabl": [1, 21, 973, 1952, 1978, 2023, 2035, 2036], "comput": [1, 55, 1978, 1993, 2012, 2023, 2035], "default": [1, 21, 22, 1954, 1978, 1981, 1987, 2008], "layout": [1, 2018], "manual": 1, "In": [1, 8, 1978, 1979, 2023], "place": [1, 54, 1969, 1978, 1979, 2000, 2023], "oper": [1, 10, 22, 25, 46, 54, 74, 83, 1954, 1955, 1960, 1962, 1969, 1970, 1971, 1978, 1983, 1989, 1996, 2000, 2001, 2006, 2015, 2021, 2023, 2034], "tensor": [1, 11, 15, 30, 46, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 1900, 1953, 1957, 1960, 1963, 1968, 1969, 1970, 1971, 1978, 1983, 1995, 2000, 2006, 2009, 2015, 2018, 2019, 2021, 2023, 2034], "correct": [1, 58, 1978], "check": [1, 58, 1952, 1978, 1988, 2042], "variabl": [1, 25, 43, 1952, 1954, 1955, 2038, 2039], "deprec": 1, "context": [1, 26, 40, 64, 2012], "method": [1, 35, 36, 39, 44, 1953, 1954, 1957, 2000, 2009, 2015], "mixin": 1, "custom": [1, 34, 44, 58, 1955, 1977, 1981, 1983, 1984, 1990, 2000, 2002, 2003, 2006, 2031], "util": [1, 3, 4, 5, 10, 14, 21, 24, 25, 32, 51, 53, 1075, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1923, 1924, 1925, 1926, 1927, 1958, 1964, 1965, 1972, 1973, 1995, 2009, 2020, 2023, 2025, 2044, 2049], "numer": [1, 1987, 1993, 2007], "profil": [1, 25, 924, 925, 926, 927, 928, 929, 1364, 1365, 1366, 1967, 1989, 1990, 2005, 2039, 2043, 2045], "debug": [1, 22, 25, 58, 80, 1952, 2006, 2007, 2031, 2035, 2045], "anomali": 1, "detect": 1, "graph": [1, 17, 46, 47, 58, 75, 916, 917, 918, 919, 920, 921, 1032, 1952, 1978, 1981, 2006, 2030, 2035, 2043, 2044, 2045], "backend": [2, 25, 42, 43, 1952, 1988, 1991, 1999, 2006, 2008, 2011, 2026, 2029, 2031, 2045], "cudnn": 2, "mha": 2, "mp": [2, 10, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1967, 1991], "mkl": 2, "mkldnn": [2, 10], "nnpack": 2, "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1994, 2039], "bottleneck": 4, "checkpoint": [5, 22, 27], "pytorch": [6, 7, 8, 9, 10, 15, 23, 25, 46, 54, 1951, 1952, 1953, 1957, 1978, 1981, 1983, 1994, 1995, 2000, 2004, 2006, 2009, 2026, 2030, 2041, 2042, 2045], "govern": [6, 9, 10], "build": [6, 7, 10, 1980, 1989, 1990, 1996], "ci": [6, 10], "how": [6, 22, 52, 1950, 1978, 1983, 2002, 2003, 2032, 2034, 2035, 2042], "add": [6, 9, 93, 680], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1997], "guid": 7, "process": [7, 9, 21, 40, 1977], "get": [7, 28, 2000, 2026, 2035, 2037], "start": [7, 28, 40, 1365, 2026, 2037], "propos": 7, "featur": [7, 1989, 1990, 2035], "report": [7, 1985], "issu": [7, 1952, 1998, 2043], "implement": [7, 33, 42, 44, 1950, 1982, 1987, 2000, 2007, 2009, 2013, 2034], "fix": [7, 43, 52, 257, 1135], "bug": 7, "ad": [7, 1983, 2000], "tutori": [7, 10, 2003, 2004, 2011], "improv": [7, 1990], "document": [7, 28, 1951], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 58, 1952, 1981, 2003, 2035], "readabl": 7, "test": [7, 1955, 1983, 2003, 2022, 2042], "case": [7, 1952], "make": [7, 9, 2030, 2038], "codebas": 7, "more": [7, 46, 50, 2011, 2026], "robust": 7, "triag": 7, "about": [7, 1978, 2011, 2034], "sourc": [7, 1994, 1996, 2003], "develop": [7, 46, 1951, 1997, 2026], "common": [7, 25, 58, 1989, 2006], "mistak": 7, "To": 7, "avoid": [7, 1992, 1994, 2000, 2003], "frequent": [7, 1952, 1985, 2000, 2006, 2035], "ask": [7, 1952, 1985, 2000, 2006, 2035], "question": [7, 1952, 1985, 2000, 2006, 2035], "On": [7, 22, 1954], "python": [7, 8, 25, 54, 61, 62, 63, 64, 65, 66, 67, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1983, 1994, 2000, 2038], "doc": [7, 10, 1988], "c": [7, 10, 15, 1978, 1983, 1988, 1995, 2000, 2027], "overview": [7, 18, 46, 58, 1997, 1998, 2003, 2005, 2015, 2031, 2038], "design": [8, 1955, 1982, 2011, 2012, 2013], "philosophi": 8, "principl": [8, 9], "1": [8, 43, 52, 1952, 1984], "usabl": 8, "perform": [8, 10, 1990, 1995, 2034, 2042, 2043, 2045], "2": [8, 52, 1952, 1981, 1984, 1985, 2006, 2009, 2041, 2042, 2045], "simpl": [8, 1954, 1955, 1990, 1998, 2012], "easi": 8, "3": [8, 43, 52], "first": [8, 2003], "best": [8, 1981, 1992, 2006, 2029], "class": [8, 35, 58, 1952, 1954, 1955, 1957, 2000, 2002, 2003, 2021], "languag": [8, 1951, 1952, 1954, 1955, 1956], "interoper": 8, "mechan": [9, 1975, 1978, 1987], "summari": [9, 2006, 2038], "modul": [9, 10, 51, 53, 58, 1487, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1952, 1953, 1954, 1955, 1957, 1972, 1978, 1983, 1990, 1995, 2003, 2006, 2041], "core": [9, 10, 2040], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1955], "confirm": 9, "remov": [9, 1712, 1969], "The": [9, 58, 1955, 1978, 2033], "re": [9, 2003], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 43, 52, 2035], "controversi": 9, "gener": [9, 17, 26, 54, 58, 84, 1979, 1984, 1994, 2006, 2007, 2023, 2032, 2047], "polici": [9, 2033], "faq": [9, 1996], "respons": 10, "nn": [10, 51, 53, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1954, 1955, 1972, 1973, 1974, 1975, 1976, 1978, 1981, 1983, 1995, 2009, 2015, 2041], "optim": [10, 29, 1746, 1747, 1748, 1749, 1750, 1977, 1978, 1981, 2002, 2011, 2012, 2023], "compil": [10, 53, 967, 969, 970, 971, 972, 973, 974, 975, 1981, 2026, 2027, 2028, 2035, 2036, 2043, 2045], "jit": [10, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1952, 1955, 1958], "torchscript": [10, 15, 1952, 1953, 1954, 1955, 1957, 1980, 1989, 1997, 2000, 2001, 2003], "fx": [10, 58, 59, 75, 76, 77, 79, 82, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1990, 2006, 2009, 2025], "torchdynamo": [10, 1982, 1997, 1998, 1999, 2030, 2032, 2036, 2045], "distribut": [10, 25, 27, 28, 29, 30, 31, 43, 1972, 1975, 1982, 1988, 1990, 2011, 2012, 2035], "rng": 10, "multiprocess": [10, 40, 1968, 1981, 1992, 1996], "dataload": [10, 1994], "linear": [10, 11, 727, 728, 751, 759, 776, 1162, 1474, 1609, 1972, 1975, 1993, 2015], "algebra": [10, 11, 1993, 2015], "linalg": [10, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1960, 1993], "spars": [10, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1972, 1975, 2015], "nestedtensor": 10, "nest": [10, 1971], "maskedtensor": [10, 1962], "mask": [10, 1962], "fast": [10, 48, 1987, 2012], "fourier": [10, 48], "transform": [10, 31, 48, 50, 51, 53, 55, 58, 1530, 1972, 1983, 1990, 2035, 2044], "fft": [10, 48, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "inductor": 10, "gpu": [10, 25, 1972, 1975, 1977, 1985, 2004, 2039], "triton": [10, 2039], "nvfuser": 10, "amd": [10, 1993], "rocm": [10, 1988], "hip": [10, 1988], "tool": [10, 17, 2007, 2015], "c10": 10, "dispatch": 10, "onnx": [10, 75, 76, 83, 1997, 1998, 1999, 2000, 2001], "export": [10, 46, 47, 1997, 1998, 2000, 2003, 2006, 2009, 2023, 2027, 2035], "mobil": 10, "edg": [10, 1952, 2003], "model": [10, 15, 46, 67, 1950, 1977, 1985, 1989, 1998, 2002, 2003, 2004, 2006, 2009, 2027, 2033, 2037, 2039], "compress": [10, 2015], "window": [10, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1996, 2014], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 1951, 1959, 1994], "xla": 10, "torchserv": 10, "torchvis": [10, 52], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 976, 1978, 1987], "number": [11, 17, 43, 1978, 1980, 1985, 1994, 2023], "creat": [11, 1952, 1970], "transit": [11, 43], "from": [11, 43, 53, 58, 1950, 1969, 1996, 2000, 2003], "old": 11, "represent": [11, 75], "access": [11, 1954, 2003, 2045], "real": [11, 478, 1802, 1987], "imag": [11, 307, 1220], "angl": [11, 113, 693], "ab": [11, 85, 676], "serial": [11, 46, 1995, 2023], "control": [12, 46, 54, 58, 65, 1994, 2023, 2036], "flow": [12, 46, 54, 58, 65, 2006, 2023], "cond": [12, 68, 979, 1281], "exampl": [12, 37, 46, 58, 1977, 1982, 1983, 1984, 1998, 2000, 2012, 2031], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 33, 1983, 1984], "extens": [15, 17, 1983, 1989, 1996], "author": [15, 58], "stream": [16, 17, 18, 988, 995, 1003, 1072, 1981], "event": [16, 17, 34, 36, 1000, 1361, 1967], "random": [17, 21, 54, 1985, 1994, 2010, 2023], "commun": [17, 22, 25, 1951, 1986], "collect": [17, 25], "beta": [17, 31], "memori": [17, 21, 1981, 1985, 1988, 1990, 1994, 2047], "manag": [17, 26, 64, 1968, 1981, 1988, 2003, 2044], "nvidia": [17, 1993], "nvtx": [17, 1057, 1058, 1059], "jiter": [17, 1040, 1041], "sanit": [17, 18], "prototyp": [17, 2006, 2007], "usag": [18, 28, 43, 1981, 1984, 1989, 1990, 1996, 2041, 2047], "data": [21, 46, 54, 66, 1955, 1982, 1985, 2000, 2007, 2021], "dataset": 21, "map": [21, 72, 1988], "style": 21, "iter": [21, 1954], "load": [21, 1257, 1321, 1950, 1995, 2003, 2006], "order": [21, 1978], "sampler": 21, "batch": [21, 52, 1993, 2002], "non": [21, 46, 58, 1972, 1975, 1978, 1981, 1993, 2003, 2006], "work": [21, 51, 1963, 1977, 1985, 2015, 2034, 2035, 2043], "collate_fn": 21, "singl": [21, 43, 1977], "multi": [21, 25, 43, 1972, 1975], "platform": 21, "pin": [21, 1981], "ddp": 22, "hook": [22, 1978, 1990, 2041], "us": [22, 25, 58, 1954, 1978, 1981, 1983, 1987, 1998, 2000, 2002, 2003, 2004, 2006, 2015, 2035, 2037, 2043, 2045, 2047], "what": [22, 47, 50, 52, 55, 1962, 1978, 2003, 2032, 2035, 2042, 2043], "doe": [22, 1978, 2034, 2035], "powersgd": 22, "state": [22, 1990, 2003, 2047], "acknowledg": [22, 2004], "deploi": 23, "ha": 23, "been": 23, "move": 23, "multipi": 23, "determinist": 24, "come": [25, 1978], "which": [25, 1978, 2035], "environ": [25, 43, 1989, 2003, 2039], "choos": 25, "network": [25, 1981, 1985, 1990], "interfac": [25, 1255, 1988], "other": [25, 1972, 1994, 2003, 2015, 2023, 2034], "nccl": [25, 1981], "basic": [25, 1955, 1970, 1984, 2011, 2021, 2043], "initi": [25, 1972, 1990, 2021], "tcp": 25, "share": [25, 1968, 1981, 2003, 2013], "file": [25, 1968, 1995, 2003], "system": [25, 1955, 1968, 1984], "post": [25, 2006], "kei": [25, 75, 1996], "valu": [25, 70, 609, 1954, 1955, 1993, 2008, 2013], "store": [25, 42], "group": 25, "devicemesh": 25, "point": [25, 1989], "synchron": [25, 996, 1073, 1370], "asynchron": [25, 1955, 1981, 1992], "third": 25, "parti": 25, "launch": [25, 43, 2043], "spawn": [25, 1968], "applic": 25, "breakpoint": 25, "monitor": [25, 1966], "barrier": 25, "torch_distributed_debug": 25, "log": [25, 365, 1323, 1989], "join": [26, 2023], "elast": [28, 33, 43], "advanc": [28, 1990], "plugin": 28, "parallel": [30, 1658, 1981, 1982, 1985, 2004, 2023], "probabl": 31, "score": 31, "pathwis": 31, "deriv": [31, 1978], "exponentialfamili": 31, "bernoulli": [31, 149, 937], "binomi": 31, "categor": 31, "cauchi": 31, "chi2": 31, "continuousbernoulli": 31, "dirichlet": 31, "exponenti": [31, 1841], "fishersnedecor": 31, "gamma": 31, "geometr": 31, "gumbel": 31, "halfcauchi": 31, "halfnorm": 31, "independ": 31, "inversegamma": 31, "kumaraswami": 31, "lkjcholeski": 31, "laplac": 31, "lognorm": 31, "lowrankmultivariatenorm": 31, "mixturesamefamili": 31, "multinomi": [31, 416, 1373], "multivariatenorm": 31, "negativebinomi": 31, "normal": [31, 1629, 1730, 1972, 2002], "onehotcategor": 31, "pareto": 31, "poisson": [31, 1777], "relaxedbernoulli": 31, "logitrelaxedbernoulli": 31, "relaxedonehotcategor": 31, "studentt": 31, "transformeddistribut": 31, "uniform": 31, "vonmis": 31, "weibul": 31, "wishart": 31, "kl": 31, "diverg": [31, 1957], "constraint": [31, 1981], "registri": [31, 42, 83], "dlpack": 32, "agent": 33, "server": [33, 42, 44], "concept": 33, "watchdog": 33, "launcher": 34, "rendezv": [34, 42, 43], "handler": [34, 39, 42, 1985], "metric": [34, 39], "error": [35, 1985, 1996, 2006, 2007, 2045], "propag": [35, 1970], "object": [36, 67, 2003], "torchelast": 38, "kubernet": 38, "multipl": [40, 1977, 1981, 1983, 2004], "worker": [40, 43, 1985], "quickstart": 41, "except": [42, 1985], "dynam": [42, 46, 54, 58, 69, 70, 2006, 2009, 2033, 2034], "c10d": 42, "etcd": 42, "legaci": 42, "torchrun": 43, "node": [43, 47, 76, 79, 82, 916, 917, 918, 919, 920, 1978], "stack": [43, 1878, 2006], "fault": 43, "toler": 43, "size": [43, 532, 1971, 1986], "failur": 43, "min": [43, 407, 1352], "max": [43, 403, 1347], "4": [43, 52], "up": [43, 2035], "membership": [43, 1955], "note": [43, 75, 1951, 1955, 1981, 1986, 2006, 2011], "definit": [43, 1955], "deploy": [43, 1989], "import": [43, 1950, 1996, 2003, 2034], "notic": [43, 1950], "expir": 44, "timer": 44, "client": 44, "write": [44, 58, 1978, 1983, 2000, 2044], "train": [45, 1977, 1990, 1992, 2006, 2035], "script": [45, 1261, 1952, 1996, 2000], "exist": 46, "framework": [46, 2003, 2011], "an": [46, 1950, 2000, 2002, 2003], "express": [46, 1954, 1955], "special": [46, 1955, 1978, 2016], "shape": [46, 54, 69, 518, 2000, 2033, 2034], "limit": [46, 54, 58, 1950, 1984, 2000, 2030, 2035, 2036, 2041], "break": [46, 1954, 1955, 2035, 2043, 2045], "depend": [46, 54, 1998, 2003, 2012], "miss": 46, "meta": [46, 1955, 1963], "kernel": [46, 932, 1988, 2006, 2039], "read": [46, 50, 2000, 2026, 2042], "addit": [46, 75], "link": 46, "user": [46, 2003, 2013, 2026], "deep": [46, 2026, 2032], "dive": [46, 2026, 2032], "ir": [47, 2040, 2044], "assumpt": [47, 2013], "i": [47, 55, 1962, 1978, 2003, 2032, 2034, 2035, 2042], "exportedprogram": 47, "call_funct": 47, "metadata": [47, 916, 1989], "placehold": 47, "output": [47, 1987], "get_attr": 47, "symint": [47, 2033], "faketensor": 47, "pytre": 47, "abl": 47, "helper": 48, "fullyshardeddataparallel": 49, "func": [50, 51, 53, 55, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1983, 1984, 2035], "ar": [50, 55, 1950, 1978, 2003, 2035], "compos": [50, 55, 2031], "why": [50, 55, 1981, 1987, 2003, 2015, 2035], "patch": [52, 2003], "norm": [52, 448, 1306, 1729], "": [52, 2003, 2035, 2042], "happen": 52, "option": [52, 1954, 1980, 1996, 2002], "batchnorm": 52, "paramet": [52, 1675, 1954, 2002], "functorch": [52, 53], "eval": [52, 1978], "migrat": [53, 1952], "make_funct": 53, "combine_state_for_ensembl": 53, "ux": 54, "vmap": [54, 55, 887, 1166, 1934, 1983, 1984, 2035], "mutat": [54, 73, 2023], "arbitrari": [54, 2003], "structur": [54, 66, 1955, 2015], "out": [54, 1969, 1985], "item": [54, 348], "nonzero": [54, 447, 1728], "friend": 54, "whirlwind": 55, "tour": 55, "grad": [55, 286, 909, 1156, 1978, 1981, 2035], "auto": 55, "vector": 55, "vjp": [55, 908, 1165], "jacobian": [55, 905], "product": [55, 1960, 2035], "jvp": [55, 886, 906, 1161, 1984], "jacrev": [55, 1160], "jacfwd": [55, 1159], "hessian": [55, 903, 1158], "__future__": 56, "futur": 57, "A": [58, 1990, 1998], "quick": 58, "primer": 58, "manipul": [58, 1970], "direct": 58, "subgraph": [58, 2044], "rewrit": [58, 2044], "With": [58, 1957], "replace_pattern": 58, "proxi": 58, "retrac": 58, "interpret": [58, 1952], "pattern": [58, 1954, 2000, 2003], "introduct": [58, 1962, 1971, 2006], "pitfal": [58, 2000], "pdb": 58, "print": [58, 1954, 1955], "to_fold": 58, "graphmodul": 58, "avail": 58, "debugg": 58, "symbol": [58, 78, 81, 2000, 2006, 2023], "trace": [58, 586, 1265, 1905, 1952, 2000, 2005, 2006, 2035, 2036, 2043], "static": [58, 2000, 2006], "tracer": [58, 1952], "leaf": 58, "miscellanea": 58, "experiment": [59, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1960], "symbolic_shap": [59, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190], "exportdb": 60, "tag": [60, 2023], "support": [60, 1953, 1955, 1962, 1969, 1970, 1971, 1984, 2000, 2001, 2006, 2015, 2035, 2041], "assume_constant_result": [60, 71, 970], "autograd_funct": 60, "class_method": 60, "cond_branch_class_method": [60, 68, 69], "cond_branch_nested_funct": [60, 68, 69], "cond_branch_nonlocal_vari": [60, 68, 69], "cond_closed_over_vari": [60, 63, 68], "cond_operand": [60, 68, 69], "cond_pred": [60, 68, 69], "constrain_as_size_exampl": [60, 70, 71], "constrain_as_value_exampl": [60, 70, 71], "decor": 60, "dictionari": [60, 66, 1955], "dynamic_shape_assert": [60, 61], "dynamic_shape_constructor": [60, 69], "dynamic_shape_if_guard": [60, 65, 69], "dynamic_shape_map": [60, 69, 72], "dynamic_shape_sl": [60, 69], "dynamic_shape_view": [60, 69], "fn_with_kwarg": [60, 66], "list_contain": [60, 61, 66, 69], "list_unpack": [60, 65, 66], "nested_funct": [60, 63], "null_context_manag": [60, 64], "pytree_flatten": 60, "scalar_output": [60, 69], "specialized_attribut": 60, "static_for_loop": [60, 65], "static_if": [60, 65], "tensor_setattr": [60, 62], "type_reflection_method": [60, 62], "user_input_mut": [60, 73], "Not": [60, 1957], "yet": 60, "dynamic_shape_round": [60, 62, 69], "model_attr_mut": [60, 67], "optional_input": [60, 67], "torch_sym_min": [60, 74], "assert": [61, 1955, 1988], "builtin": [62, 1953], "closur": [63, 2002], "escap": [71, 2035], "hatch": [71, 2035], "fxe0007": 75, "fxe0008": 76, "fxe0010": 77, "pass": [77, 1955, 1981, 1992, 2006, 2012, 2044], "fxe0011": 78, "call": [78, 1954, 1955, 1984, 2035], "fxe0012": 79, "unsupport": [79, 1954, 1955, 1957, 2000, 2001], "analysi": 79, "fxe0013": 80, "fxe0014": 81, "find": [81, 83, 2003, 2043], "opschema": 81, "match": [81, 1954, 1970], "fxe0015": 82, "insert": 82, "fxe0016": 83, "overload": 83, "abs_": 86, "absolut": [87, 677], "absolute_": 88, "aco": [89, 678], "acos_": 90, "acosh": [91, 679], "acosh_": 92, "add_": 94, "addbmm": [95, 681], "addbmm_": 96, "addcdiv": [97, 682], "addcdiv_": 98, "addcmul": [99, 683], "addcmul_": 100, "addmm": [101, 684, 1858], "addmm_": 102, "addmv": [103, 685], "addmv_": 104, "addr": [105, 686], "addr_": 106, "adjoint": [107, 687], "all": [108, 688, 1983, 2000, 2002], "allclos": [109, 689], "amax": [110, 690], "amin": [111, 691], "aminmax": [112, 692], "ani": [114, 694, 1955, 2035, 2042], "apply_": 115, "arcco": [116, 861], "arccos_": 117, "arccosh": [118, 862], "arccosh_": 119, "arcsin": [120, 863], "arcsin_": 121, "arcsinh": [122, 864], "arcsinh_": 123, "arctan": [124, 865], "arctan2": [125, 866], "arctan2_": 126, "arctan_": 127, "arctanh": [128, 867], "arctanh_": 129, "argmax": [130, 869], "argmin": [131, 870], "argsort": [132, 871], "argwher": [133, 872], "as_strid": [134, 873], "as_subclass": 135, "asin": [136, 876], "asin_": 137, "asinh": [138, 877], "asinh_": 139, "atan": [140, 878], "atan2": [141, 879], "atan2_": 142, "atan_": 143, "atanh": [144, 880], "atanh_": 145, "backward": [146, 884, 888, 1978, 1979, 1981, 1987, 2012], "baddbmm": [147, 935], "baddbmm_": 148, "bernoulli_": 150, "bincount": [152, 938], "bitwise_and": [153, 939], "bitwise_and_": 154, "bitwise_left_shift": [155, 940], "bitwise_left_shift_": 156, "bitwise_not": [157, 941], "bitwise_not_": 158, "bitwise_or": [159, 942], "bitwise_or_": 160, "bitwise_right_shift": [161, 943], "bitwise_right_shift_": 162, "bitwise_xor": [163, 944], "bitwise_xor_": 164, "bmm": [165, 947], "bool": 166, "broadcast_to": [167, 950], "byte": 168, "cauchy_": 169, "ccol_indic": 170, "cdoubl": 171, "ceil": [172, 956], "ceil_": 173, "cfloat": 174, "chalf": 175, "char": 176, "choleski": [177, 958, 1279], "cholesky_invers": [178, 959], "cholesky_solv": [179, 960], "chunk": [180, 961], "clamp": [181, 766, 962], "clamp_": 182, "clip": [183, 963, 1977], "clip_": 184, "clone": [185, 964], "coalesc": 186, "col_indic": 187, "conj": [188, 980], "conj_phys": [189, 981], "conj_physical_": 190, "contigu": 191, "copy_": 192, "copysign": [193, 982], "copysign_": 194, "corrcoef": [195, 983], "co": [196, 984], "cos_": 197, "cosh": [198, 985], "cosh_": 199, "count_nonzero": [200, 986], "cov": [201, 987], "cross": [203, 997, 1282, 1978], "crow_indic": 204, "cummax": [206, 1076], "cummin": [207, 1077], "cumprod": [208, 1078], "cumprod_": 209, "cumsum": [210, 1079], "cumsum_": 211, "data_ptr": 212, "deg2rad": [213, 1081], "dense_dim": 214, "dequant": [215, 1082, 2006], "det": [216, 1083, 1283], "detach": 217, "detach_": 218, "devic": [219, 1019, 1940, 1963, 1981, 1993, 2018], "diag": [220, 1084], "diag_emb": [221, 1085], "diagflat": [222, 1086], "diagon": [223, 1087, 1284], "diagonal_scatt": [224, 1088], "diff": [225, 1089], "digamma": [226, 1090], "digamma_": 227, "dim": [228, 1969], "dim_ord": 229, "dist": [230, 1091], "div": [231, 1092, 1995], "div_": 232, "divid": [233, 1093], "divide_": 234, "dot": [235, 1094], "doubl": 236, "dsplit": [237, 1095], "element_s": 238, "eq": [239, 1102], "eq_": 240, "equal": [241, 1103], "erf": [242, 1104], "erf_": 243, "erfc": [244, 1105], "erfc_": 245, "erfinv": [246, 1106], "erfinv_": 247, "exp": [248, 1107], "exp_": 249, "expand": 250, "expand_a": 251, "expm1": [252, 1109], "expm1_": 253, "exponential_": 254, "fill_": 255, "fill_diagonal_": 256, "fix_": 258, "flatten": [259, 1136, 1432], "flip": [260, 1137], "fliplr": [261, 1138], "flipud": [262, 1139], "float": [263, 1995], "float_pow": [264, 1140], "float_power_": 265, "floor": [266, 1141], "floor_": 267, "floor_divid": [268, 1142], "floor_divide_": 269, "fmax": [270, 1143], "fmin": [271, 1144], "fmod": [272, 1145], "fmod_": 273, "frac": [274, 1146], "frac_": 275, "frexp": [276, 1147], "gather": [277, 1012, 1191], "gcd": [278, 1192], "gcd_": 279, "ge": [280, 1193], "ge_": 281, "geometric_": 282, "geqrf": [283, 1194], "ger": [284, 1195], "get_devic": 285, "greater": [287, 1204], "greater_": 288, "greater_equ": [289, 1205], "greater_equal_": 290, "gt": [291, 1206], "gt_": 292, "half": 293, "hardshrink": [294, 1442, 1595], "heavisid": [295, 1209], "histc": [296, 1210], "histogram": [297, 1211], "hsplit": [298, 1213], "hypot": [299, 1216], "hypot_": 300, "i0": [301, 1217], "i0_": 302, "igamma": [303, 1218], "igamma_": 304, "igammac": [305, 1219], "igammac_": 306, "index_add": [308, 1221], "index_add_": 309, "index_copi": [310, 1222], "index_copy_": 311, "index_fil": 312, "index_fill_": 313, "index_put": 314, "index_put_": 315, "index_reduc": [316, 1223], "index_reduce_": 317, "index_select": [318, 1224], "indic": [319, 1951], "inner": [320, 1226], "int": 321, "int_repr": 322, "invers": [323, 1227, 1960], "is_coalesc": 324, "is_complex": [325, 1228], "is_conj": [326, 1229], "is_contigu": 327, "is_cuda": 328, "is_floating_point": [329, 1231], "is_infer": 330, "is_leaf": 331, "is_meta": 332, "is_pin": 333, "is_quant": 334, "is_set_to": 335, "is_shar": 336, "is_sign": 337, "is_spars": 338, "is_sparse_csr": 339, "isclos": [340, 1238], "isfinit": [341, 1239], "isinf": [342, 1241], "isnan": [343, 1242], "isneginf": [344, 1243], "isposinf": [345, 1244], "isreal": [346, 1245], "istft": [347, 1246], "items": 349, "kthvalu": [350, 1271], "lcm": [351, 1272], "lcm_": 352, "ldexp": [353, 1273], "ldexp_": 354, "le": [355, 1274], "le_": 356, "lerp": [357, 1275], "lerp_": 358, "less": [359, 1276], "less_": 360, "less_equ": [361, 1277], "less_equal_": 362, "lgamma": [363, 1278], "lgamma_": 364, "log10": [366, 1324], "log10_": 367, "log1p": [368, 1325], "log1p_": 369, "log2": [370, 1326], "log2_": 371, "log_": 372, "log_normal_": 373, "logaddexp": [374, 1327], "logaddexp2": [375, 1328], "logcumsumexp": [376, 1329], "logdet": [377, 1330], "logical_and": [378, 1331], "logical_and_": 379, "logical_not": [380, 1332], "logical_not_": 381, "logical_or": [382, 1333], "logical_or_": 383, "logical_xor": [384, 1334], "logical_xor_": 385, "logit": [386, 1335], "logit_": 387, "logsumexp": [388, 1337], "long": 389, "lt": [390, 1338], "lt_": 391, "lu": [392, 1296, 1339], "lu_solv": [393, 1299, 1340], "map_": 394, "masked_fil": 395, "masked_fill_": 396, "masked_scatt": 397, "masked_scatter_": 398, "masked_select": [399, 1343], "matmul": [400, 1300, 1344], "matrix_exp": [401, 1301, 1345], "matrix_pow": [402, 1303, 1346], "maximum": [404, 1348], "mean": [405, 1349], "median": [406, 1350], "minimum": [408, 1353], "mm": [409, 1354, 1862], "moveaxi": [411, 1356], "movedim": [412, 1357], "msort": [413, 1371], "mul": [414, 1372], "mul_": 415, "multipli": [417, 1374], "multiply_": 418, "mv": [419, 1375], "mvlgamma": [420, 1376], "mvlgamma_": 421, "nan_to_num": [422, 1377], "nan_to_num_": 423, "nanmean": [424, 1378], "nanmedian": [425, 1379], "nanquantil": [426, 1380], "nansum": [427, 1381], "narrow": [428, 1382], "narrow_copi": [429, 1383], "nbyte": 430, "ndim": 431, "ndimens": 432, "ne": [433, 1384], "ne_": 434, "neg": [435, 437, 1385, 1386], "neg_": 436, "negative_": 438, "nelement": 439, "new_empti": 440, "new_ful": 441, "new_on": 442, "new_tensor": 443, "new_zero": 444, "nextaft": [445, 1387], "nextafter_": 446, "normal_": 449, "not_equ": [450, 1731], "not_equal_": 451, "numel": [452, 1732], "numpi": [453, 2000, 2035], "orgqr": [454, 1771], "ormqr": [455, 1772], "outer": [456, 1773], "permut": [457, 1775, 1969], "pin_memori": 458, "pinvers": [459, 1776], "polygamma": [460, 1779], "polygamma_": 461, "posit": [462, 1780], "pow": [463, 1781], "pow_": 464, "prod": [465, 1782], "put_": 466, "q_per_channel_axi": 467, "q_per_channel_scal": 468, "q_per_channel_zero_point": 469, "q_scale": 470, "q_zero_point": 471, "qr": [472, 1308, 1784], "qscheme": 473, "quantil": [474, 1785], "rad2deg": [475, 1792], "random_": 476, "ravel": [477, 1801], "reciproc": [479, 1803], "reciprocal_": 480, "record_stream": 481, "register_hook": [482, 919], "register_post_accumulate_grad_hook": 483, "remaind": [484, 1804], "remainder_": 485, "renorm": [486, 1805], "renorm_": 487, "repeat": 488, "repeat_interleav": [489, 1806], "requires_grad": [490, 1978], "requires_grad_": 491, "reshap": [492, 1807], "reshape_a": 493, "resize_": 494, "resize_as_": 495, "resolve_conj": [496, 1808], "resolve_neg": [497, 1809], "retain_grad": 498, "retains_grad": 499, "roll": [500, 1811], "rot90": [501, 1812], "round": [502, 1813], "round_": 503, "row_indic": 504, "rsqrt": [505, 1815], "rsqrt_": 506, "scatter": [507, 1014, 1817], "scatter_": 508, "scatter_add": [509, 1818], "scatter_add_": 510, "scatter_reduc": [511, 1819], "scatter_reduce_": 512, "select": [513, 1822, 1962], "select_scatt": [514, 1823], "set_": 515, "sgn": [516, 1835], "sgn_": 517, "share_memory_": 519, "short": 520, "sigmoid": [521, 754, 1517, 1645, 1836], "sigmoid_": 522, "sign": [523, 1837], "sign_": 524, "signbit": [525, 1849], "sin": [526, 1850], "sin_": 527, "sinc": [528, 1851], "sinc_": 529, "sinh": [530, 1852], "sinh_": 531, "slice_scatt": [533, 1853], "slogdet": [534, 1309, 1854], "smm": [535, 1855], "softmax": [536, 1520, 1649, 1856, 1864], "sort": [537, 1857], "sparse_dim": 538, "sparse_mask": 539, "sparse_resize_": 540, "sparse_resize_and_clear_": 541, "split": [542, 1873], "sqrt": [543, 1874], "sqrt_": 544, "squar": [545, 1875], "square_": 546, "squeez": [547, 1876], "squeeze_": 548, "sspaddmm": [549, 1877], "std": [550, 1879], "stft": [551, 1881], "storag": [552, 2017], "storage_offset": 553, "storage_typ": 554, "stride": 555, "sub": [556, 1882], "sub_": 557, "subtract": [558, 1883], "subtract_": 559, "sum": [560, 1866, 1884, 1972], "sum_to_s": 561, "svd": [562, 1313, 1885], "swapax": [563, 1887], "swapdim": [564, 1888], "t": [565, 1895, 1955, 1985, 2035], "t_": 566, "take": [567, 1896, 2002], "take_along_dim": [568, 1897], "tan": [569, 1898], "tan_": 570, "tanh": [571, 1527, 1654, 1899], "tanh_": 572, "tensor_split": [573, 1901], "tile": [574, 1903], "to_dens": 576, "to_mkldnn": 577, "to_spars": 578, "to_sparse_bsc": 579, "to_sparse_bsr": 580, "to_sparse_coo": 581, "to_sparse_csc": 582, "to_sparse_csr": 583, "tolist": 584, "topk": [585, 1904], "transpos": [587, 1906], "transpose_": 588, "triangular_solv": [589, 1909], "tril": [590, 1910], "tril_": 591, "triu": [592, 1912], "triu_": 593, "true_divid": [594, 1914], "true_divide_": 595, "trunc": [596, 1915], "trunc_": 597, "type_a": 599, "unbind": [600, 1916, 1971], "unflatten": [601, 1537, 1917], "unfold": [602, 1538, 1661], "uniform_": 603, "uniqu": [604, 1918], "unique_consecut": [605, 1919], "unsqueez": [606, 1921], "unsqueeze_": 607, "untyped_storag": 608, "var": [610, 1929], "vdot": [611, 1931], "view": [612, 1962, 1995, 2019, 2043], "view_a": 613, "vsplit": [614, 1935], "where": [615, 1937, 1950], "xlogi": [616, 1938], "xlogy_": 617, "zero_": 618, "_assert": 619, "_foreach_ab": 620, "_foreach_abs_": 621, "_foreach_aco": 622, "_foreach_acos_": 623, "_foreach_asin": 624, "_foreach_asin_": 625, "_foreach_atan": 626, "_foreach_atan_": 627, "_foreach_ceil": 628, "_foreach_ceil_": 629, "_foreach_co": 630, "_foreach_cos_": 631, "_foreach_cosh": 632, "_foreach_cosh_": 633, "_foreach_erf": 634, "_foreach_erf_": 635, "_foreach_erfc": 636, "_foreach_erfc_": 637, "_foreach_exp": 638, "_foreach_exp_": 639, "_foreach_expm1": 640, "_foreach_expm1_": 641, "_foreach_floor": 642, "_foreach_floor_": 643, "_foreach_frac": 644, "_foreach_frac_": 645, "_foreach_lgamma": 646, "_foreach_lgamma_": 647, "_foreach_log": 648, "_foreach_log10": 649, "_foreach_log10_": 650, "_foreach_log1p": 651, "_foreach_log1p_": 652, "_foreach_log2": 653, "_foreach_log2_": 654, "_foreach_log_": 655, "_foreach_neg": 656, "_foreach_neg_": 657, "_foreach_reciproc": 658, "_foreach_reciprocal_": 659, "_foreach_round": 660, "_foreach_round_": 661, "_foreach_sigmoid": 662, "_foreach_sigmoid_": 663, "_foreach_sin": 664, "_foreach_sin_": 665, "_foreach_sinh": 666, "_foreach_sinh_": 667, "_foreach_sqrt": 668, "_foreach_sqrt_": 669, "_foreach_tan": 670, "_foreach_tan_": 671, "_foreach_trunc": 672, "_foreach_trunc_": 673, "_foreach_zero_": 674, "_log": [675, 1961], "set_log": 675, "bnrelu2d": [695, 718], "bnrelu3d": [696, 719], "convbn1d": [697, 707], "convbn2d": [698, 708], "convbn3d": [699, 709], "convbnrelu1d": [700, 710], "convbnrelu2d": [701, 711], "convbnrelu3d": [702, 712], "convrelu1d": [703, 720], "convrelu2d": [704, 713, 721], "convrelu3d": [705, 714, 722], "linearrelu": [706, 715, 723, 724], "freeze_bn_stat": 716, "update_bn_stat": 717, "conv2d": [725, 734, 768, 1415, 1568], "conv3d": [726, 735, 769, 1416, 1569], "lstm": [729, 757, 1457, 1994], "multiheadattent": [730, 1493], "batchnorm2d": [731, 1402], "batchnorm3d": [732, 1403], "conv1d": [733, 767, 1414, 1567], "convtranspose1d": [736, 1417], "convtranspose2d": [737, 1418], "convtranspose3d": [738, 1419], "elu": [739, 770, 1428, 1581], "embed": [740, 1429, 1583], "embeddingbag": [741, 1430], "fxfloatfunct": 742, "floatfunct": 743, "groupnorm": [744, 1441], "hardswish": [745, 772, 1444, 1597], "instancenorm1d": [746, 1449], "instancenorm2d": [747, 1450], "instancenorm3d": [748, 1451], "layernorm": [749, 1459], "leakyrelu": [750, 1473], "qfunction": 752, "relu6": [753, 1507, 1639], "gru": [755, 1438], "grucel": [756, 1439], "lstmcell": [758, 1458], "rnncell": [760, 1504], "adaptive_avg_pool2d": [761, 1552], "adaptive_avg_pool3d": [762, 1553], "avg_pool2d": [763, 1560], "avg_pool3d": [764, 1561], "celu": [765, 1405, 1566], "hardsigmoid": [771, 1443, 1596], "hardtanh": [773, 1445, 1598], "interpol": [774, 1603], "leaky_relu": [775, 1607], "max_pool1d": [777, 1617], "max_pool2d": [778, 1618], "threshold": [779, 1529, 1656], "upsampl": [780, 1539, 1662], "upsample_bilinear": [781, 1663], "upsample_nearest": [782, 1664], "dequantstub": 783, "quantstub": 784, "quantwrapp": 785, "add_quant_dequ": 786, "backendconfig": 787, "backendpatternconfig": 788, "dtypeconfig": 789, "dtypewithconstraint": 790, "observationtyp": 791, "convert": [792, 2034], "default_eval_fn": 793, "fakequant": [794, 2006], "fakequantizebas": 795, "fixedqparamsfakequant": 796, "fusedmovingavgobsfakequant": 797, "default_fake_qu": 798, "default_fused_act_fake_qu": 799, "default_fused_per_channel_wt_fake_qu": 800, "default_fused_wt_fake_qu": 801, "default_histogram_fake_qu": 802, "default_per_channel_weight_fake_qu": 803, "default_weight_fake_qu": 804, "disable_fake_qu": 805, "disable_observ": 806, "enable_fake_qu": 807, "enable_observ": 808, "fuse_modul": 809, "convertcustomconfig": 810, "fusecustomconfig": 811, "preparecustomconfig": 812, "standalonemoduleconfigentri": 813, "histogramobserv": 814, "minmaxobserv": 815, "movingaverageminmaxobserv": 816, "movingaverageperchannelminmaxobserv": 817, "noopobserv": 818, "observerbas": 819, "perchannelminmaxobserv": 820, "placeholderobserv": 821, "recordingobserv": 822, "default_debug_observ": 823, "default_dynamic_quant_observ": 824, "default_float_qparams_observ": 825, "default_histogram_observ": 826, "default_observ": 827, "default_per_channel_weight_observ": 828, "default_placeholder_observ": 829, "default_weight_observ": 830, "get_observer_state_dict": 831, "load_observer_state_dict": 832, "prepar": [833, 2006, 2009], "prepare_qat": 834, "propagate_qconfig": 835, "qconfig": [836, 2006, 2009], "default_activation_only_qconfig": 837, "default_debug_qconfig": 838, "default_dynamic_qconfig": 839, "default_per_channel_qconfig": 840, "default_qat_qconfig": 841, "default_qat_qconfig_v2": 842, "default_qconfig": 843, "default_weight_only_qconfig": 844, "float16_dynamic_qconfig": 845, "float16_static_qconfig": 846, "float_qparams_weight_only_qconfig": 847, "per_channel_dynamic_qconfig": 848, "qconfigmap": 849, "get_default_qat_qconfig_map": 850, "get_default_qconfig_map": 851, "quantiz": [852, 1972, 1990, 2000, 2006, 2007, 2008, 2009], "quantize_dynam": 853, "convert_fx": 854, "fuse_fx": 855, "prepare_fx": 856, "prepare_qat_fx": 857, "quantize_qat": 858, "swap_modul": 859, "arang": 860, "are_deterministic_algorithms_en": 868, "as_tensor": 874, "asarrai": 875, "atleast_1d": 881, "atleast_2d": 882, "atleast_3d": 883, "unpackeddualtensor": 889, "dual_level": 890, "forward_ad": [891, 892, 893, 894], "enter_dual_level": 891, "exit_dual_level": 892, "make_du": 893, "unpack_du": 894, "backwardcfunct": 895, "functionctx": [896, 897, 898, 899], "mark_dirti": 896, "mark_non_differenti": 897, "save_for_backward": 898, "set_materialize_grad": 899, "inplacefunct": 900, "nestediofunct": 901, "once_differenti": 902, "hvp": 904, "vhp": 907, "inference_mod": 910, "set_grad_en": 911, "set_multithreading_en": 912, "gradcheck": [913, 914, 915, 1987], "gradcheckerror": 913, "gradgradcheck": [915, 1987], "name": [917, 1954, 1969, 1970], "next_funct": 918, "register_prehook": 920, "increment_vers": 921, "enforceuniqu": 922, "kinetosteptrack": 923, "load_nvprof": 924, "parse_nvprof_trac": 925, "export_chrome_trac": 926, "key_averag": 927, "self_cpu_time_tot": 928, "total_averag": 929, "record_funct": 930, "interv": 931, "memrecordsacc": 933, "stringtabl": 934, "bartlett_window": 936, "blackman_window": 945, "block_diag": 946, "broadcast_shap": 948, "broadcast_tensor": 949, "bucket": 951, "can_cast": 952, "cartesian_prod": 953, "cat": 954, "cdist": 955, "chain_matmul": 957, "column_stack": 965, "combin": [966, 1983], "compiled_with_cxx11_abi": 968, "allow_in_graph": [969, 2036], "cudagraph_mark_step_begin": 972, "list_backend": 974, "reset": 975, "concat": 977, "concaten": 978, "streamcontext": [989, 1004], "current_devic": [990, 1016, 1939], "current_stream": [991, 1017], "device_count": [992, 1020, 1941], "is_avail": [993, 1037, 1946], "set_devic": [994, 1066, 1947], "cudagraph": [998, 2030], "cudapluggablealloc": 999, "externalstream": 1001, "outofmemoryerror": 1002, "caching_allocator_alloc": 1005, "caching_allocator_delet": 1006, "can_device_access_p": 1007, "change_current_alloc": 1008, "clock_rat": 1009, "comm": [1010, 1011, 1012, 1013, 1014], "broadcast": [1010, 1979], "broadcast_coalesc": 1011, "reduce_add": 1013, "current_blas_handl": 1015, "default_stream": 1018, "device_of": [1021, 1942], "empty_cach": [1022, 1360], "get_allocator_backend": 1023, "get_arch_list": 1024, "get_device_cap": [1025, 1943], "get_device_nam": [1026, 1944], "get_device_properti": [1027, 1945], "get_gencode_flag": 1028, "get_rng_stat": [1029, 1202, 1362], "get_rng_state_al": 1030, "get_sync_debug_mod": 1031, "graph_pool_handl": 1033, "init": [1034, 1976], "initial_se": [1035, 1225], "ipc_collect": 1036, "is_current_stream_captur": 1038, "is_initi": 1039, "_create_jit_fn": 1040, "_create_multi_output_jit_fn": 1041, "list_gpu_process": 1042, "make_graphed_cal": 1043, "manual_se": [1044, 1342, 1363], "manual_seed_al": 1045, "max_memory_alloc": 1046, "max_memory_cach": 1047, "max_memory_reserv": 1048, "mem_get_info": 1049, "memory_alloc": 1050, "memory_cach": 1051, "memory_reserv": 1052, "memory_snapshot": 1053, "memory_stat": 1054, "memory_summari": 1055, "memory_usag": 1056, "mark": 1057, "range_pop": 1058, "range_push": 1059, "power_draw": 1060, "reset_max_memory_alloc": 1061, "reset_max_memory_cach": 1062, "reset_peak_memory_stat": 1063, "seed": [1064, 1367, 1821], "seed_al": 1065, "set_per_process_memory_fract": [1067, 1368], "set_rng_stat": [1068, 1369, 1833], "set_rng_state_al": 1069, "set_stream": 1070, "set_sync_debug_mod": 1071, "temperatur": 1074, "cumulative_trapezoid": 1080, "dstack": 1096, "einsum": 1097, "empti": 1098, "empty_lik": 1099, "empty_strid": 1100, "enable_grad": 1101, "exp2": 1108, "ey": 1110, "fake_quantize_per_channel_affin": 1111, "fake_quantize_per_tensor_affin": 1112, "fft2": 1114, "fftfreq": 1115, "fftn": 1116, "fftshift": 1117, "hfft": 1118, "hfft2": 1119, "hfftn": 1120, "ifft": 1121, "ifft2": 1122, "ifftn": 1123, "ifftshift": 1124, "ihfft": 1125, "ihfft2": 1126, "ihfftn": 1127, "irfft": 1128, "irfft2": 1129, "irfftn": 1130, "rfft": 1131, "rfft2": 1132, "rfftfreq": 1133, "rfftn": 1134, "from_dlpack": 1148, "from_fil": 1149, "from_numpi": 1150, "frombuff": 1151, "full": [1152, 1995], "full_lik": 1153, "functional_cal": [1154, 1724], "grad_and_valu": 1157, "replace_all_batch_norm_modules_": 1163, "stack_module_st": 1164, "dimconstraint": 1167, "dimdynam": [1168, 2033], "equalityconstraint": 1169, "relaxedunspecconstraint": 1170, "shapeenv": 1171, "statefulsymboliccontext": 1172, "statelesssymboliccontext": 1173, "strictminmaxconstraint": 1174, "subclasssymboliccontext": 1175, "symboliccontext": 1176, "canonicalize_bool_expr": 1177, "constrain_rang": 1178, "constrain_unifi": 1179, "definitely_fals": 1180, "definitely_tru": 1181, "guard_size_oblivi": 1182, "has_free_symbol": 1183, "hint_int": 1184, "is_concrete_bool": 1185, "is_concrete_int": 1186, "parallel_and": 1187, "parallel_or": 1188, "statically_known_tru": 1189, "sym_eq": 1190, "get_default_devic": 1196, "get_default_dtyp": 1197, "get_deterministic_debug_mod": 1198, "get_float32_matmul_precis": 1199, "get_num_interop_thread": 1200, "get_num_thread": 1201, "hamming_window": 1207, "hann_window": 1208, "histogramdd": 1212, "hspmm": 1214, "hstack": 1215, "is_deterministic_algorithms_warn_only_en": 1230, "is_grad_en": 1232, "is_inference_mode_en": 1233, "is_nonzero": 1234, "is_storag": 1235, "is_tensor": 1236, "is_warn_always_en": 1237, "isin": 1240, "attribut": [1247, 1952, 1954, 1955, 1957, 2018], "scriptfunct": 1248, "scriptmodul": [1249, 1995], "annot": [1250, 1955], "enable_onednn_fus": 1251, "fork": 1252, "freez": 1253, "ignor": 1254, "isinst": 1256, "onednn_fusion_en": 1258, "optimize_for_infer": 1259, "save": [1260, 1816, 1950, 1978, 1989, 1995, 2006], "script_if_trac": 1262, "set_fusion_strategi": 1263, "strict_fus": 1264, "trace_modul": 1266, "unus": 1267, "wait": 1268, "kaiser_window": 1269, "kron": 1270, "cholesky_ex": 1280, "eig": 1285, "eigh": 1286, "eigval": 1287, "eigvalsh": 1288, "householder_product": 1289, "inv": 1290, "inv_ex": 1291, "ldl_factor": 1292, "ldl_factor_ex": 1293, "ldl_solv": 1294, "lstsq": 1295, "lu_factor": 1297, "lu_factor_ex": 1298, "matrix_norm": 1302, "matrix_rank": 1304, "multi_dot": 1305, "pinv": 1307, "solv": 1310, "solve_ex": 1311, "solve_triangular": 1312, "svdval": 1314, "tensorinv": 1315, "tensorsolv": 1316, "vander": [1317, 1928], "vecdot": 1318, "vector_norm": 1319, "linspac": 1320, "lobpcg": 1322, "logspac": 1336, "lu_unpack": 1341, "meshgrid": 1351, "current_allocated_memori": 1358, "driver_allocated_memori": 1359, "stop": 1366, "adaptiveavgpool1d": 1388, "adaptiveavgpool2d": 1389, "adaptiveavgpool3d": 1390, "adaptivelogsoftmaxwithloss": 1391, "adaptivemaxpool1d": 1392, "adaptivemaxpool2d": 1393, "adaptivemaxpool3d": 1394, "alphadropout": 1395, "avgpool1d": 1396, "avgpool2d": 1397, "avgpool3d": 1398, "bceloss": 1399, "bcewithlogitsloss": 1400, "batchnorm1d": 1401, "bilinear": [1404, 1563], "ctcloss": 1406, "channelshuffl": 1407, "circularpad1d": 1408, "circularpad2d": 1409, "circularpad3d": 1410, "constantpad1d": 1411, "constantpad2d": 1412, "constantpad3d": 1413, "cosineembeddingloss": 1420, "cosinesimilar": 1421, "crossentropyloss": 1422, "dataparallel": [1423, 1972, 1975, 1977, 1981], "dropout": [1424, 1577, 1972, 1975], "dropout1d": [1425, 1578], "dropout2d": [1426, 1579], "dropout3d": [1427, 1580], "featurealphadropout": 1431, "fold": [1433, 1586], "fractionalmaxpool2d": 1434, "fractionalmaxpool3d": 1435, "gelu": [1436, 1590], "glu": [1437, 1591], "gaussiannllloss": 1440, "hingeembeddingloss": 1446, "huberloss": 1447, "ident": [1448, 1698, 1706, 1955, 1985], "kldivloss": 1452, "l1loss": 1453, "lppool1d": 1454, "lppool2d": 1455, "lppool3d": 1456, "lazybatchnorm1d": 1460, "lazybatchnorm2d": 1461, "lazybatchnorm3d": 1462, "lazyconv1d": 1463, "lazyconv2d": 1464, "lazyconv3d": 1465, "lazyconvtranspose1d": 1466, "lazyconvtranspose2d": 1467, "lazyconvtranspose3d": 1468, "lazyinstancenorm1d": 1469, "lazyinstancenorm2d": 1470, "lazyinstancenorm3d": 1471, "lazylinear": 1472, "localresponsenorm": 1475, "logsigmoid": [1476, 1612], "logsoftmax": 1477, "mseloss": 1478, "marginrankingloss": 1479, "maxpool1d": 1480, "maxpool2d": 1481, "maxpool3d": 1482, "maxunpool1d": 1483, "maxunpool2d": 1484, "maxunpool3d": 1485, "mish": [1486, 1623], "moduledict": [1488, 1955], "modulelist": [1489, 1954, 1955], "multilabelmarginloss": 1490, "multilabelsoftmarginloss": 1491, "multimarginloss": 1492, "nllloss": 1494, "prelu": [1495, 1637], "pairwisedist": 1496, "parameterdict": 1497, "parameterlist": 1498, "pixelshuffl": 1499, "pixelunshuffl": 1500, "poissonnllloss": 1501, "rnn": [1502, 1716, 1717, 1718, 1719, 1720, 1721, 1994], "rnnbase": 1503, "rrelu": [1505, 1641], "relu": [1506, 1638], "reflectionpad1d": 1508, "reflectionpad2d": 1509, "reflectionpad3d": 1510, "replicationpad1d": 1511, "replicationpad2d": 1512, "replicationpad3d": 1513, "selu": [1514, 1644], "sequenti": 1515, "silu": [1516, 1646], "smoothl1loss": 1518, "softmarginloss": 1519, "softmax2d": 1521, "softmin": [1522, 1650], "softplu": [1523, 1651], "softshrink": [1524, 1652], "softsign": [1525, 1653], "syncbatchnorm": 1526, "tanhshrink": [1528, 1655], "transformerdecod": 1531, "transformerdecoderlay": 1532, "transformerencod": 1533, "transformerencoderlay": 1534, "tripletmarginloss": 1535, "tripletmarginwithdistanceloss": 1536, "upsamplingbilinear2d": 1540, "upsamplingnearest2d": 1541, "zeropad1d": 1542, "zeropad2d": 1543, "zeropad3d": 1544, "sdpbackend": 1545, "attent": [1546, 1548, 1549, 1550, 1973, 1974, 1975], "bia": [1546, 1548, 1549, 1974], "causalbia": [1546, 1974], "causalvari": 1547, "causal_lower_right": 1548, "causal_upper_left": 1549, "sdpa_kernel": 1550, "adaptive_avg_pool1d": 1551, "adaptive_max_pool1d": 1554, "adaptive_max_pool2d": 1555, "adaptive_max_pool3d": 1556, "affine_grid": 1557, "alpha_dropout": 1558, "avg_pool1d": 1559, "batch_norm": 1562, "conv_transpose1d": 1570, "conv_transpose2d": 1571, "conv_transpose3d": 1572, "cosine_embedding_loss": 1573, "cosine_similar": 1574, "cross_entropi": 1575, "ctc_loss": 1576, "elu_": 1582, "embedding_bag": 1584, "feature_alpha_dropout": 1585, "fractional_max_pool2d": 1587, "fractional_max_pool3d": 1588, "gaussian_nll_loss": 1589, "grid_sampl": 1592, "group_norm": 1593, "gumbel_softmax": 1594, "hardtanh_": 1599, "hinge_embedding_loss": 1600, "huber_loss": 1601, "instance_norm": 1602, "kl_div": 1604, "l1_loss": 1605, "layer_norm": 1606, "leaky_relu_": 1608, "local_response_norm": 1610, "log_softmax": [1611, 1861], "lp_pool1d": 1613, "lp_pool2d": 1614, "lp_pool3d": 1615, "margin_ranking_loss": 1616, "max_pool3d": 1619, "max_unpool1d": 1620, "max_unpool2d": 1621, "max_unpool3d": 1622, "mse_loss": 1624, "multi_margin_loss": 1625, "multilabel_margin_loss": 1626, "multilabel_soft_margin_loss": 1627, "nll_loss": 1628, "one_hot": 1630, "pad": [1631, 1972], "pairwise_dist": 1632, "pdist": 1633, "pixel_shuffl": 1634, "pixel_unshuffl": 1635, "poisson_nll_loss": 1636, "relu_": 1640, "rrelu_": 1642, "scaled_dot_product_attent": 1643, "smooth_l1_loss": 1647, "soft_margin_loss": 1648, "threshold_": 1657, "data_parallel": [1658, 1975], "triplet_margin_loss": 1659, "triplet_margin_with_distance_loss": 1660, "lazymodulemixin": 1665, "register_module_backward_hook": 1666, "register_module_buffer_registration_hook": 1667, "register_module_forward_hook": 1668, "register_module_forward_pre_hook": 1669, "register_module_full_backward_hook": 1670, "register_module_full_backward_pre_hook": 1671, "register_module_module_registration_hook": 1672, "register_module_parameter_registration_hook": 1673, "distributeddataparallel": [1674, 1977, 1981, 1982], "uninitializedbuff": 1676, "uninitializedparamet": 1677, "clip_grad_norm": 1678, "clip_grad_norm_": 1679, "clip_grad_value_": 1680, "convert_conv2d_weight_memory_format": 1681, "convert_conv3d_weight_memory_format": 1682, "fuse_conv_bn_ev": 1683, "fuse_conv_bn_weight": 1684, "fuse_linear_bn_ev": 1685, "fuse_linear_bn_weight": 1686, "parameters_to_vector": 1687, "parametr": [1688, 1689, 1690, 1692, 1693, 1694, 1695, 1990], "orthogon": 1688, "spectral_norm": [1689, 1723], "weight_norm": [1690, 1726], "parametrizationlist": 1691, "cach": [1692, 1950, 1981, 1988, 2038], "is_parametr": 1693, "register_parametr": 1694, "remove_parametr": 1695, "basepruningmethod": 1696, "customfrommask": 1697, "l1unstructur": 1699, "lnstructur": 1700, "pruningcontain": 1701, "randomstructur": 1702, "randomunstructur": 1703, "prune": [1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1990], "custom_from_mask": 1704, "global_unstructur": 1705, "is_prun": 1707, "l1_unstructur": 1708, "ln_structur": 1709, "random_structur": 1710, "random_unstructur": 1711, "remove_spectral_norm": 1713, "remove_weight_norm": 1714, "packedsequ": 1715, "pack_padded_sequ": 1716, "pack_sequ": 1717, "pad_packed_sequ": 1718, "pad_sequ": 1719, "unpack_sequ": 1720, "unpad_sequ": 1721, "skip_init": 1722, "stateless": 1724, "vector_to_paramet": 1725, "no_grad": 1727, "ones": [1733, 2035], "ones_lik": 1734, "jitscalartyp": 1735, "graphinfo": 1736, "verificationopt": 1737, "asgd": 1738, "adadelta": 1739, "adagrad": 1740, "adam": 1741, "adamw": 1742, "adamax": 1743, "lbfg": 1744, "nadam": 1745, "add_param_group": 1746, "load_state_dict": 1747, "state_dict": [1748, 2041], "step": [1749, 2002, 2037], "zero_grad": 1750, "radam": 1751, "rmsprop": 1752, "rprop": 1753, "sgd": 1754, "sparseadam": 1755, "chainedschedul": 1756, "constantlr": 1757, "cosineannealinglr": 1758, "cosineannealingwarmrestart": 1759, "cycliclr": 1760, "exponentiallr": 1761, "lambdalr": 1762, "linearlr": 1763, "multisteplr": 1764, "multiplicativelr": 1765, "onecyclelr": 1766, "polynomiallr": 1767, "reducelronplateau": 1768, "sequentiallr": 1769, "steplr": 1770, "pca_lowrank": 1774, "polar": 1778, "promote_typ": 1783, "quantize_per_channel": 1786, "quantize_per_tensor": 1787, "quantized_batch_norm": 1788, "quantized_max_pool1d": 1789, "quantized_max_pool2d": 1790, "sobolengin": 1791, "rand": 1793, "rand_lik": 1794, "randint": 1795, "randint_lik": 1796, "randn": 1797, "randn_lik": 1798, "randperm": 1799, "rang": [1800, 1954], "result_typ": 1810, "row_stack": 1814, "searchsort": 1820, "set_default_devic": 1824, "set_default_dtyp": 1825, "set_default_tensor_typ": 1826, "set_deterministic_debug_mod": 1827, "set_float32_matmul_precis": 1828, "set_flush_denorm": 1829, "set_num_interop_thread": 1830, "set_num_thread": 1831, "set_printopt": 1832, "set_warn_alwai": 1834, "signal": [1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 2014], "bartlett": 1838, "blackman": 1839, "cosin": 1840, "gaussian": 1842, "general_cosin": 1843, "general_ham": 1844, "ham": 1845, "hann": 1846, "kaiser": 1847, "nuttal": 1848, "as_sparse_gradcheck": 1859, "check_sparse_tensor_invari": 1860, "sampled_addmm": 1863, "spdiag": 1865, "sparse_bsc_tensor": 1867, "sparse_bsr_tensor": 1868, "sparse_compressed_tensor": 1869, "sparse_coo_tensor": 1870, "sparse_csc_tensor": 1871, "sparse_csr_tensor": 1872, "std_mean": 1880, "svd_lowrank": 1886, "sym_float": 1889, "sym_int": 1890, "sym_it": 1891, "sym_max": 1892, "sym_min": 1893, "sym_not": 1894, "tensordot": 1902, "trapezoid": 1907, "trapz": 1908, "tril_indic": 1911, "triu_indic": 1913, "unravel_index": 1920, "use_deterministic_algorithm": 1922, "generate_methods_for_privateuse1_backend": 1923, "get_cpp_backtrac": 1924, "rename_privateuse1_backend": 1925, "set_modul": 1926, "swap_tensor": 1927, "var_mean": 1930, "view_as_complex": 1932, "view_as_r": 1933, "vstack": 1936, "xpu": [1939, 1941, 1943, 1944, 1945, 1946, 1947, 2050], "zero": 1948, "zeros_lik": 1949, "hub": 1950, "publish": 1950, "entrypoint": 1950, "run": [1950, 2042], "my": [1950, 1978, 1985, 2003, 2035, 2042], "download": 1950, "logic": [1950, 1954], "known": [1950, 1952], "bind": 1951, "tabl": [1951, 1995], "built": [1952, 1953, 1955, 2000], "comparison": [1952, 1954, 1955, 2023, 2030], "inspect": [1952, 1998, 2032], "warn": 1952, "appendix": [1952, 1955], "recurs": 1952, "constant": [1952, 1954], "fusion": 1952, "math": [1953, 2023], "construct": [1954, 1955, 1957, 1971, 2002, 2015], "refin": [1954, 1955], "enum": [1954, 1955], "tupl": [1954, 1955], "liter": [1954, 1955], "list": [1954, 1955, 2000], "dict": 1954, "arithmet": [1954, 1955], "subscript": [1954, 1955], "slice": [1954, 1955, 1993, 2023], "ternari": [1954, 1955], "cast": 1954, "statement": [1954, 1955], "assign": [1954, 1955], "If": 1954, "while": [1954, 1955], "loop": 1954, "For": 1954, "continu": [1954, 1955], "return": [1954, 1955, 1985, 2013], "resolut": [1954, 1955], "lookup": 1954, "defin": [1954, 1983, 1984], "terminologi": 1955, "primit": 1955, "instanc": 1955, "when": [1955, 1978, 1983, 2000, 2006, 2015, 2035], "signatur": 1955, "expr": 1955, "convers": [1955, 1971], "atom": 1955, "identifi": [1955, 2035, 2045], "parenthes": 1955, "form": 1955, "displai": 1955, "primari": 1955, "power": 1955, "unari": [1955, 1962, 2015], "bitwis": 1955, "binari": [1955, 1962], "shift": 1955, "boolean": 1955, "condit": 1955, "augment": 1955, "rais": 1955, "del": 1955, "compound": 1955, "els": 1955, "getattr": 1955, "hasattr": 1955, "zip": [1955, 2003], "enumer": 1955, "rule": [1955, 1970, 1984, 1998], "remot": [1955, 2013], "procedur": 1955, "execut": [1955, 1978, 1981, 2003, 2004, 2035], "program": 1955, "coverag": [1956, 1969, 1983], "properti": [1957, 1960], "correctli": 1957, "bound": 1957, "schema": 1957, "between": [1957, 2003, 2035], "low": 1959, "matrix": [1960, 2006], "decomposit": 1960, "solver": 1960, "misc": 1960, "motiv": [1962, 2033, 2034], "reduct": [1962, 1981, 1993, 2023], "idiom": 1963, "mobile_optim": 1964, "model_zoo": 1965, "strategi": [1968, 2002], "descriptor": 1968, "file_descriptor": 1968, "file_system": 1968, "subprocess": 1968, "keep": [1969, 2003], "dimens": [1969, 1970], "unifi": 1969, "contract": 1969, "awai": 1969, "factori": 1969, "variant": 1969, "semant": [1970, 1979, 1981, 1988, 1995], "infer": [1970, 1978, 1980, 1995, 2027], "explicit": 1970, "align": 1970, "current": 1970, "subsystem": 1970, "constructor": 1971, "contain": 1972, "convolut": [1972, 1975, 1993, 1994], "layer": 1972, "pool": [1972, 1975], "activ": [1972, 1975, 2047], "weight": [1972, 2002], "nonlinear": 1972, "recurr": [1972, 1985], "distanc": [1972, 1975], "loss": [1972, 1975, 1977], "vision": [1972, 1975], "shuffl": 1972, "lazi": 1972, "submodul": 1973, "typic": 1977, "unscal": 1977, "accumul": 1977, "penalti": 1977, "one": 1977, "per": [1977, 2002], "need": [1977, 2035], "particular": [1977, 1978], "dtype": [1977, 1995, 2009, 2018], "encod": 1978, "histori": [1978, 2047], "set": [1978, 2000], "No": 1978, "evalu": [1978, 1987, 2038], "multithread": 1978, "concurr": 1978, "determin": [1978, 1994], "retain": 1978, "thread": [1978, 1980], "safeti": 1978, "wirting": 1978, "calculu": 1978, "pictur": 1978, "conjug": 1978, "own": 1978, "formula": 1978, "domain": 1978, "regist": [1978, 2031], "whether": [1978, 2003], "fire": 1978, "differ": [1978, 2000, 2035], "modifi": 1978, "compat": 1979, "runtim": [1980, 1985, 2045], "tune": 1980, "tensorfloat": [1981, 1988, 1993], "32": [1981, 1988, 1993, 1996], "tf32": [1981, 1988, 1993], "amper": [1981, 1993], "later": [1981, 1993, 2003], "reduc": [1981, 1993], "fp16": [1981, 1993], "gemm": [1981, 1993], "bf16": [1981, 1993], "bc": 1981, "pytorch_cuda_alloc_conf": 1981, "alloc": [1981, 1985, 2047], "cubla": 1981, "workspac": 1981, "cufft": 1981, "plan": [1981, 1988], "just": 1981, "time": [1981, 2027, 2039, 2043], "practic": [1981, 1992, 2006, 2029], "agnost": 1981, "buffer": [1981, 1986, 1992], "instead": 1981, "whole": [1981, 2035], "captur": 1981, "partial": 1981, "9": 1981, "6": 1981, "across": [1981, 1995], "intern": [1982, 2000, 2003, 2032, 2033], "processgroup": 1982, "ddpoptim": 1982, "separ": 1983, "setup_context": 1983, "like": [1983, 2003], "subclass": [1983, 2034], "wrapper": 1983, "__torch_function__": 1983, "overrid": [1983, 2046], "nativ": [1983, 2006, 2008], "anoth": 1984, "specifi": 1984, "gotcha": 1984, "staticmethod": 1984, "isn": 1985, "freed": 1985, "properli": 1985, "loader": 1985, "doesn": 1985, "fsdp": 1986, "prefetch": 1986, "nuanc": 1986, "payload": 1986, "notat": 1987, "background": [1987, 2012, 2013, 2030], "inform": [1987, 2011, 2044], "analyt": 1987, "u": 1987, "reus": [1988, 1992], "hipfft": 1988, "rocfft": 1988, "enabl": 1988, "larg": 1989, "fleet": 1989, "wide": 1989, "attach": 1989, "consider": 1989, "block": 1990, "neural": 1990, "tip": [1992, 2007], "fight": 1992, "deadlock": 1992, "through": 1992, "queue": 1992, "e": 1992, "g": 1992, "hogwild": 1992, "oversubscript": 1992, "accuraci": [1993, 2006, 2007, 2045], "extrem": 1993, "finit": 1993, "instinct": 1993, "mi200": 1993, "reproduc": 1994, "nondeterminist": 1994, "algorithm": [1994, 2002, 2012], "fill": 1994, "uniniti": 1994, "content": [1995, 2003], "preserv": 1995, "format": [1995, 2003], "them": [1995, 2003], "version": 1995, "integ": 1995, "divis": 1995, "alwai": 1995, "includ": [1996, 2003], "compon": 1996, "speed": [1996, 2035], "One": [1996, 2044], "instal": 1996, "cffi": 1996, "cpp": 1996, "found": 1996, "win": 1996, "channel": 1996, "without": 1996, "claus": 1996, "protect": 1996, "broken": 1996, "pipe": [1996, 2004], "driver": 1996, "shut": 1996, "down": 1996, "ipc": 1996, "base": [1997, 1998, 2000, 2002, 2044], "gui": 1998, "diagnos": [1998, 2045], "sarif": 1998, "diagnost": 1998, "alexnet": 2000, "v": 2000, "index": [2000, 2023], "aten": [2000, 2040, 2044], "inlin": 2000, "discov": 2000, "unconvert": 2000, "onc": 2000, "adjust": 2002, "learn": 2002, "rate": 2002, "averag": 2002, "swa": 2002, "ema": 2002, "schedul": 2002, "care": 2002, "put": 2002, "togeth": 2002, "your": 2003, "do": [2003, 2032, 2035], "see": [2003, 2035], "insid": [2003, 2035], "treat": 2003, "archiv": 2003, "file_structur": 2003, "given": 2003, "wa": 2003, "resourc": [2003, 2034], "distinguish": 2003, "explan": 2003, "analyz": 2003, "extern": 2003, "mock": 2003, "refactor": 2003, "sharp": 2003, "global": 2003, "isol": 2003, "each": [2003, 2034], "mangl": 2003, "pipelin": 2004, "skip": 2004, "connect": 2004, "intel": 2005, "instrument": 2005, "technologi": 2005, "eager": 2006, "awar": 2006, "maintainc": 2006, "engin": 2006, "observ": [2006, 2009], "hardwar": 2006, "configur": [2006, 2008], "insensit": 2007, "int8": 2007, "sensit": 2007, "ao": [2009, 2024, 2025], "top": 2009, "quantize_fx": 2009, "qconfig_map": 2009, "backend_config": 2009, "custom_config": 2009, "pt2e": 2009, "0": [2009, 2041, 2042, 2045], "relat": [2009, 2034], "fake_quant": 2009, "intrins": 2009, "qat": 2009, "scheme": 2009, "rpc": 2011, "tensorpip": 2011, "rref": [2011, 2013], "remotemodul": 2011, "record": 2012, "dure": 2012, "smart": 2012, "end": 2012, "protocol": 2013, "lifetim": 2013, "reason": 2013, "scenario": 2013, "owner": 2013, "argument": 2013, "sparsiti": 2015, "semi": 2015, "acceler": 2015, "coo": 2015, "hybrid": 2015, "uncoalesc": 2015, "csr": 2015, "csc": 2015, "bsr": 2015, "bsc": 2015, "memory_format": 2018, "tensorboard": 2020, "creation": 2023, "sampl": 2023, "quasi": 2023, "pointwis": 2023, "spectral": 2023, "bla": 2023, "lapack": 2023, "foreach": 2023, "path": 2023, "n": [2024, 2025], "_numeric_suit": 2024, "_numeric_suite_fx": 2025, "howto": 2026, "vendor": 2026, "aotinductor": 2027, "ahead": 2027, "Of": 2027, "ed": 2027, "x86": 2029, "tree": 2030, "integr": 2030, "callabl": 2030, "previou": 2030, "after": 2031, "aotautograd": 2031, "speedi": 2031, "guard": [2032, 2033, 2038], "dynamo": 2032, "artifact": 2032, "abridg": 2033, "public": 2033, "overal": [2033, 2034], "architectur": [2033, 2034], "unback": 2033, "fake": 2034, "bit": 2034, "detail": 2034, "individu": [2034, 2039], "characterist": 2034, "interact": 2034, "you": 2035, "still": 2035, "crash": 2035, "slow": 2035, "recompil": [2035, 2045], "am": 2035, "speedup": 2035, "caus": [2035, 2045], "didn": 2035, "incorrect": 2035, "result": 2035, "oom": 2035, "handl": 2035, "besid": 2035, "via": 2035, "under": 2035, "some": 2035, "did": 2035, "fine": [2035, 2036], "grain": [2035, 2036], "_dynamo": [2035, 2036], "disallow_in_graph": [2035, 2036], "_dynamo_skip": 2035, "pretrain": 2037, "next": 2037, "frame": 2038, "pep": 2038, "523": 2038, "instructiontransl": 2038, "torchinductor": [2039, 2042, 2045], "relev": 2039, "breakdown": 2039, "prim": 2040, "nnmodul": 2041, "__call__": 2041, "dashboard": 2042, "measur": 2042, "pr": 2042, "affect": 2042, "befor": 2042, "merg": 2042, "understand": [2043, 2047], "around": 2043, "overhead": 2043, "x": 2044, "none": 2044, "partition": 2044, "matcher": 2044, "capabl": 2044, "troubleshoot": 2045, "titl": 2045, "minifi": 2045, "torch_compile_debug": 2045, "excess": 2045, "snapshot": 2047, "visual": 2047, "timelin": 2047, "info": 2048, "finfo": 2048, "iinfo": 2048}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.fill_": [[255, "torch-tensor-fill"]], "torch.Tensor.float_power_": [[265, "torch-tensor-float-power"]], "torch.Tensor.frexp": [[276, "torch-tensor-frexp"]], "torch.Tensor.geqrf": [[283, "torch-tensor-geqrf"]], "torch.Tensor.float_power": [[264, "torch-tensor-float-power"]], "torch.Tensor.fmod": [[272, "torch-tensor-fmod"]], "torch.Tensor.gcd": [[278, "torch-tensor-gcd"]], "torch.Tensor.fmod_": [[273, "torch-tensor-fmod"]], "torch.Tensor.ge_": [[281, "torch-tensor-ge"]], "torch.Tensor.greater_equal": [[289, "torch-tensor-greater-equal"]], "torch.Tensor.fmax": [[270, "torch-tensor-fmax"]], "torch.Tensor.half": [[293, "torch-tensor-half"]], "torch.Tensor.hardshrink": [[294, "torch-tensor-hardshrink"]], "torch.Tensor.expand_as": [[251, "torch-tensor-expand-as"]], "torch.Tensor.fmin": [[271, "torch-tensor-fmin"]], "torch.Tensor.flatten": [[259, "torch-tensor-flatten"]], "torch.Tensor.gather": [[277, "torch-tensor-gather"]], "torch.Tensor.fix": [[257, "torch-tensor-fix"]], "torch.Tensor.float": [[263, "torch-tensor-float"]], "torch.Tensor.floor": [[266, "torch-tensor-floor"]], "torch.Tensor.floor_": [[267, "torch-tensor-floor"]], "torch.Tensor.exponential_": [[254, "torch-tensor-exponential"]], "torch.Tensor.gt": [[291, "torch-tensor-gt"]], "torch.Tensor.greater_equal_": [[290, "torch-tensor-greater-equal"]], "torch.Tensor.gt_": [[292, "torch-tensor-gt"]], "torch.Tensor.floor_divide": [[268, "torch-tensor-floor-divide"]], "torch.Tensor.expm1_": [[253, "torch-tensor-expm1"]], "torch.Tensor.ger": [[284, "torch-tensor-ger"]], "torch.Tensor.histc": [[296, "torch-tensor-histc"]], "torch.Tensor.greater_": [[288, "torch-tensor-greater"]], "torch.Tensor.fliplr": [[261, "torch-tensor-fliplr"]], "torch.Tensor.get_device": [[285, "torch-tensor-get-device"]], "torch.Tensor.floor_divide_": [[269, "torch-tensor-floor-divide"]], "torch.Tensor.flipud": [[262, "torch-tensor-flipud"]], "torch.Tensor.gcd_": [[279, "torch-tensor-gcd"]], "torch.Tensor.expand": [[250, "torch-tensor-expand"]], "torch.Tensor.ge": [[280, "torch-tensor-ge"]], "torch.Tensor.fix_": [[258, "torch-tensor-fix"]], "torch.Tensor.hsplit": [[298, "torch-tensor-hsplit"]], "torch.Tensor.heaviside": [[295, "torch-tensor-heaviside"]], "torch.Tensor.frac_": [[275, "torch-tensor-frac"]], "torch.Tensor.greater": [[287, "torch-tensor-greater"]], "torch.Tensor.histogram": [[297, "torch-tensor-histogram"]], "torch.Tensor.frac": [[274, "torch-tensor-frac"]], "torch.Tensor.fill_diagonal_": [[256, "torch-tensor-fill-diagonal"]], "torch.Tensor.hypot": [[299, "torch-tensor-hypot"]], "torch.Tensor.expm1": [[252, "torch-tensor-expm1"]], "torch.Tensor.flip": [[260, "torch-tensor-flip"]], "torch.Tensor.grad": [[286, "torch-tensor-grad"]], "torch.Tensor.geometric_": [[282, "torch-tensor-geometric"]], "torch.Tensor.bitwise_and_": [[154, "torch-tensor-bitwise-and"]], "torch.Tensor.chalf": [[175, "torch-tensor-chalf"]], "torch.Tensor.cfloat": [[174, "torch-tensor-cfloat"]], "torch.Tensor.conj_physical": [[189, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_and": [[153, "torch-tensor-bitwise-and"]], "torch.Tensor.cauchy_": [[169, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_xor_": [[164, "torch-tensor-bitwise-xor"]], "torch.Tensor.bfloat16": [[151, "torch-tensor-bfloat16"]], "torch.Tensor.ceil_": [[173, "torch-tensor-ceil"]], "torch.Tensor.bitwise_or_": [[160, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_right_shift_": [[162, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bitwise_xor": [[163, "torch-tensor-bitwise-xor"]], "torch.Tensor.clamp": [[181, "torch-tensor-clamp"]], "torch.Tensor.bitwise_or": [[159, "torch-tensor-bitwise-or"]], "torch.Tensor.char": [[176, "torch-tensor-char"]], "torch.Tensor.bincount": [[152, "torch-tensor-bincount"]], "torch.Tensor.cholesky": [[177, "torch-tensor-cholesky"]], "torch.Tensor.clamp_": [[182, "torch-tensor-clamp"]], "torch.Tensor.conj": [[188, "torch-tensor-conj"]], "torch.Tensor.clip": [[183, "torch-tensor-clip"]], "torch.Tensor.clone": [[185, "torch-tensor-clone"]], "torch.Tensor.ccol_indices": [[170, "torch-tensor-ccol-indices"]], "torch.Tensor.bitwise_left_shift_": [[156, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_right_shift": [[161, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.chunk": [[180, "torch-tensor-chunk"]], "torch.Tensor.contiguous": [[191, "torch-tensor-contiguous"]], "torch.Tensor.cosh_": [[199, "torch-tensor-cosh"]], "torch.Tensor.byte": [[168, "torch-tensor-byte"]], "torch.Tensor.cholesky_inverse": [[178, "torch-tensor-cholesky-inverse"]], "torch.Tensor.copy_": [[192, "torch-tensor-copy"]], "torch.Tensor.copysign_": [[194, "torch-tensor-copysign"]], "torch.Tensor.broadcast_to": [[167, "torch-tensor-broadcast-to"]], "torch.Tensor.col_indices": [[187, "torch-tensor-col-indices"]], "torch.Tensor.cdouble": [[171, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_not_": [[158, "torch-tensor-bitwise-not"]], "torch.Tensor.conj_physical_": [[190, "torch-tensor-conj-physical"]], "torch.Tensor.bmm": [[165, "torch-tensor-bmm"]], "torch.Tensor.cosh": [[198, "torch-tensor-cosh"]], "torch.Tensor.clip_": [[184, "torch-tensor-clip"]], "torch.Tensor.cos_": [[197, "torch-tensor-cos"]], "torch.Tensor.ceil": [[172, "torch-tensor-ceil"]], "torch.Tensor.cos": [[196, "torch-tensor-cos"]], "torch.Tensor.cholesky_solve": [[179, "torch-tensor-cholesky-solve"]], "torch.Tensor.copysign": [[193, "torch-tensor-copysign"]], "torch.Tensor.coalesce": [[186, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_left_shift": [[155, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_not": [[157, "torch-tensor-bitwise-not"]], "torch.Tensor.bernoulli_": [[150, "torch-tensor-bernoulli"]], "torch.Tensor.bool": [[166, "torch-tensor-bool"]], "torch.Tensor.corrcoef": [[195, "torch-tensor-corrcoef"]], "torch.Tensor.asin": [[136, "torch-tensor-asin"]], "torch.Tensor.as_subclass": [[135, "torch-tensor-as-subclass"]], "torch.Tensor.allclose": [[109, "torch-tensor-allclose"]], "torch.Tensor.arccosh_": [[119, "torch-tensor-arccosh"]], "torch.Tensor.addmv_": [[104, "torch-tensor-addmv"]], "torch.Tensor.arccos": [[116, "torch-tensor-arccos"]], "torch.Tensor.amax": [[110, "torch-tensor-amax"]], "torch.Tensor.arccosh": [[118, "torch-tensor-arccosh"]], "torch.Tensor.addmm_": [[102, "torch-tensor-addmm"]], "torch.Tensor.arctan2": [[125, "torch-tensor-arctan2"]], "torch.Tensor.arcsin_": [[121, "torch-tensor-arcsin"]], "torch.Tensor.aminmax": [[112, "torch-tensor-aminmax"]], "torch.Tensor.argmin": [[131, "torch-tensor-argmin"]], "torch.Tensor.arcsinh_": [[123, "torch-tensor-arcsinh"]], "torch.Tensor.asin_": [[137, "torch-tensor-asin"]], "torch.Tensor.addr": [[105, "torch-tensor-addr"]], "torch.Tensor.arcsinh": [[122, "torch-tensor-arcsinh"]], "torch.Tensor.arctan2_": [[126, "torch-tensor-arctan2"]], "torch.Tensor.bernoulli": [[149, "torch-tensor-bernoulli"]], "torch.Tensor.amin": [[111, "torch-tensor-amin"]], "torch.Tensor.atanh_": [[145, "torch-tensor-atanh"]], "torch.Tensor.atan2": [[141, "torch-tensor-atan2"]], "torch.Tensor.atan": [[140, "torch-tensor-atan"]], "torch.Tensor.baddbmm_": [[148, "torch-tensor-baddbmm"]], "torch.Tensor.atan_": [[143, "torch-tensor-atan"]], "torch.Tensor.as_strided": [[134, "torch-tensor-as-strided"]], "torch.Tensor.asinh": [[138, "torch-tensor-asinh"]], "torch.Tensor.apply_": [[115, "torch-tensor-apply"]], "torch.Tensor.asinh_": [[139, "torch-tensor-asinh"]], "torch.Tensor.arctan": [[124, "torch-tensor-arctan"]], "torch.Tensor.arctan_": [[127, "torch-tensor-arctan"]], "torch.Tensor.arcsin": [[120, "torch-tensor-arcsin"]], "torch.Tensor.angle": [[113, "torch-tensor-angle"]], "torch.Tensor.adjoint": [[107, "torch-tensor-adjoint"]], "torch.Tensor.atan2_": [[142, "torch-tensor-atan2"]], "torch.Tensor.arctanh_": [[129, "torch-tensor-arctanh"]], "torch.Tensor.addmm": [[101, "torch-tensor-addmm"]], "torch.Tensor.addr_": [[106, "torch-tensor-addr"]], "torch.Tensor.argwhere": [[133, "torch-tensor-argwhere"]], "torch.Tensor.addcmul_": [[100, "torch-tensor-addcmul"]], "torch.Tensor.argmax": [[130, "torch-tensor-argmax"]], "torch.Tensor.backward": [[146, "torch-tensor-backward"]], "torch.Tensor.argsort": [[132, "torch-tensor-argsort"]], "torch.Tensor.all": [[108, "torch-tensor-all"]], "torch.Tensor.baddbmm": [[147, "torch-tensor-baddbmm"]], "torch.Tensor.arccos_": [[117, "torch-tensor-arccos"]], "torch.Tensor.atanh": [[144, "torch-tensor-atanh"]], "torch.Tensor.addmv": [[103, "torch-tensor-addmv"]], "torch.Tensor.arctanh": [[128, "torch-tensor-arctanh"]], "torch.Tensor.any": [[114, "torch-tensor-any"]], "torch.Tensor.dim": [[228, "torch-tensor-dim"]], "torch.Tensor.cross": [[203, "torch-tensor-cross"]], "torch.Tensor.detach": [[217, "torch-tensor-detach"]], "torch.Tensor.dim_order": [[229, "torch-tensor-dim-order"]], "torch.Tensor.erfinv": [[246, "torch-tensor-erfinv"]], "torch.Tensor.cuda": [[205, "torch-tensor-cuda"]], "torch.Tensor.diagflat": [[222, "torch-tensor-diagflat"]], "torch.Tensor.diagonal_scatter": [[224, "torch-tensor-diagonal-scatter"]], "torch.Tensor.cumprod_": [[209, "torch-tensor-cumprod"]], "torch.Tensor.crow_indices": [[204, "torch-tensor-crow-indices"]], "torch.Tensor.diag": [[220, "torch-tensor-diag"]], "torch.Tensor.dist": [[230, "torch-tensor-dist"]], "torch.Tensor.cumsum_": [[211, "torch-tensor-cumsum"]], "torch.Tensor.cpu": [[202, "torch-tensor-cpu"]], "torch.Tensor.equal": [[241, "torch-tensor-equal"]], "torch.Tensor.erf_": [[243, "torch-tensor-erf"]], "torch.Tensor.dsplit": [[237, "torch-tensor-dsplit"]], "torch.Tensor.digamma": [[226, "torch-tensor-digamma"]], "torch.Tensor.erf": [[242, "torch-tensor-erf"]], "torch.Tensor.device": [[219, "torch-tensor-device"]], "torch.Tensor.cumsum": [[210, "torch-tensor-cumsum"]], "torch.Tensor.erfinv_": [[247, "torch-tensor-erfinv"]], "torch.Tensor.divide_": [[234, "torch-tensor-divide"]], "torch.Tensor.digamma_": [[227, "torch-tensor-digamma"]], "torch.Tensor.erfc": [[244, "torch-tensor-erfc"]], "torch.Tensor.count_nonzero": [[200, "torch-tensor-count-nonzero"]], "torch.Tensor.detach_": [[218, "torch-tensor-detach"]], "torch.Tensor.diagonal": [[223, "torch-tensor-diagonal"]], "torch.Tensor.div": [[231, "torch-tensor-div"]], "torch.Tensor.exp_": [[249, "torch-tensor-exp"]], "torch.Tensor.dequantize": [[215, "torch-tensor-dequantize"]], "torch.Tensor.dense_dim": [[214, "torch-tensor-dense-dim"]], "torch.Tensor.erfc_": [[245, "torch-tensor-erfc"]], "torch.Tensor.dot": [[235, "torch-tensor-dot"]], "torch.Tensor.eq": [[239, "torch-tensor-eq"]], "torch.Tensor.cummin": [[207, "torch-tensor-cummin"]], "torch.Tensor.double": [[236, "torch-tensor-double"]], "torch.Tensor.eq_": [[240, "torch-tensor-eq"]], "torch.Tensor.cummax": [[206, "torch-tensor-cummax"]], "torch.Tensor.cov": [[201, "torch-tensor-cov"]], "torch.Tensor.divide": [[233, "torch-tensor-divide"]], "torch.Tensor.data_ptr": [[212, "torch-tensor-data-ptr"]], "torch.Tensor.deg2rad": [[213, "torch-tensor-deg2rad"]], "torch.Tensor.diag_embed": [[221, "torch-tensor-diag-embed"]], "torch.Tensor.cumprod": [[208, "torch-tensor-cumprod"]], "torch.Tensor.exp": [[248, "torch-tensor-exp"]], "torch.Tensor.div_": [[232, "torch-tensor-div"]], "torch.Tensor.diff": [[225, "torch-tensor-diff"]], "torch.Tensor.det": [[216, "torch-tensor-det"]], "torch.Tensor.element_size": [[238, "torch-tensor-element-size"]], "torch.Tensor.is_set_to": [[335, "torch-tensor-is-set-to"]], "torch.Tensor.is_sparse_csr": [[339, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_contiguous": [[327, "torch-tensor-is-contiguous"]], "torch.Tensor.isnan": [[343, "torch-tensor-isnan"]], "torch.Tensor.inner": [[320, "torch-tensor-inner"]], "torch.Tensor.is_coalesced": [[324, "torch-tensor-is-coalesced"]], "torch.Tensor.i0_": [[302, "torch-tensor-i0"]], "torch.Tensor.imag": [[307, "torch-tensor-imag"]], "torch.Tensor.isfinite": [[341, "torch-tensor-isfinite"]], "torch.Tensor.index_put_": [[315, "torch-tensor-index-put"]], "torch.Tensor.itemsize": [[349, "torch-tensor-itemsize"]], "torch.Tensor.igamma": [[303, "torch-tensor-igamma"]], "torch.Tensor.is_quantized": [[334, "torch-tensor-is-quantized"]], "torch.Tensor.is_complex": [[325, "torch-tensor-is-complex"]], "torch.Tensor.int_repr": [[322, "torch-tensor-int-repr"]], "torch.Tensor.is_conj": [[326, "torch-tensor-is-conj"]], "torch.Tensor.isclose": [[340, "torch-tensor-isclose"]], "torch.Tensor.indices": [[319, "torch-tensor-indices"]], "torch.Tensor.inverse": [[323, "torch-tensor-inverse"]], "torch.Tensor.is_sparse": [[338, "torch-tensor-is-sparse"]], "torch.Tensor.index_copy": [[310, "torch-tensor-index-copy"]], "torch.Tensor.igammac_": [[306, "torch-tensor-igammac"]], "torch.Tensor.i0": [[301, "torch-tensor-i0"]], "torch.Tensor.igamma_": [[304, "torch-tensor-igamma"]], "torch.Tensor.index_fill_": [[313, "torch-tensor-index-fill"]], "torch.Tensor.index_add": [[308, "torch-tensor-index-add"]], "torch.Tensor.index_add_": [[309, "torch-tensor-index-add"]], "torch.Tensor.istft": [[347, "torch-tensor-istft"]], "torch.Tensor.isneginf": [[344, "torch-tensor-isneginf"]], "torch.Tensor.is_meta": [[332, "torch-tensor-is-meta"]], "torch.Tensor.is_cuda": [[328, "torch-tensor-is-cuda"]], "torch.Tensor.index_fill": [[312, "torch-tensor-index-fill"]], "torch.Tensor.isposinf": [[345, "torch-tensor-isposinf"]], "torch.Tensor.is_leaf": [[331, "torch-tensor-is-leaf"]], "torch.Tensor.index_put": [[314, "torch-tensor-index-put"]], "torch.Tensor.isinf": [[342, "torch-tensor-isinf"]], "torch.Tensor.isreal": [[346, "torch-tensor-isreal"]], "torch.Tensor.index_reduce_": [[317, "torch-tensor-index-reduce"]], "torch.Tensor.item": [[348, "torch-tensor-item"]], "torch.Tensor.is_floating_point": [[329, "torch-tensor-is-floating-point"]], "torch.Tensor.index_reduce": [[316, "torch-tensor-index-reduce"]], "torch.Tensor.is_signed": [[337, "torch-tensor-is-signed"]], "torch.Tensor.igammac": [[305, "torch-tensor-igammac"]], "torch.Tensor.index_copy_": [[311, "torch-tensor-index-copy"]], "torch.Tensor.is_shared": [[336, "torch-tensor-is-shared"]], "torch.Tensor.is_inference": [[330, "torch-tensor-is-inference"]], "torch.Tensor.int": [[321, "torch-tensor-int"]], "torch.Tensor.is_pinned": [[333, "torch-tensor-is-pinned"]], "torch.Tensor.index_select": [[318, "torch-tensor-index-select"]], "torch.Tensor.hypot_": [[300, "torch-tensor-hypot"]], "torch.Tensor.logical_xor_": [[385, "torch-tensor-logical-xor"]], "torch.Tensor.masked_select": [[399, "torch-tensor-masked-select"]], "torch.Tensor.long": [[389, "torch-tensor-long"]], "torch.Tensor.less_equal_": [[362, "torch-tensor-less-equal"]], "torch.Tensor.lt_": [[391, "torch-tensor-lt"]], "torch.Tensor.less": [[359, "torch-tensor-less"]], "torch.Tensor.logical_and": [[378, "torch-tensor-logical-and"]], "torch.Tensor.lcm": [[351, "torch-tensor-lcm"]], "torch.Tensor.lerp": [[357, "torch-tensor-lerp"]], "torch.Tensor.masked_fill": [[395, "torch-tensor-masked-fill"]], "torch.Tensor.logical_and_": [[379, "torch-tensor-logical-and"]], "torch.Tensor.masked_scatter": [[397, "torch-tensor-masked-scatter"]], "torch.Tensor.logcumsumexp": [[376, "torch-tensor-logcumsumexp"]], "torch.Tensor.log1p_": [[369, "torch-tensor-log1p"]], "torch.Tensor.le": [[355, "torch-tensor-le"]], "torch.Tensor.log10": [[366, "torch-tensor-log10"]], "torch.Tensor.logit_": [[387, "torch-tensor-logit"]], "torch.Tensor.le_": [[356, "torch-tensor-le"]], "torch.Tensor.log": [[365, "torch-tensor-log"]], "torch.Tensor.log_normal_": [[373, "torch-tensor-log-normal"]], "torch.Tensor.logit": [[386, "torch-tensor-logit"]], "torch.Tensor.logdet": [[377, "torch-tensor-logdet"]], "torch.Tensor.masked_fill_": [[396, "torch-tensor-masked-fill"]], "torch.Tensor.masked_scatter_": [[398, "torch-tensor-masked-scatter"]], "torch.Tensor.log_": [[372, "torch-tensor-log"]], "torch.Tensor.lu": [[392, "torch-tensor-lu"]], "torch.Tensor.lgamma_": [[364, "torch-tensor-lgamma"]], "torch.Tensor.lcm_": [[352, "torch-tensor-lcm"]], "torch.Tensor.ldexp": [[353, "torch-tensor-ldexp"]], "torch.Tensor.lerp_": [[358, "torch-tensor-lerp"]], "torch.Tensor.log2": [[370, "torch-tensor-log2"]], "torch.Tensor.log1p": [[368, "torch-tensor-log1p"]], "torch.Tensor.log2_": [[371, "torch-tensor-log2"]], "torch.Tensor.logical_or_": [[383, "torch-tensor-logical-or"]], "torch.Tensor.lgamma": [[363, "torch-tensor-lgamma"]], "torch.Tensor.map_": [[394, "torch-tensor-map"]], "torch.Tensor.log10_": [[367, "torch-tensor-log10"]], "torch.Tensor.logaddexp2": [[375, "torch-tensor-logaddexp2"]], "torch.Tensor.logical_not_": [[381, "torch-tensor-logical-not"]], "torch.Tensor.logical_xor": [[384, "torch-tensor-logical-xor"]], "torch.Tensor.less_equal": [[361, "torch-tensor-less-equal"]], "torch.Tensor.logical_not": [[380, "torch-tensor-logical-not"]], "torch.Tensor.ldexp_": [[354, "torch-tensor-ldexp"]], "torch.Tensor.logical_or": [[382, "torch-tensor-logical-or"]], "torch.Tensor.lu_solve": [[393, "torch-tensor-lu-solve"]], "torch.Tensor.kthvalue": [[350, "torch-tensor-kthvalue"]], "torch.Tensor.logsumexp": [[388, "torch-tensor-logsumexp"]], "torch.Tensor.lt": [[390, "torch-tensor-lt"]], "torch.Tensor.logaddexp": [[374, "torch-tensor-logaddexp"]], "torch.Tensor.less_": [[360, "torch-tensor-less"]], "torch.xpu": [[2050, "module-torch.xpu"]], "torch.xpu.get_device_properties": [[1945, "torch-xpu-get-device-properties"]], "torch.vmap": [[1934, "torch-vmap"]], "torch.vdot": [[1931, "torch-vdot"]], "torch.topk": [[1904, "torch-topk"]], "torch.view_as_real": [[1933, "torch-view-as-real"]], "torch.zeros": [[1948, "torch-zeros"]], "torch.tensor_split": [[1901, "torch-tensor-split"]], "torch.xpu.current_device": [[1939, "torch-xpu-current-device"]], "torch.where": [[1937, "torch-where"]], "torch.xlogy": [[1938, "torch-xlogy"]], "torch.unique_consecutive": [[1919, "torch-unique-consecutive"]], "torch.tile": [[1903, "torch-tile"]], "torch.var": [[1929, "torch-var"]], "device": [[1940, "device"], [1019, "device"]], "torch.triangular_solve": [[1909, "torch-triangular-solve"]], "torch.triu": [[1912, "torch-triu"]], "torch.xpu.set_device": [[1947, "torch-xpu-set-device"]], "torch.true_divide": [[1914, "torch-true-divide"]], "torch.transpose": [[1906, "torch-transpose"]], "torch.unflatten": [[1917, "torch-unflatten"]], "torch.xpu.device_count": [[1941, "torch-xpu-device-count"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1923, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.utils.set_module": [[1926, "torch-utils-set-module"]], "torch.tensordot": [[1902, "torch-tensordot"]], "torch.tril_indices": [[1911, "torch-tril-indices"]], "torch.vsplit": [[1935, "torch-vsplit"]], "device_of": [[1942, "device-of"], [1021, "device-of"]], "torch.unbind": [[1916, "torch-unbind"]], "torch.trapz": [[1908, "torch-trapz"]], "torch.unique": [[1918, "torch-unique"]], "torch.zeros_like": [[1949, "torch-zeros-like"]], "torch.triu_indices": [[1913, "torch-triu-indices"]], "torch.vander": [[1928, "torch-vander"]], "torch.xpu.is_available": [[1946, "torch-xpu-is-available"]], "torch.view_as_complex": [[1932, "torch-view-as-complex"]], "torch.trunc": [[1915, "torch-trunc"]], "torch.utils.swap_tensors": [[1927, "torch-utils-swap-tensors"]], "torch.trapezoid": [[1907, "torch-trapezoid"]], "torch.unsqueeze": [[1921, "torch-unsqueeze"]], "torch.tril": [[1910, "torch-tril"]], "torch.var_mean": [[1930, "torch-var-mean"]], "torch.trace": [[1905, "torch-trace"]], "torch.unravel_index": [[1920, "torch-unravel-index"]], "torch.xpu.get_device_name": [[1944, "torch-xpu-get-device-name"]], "torch.utils.get_cpp_backtrace": [[1924, "torch-utils-get-cpp-backtrace"]], "torch.tensor": [[1900, "torch-tensor"]], "torch.utils.rename_privateuse1_backend": [[1925, "torch-utils-rename-privateuse1-backend"]], "torch.use_deterministic_algorithms": [[1922, "torch-use-deterministic-algorithms"]], "torch.xpu.get_device_capability": [[1943, "torch-xpu-get-device-capability"]], "torch.vstack": [[1936, "torch-vstack"]], "torch.std_mean": [[1880, "torch-std-mean"]], "torch.sub": [[1882, "torch-sub"]], "torch.swapaxes": [[1887, "torch-swapaxes"]], "check_sparse_tensor_invariants": [[1860, "check-sparse-tensor-invariants"]], "torch.sort": [[1857, "torch-sort"]], "torch.sym_not": [[1894, "torch-sym-not"]], "torch.sparse.addmm": [[1858, "torch-sparse-addmm"]], "torch.stack": [[1878, "torch-stack"]], "torch.sym_min": [[1893, "torch-sym-min"]], "torch.sparse.mm": [[1862, "torch-sparse-mm"]], "torch.sinh": [[1852, "torch-sinh"]], "torch.sparse.as_sparse_gradcheck": [[1859, "torch-sparse-as-sparse-gradcheck"]], "torch.squeeze": [[1876, "torch-squeeze"]], "torch.sin": [[1850, "torch-sin"]], "torch.swapdims": [[1888, "torch-swapdims"]], "torch.tanh": [[1899, "torch-tanh"]], "torch.stft": [[1881, "torch-stft"]], "torch.slice_scatter": [[1853, "torch-slice-scatter"]], "torch.subtract": [[1883, "torch-subtract"]], "torch.sparse_bsr_tensor": [[1868, "torch-sparse-bsr-tensor"]], "torch.sqrt": [[1874, "torch-sqrt"]], "torch.sparse.sum": [[1866, "torch-sparse-sum"]], "torch.sinc": [[1851, "torch-sinc"]], "torch.softmax": [[1856, "torch-softmax"]], "torch.sparse_compressed_tensor": [[1869, "torch-sparse-compressed-tensor"]], "torch.std": [[1879, "torch-std"]], "torch.sspaddmm": [[1877, "torch-sspaddmm"]], "torch.sym_ite": [[1891, "torch-sym-ite"]], "torch.smm": [[1855, "torch-smm"]], "torch.sparse.log_softmax": [[1861, "torch-sparse-log-softmax"]], "torch.sparse_csr_tensor": [[1872, "torch-sparse-csr-tensor"]], "torch.split": [[1873, "torch-split"]], "torch.take": [[1896, "torch-take"]], "torch.svd": [[1885, "torch-svd"]], "torch.sparse_coo_tensor": [[1870, "torch-sparse-coo-tensor"]], "torch.sym_max": [[1892, "torch-sym-max"]], "torch.sum": [[1884, "torch-sum"]], "torch.t": [[1895, "torch-t"]], "torch.sym_float": [[1889, "torch-sym-float"]], "torch.svd_lowrank": [[1886, "torch-svd-lowrank"]], "torch.sparse_csc_tensor": [[1871, "torch-sparse-csc-tensor"]], "torch.sparse.sampled_addmm": [[1863, "torch-sparse-sampled-addmm"]], "torch.sparse.spdiags": [[1865, "torch-sparse-spdiags"]], "torch.take_along_dim": [[1897, "torch-take-along-dim"]], "torch.sparse.softmax": [[1864, "torch-sparse-softmax"]], "torch.slogdet": [[1854, "torch-slogdet"]], "torch.square": [[1875, "torch-square"]], "torch.sparse_bsc_tensor": [[1867, "torch-sparse-bsc-tensor"]], "torch.tan": [[1898, "torch-tan"]], "torch.sym_int": [[1890, "torch-sym-int"]], "torch.sgn": [[1835, "torch-sgn"]], "torch.ravel": [[1801, "torch-ravel"]], "torch.set_float32_matmul_precision": [[1828, "torch-set-float32-matmul-precision"]], "torch.set_num_interop_threads": [[1830, "torch-set-num-interop-threads"]], "torch.set_printoptions": [[1832, "torch-set-printoptions"]], "torch.repeat_interleave": [[1806, "torch-repeat-interleave"]], "torch.result_type": [[1810, "torch-result-type"]], "torch.set_default_device": [[1824, "torch-set-default-device"]], "torch.sigmoid": [[1836, "torch-sigmoid"]], "torch.signal.windows.general_hamming": [[1844, "torch-signal-windows-general-hamming"]], "torch.range": [[1800, "torch-range"]], "torch.remainder": [[1804, "torch-remainder"]], "torch.scatter": [[1817, "torch-scatter"]], "torch.renorm": [[1805, "torch-renorm"]], "torch.set_warn_always": [[1834, "torch-set-warn-always"]], "torch.reciprocal": [[1803, "torch-reciprocal"]], "torch.rot90": [[1812, "torch-rot90"]], "torch.real": [[1802, "torch-real"]], "torch.signal.windows.nuttall": [[1848, "torch-signal-windows-nuttall"]], "torch.signal.windows.blackman": [[1839, "torch-signal-windows-blackman"]], "torch.signal.windows.hamming": [[1845, "torch-signal-windows-hamming"]], "torch.scatter_add": [[1818, "torch-scatter-add"]], "torch.set_rng_state": [[1833, "torch-set-rng-state"]], "torch.searchsorted": [[1820, "torch-searchsorted"]], "torch.reshape": [[1807, "torch-reshape"]], "torch.scatter_reduce": [[1819, "torch-scatter-reduce"]], "torch.seed": [[1821, "torch-seed"]], "torch.sign": [[1837, "torch-sign"]], "torch.row_stack": [[1814, "torch-row-stack"]], "torch.resolve_conj": [[1808, "torch-resolve-conj"]], "torch.signal.windows.bartlett": [[1838, "torch-signal-windows-bartlett"]], "torch.set_flush_denormal": [[1829, "torch-set-flush-denormal"]], "torch.set_default_tensor_type": [[1826, "torch-set-default-tensor-type"]], "torch.roll": [[1811, "torch-roll"]], "torch.save": [[1816, "torch-save"]], "torch.round": [[1813, "torch-round"]], "torch.rsqrt": [[1815, "torch-rsqrt"]], "torch.set_deterministic_debug_mode": [[1827, "torch-set-deterministic-debug-mode"]], "torch.set_num_threads": [[1831, "torch-set-num-threads"]], "torch.signal.windows.cosine": [[1840, "torch-signal-windows-cosine"]], "torch.set_default_dtype": [[1825, "torch-set-default-dtype"]], "torch.select_scatter": [[1823, "torch-select-scatter"]], "torch.select": [[1822, "torch-select"]], "torch.signal.windows.kaiser": [[1847, "torch-signal-windows-kaiser"]], "torch.signal.windows.general_cosine": [[1843, "torch-signal-windows-general-cosine"]], "torch.signal.windows.gaussian": [[1842, "torch-signal-windows-gaussian"]], "torch.signbit": [[1849, "torch-signbit"]], "torch.signal.windows.exponential": [[1841, "torch-signal-windows-exponential"]], "torch.resolve_neg": [[1809, "torch-resolve-neg"]], "torch.signal.windows.hann": [[1846, "torch-signal-windows-hann"]], "torch.Tensor.acos_": [[90, "torch-tensor-acos"]], "Migrating from functorch to torch.func": [[53, "migrating-from-functorch-to-torch-func"]], "function transforms": [[53, "function-transforms"]], "NN module utilities": [[53, "nn-module-utilities"]], "functorch.make_functional": [[53, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[53, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[53, "functorch-compile"]], "torch.Tensor.absolute": [[87, "torch-tensor-absolute"]], "torch.Tensor.acosh": [[91, "torch-tensor-acosh"]], "torch.Tensor.addcdiv_": [[98, "torch-tensor-addcdiv"]], "torch.Tensor.add_": [[94, "torch-tensor-add"]], "torch.cond": [[68, "torch-cond"], [979, "torch-cond"]], "cond_branch_class_method": [[68, "cond-branch-class-method"], [60, "cond-branch-class-method"], [69, "cond-branch-class-method"]], "cond_branch_nested_function": [[68, "cond-branch-nested-function"], [60, "cond-branch-nested-function"], [69, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[68, "cond-branch-nonlocal-variables"], [60, "cond-branch-nonlocal-variables"], [69, "cond-branch-nonlocal-variables"]], "cond_closed_over_variable": [[68, "cond-closed-over-variable"], [60, "cond-closed-over-variable"], [63, "cond-closed-over-variable"]], "cond_operands": [[68, "cond-operands"], [60, "cond-operands"], [69, "cond-operands"]], "cond_predicate": [[68, "cond-predicate"], [60, "cond-predicate"], [69, "cond-predicate"]], "torch.Tensor.abs": [[85, "torch-tensor-abs"]], "torch.Tensor.abs_": [[86, "torch-tensor-abs"]], "Generator": [[84, "generator"]], "UX Limitations": [[54, "ux-limitations"]], "General limitations": [[54, "general-limitations"]], "torch.autograd APIs": [[54, "torch-autograd-apis"]], "vmap limitations": [[54, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[54, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[54, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[54, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[54, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[54, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[54, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[54, "randomness"]], "torch.escape-hatch": [[71, "torch-escape-hatch"]], "assume_constant_result": [[71, "assume-constant-result"], [60, "assume-constant-result"]], "constrain_as_size_example": [[71, "constrain-as-size-example"], [70, "constrain-as-size-example"], [60, "constrain-as-size-example"]], "constrain_as_value_example": [[71, "constrain-as-value-example"], [70, "constrain-as-value-example"], [60, "constrain-as-value-example"]], "torch.mutation": [[73, "torch-mutation"]], "user_input_mutation": [[73, "user-input-mutation"], [60, "user-input-mutation"]], "FXE0011:no-symbolic-function-for-call-function": [[78, "fxe0011-no-symbolic-function-for-call-function"]], "torch.Tensor.addbmm": [[95, "torch-tensor-addbmm"]], "FXE0013:op-level-debugging": [[80, "fxe0013-op-level-debugging"]], "Patching Batch Norm": [[52, "patching-batch-norm"]], "What\u2019s happening?": [[52, "what-s-happening"]], "How to fix": [[52, "how-to-fix"]], "Option 1: Change the BatchNorm": [[52, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[52, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[52, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[52, "option-4-eval-mode"]], "python.builtin": [[62, "python-builtin"]], "dynamic_shape_round": [[62, "dynamic-shape-round"], [60, "dynamic-shape-round"], [69, "dynamic-shape-round"]], "tensor_setattr": [[62, "tensor-setattr"], [60, "tensor-setattr"]], "type_reflection_method": [[62, "type-reflection-method"], [60, "type-reflection-method"]], "torch.operator": [[74, "torch-operator"]], "torch_sym_min": [[74, "torch-sym-min"], [60, "torch-sym-min"]], "FXE0007:fx-graph-to-onnx": [[75, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[75, "key-representations"]], "Additional Notes:": [[75, "additional-notes"]], "torch.func": [[50, "torch-func"]], "What are composable function transforms?": [[50, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[50, "why-composable-function-transforms"], [55, "why-composable-function-transforms"]], "Read More": [[50, "read-more"], [46, "read-more"], [2026, "read-more"]], "FXE0014:find-opschema-matched-symbolic-function": [[81, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.absolute_": [[88, "torch-tensor-absolute"]], "torch.__future__": [[56, "module-torch.__future__"]], "torch.dynamic-value": [[70, "torch-dynamic-value"]], "torch.Tensor.add": [[93, "torch-tensor-add"]], "ExportDB": [[60, "exportdb"]], "Tags": [[60, null]], "Supported": [[60, "supported"]], "autograd_function": [[60, "autograd-function"]], "class_method": [[60, "class-method"]], "decorator": [[60, "decorator"]], "dictionary": [[60, "dictionary"], [66, "dictionary"]], "dynamic_shape_assert": [[60, "dynamic-shape-assert"], [61, "dynamic-shape-assert"]], "dynamic_shape_constructor": [[60, "dynamic-shape-constructor"], [69, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[60, "dynamic-shape-if-guard"], [69, "dynamic-shape-if-guard"], [65, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[60, "dynamic-shape-map"], [69, "dynamic-shape-map"], [72, "dynamic-shape-map"]], "dynamic_shape_slicing": [[60, "dynamic-shape-slicing"], [69, "dynamic-shape-slicing"]], "dynamic_shape_view": [[60, "dynamic-shape-view"], [69, "dynamic-shape-view"]], "fn_with_kwargs": [[60, "fn-with-kwargs"], [66, "fn-with-kwargs"]], "list_contains": [[60, "list-contains"], [61, "list-contains"], [69, "list-contains"], [66, "list-contains"]], "list_unpack": [[60, "list-unpack"], [66, "list-unpack"], [65, "list-unpack"]], "nested_function": [[60, "nested-function"], [63, "nested-function"]], "null_context_manager": [[60, "null-context-manager"], [64, "null-context-manager"]], "pytree_flatten": [[60, "pytree-flatten"]], "scalar_output": [[60, "scalar-output"], [69, "scalar-output"]], "specialized_attribute": [[60, "specialized-attribute"]], "static_for_loop": [[60, "static-for-loop"], [65, "static-for-loop"]], "static_if": [[60, "static-if"], [65, "static-if"]], "Not Supported Yet": [[60, "not-supported-yet"]], "model_attr_mutation": [[60, "model-attr-mutation"], [67, "model-attr-mutation"]], "optional_input": [[60, "optional-input"], [67, "optional-input"]], "python.assert": [[61, "python-assert"]], "torch.Tensor.addbmm_": [[96, "torch-tensor-addbmm"]], "torch.Tensor.addcmul": [[99, "torch-tensor-addcmul"]], "FXE0015:fx-node-insert-type-promotion": [[82, "fxe0015-fx-node-insert-type-promotion"]], "torch.dynamic-shape": [[69, "torch-dynamic-shape"]], "FXE0008:fx-node-to-onnx": [[76, "fxe0008-fx-node-to-onnx"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[83, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.acosh_": [[92, "torch-tensor-acosh"]], "python.context-manager": [[64, "python-context-manager"]], "torch.map": [[72, "torch-map"]], "torch.Tensor.acos": [[89, "torch-tensor-acos"]], "FXE0012:unsupported-fx-node-analysis": [[79, "fxe0012-unsupported-fx-node-analysis"]], "python.data-structure": [[66, "python-data-structure"]], "python.object-model": [[67, "python-object-model"]], "torch.func API Reference": [[51, "module-torch.func"]], "Function Transforms": [[51, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[51, "utilities-for-working-with-torch-nn-modules"]], "torch.Tensor.addcdiv": [[97, "torch-tensor-addcdiv"]], "torch.futures": [[57, "torch-futures"]], "torch.fx": [[58, "torch-fx"]], "Overview": [[58, "module-torch.fx"], [1998, "overview"], [1997, "overview"], [46, "overview"], [18, "module-torch.cuda._sanitizer"], [2031, "overview"], [2005, "module-torch.profiler"]], "Writing Transformations": [[58, "writing-transformations"]], "A Quick Primer on Graphs": [[58, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[58, "graph-manipulation"]], "Direct Graph Manipulation": [[58, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[58, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[58, "graph-manipulation-examples"]], "Proxy/Retracing": [[58, "proxy-retracing"]], "The Interpreter Pattern": [[58, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[58, "examples-of-the-interpreter-pattern"]], "Debugging": [[58, "debugging"], [1952, "debugging"]], "Introduction": [[58, "introduction"], [1962, "introduction"], [1971, "introduction"]], "Common Pitfalls in Transform Authoring": [[58, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[58, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[58, "debugging-the-generated-code"]], "Use pdb": [[58, "use-pdb"]], "Print the Generated Code": [[58, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[58, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[58, "debugging-the-transformation"]], "Available Debuggers": [[58, "available-debuggers"]], "Limitations of Symbolic Tracing": [[58, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[58, "dynamic-control-flow"]], "Static Control Flow": [[58, "static-control-flow"]], "Non-torch Functions": [[58, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[58, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[58, "leaf-modules"]], "Miscellanea": [[58, "miscellanea"]], "API Reference": [[58, "api-reference"], [1998, "api-reference"], [1966, "module-torch.monitor"], [12, "api-reference"], [46, "module-torch.export"], [18, "api-reference"], [2003, "api-reference"], [2005, "api-reference"]], "FXE0010:fx-pass": [[77, "fxe0010-fx-pass"]], "python.closure": [[63, "python-closure"]], "torch.func Whirlwind Tour": [[55, "torch-func-whirlwind-tour"]], "What is torch.func?": [[55, "what-is-torch-func"]], "What are the transforms?": [[55, "what-are-the-transforms"]], "grad() (gradient computation)": [[55, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[55, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[55, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[55, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[55, "jacrev-jacfwd-and-hessian"]], "python.control-flow": [[65, "python-control-flow"]], "torch.fx.experimental": [[59, "torch-fx-experimental"]], "torch.fx.experimental.symbolic_shapes": [[59, "module-torch.fx.experimental.symbolic_shapes"]], "torch.poisson": [[1777, "torch-poisson"]], "CosineAnnealingLR": [[1758, "cosineannealinglr"]], "StepLR": [[1770, "steplr"]], "torch.promote_types": [[1783, "torch-promote-types"]], "SobolEngine": [[1791, "sobolengine"]], "torch.permute": [[1775, "torch-permute"]], "torch.ormqr": [[1772, "torch-ormqr"]], "torch.quantize_per_tensor": [[1787, "torch-quantize-per-tensor"]], "torch.randn": [[1797, "torch-randn"]], "MultiStepLR": [[1764, "multisteplr"]], "torch.orgqr": [[1771, "torch-orgqr"]], "torch.pca_lowrank": [[1774, "torch-pca-lowrank"]], "torch.pow": [[1781, "torch-pow"]], "torch.quantile": [[1785, "torch-quantile"]], "torch.randint_like": [[1796, "torch-randint-like"]], "torch.randperm": [[1799, "torch-randperm"]], "LinearLR": [[1763, "linearlr"]], "ExponentialLR": [[1761, "exponentiallr"]], "SequentialLR": [[1769, "sequentiallr"]], "Rprop": [[1753, "rprop"]], "CyclicLR": [[1760, "cycliclr"]], "PolynomialLR": [[1767, "polynomiallr"]], "LambdaLR": [[1762, "lambdalr"]], "torch.prod": [[1782, "torch-prod"]], "torch.optim.Optimizer.zero_grad": [[1750, "torch-optim-optimizer-zero-grad"]], "torch.polar": [[1778, "torch-polar"]], "torch.quantized_max_pool2d": [[1790, "torch-quantized-max-pool2d"]], "RMSprop": [[1752, "rmsprop"]], "torch.outer": [[1773, "torch-outer"]], "RAdam": [[1751, "radam"]], "torch.rand": [[1793, "torch-rand"]], "torch.randn_like": [[1798, "torch-randn-like"]], "OneCycleLR": [[1766, "onecyclelr"]], "torch.rand_like": [[1794, "torch-rand-like"]], "ConstantLR": [[1757, "constantlr"]], "SparseAdam": [[1755, "sparseadam"]], "MultiplicativeLR": [[1765, "multiplicativelr"]], "torch.qr": [[1784, "torch-qr"]], "torch.quantize_per_channel": [[1786, "torch-quantize-per-channel"]], "torch.quantized_max_pool1d": [[1789, "torch-quantized-max-pool1d"]], "torch.pinverse": [[1776, "torch-pinverse"]], "torch.positive": [[1780, "torch-positive"]], "SGD": [[1754, "sgd"]], "ChainedScheduler": [[1756, "chainedscheduler"]], "CosineAnnealingWarmRestarts": [[1759, "cosineannealingwarmrestarts"]], "torch.polygamma": [[1779, "torch-polygamma"]], "torch.quantized_batch_norm": [[1788, "torch-quantized-batch-norm"]], "torch.rad2deg": [[1792, "torch-rad2deg"]], "ReduceLROnPlateau": [[1768, "reducelronplateau"]], "torch.randint": [[1795, "torch-randint"]], "torch.nn.functional.normalize": [[1629, "torch-nn-functional-normalize"]], "torch.nn.functional.relu": [[1638, "torch-nn-functional-relu"]], "torch.nn.functional.mse_loss": [[1624, "torch-nn-functional-mse-loss"]], "torch.nn.functional.one_hot": [[1630, "torch-nn-functional-one-hot"]], "torch.nn.functional.max_pool2d": [[1618, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.prelu": [[1637, "torch-nn-functional-prelu"]], "torch.nn.functional.rrelu": [[1641, "torch-nn-functional-rrelu"]], "torch.nn.functional.lp_pool1d": [[1613, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.smooth_l1_loss": [[1647, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.max_pool1d": [[1617, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.scaled_dot_product_attention": [[1643, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.interpolate": [[1603, "torch-nn-functional-interpolate"]], "torch.nn.functional.pixel_unshuffle": [[1635, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.sigmoid": [[1645, "torch-nn-functional-sigmoid"]], "torch.nn.functional.layer_norm": [[1606, "torch-nn-functional-layer-norm"]], "torch.nn.functional.instance_norm": [[1602, "torch-nn-functional-instance-norm"]], "torch.nn.functional.max_unpool3d": [[1622, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.multi_margin_loss": [[1625, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.silu": [[1646, "torch-nn-functional-silu"]], "torch.nn.functional.relu_": [[1640, "torch-nn-functional-relu"]], "torch.nn.functional.pairwise_distance": [[1632, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.max_unpool1d": [[1620, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.lp_pool3d": [[1615, "torch-nn-functional-lp-pool3d"]], "torch.nn.functional.pad": [[1631, "torch-nn-functional-pad"]], "torch.nn.functional.poisson_nll_loss": [[1636, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.pdist": [[1633, "torch-nn-functional-pdist"]], "torch.nn.functional.multilabel_margin_loss": [[1626, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.hinge_embedding_loss": [[1600, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.soft_margin_loss": [[1648, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.linear": [[1609, "torch-nn-functional-linear"]], "torch.nn.functional.max_unpool2d": [[1621, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.softmax": [[1649, "torch-nn-functional-softmax"]], "torch.nn.functional.l1_loss": [[1605, "torch-nn-functional-l1-loss"]], "torch.nn.functional.pixel_shuffle": [[1634, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.logsigmoid": [[1612, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.leaky_relu_": [[1608, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.lp_pool2d": [[1614, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.nll_loss": [[1628, "torch-nn-functional-nll-loss"]], "torch.nn.functional.mish": [[1623, "torch-nn-functional-mish"]], "torch.nn.functional.selu": [[1644, "torch-nn-functional-selu"]], "torch.nn.functional.huber_loss": [[1601, "torch-nn-functional-huber-loss"]], "torch.nn.functional.local_response_norm": [[1610, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.max_pool3d": [[1619, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.leaky_relu": [[1607, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.log_softmax": [[1611, "torch-nn-functional-log-softmax"]], "torch.nn.functional.relu6": [[1639, "torch-nn-functional-relu6"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1627, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.rrelu_": [[1642, "torch-nn-functional-rrelu"]], "torch.nn.functional.margin_ranking_loss": [[1616, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.kl_div": [[1604, "torch-nn-functional-kl-div"]], "BasePruningMethod": [[1696, "basepruningmethod"]], "torch.nn.utils.fuse_linear_bn_weights": [[1686, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1660, "torch-nn-functional-triplet-margin-with-distance-loss"]], "Identity": [[1698, "identity"], [1448, "identity"]], "torch.nn.utils.parametrizations.weight_norm": [[1690, "torch-nn-utils-parametrizations-weight-norm"]], "L1Unstructured": [[1699, "l1unstructured"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1669, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1681, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "torch.nn.utils.parametrize.is_parametrized": [[1693, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.parametrizations.orthogonal": [[1688, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.softplus": [[1651, "torch-nn-functional-softplus"]], "torch.nn.utils.parametrize.register_parametrization": [[1694, "torch-nn-utils-parametrize-register-parametrization"]], "LazyModuleMixin": [[1665, "lazymodulemixin"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1667, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1673, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.functional.softmin": [[1650, "torch-nn-functional-softmin"]], "torch.nn.utils.fuse_conv_bn_eval": [[1683, "torch-nn-utils-fuse-conv-bn-eval"]], "torch.nn.utils.fuse_conv_bn_weights": [[1684, "torch-nn-utils-fuse-conv-bn-weights"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1671, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "DistributedDataParallel": [[1674, "distributeddataparallel"], [1982, "distributeddataparallel"]], "torch.nn.utils.clip_grad_value_": [[1680, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.upsample_nearest": [[1664, "torch-nn-functional-upsample-nearest"]], "torch.nn.utils.clip_grad_norm_": [[1679, "torch-nn-utils-clip-grad-norm"]], "torch.nn.modules.module.register_module_backward_hook": [[1666, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1668, "torch-nn-modules-module-register-module-forward-hook"]], "CustomFromMask": [[1697, "customfrommask"]], "UninitializedParameter": [[1677, "uninitializedparameter"]], "Parameter": [[1675, "parameter"]], "torch.nn.functional.tanhshrink": [[1655, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.softshrink": [[1652, "torch-nn-functional-softshrink"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1672, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1658, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.utils.parameters_to_vector": [[1687, "torch-nn-utils-parameters-to-vector"]], "torch.nn.functional.triplet_margin_loss": [[1659, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.utils.clip_grad_norm": [[1678, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.tanh": [[1654, "torch-nn-functional-tanh"]], "torch.nn.functional.unfold": [[1661, "torch-nn-functional-unfold"]], "torch.nn.utils.convert_conv3d_weight_memory_format": [[1682, "torch-nn-utils-convert-conv3d-weight-memory-format"]], "torch.nn.functional.upsample": [[1662, "torch-nn-functional-upsample"]], "torch.nn.utils.parametrizations.spectral_norm": [[1689, "torch-nn-utils-parametrizations-spectral-norm"]], "UninitializedBuffer": [[1676, "uninitializedbuffer"]], "torch.nn.utils.fuse_linear_bn_eval": [[1685, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1695, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1670, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.threshold": [[1656, "torch-nn-functional-threshold"]], "torch.nn.functional.softsign": [[1653, "torch-nn-functional-softsign"]], "torch.nn.utils.parametrize.cached": [[1692, "torch-nn-utils-parametrize-cached"]], "torch.nn.functional.upsample_bilinear": [[1663, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.threshold_": [[1657, "torch-nn-functional-threshold"]], "ParametrizationList": [[1691, "parametrizationlist"]], "ASGD": [[1738, "asgd"]], "LBFGS": [[1744, "lbfgs"]], "VerificationOptions": [[1737, "verificationoptions"]], "torch.nn.utils.skip_init": [[1722, "torch-nn-utils-skip-init"]], "torch.nn.utils.prune.is_pruned": [[1707, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.rnn.unpad_sequence": [[1721, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.prune.identity": [[1706, "torch-nn-utils-prune-identity"]], "RandomUnstructured": [[1703, "randomunstructured"]], "Adagrad": [[1740, "adagrad"]], "torch.nn.utils.prune.global_unstructured": [[1705, "torch-nn-utils-prune-global-unstructured"]], "torch.numel": [[1732, "torch-numel"]], "PackedSequence": [[1715, "packedsequence"]], "GraphInfo": [[1736, "graphinfo"]], "torch.optim.Optimizer.add_param_group": [[1746, "torch-optim-optimizer-add-param-group"]], "torch.ones_like": [[1734, "torch-ones-like"]], "torch.nn.utils.remove_spectral_norm": [[1713, "torch-nn-utils-remove-spectral-norm"]], "Adam": [[1741, "adam"]], "torch.nn.utils.rnn.pack_sequence": [[1717, "torch-nn-utils-rnn-pack-sequence"]], "torch.optim.Optimizer.load_state_dict": [[1747, "torch-optim-optimizer-load-state-dict"]], "torch.nn.utils.weight_norm": [[1726, "torch-nn-utils-weight-norm"]], "torch.nn.utils.spectral_norm": [[1723, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.prune.custom_from_mask": [[1704, "torch-nn-utils-prune-custom-from-mask"]], "JitScalarType": [[1735, "jitscalartype"]], "torch.optim.Optimizer.step": [[1749, "torch-optim-optimizer-step"]], "torch.nn.utils.stateless.functional_call": [[1724, "torch-nn-utils-stateless-functional-call"]], "NAdam": [[1745, "nadam"]], "torch.nn.utils.prune.remove": [[1712, "torch-nn-utils-prune-remove"]], "torch.nn.utils.rnn.pad_sequence": [[1719, "torch-nn-utils-rnn-pad-sequence"]], "Adadelta": [[1739, "adadelta"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1718, "torch-nn-utils-rnn-pad-packed-sequence"]], "Adamax": [[1743, "adamax"]], "torch.nn.utils.prune.random_structured": [[1710, "torch-nn-utils-prune-random-structured"]], "torch.optim.Optimizer.state_dict": [[1748, "torch-optim-optimizer-state-dict"]], "torch.norm": [[1729, "torch-norm"]], "PruningContainer": [[1701, "pruningcontainer"]], "torch.nonzero": [[1728, "torch-nonzero"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1716, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.ones": [[1733, "torch-ones"]], "torch.nn.utils.remove_weight_norm": [[1714, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.prune.random_unstructured": [[1711, "torch-nn-utils-prune-random-unstructured"]], "AdamW": [[1742, "adamw"]], "torch.nn.utils.prune.ln_structured": [[1709, "torch-nn-utils-prune-ln-structured"]], "torch.not_equal": [[1731, "torch-not-equal"]], "torch.nn.utils.prune.l1_unstructured": [[1708, "torch-nn-utils-prune-l1-unstructured"]], "LnStructured": [[1700, "lnstructured"]], "torch.nn.utils.rnn.unpack_sequence": [[1720, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.vector_to_parameters": [[1725, "torch-nn-utils-vector-to-parameters"]], "torch.normal": [[1730, "torch-normal"]], "RandomStructured": [[1702, "randomstructured"]], "no_grad": [[1727, "no-grad"]], "torch.nn.functional.conv3d": [[1569, "torch-nn-functional-conv3d"]], "torch.nn.functional.embedding": [[1583, "torch-nn-functional-embedding"]], "torch.nn.functional.conv1d": [[1567, "torch-nn-functional-conv1d"]], "torch.nn.functional.cosine_similarity": [[1574, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.conv_transpose3d": [[1572, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1553, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.attention.sdpa_kernel": [[1550, "torch-nn-attention-sdpa-kernel"]], "torch.nn.functional.cross_entropy": [[1575, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.hardsigmoid": [[1596, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.avg_pool1d": [[1559, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.conv_transpose1d": [[1570, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.affine_grid": [[1557, "torch-nn-functional-affine-grid"]], "torch.nn.functional.group_norm": [[1593, "torch-nn-functional-group-norm"]], "torch.nn.functional.celu": [[1566, "torch-nn-functional-celu"]], "torch.nn.functional.hardshrink": [[1595, "torch-nn-functional-hardshrink"]], "torch.nn.functional.embedding_bag": [[1584, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.conv_transpose2d": [[1571, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.hardswish": [[1597, "torch-nn-functional-hardswish"]], "torch.nn.functional.elu": [[1581, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool2d": [[1555, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.batch_norm": [[1562, "torch-nn-functional-batch-norm"]], "torch.nn.functional.fold": [[1586, "torch-nn-functional-fold"]], "torch.nn.functional.fractional_max_pool2d": [[1587, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.gelu": [[1590, "torch-nn-functional-gelu"]], "torch.nn.functional.dropout2d": [[1579, "torch-nn-functional-dropout2d"]], "torch.nn.functional.dropout3d": [[1580, "torch-nn-functional-dropout3d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1565, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.hardtanh_": [[1599, "torch-nn-functional-hardtanh"]], "torch.nn.functional.feature_alpha_dropout": [[1585, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.dropout1d": [[1578, "torch-nn-functional-dropout1d"]], "torch.nn.functional.conv2d": [[1568, "torch-nn-functional-conv2d"]], "torch.nn.functional.ctc_loss": [[1576, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.dropout": [[1577, "torch-nn-functional-dropout"]], "torch.nn.functional.glu": [[1591, "torch-nn-functional-glu"]], "torch.nn.functional.adaptive_max_pool1d": [[1554, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.fractional_max_pool3d": [[1588, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.adaptive_max_pool3d": [[1556, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1552, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.avg_pool3d": [[1561, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.avg_pool2d": [[1560, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.elu_": [[1582, "torch-nn-functional-elu"]], "torch.nn.functional.cosine_embedding_loss": [[1573, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.grid_sample": [[1592, "torch-nn-functional-grid-sample"]], "torch.nn.functional.hardtanh": [[1598, "torch-nn-functional-hardtanh"]], "torch.nn.functional.adaptive_avg_pool1d": [[1551, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.bilinear": [[1563, "torch-nn-functional-bilinear"]], "torch.nn.functional.gaussian_nll_loss": [[1589, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.alpha_dropout": [[1558, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.binary_cross_entropy": [[1564, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.gumbel_softmax": [[1594, "torch-nn-functional-gumbel-softmax"]], "ReflectionPad2d": [[1509, "reflectionpad2d"]], "ReflectionPad3d": [[1510, "reflectionpad3d"]], "Softshrink": [[1524, "softshrink"]], "ReLU": [[1506, "relu"]], "Softmin": [[1522, "softmin"]], "ZeroPad3d": [[1544, "zeropad3d"]], "ZeroPad2d": [[1543, "zeropad2d"]], "Unfold": [[1538, "unfold"]], "Softsign": [[1525, "softsign"]], "UpsamplingNearest2d": [[1541, "upsamplingnearest2d"]], "SyncBatchNorm": [[1526, "syncbatchnorm"]], "RNN": [[1502, "rnn"]], "SELU": [[1514, "selu"]], "Tanhshrink": [[1528, "tanhshrink"]], "ZeroPad1d": [[1542, "zeropad1d"]], "Sequential": [[1515, "sequential"]], "RReLU": [[1505, "rrelu"]], "SmoothL1Loss": [[1518, "smoothl1loss"]], "PoissonNLLLoss": [[1501, "poissonnllloss"]], "Softmax": [[1520, "softmax"]], "Threshold": [[1529, "threshold"]], "Transformer": [[1530, "transformer"], [2044, "transformer"]], "SoftMarginLoss": [[1519, "softmarginloss"]], "SDPBackend": [[1545, "sdpbackend"]], "RNNCell": [[1504, "rnncell"], [760, "rnncell"]], "Sigmoid": [[1517, "sigmoid"], [754, "sigmoid"]], "TransformerDecoderLayer": [[1532, "transformerdecoderlayer"]], "TransformerDecoder": [[1531, "transformerdecoder"]], "Softmax2d": [[1521, "softmax2d"]], "Unflatten": [[1537, "unflatten"]], "UpsamplingBilinear2d": [[1540, "upsamplingbilinear2d"]], "ReflectionPad1d": [[1508, "reflectionpad1d"]], "ReplicationPad2d": [[1512, "replicationpad2d"]], "RNNBase": [[1503, "rnnbase"]], "torch.nn.attention.bias.CausalBias": [[1546, "torch-nn-attention-bias-causalbias"]], "ReplicationPad1d": [[1511, "replicationpad1d"]], "torch.nn.attention.bias.causal_upper_left": [[1549, "torch-nn-attention-bias-causal-upper-left"]], "Tanh": [[1527, "tanh"]], "TransformerEncoderLayer": [[1534, "transformerencoderlayer"]], "TransformerEncoder": [[1533, "transformerencoder"]], "TripletMarginLoss": [[1535, "tripletmarginloss"]], "PixelUnshuffle": [[1500, "pixelunshuffle"]], "Softplus": [[1523, "softplus"]], "TripletMarginWithDistanceLoss": [[1536, "tripletmarginwithdistanceloss"]], "Upsample": [[1539, "upsample"]], "ReplicationPad3d": [[1513, "replicationpad3d"]], "CausalVariant": [[1547, "causalvariant"]], "SiLU": [[1516, "silu"]], "torch.nn.attention.bias.causal_lower_right": [[1548, "torch-nn-attention-bias-causal-lower-right"]], "ReLU6": [[1507, "relu6"], [753, "relu6"]], "Event": [[1361, "event"], [1000, "event"]], "torch.mps.synchronize": [[1370, "torch-mps-synchronize"]], "torch.mm": [[1354, "torch-mm"]], "torch.mps.set_per_process_memory_fraction": [[1368, "torch-mps-set-per-process-memory-fraction"]], "BCELoss": [[1399, "bceloss"]], "AvgPool2d": [[1397, "avgpool2d"]], "torch.nextafter": [[1387, "torch-nextafter"]], "torch.mps.manual_seed": [[1363, "torch-mps-manual-seed"]], "torch.mps.get_rng_state": [[1362, "torch-mps-get-rng-state"]], "torch.median": [[1350, "torch-median"]], "torch.mps.profiler.profile": [[1364, "torch-mps-profiler-profile"]], "torch.mv": [[1375, "torch-mv"]], "AvgPool3d": [[1398, "avgpool3d"]], "torch.narrow_copy": [[1383, "torch-narrow-copy"]], "torch.narrow": [[1382, "torch-narrow"]], "AdaptiveAvgPool3d": [[1390, "adaptiveavgpool3d"]], "torch.nan_to_num": [[1377, "torch-nan-to-num"]], "torch.meshgrid": [[1351, "torch-meshgrid"]], "AdaptiveLogSoftmaxWithLoss": [[1391, "adaptivelogsoftmaxwithloss"]], "torch.msort": [[1371, "torch-msort"]], "torch.nanmean": [[1378, "torch-nanmean"]], "torch.mvlgamma": [[1376, "torch-mvlgamma"]], "torch.nanmedian": [[1379, "torch-nanmedian"]], "torch.moveaxis": [[1356, "torch-moveaxis"]], "torch.minimum": [[1353, "torch-minimum"]], "torch.mps.profiler.stop": [[1366, "torch-mps-profiler-stop"]], "torch.mps.driver_allocated_memory": [[1359, "torch-mps-driver-allocated-memory"]], "torch.mps.empty_cache": [[1360, "torch-mps-empty-cache"]], "torch.nanquantile": [[1380, "torch-nanquantile"]], "AlphaDropout": [[1395, "alphadropout"]], "AdaptiveMaxPool1d": [[1392, "adaptivemaxpool1d"]], "torch.mul": [[1372, "torch-mul"]], "torch.movedim": [[1357, "torch-movedim"]], "torch.ne": [[1384, "torch-ne"]], "AdaptiveMaxPool2d": [[1393, "adaptivemaxpool2d"]], "torch.nansum": [[1381, "torch-nansum"]], "AdaptiveAvgPool1d": [[1388, "adaptiveavgpool1d"]], "torch.multinomial": [[1373, "torch-multinomial"]], "torch.mode": [[1355, "torch-mode"]], "torch.mps.seed": [[1367, "torch-mps-seed"]], "torch.neg": [[1385, "torch-neg"]], "torch.mps.profiler.start": [[1365, "torch-mps-profiler-start"]], "torch.negative": [[1386, "torch-negative"]], "AdaptiveMaxPool3d": [[1394, "adaptivemaxpool3d"]], "AvgPool1d": [[1396, "avgpool1d"]], "torch.min": [[1352, "torch-min"]], "torch.mps.current_allocated_memory": [[1358, "torch-mps-current-allocated-memory"]], "torch.mps.set_rng_state": [[1369, "torch-mps-set-rng-state"]], "AdaptiveAvgPool2d": [[1389, "adaptiveavgpool2d"]], "torch.multiply": [[1374, "torch-multiply"]], "PairwiseDistance": [[1496, "pairwisedistance"]], "MultiMarginLoss": [[1492, "multimarginloss"]], "PixelShuffle": [[1499, "pixelshuffle"]], "LazyBatchNorm2d": [[1461, "lazybatchnorm2d"]], "LazyBatchNorm1d": [[1460, "lazybatchnorm1d"]], "MarginRankingLoss": [[1479, "marginrankingloss"]], "InstanceNorm3d": [[1451, "instancenorm3d"], [748, "instancenorm3d"]], "LogSoftmax": [[1477, "logsoftmax"]], "L1Loss": [[1453, "l1loss"]], "LazyLinear": [[1472, "lazylinear"]], "LogSigmoid": [[1476, "logsigmoid"]], "LazyInstanceNorm2d": [[1470, "lazyinstancenorm2d"]], "LazyBatchNorm3d": [[1462, "lazybatchnorm3d"]], "MaxUnpool3d": [[1485, "maxunpool3d"]], "MaxPool2d": [[1481, "maxpool2d"]], "MaxUnpool1d": [[1483, "maxunpool1d"]], "LeakyReLU": [[1473, "leakyrelu"], [750, "leakyrelu"]], "LazyConvTranspose1d": [[1466, "lazyconvtranspose1d"]], "LSTMCell": [[1458, "lstmcell"], [758, "lstmcell"]], "LPPool1d": [[1454, "lppool1d"]], "Mish": [[1486, "mish"]], "NLLLoss": [[1494, "nllloss"]], "LazyConv1d": [[1463, "lazyconv1d"]], "ParameterList": [[1498, "parameterlist"]], "LazyConvTranspose2d": [[1467, "lazyconvtranspose2d"]], "LPPool2d": [[1455, "lppool2d"]], "MultiLabelMarginLoss": [[1490, "multilabelmarginloss"]], "LazyConv2d": [[1464, "lazyconv2d"]], "PReLU": [[1495, "prelu"]], "LocalResponseNorm": [[1475, "localresponsenorm"]], "ModuleList": [[1489, "modulelist"]], "MSELoss": [[1478, "mseloss"]], "KLDivLoss": [[1452, "kldivloss"]], "LazyInstanceNorm1d": [[1469, "lazyinstancenorm1d"]], "ParameterDict": [[1497, "parameterdict"]], "MaxPool1d": [[1480, "maxpool1d"]], "LazyConvTranspose3d": [[1468, "lazyconvtranspose3d"]], "LazyInstanceNorm3d": [[1471, "lazyinstancenorm3d"]], "MaxPool3d": [[1482, "maxpool3d"]], "InstanceNorm2d": [[1450, "instancenorm2d"], [747, "instancenorm2d"]], "LayerNorm": [[1459, "layernorm"], [749, "layernorm"]], "ModuleDict": [[1488, "moduledict"]], "LSTM": [[1457, "lstm"], [757, "lstm"], [729, "lstm"]], "MaxUnpool2d": [[1484, "maxunpool2d"]], "LazyConv3d": [[1465, "lazyconv3d"]], "Module": [[1487, "module"]], "Linear": [[1474, "linear"], [759, "linear"], [751, "linear"], [727, "linear"], [728, "linear"]], "MultiLabelSoftMarginLoss": [[1491, "multilabelsoftmarginloss"]], "MultiheadAttention": [[1493, "multiheadattention"], [730, "multiheadattention"]], "LPPool3d": [[1456, "lppool3d"]], "BatchNorm1d": [[1401, "batchnorm1d"]], "CTCLoss": [[1406, "ctcloss"]], "ChannelShuffle": [[1407, "channelshuffle"]], "FractionalMaxPool2d": [[1434, "fractionalmaxpool2d"]], "Hardtanh": [[1445, "hardtanh"]], "HingeEmbeddingLoss": [[1446, "hingeembeddingloss"]], "Flatten": [[1432, "flatten"]], "Dropout1d": [[1425, "dropout1d"]], "ConvTranspose1d": [[1417, "convtranspose1d"], [736, "convtranspose1d"]], "GaussianNLLLoss": [[1440, "gaussiannllloss"]], "EmbeddingBag": [[1430, "embeddingbag"], [741, "embeddingbag"]], "InstanceNorm1d": [[1449, "instancenorm1d"], [746, "instancenorm1d"]], "GLU": [[1437, "glu"]], "ConvTranspose2d": [[1418, "convtranspose2d"], [737, "convtranspose2d"]], "Hardshrink": [[1442, "hardshrink"]], "Fold": [[1433, "fold"]], "CircularPad2d": [[1409, "circularpad2d"]], "Hardsigmoid": [[1443, "hardsigmoid"]], "CrossEntropyLoss": [[1422, "crossentropyloss"]], "CosineSimilarity": [[1421, "cosinesimilarity"]], "CELU": [[1405, "celu"]], "DataParallel": [[1423, "dataparallel"]], "Hardswish": [[1444, "hardswish"], [745, "hardswish"]], "CircularPad3d": [[1410, "circularpad3d"]], "FractionalMaxPool3d": [[1435, "fractionalmaxpool3d"]], "Dropout2d": [[1426, "dropout2d"]], "FeatureAlphaDropout": [[1431, "featurealphadropout"]], "GELU": [[1436, "gelu"]], "Bilinear": [[1404, "bilinear"]], "ConstantPad2d": [[1412, "constantpad2d"]], "HuberLoss": [[1447, "huberloss"]], "ConstantPad1d": [[1411, "constantpad1d"]], "GRUCell": [[1439, "grucell"], [756, "grucell"]], "BatchNorm2d": [[1402, "batchnorm2d"], [731, "batchnorm2d"]], "CircularPad1d": [[1408, "circularpad1d"]], "Conv1d": [[1414, "conv1d"], [733, "conv1d"]], "Dropout3d": [[1427, "dropout3d"]], "Conv2d": [[1415, "conv2d"], [725, "conv2d"], [734, "conv2d"]], "Embedding": [[1429, "embedding"], [740, "embedding"]], "GroupNorm": [[1441, "groupnorm"], [744, "groupnorm"]], "BCEWithLogitsLoss": [[1400, "bcewithlogitsloss"]], "Conv3d": [[1416, "conv3d"], [735, "conv3d"], [726, "conv3d"]], "ELU": [[1428, "elu"], [739, "elu"]], "CosineEmbeddingLoss": [[1420, "cosineembeddingloss"]], "BatchNorm3d": [[1403, "batchnorm3d"], [732, "batchnorm3d"]], "ConvTranspose3d": [[1419, "convtranspose3d"], [738, "convtranspose3d"]], "ConstantPad3d": [[1413, "constantpad3d"]], "Dropout": [[1424, "dropout"]], "GRU": [[1438, "gru"], [755, "gru"]], "torch.linalg.vecdot": [[1318, "torch-linalg-vecdot"]], "torch.linalg.norm": [[1306, "torch-linalg-norm"]], "torch.linalg.matrix_rank": [[1304, "torch-linalg-matrix-rank"]], "torch.linalg.vector_norm": [[1319, "torch-linalg-vector-norm"]], "torch.log1p": [[1325, "torch-log1p"]], "torch.logdet": [[1330, "torch-logdet"]], "torch.lu_solve": [[1340, "torch-lu-solve"]], "torch.linalg.matmul": [[1300, "torch-linalg-matmul"]], "torch.logspace": [[1336, "torch-logspace"]], "torch.linalg.vander": [[1317, "torch-linalg-vander"]], "torch.maximum": [[1348, "torch-maximum"]], "torch.logical_xor": [[1334, "torch-logical-xor"]], "torch.logcumsumexp": [[1329, "torch-logcumsumexp"]], "torch.mean": [[1349, "torch-mean"]], "torch.linalg.qr": [[1308, "torch-linalg-qr"]], "torch.linalg.slogdet": [[1309, "torch-linalg-slogdet"]], "torch.linalg.svd": [[1313, "torch-linalg-svd"]], "torch.logical_and": [[1331, "torch-logical-and"]], "torch.lu_unpack": [[1341, "torch-lu-unpack"]], "torch.linalg.matrix_norm": [[1302, "torch-linalg-matrix-norm"]], "torch.lobpcg": [[1322, "torch-lobpcg"]], "torch.lt": [[1338, "torch-lt"]], "torch.max": [[1347, "torch-max"]], "torch.matmul": [[1344, "torch-matmul"]], "torch.linalg.tensorsolve": [[1316, "torch-linalg-tensorsolve"]], "torch.logaddexp": [[1327, "torch-logaddexp"]], "torch.linalg.matrix_exp": [[1301, "torch-linalg-matrix-exp"]], "torch.matrix_power": [[1346, "torch-matrix-power"]], "torch.linalg.solve": [[1310, "torch-linalg-solve"]], "torch.log10": [[1324, "torch-log10"]], "torch.linalg.multi_dot": [[1305, "torch-linalg-multi-dot"]], "torch.linspace": [[1320, "torch-linspace"]], "torch.linalg.pinv": [[1307, "torch-linalg-pinv"]], "torch.linalg.solve_triangular": [[1312, "torch-linalg-solve-triangular"]], "torch.linalg.svdvals": [[1314, "torch-linalg-svdvals"]], "torch.linalg.solve_ex": [[1311, "torch-linalg-solve-ex"]], "torch.linalg.tensorinv": [[1315, "torch-linalg-tensorinv"]], "torch.load": [[1321, "torch-load"]], "torch.log2": [[1326, "torch-log2"]], "torch.logsumexp": [[1337, "torch-logsumexp"]], "torch.logical_or": [[1333, "torch-logical-or"]], "torch.logaddexp2": [[1328, "torch-logaddexp2"]], "torch.manual_seed": [[1342, "torch-manual-seed"]], "torch.masked_select": [[1343, "torch-masked-select"]], "torch.logit": [[1335, "torch-logit"]], "torch.matrix_exp": [[1345, "torch-matrix-exp"]], "torch.logical_not": [[1332, "torch-logical-not"]], "torch.lu": [[1339, "torch-lu"]], "torch.linalg.matrix_power": [[1303, "torch-linalg-matrix-power"]], "torch.log": [[1323, "torch-log"]], "torch.linalg.lu_factor_ex": [[1298, "torch-linalg-lu-factor-ex"]], "torch.jit.ignore": [[1254, "torch-jit-ignore"]], "torch.le": [[1274, "torch-le"]], "torch.linalg.cholesky": [[1279, "torch-linalg-cholesky"]], "torch.linalg.eigh": [[1286, "torch-linalg-eigh"]], "torch.linalg.cholesky_ex": [[1280, "torch-linalg-cholesky-ex"]], "torch.kron": [[1270, "torch-kron"]], "torch.linalg.det": [[1283, "torch-linalg-det"]], "torch.jit.set_fusion_strategy": [[1263, "torch-jit-set-fusion-strategy"]], "torch.linalg.inv_ex": [[1291, "torch-linalg-inv-ex"]], "torch.less": [[1276, "torch-less"]], "torch.linalg.ldl_solve": [[1294, "torch-linalg-ldl-solve"]], "torch.jit.wait": [[1268, "torch-jit-wait"]], "torch.linalg.inv": [[1290, "torch-linalg-inv"]], "torch.lcm": [[1272, "torch-lcm"]], "torch.linalg.eigvals": [[1287, "torch-linalg-eigvals"]], "torch.jit.script": [[1261, "torch-jit-script"]], "torch.less_equal": [[1277, "torch-less-equal"]], "torch.jit.unused": [[1267, "torch-jit-unused"]], "torch.kaiser_window": [[1269, "torch-kaiser-window"]], "torch.lgamma": [[1278, "torch-lgamma"]], "torch.linalg.lstsq": [[1295, "torch-linalg-lstsq"]], "torch.jit.script_if_tracing": [[1262, "torch-jit-script-if-tracing"]], "torch.linalg.ldl_factor": [[1292, "torch-linalg-ldl-factor"]], "torch.kthvalue": [[1271, "torch-kthvalue"]], "torch.jit.freeze": [[1253, "torch-jit-freeze"]], "torch.jit.annotate": [[1250, "torch-jit-annotate"]], "torch.linalg.lu_solve": [[1299, "torch-linalg-lu-solve"]], "torch.jit.optimize_for_inference": [[1259, "torch-jit-optimize-for-inference"]], "torch.jit.load": [[1257, "torch-jit-load"]], "torch.jit.enable_onednn_fusion": [[1251, "torch-jit-enable-onednn-fusion"]], "torch.linalg.eig": [[1285, "torch-linalg-eig"]], "torch.linalg.lu": [[1296, "torch-linalg-lu"]], "strict_fusion": [[1264, "strict-fusion"]], "torch.linalg.ldl_factor_ex": [[1293, "torch-linalg-ldl-factor-ex"]], "torch.ldexp": [[1273, "torch-ldexp"]], "torch.linalg.cross": [[1282, "torch-linalg-cross"]], "torch.jit.isinstance": [[1256, "torch-jit-isinstance"]], "torch.linalg.diagonal": [[1284, "torch-linalg-diagonal"]], "torch.jit.interface": [[1255, "torch-jit-interface"]], "torch.lerp": [[1275, "torch-lerp"]], "torch.jit.trace_module": [[1266, "torch-jit-trace-module"]], "torch.linalg.householder_product": [[1289, "torch-linalg-householder-product"]], "torch.linalg.lu_factor": [[1297, "torch-linalg-lu-factor"]], "torch.jit.onednn_fusion_enabled": [[1258, "torch-jit-onednn-fusion-enabled"]], "torch.linalg.cond": [[1281, "torch-linalg-cond"]], "torch.jit.save": [[1260, "torch-jit-save"]], "torch.jit.trace": [[1265, "torch-jit-trace"]], "torch.linalg.eigvalsh": [[1288, "torch-linalg-eigvalsh"]], "torch.jit.fork": [[1252, "torch-jit-fork"]], "ScriptFunction": [[1248, "scriptfunction"]], "torch.hypot": [[1216, "torch-hypot"]], "torch.index_reduce": [[1223, "torch-index-reduce"]], "torch.is_grad_enabled": [[1232, "torch-is-grad-enabled"]], "torch.igamma": [[1218, "torch-igamma"]], "torch.isreal": [[1245, "torch-isreal"]], "torch.isclose": [[1238, "torch-isclose"]], "torch.is_warn_always_enabled": [[1237, "torch-is-warn-always-enabled"]], "torch.greater_equal": [[1205, "torch-greater-equal"]], "torch.hamming_window": [[1207, "torch-hamming-window"]], "torch.histogram": [[1211, "torch-histogram"]], "torch.initial_seed": [[1225, "torch-initial-seed"]], "torch.heaviside": [[1209, "torch-heaviside"]], "torch.hspmm": [[1214, "torch-hspmm"]], "torch.index_select": [[1224, "torch-index-select"]], "torch.is_floating_point": [[1231, "torch-is-floating-point"]], "torch.gradient": [[1203, "torch-gradient"]], "torch.is_complex": [[1228, "torch-is-complex"]], "torch.get_rng_state": [[1202, "torch-get-rng-state"]], "torch.imag": [[1220, "torch-imag"]], "torch.histogramdd": [[1212, "torch-histogramdd"]], "torch.index_add": [[1221, "torch-index-add"]], "torch.inner": [[1226, "torch-inner"]], "torch.hstack": [[1215, "torch-hstack"]], "torch.isneginf": [[1243, "torch-isneginf"]], "torch.isinf": [[1241, "torch-isinf"]], "torch.isposinf": [[1244, "torch-isposinf"]], "torch.is_tensor": [[1236, "torch-is-tensor"]], "torch.is_nonzero": [[1234, "torch-is-nonzero"]], "torch.is_inference_mode_enabled": [[1233, "torch-is-inference-mode-enabled"]], "torch.inverse": [[1227, "torch-inverse"]], "torch.isfinite": [[1239, "torch-isfinite"]], "torch.isnan": [[1242, "torch-isnan"]], "torch.histc": [[1210, "torch-histc"]], "torch.is_conj": [[1229, "torch-is-conj"]], "torch.istft": [[1246, "torch-istft"]], "torch.is_storage": [[1235, "torch-is-storage"]], "torch.i0": [[1217, "torch-i0"]], "torch.igammac": [[1219, "torch-igammac"]], "Attribute": [[1247, "attribute"]], "torch.get_num_threads": [[1201, "torch-get-num-threads"]], "torch.hann_window": [[1208, "torch-hann-window"]], "ScriptModule": [[1249, "scriptmodule"]], "torch.hsplit": [[1213, "torch-hsplit"]], "torch.get_num_interop_threads": [[1200, "torch-get-num-interop-threads"]], "torch.gt": [[1206, "torch-gt"]], "torch.index_copy": [[1222, "torch-index-copy"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1230, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.isin": [[1240, "torch-isin"]], "torch.greater": [[1204, "torch-greater"]], "ShapeEnv": [[1171, "shapeenv"]], "SubclassSymbolicContext": [[1175, "subclasssymboliccontext"]], "torch.fx.experimental.symbolic_shapes.has_free_symbols": [[1183, "torch-fx-experimental-symbolic-shapes-has-free-symbols"]], "torch.fx.experimental.symbolic_shapes.hint_int": [[1184, "torch-fx-experimental-symbolic-shapes-hint-int"]], "torch.get_default_device": [[1196, "torch-get-default-device"]], "torch.from_numpy": [[1150, "torch-from-numpy"]], "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr": [[1177, "torch-fx-experimental-symbolic-shapes-canonicalize-bool-expr"]], "torch.fx.experimental.symbolic_shapes.constrain_range": [[1178, "torch-fx-experimental-symbolic-shapes-constrain-range"]], "torch.func.linearize": [[1162, "torch-func-linearize"]], "torch.full": [[1152, "torch-full"]], "DimDynamic": [[1168, "dimdynamic"]], "torch.fx.experimental.symbolic_shapes.is_concrete_bool": [[1185, "torch-fx-experimental-symbolic-shapes-is-concrete-bool"]], "torch.fx.experimental.symbolic_shapes.parallel_or": [[1188, "torch-fx-experimental-symbolic-shapes-parallel-or"]], "RelaxedUnspecConstraint": [[1170, "relaxedunspecconstraint"]], "torch.fx.experimental.symbolic_shapes.definitely_true": [[1181, "torch-fx-experimental-symbolic-shapes-definitely-true"]], "torch.func.grad_and_value": [[1157, "torch-func-grad-and-value"]], "torch.frombuffer": [[1151, "torch-frombuffer"]], "torch.gather": [[1191, "torch-gather"]], "StrictMinMaxConstraint": [[1174, "strictminmaxconstraint"]], "torch.get_deterministic_debug_mode": [[1198, "torch-get-deterministic-debug-mode"]], "StatefulSymbolicContext": [[1172, "statefulsymboliccontext"]], "torch.func.vmap": [[1166, "torch-func-vmap"]], "torch.get_default_dtype": [[1197, "torch-get-default-dtype"]], "torch.get_float32_matmul_precision": [[1199, "torch-get-float32-matmul-precision"]], "torch.func.jacrev": [[1160, "torch-func-jacrev"]], "torch.func.jacfwd": [[1159, "torch-func-jacfwd"]], "torch.func.stack_module_state": [[1164, "torch-func-stack-module-state"]], "torch.fx.experimental.symbolic_shapes.statically_known_true": [[1189, "torch-fx-experimental-symbolic-shapes-statically-known-true"]], "torch.fx.experimental.symbolic_shapes.sym_eq": [[1190, "torch-fx-experimental-symbolic-shapes-sym-eq"]], "DimConstraints": [[1167, "dimconstraints"]], "torch.fx.experimental.symbolic_shapes.constrain_unify": [[1179, "torch-fx-experimental-symbolic-shapes-constrain-unify"]], "torch.fx.experimental.symbolic_shapes.definitely_false": [[1180, "torch-fx-experimental-symbolic-shapes-definitely-false"]], "torch.gcd": [[1192, "torch-gcd"]], "EqualityConstraint": [[1169, "equalityconstraint"]], "StatelessSymbolicContext": [[1173, "statelesssymboliccontext"]], "torch.ger": [[1195, "torch-ger"]], "torch.func.functional_call": [[1154, "torch-func-functional-call"]], "torch.func.grad": [[1156, "torch-func-grad"]], "SymbolicContext": [[1176, "symboliccontext"]], "torch.fx.experimental.symbolic_shapes.guard_size_oblivious": [[1182, "torch-fx-experimental-symbolic-shapes-guard-size-oblivious"]], "torch.func.vjp": [[1165, "torch-func-vjp"]], "torch.func.jvp": [[1161, "torch-func-jvp"]], "torch.ge": [[1193, "torch-ge"]], "torch.func.replace_all_batch_norm_modules_": [[1163, "torch-func-replace-all-batch-norm-modules"]], "torch.fx.experimental.symbolic_shapes.is_concrete_int": [[1186, "torch-fx-experimental-symbolic-shapes-is-concrete-int"]], "torch.fx.experimental.symbolic_shapes.parallel_and": [[1187, "torch-fx-experimental-symbolic-shapes-parallel-and"]], "torch.func.functionalize": [[1155, "torch-func-functionalize"]], "torch.geqrf": [[1194, "torch-geqrf"]], "torch.func.hessian": [[1158, "torch-func-hessian"]], "torch.full_like": [[1153, "torch-full-like"]], "torch.fft.ihfft2": [[1126, "torch-fft-ihfft2"]], "torch.eye": [[1110, "torch-eye"]], "torch.fft.ihfft": [[1125, "torch-fft-ihfft"]], "torch.fliplr": [[1138, "torch-fliplr"]], "torch.flatten": [[1136, "torch-flatten"]], "torch.fft.rfftfreq": [[1133, "torch-fft-rfftfreq"]], "torch.fft.ihfftn": [[1127, "torch-fft-ihfftn"]], "torch.exp": [[1107, "torch-exp"]], "torch.fft.fftshift": [[1117, "torch-fft-fftshift"]], "torch.fmod": [[1145, "torch-fmod"]], "torch.erf": [[1104, "torch-erf"]], "torch.fft.hfft": [[1118, "torch-fft-hfft"]], "torch.frexp": [[1147, "torch-frexp"]], "torch.eq": [[1102, "torch-eq"]], "torch.floor_divide": [[1142, "torch-floor-divide"]], "torch.float_power": [[1140, "torch-float-power"]], "torch.expm1": [[1109, "torch-expm1"]], "torch.equal": [[1103, "torch-equal"]], "torch.fmin": [[1144, "torch-fmin"]], "torch.frac": [[1146, "torch-frac"]], "torch.fft.ifftshift": [[1124, "torch-fft-ifftshift"]], "torch.fake_quantize_per_tensor_affine": [[1112, "torch-fake-quantize-per-tensor-affine"]], "enable_grad": [[1101, "enable-grad"]], "torch.fft.irfft": [[1128, "torch-fft-irfft"]], "torch.fmax": [[1143, "torch-fmax"]], "torch.fft.ifftn": [[1123, "torch-fft-ifftn"]], "torch.fft.irfftn": [[1130, "torch-fft-irfftn"]], "torch.fix": [[1135, "torch-fix"]], "torch.flipud": [[1139, "torch-flipud"]], "torch.fft.hfftn": [[1120, "torch-fft-hfftn"]], "torch.fake_quantize_per_channel_affine": [[1111, "torch-fake-quantize-per-channel-affine"]], "torch.fft.rfft": [[1131, "torch-fft-rfft"]], "torch.fft.irfft2": [[1129, "torch-fft-irfft2"]], "torch.erfinv": [[1106, "torch-erfinv"]], "torch.flip": [[1137, "torch-flip"]], "torch.fft.fft": [[1113, "torch-fft-fft"]], "torch.empty_strided": [[1100, "torch-empty-strided"]], "torch.exp2": [[1108, "torch-exp2"]], "torch.from_file": [[1149, "torch-from-file"]], "torch.fft.ifft2": [[1122, "torch-fft-ifft2"]], "torch.fft.fftfreq": [[1115, "torch-fft-fftfreq"]], "torch.erfc": [[1105, "torch-erfc"]], "torch.fft.fft2": [[1114, "torch-fft-fft2"]], "torch.fft.rfft2": [[1132, "torch-fft-rfft2"]], "torch.floor": [[1141, "torch-floor"]], "torch.fft.rfftn": [[1134, "torch-fft-rfftn"]], "torch.fft.hfft2": [[1119, "torch-fft-hfft2"]], "torch.fft.ifft": [[1121, "torch-fft-ifft"]], "torch.fft.fftn": [[1116, "torch-fft-fftn"]], "torch.from_dlpack": [[1148, "torch-from-dlpack"]], "TorchDynamo-based ONNX Exporter": [[1998, "torchdynamo-based-onnx-exporter"], [1997, "torchdynamo-based-onnx-exporter"]], "Dependencies": [[1998, "dependencies"]], "A simple example": [[1998, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[1998, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[1998, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[1998, null]], "PyTorch documentation": [[1951, "pytorch-documentation"]], "Community": [[1951, null]], "Developer Notes": [[1951, null]], "Language Bindings": [[1951, null]], "Python API": [[1951, null], [2000, "module-torch.onnx"]], "Libraries": [[1951, null]], "Indices and tables": [[1951, "indices-and-tables"]], "HIP (ROCm) semantics": [[1988, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1988, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1988, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1988, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1988, "memory-management"], [1981, "memory-management"], [17, "memory-management"]], "hipFFT/rocFFT plan cache": [[1988, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1988, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1988, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1988, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1988, "enabling-kernel-asserts"]], "MPS backend": [[1991, "mps-backend"]], "TorchScript Builtins": [[1953, "torchscript-builtins"]], "Supported Tensor Methods": [[1953, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1953, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1953, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1953, "python-built-in-functions"]], "math Module": [[1953, "math-module"]], "torch.library": [[1959, "module-torch.library"]], "Low-level APIs": [[1959, "low-level-apis"]], "TorchScript Unsupported PyTorch Constructs": [[1957, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1957, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1957, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1957, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1957, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1957, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1957, "pytorch-unsupported-modules-and-classes"]], "Numerical accuracy": [[1993, "numerical-accuracy"]], "Batched computations or slice computations": [[1993, "batched-computations-or-slice-computations"]], "Extremal values": [[1993, "extremal-values"]], "Linear algebra (torch.linalg)": [[1993, "linear-algebra-torch-linalg"]], "Non-finite values": [[1993, "non-finite-values"]], "Extremal values in linalg": [[1993, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[1993, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[1993, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1993, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Frequently Asked Questions": [[1985, "frequently-asked-questions"], [1952, "frequently-asked-questions"], [7, "frequently-asked-questions"], [2000, "frequently-asked-questions"], [2006, "frequently-asked-questions"], [2035, "frequently-asked-questions"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1985, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1985, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1985, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1985, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1985, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Features for large-scale deployments": [[1989, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1989, "fleet-wide-operator-profiling"]], "API usage logging": [[1989, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1989, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1989, "build-environment-considerations"]], "Common extension points": [[1989, "common-extension-points"]], "CUDA semantics": [[1981, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[1981, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1981, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1981, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1981, "asynchronous-execution"]], "CUDA streams": [[1981, "cuda-streams"]], "Stream semantics of backward passes": [[1981, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1981, "bc-note-using-grads-on-the-default-stream"]], "Optimizing memory usage  with PYTORCH_CUDA_ALLOC_CONF": [[1981, "optimizing-memory-usage-with-pytorch-cuda-alloc-conf"]], "Using custom memory allocators for CUDA": [[1981, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1981, "cublas-workspaces"]], "cuFFT plan cache": [[1981, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1981, "just-in-time-compilation"]], "Best practices": [[1981, "best-practices"]], "Device-agnostic code": [[1981, "device-agnostic-code"]], "Use pinned memory buffers": [[1981, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1981, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1981, "cuda-graphs"]], "Why CUDA Graphs?": [[1981, "why-cuda-graphs"]], "PyTorch API": [[1981, "pytorch-api"]], "Constraints": [[1981, "constraints"], [31, "module-torch.distributions.constraints"]], "Non-constraints": [[1981, "non-constraints"]], "Whole-network capture": [[1981, "whole-network-capture"]], "Partial-network capture": [[1981, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1981, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1981, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1981, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1981, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1981, "id5"]], "Graph memory management": [[1981, "graph-memory-management"]], "Sharing memory across captures": [[1981, "sharing-memory-across-captures"]], "ONNX Backend for TorchDynamo": [[1999, "onnx-backend-for-torchdynamo"]], "TorchScript Language Reference": [[1954, "torchscript-language-reference"], [1955, "torchscript-language-reference"]], "Types": [[1954, "supported-type"], [2000, "types"]], "Unsupported Typing Constructs": [[1954, "unsupported-typing-constructs"], [1955, "unsupported-typing-constructs"]], "Default Types": [[1954, "default-types"]], "Optional Type Refinement": [[1954, "optional-type-refinement"]], "TorchScript Classes": [[1954, "id2"], [1952, "torchscript-classes"]], "TorchScript Enums": [[1954, "id4"]], "Named Tuples": [[1954, "named-tuples"]], "Iterables": [[1954, "iterables"]], "Expressions": [[1954, "expressions"], [1955, "expressions"]], "Literals": [[1954, "literals"], [1955, "literals"]], "List Construction": [[1954, "list-construction"]], "Tuple Construction": [[1954, "tuple-construction"]], "Dict Construction": [[1954, "dict-construction"]], "Variables": [[1954, "variables"], [1952, "variables"], [2038, "variables"]], "Arithmetic Operators": [[1954, "arithmetic-operators"]], "Comparison Operators": [[1954, "comparison-operators"]], "Logical Operators": [[1954, "logical-operators"]], "Subscripts and Slicing": [[1954, "subscripts-and-slicing"]], "Function Calls": [[1954, "function-calls"]], "Method Calls": [[1954, "method-calls"]], "Ternary Expressions": [[1954, "ternary-expressions"]], "Casts": [[1954, "casts"]], "Accessing Module Parameters": [[1954, "accessing-module-parameters"]], "Statements": [[1954, "statements"]], "Simple Assignments": [[1954, "simple-assignments"]], "Pattern Matching Assignments": [[1954, "pattern-matching-assignments"]], "Print Statements": [[1954, "print-statements"]], "If Statements": [[1954, "if-statements"]], "While Loops": [[1954, "while-loops"]], "For loops with range": [[1954, "for-loops-with-range"]], "For loops over tuples": [[1954, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1954, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1954, "break-and-continue"]], "Return": [[1954, "return"]], "Variable Resolution": [[1954, "variable-resolution"]], "Use of Python Values": [[1954, "use-of-python-values"]], "Functions": [[1954, "functions"], [1952, "functions"], [2046, "functions"], [2000, "functions"], [2016, "functions"]], "Attribute Lookup On Python Modules": [[1954, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1954, "python-defined-constants"]], "Module Attributes": [[1954, "module-attributes"]], "torch._logging": [[1961, "torch-logging"]], "Extending PyTorch": [[1983, "extending-pytorch"]], "Extending torch.autograd": [[1983, "extending-torch-autograd"]], "When to use": [[1983, "when-to-use"]], "When not to use": [[1983, "when-not-to-use"]], "How to use": [[1983, "how-to-use"]], "Example": [[1983, "example"], [1982, "example"]], "Combined or separate forward() and setup_context()": [[1983, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1983, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1983, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1983, "extending-torch-nn"]], "Adding a Module": [[1983, "adding-a-module"]], "Extending torch Python API": [[1983, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1983, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1983, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1983, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1983, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1983, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1983, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1983, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1983, "writing-custom-c-extensions"]], "TorchScript": [[1952, "torchscript"]], "Creating TorchScript Code": [[1952, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1952, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1952, "torchscript-language"]], "Built-in Functions and Modules": [[1952, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1952, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1952, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1952, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1952, "disable-jit-for-debugging"]], "Inspecting Code": [[1952, "inspecting-code"]], "Interpreting Graphs": [[1952, "interpreting-graphs"]], "Tracer": [[1952, "tracer"]], "Tracing Edge Cases": [[1952, "tracing-edge-cases"]], "Automatic Trace Checking": [[1952, "automatic-trace-checking"]], "Tracer Warnings": [[1952, "tracer-warnings"]], "Known Issues": [[1952, "known-issues"]], "Appendix": [[1952, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1952, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1952, "modules"], [1990, "modules"]], "Attributes": [[1952, "attributes"]], "Constants": [[1952, "constants"]], "Fusion Backends": [[1952, "fusion-backends"]], "References": [[1952, "references"], [47, "references"]], "torch.linalg": [[1960, "torch-linalg"]], "Matrix Properties": [[1960, "matrix-properties"]], "Decompositions": [[1960, "decompositions"]], "Solvers": [[1960, "solvers"]], "Inverses": [[1960, "inverses"]], "Matrix Functions": [[1960, "matrix-functions"]], "Matrix Products": [[1960, "matrix-products"]], "Tensor Operations": [[1960, "tensor-operations"]], "Misc": [[1960, "misc"]], "Experimental Functions": [[1960, "experimental-functions"]], "torch.nn.functional": [[1975, "torch-nn-functional"]], "Convolution functions": [[1975, "convolution-functions"]], "Pooling functions": [[1975, "pooling-functions"]], "Attention Mechanisms": [[1975, "attention-mechanisms"]], "Non-linear activation functions": [[1975, "non-linear-activation-functions"]], "Linear functions": [[1975, "linear-functions"]], "Dropout functions": [[1975, "dropout-functions"]], "Sparse functions": [[1975, "sparse-functions"]], "Distance functions": [[1975, "distance-functions"]], "Loss functions": [[1975, "loss-functions"]], "Vision functions": [[1975, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1975, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1975, "data-parallel"]], "torch.nn.attention": [[1973, "module-torch.nn.attention"]], "Utils": [[1973, "utils"]], "Submodules": [[1973, "submodules"]], "JIT Utils - torch.utils.jit": [[1958, "module-torch.utils.jit"]], "torch.masked": [[1962, "torch-masked"]], "Motivation": [[1962, "motivation"], [2034, "motivation"], [2033, "motivation"]], "What is a MaskedTensor?": [[1962, "what-is-a-maskedtensor"]], "Supported Operators": [[1962, "supported-operators"]], "Unary Operators": [[1962, "unary-operators"]], "Binary Operators": [[1962, "binary-operators"]], "Reductions": [[1962, "reductions"]], "View and select functions": [[1962, "view-and-select-functions"]], "torch.utils.model_zoo": [[1965, "torch-utils-model-zoo"]], "Multiprocessing package - torch.multiprocessing": [[1968, "module-torch.multiprocessing"]], "Strategy management": [[1968, "strategy-management"]], "Sharing CUDA tensors": [[1968, "sharing-cuda-tensors"]], "Sharing strategies": [[1968, "sharing-strategies"]], "File descriptor - file_descriptor": [[1968, "file-descriptor-file-descriptor"]], "File system - file_system": [[1968, "file-system-file-system"]], "Spawning subprocesses": [[1968, "spawning-subprocesses"]], "torch.utils.mobile_optimizer": [[1964, "torch-utils-mobile-optimizer"]], "torch.nn.attention.bias": [[1974, "module-torch.nn.attention.bias"]], "CausalBias": [[1974, "causalbias"]], "Named Tensors operator coverage": [[1969, "named-tensors-operator-coverage"]], "Supported Operations": [[1969, "id1"]], "Keeps input names": [[1969, "keeps-input-names"]], "Removes dimensions": [[1969, "removes-dimensions"]], "Unifies names from inputs": [[1969, "unifies-names-from-inputs"]], "Permutes dimensions": [[1969, "permutes-dimensions"]], "Contracts away dims": [[1969, "contracts-away-dims"]], "Factory functions": [[1969, "factory-functions"]], "out function and in-place variants": [[1969, "out-function-and-in-place-variants"]], "torch.nn": [[1972, "module-torch.nn"], [1972, "id1"]], "Containers": [[1972, "containers"]], "Convolution Layers": [[1972, "convolution-layers"]], "Pooling layers": [[1972, "pooling-layers"]], "Padding Layers": [[1972, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1972, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1972, "non-linear-activations-other"]], "Normalization Layers": [[1972, "normalization-layers"]], "Recurrent Layers": [[1972, "recurrent-layers"]], "Transformer Layers": [[1972, "transformer-layers"]], "Linear Layers": [[1972, "linear-layers"]], "Dropout Layers": [[1972, "dropout-layers"]], "Sparse Layers": [[1972, "sparse-layers"]], "Distance Functions": [[1972, "distance-functions"]], "Loss Functions": [[1972, "loss-functions"]], "Vision Layers": [[1972, "vision-layers"]], "Shuffle Layers": [[1972, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1972, "module-torch.nn.parallel"]], "Utilities": [[1972, "module-torch.nn.utils"], [2023, "utilities"]], "Quantized Functions": [[1972, "quantized-functions"]], "Lazy Modules Initialization": [[1972, "lazy-modules-initialization"]], "A Simple Custom Module": [[1990, "a-simple-custom-module"]], "Modules as Building Blocks": [[1990, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1990, "neural-network-training-with-modules"]], "Module State": [[1990, "module-state"]], "Module Initialization": [[1990, "module-initialization"]], "Module Hooks": [[1990, "module-hooks"]], "Advanced Features": [[1990, "advanced-features"]], "Distributed Training": [[1990, "distributed-training"]], "Profiling Performance": [[1990, "profiling-performance"]], "Improving Performance with Quantization": [[1990, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1990, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1990, "parametrizations"]], "Transforming Modules with FX": [[1990, "transforming-modules-with-fx"]], "Reproducibility": [[1994, "reproducibility"]], "Controlling sources of randomness": [[1994, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1994, "pytorch-random-number-generator"]], "Python": [[1994, "python"]], "Random number generators in other libraries": [[1994, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1994, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1994, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1994, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1994, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[1994, "filling-uninitialized-memory"]], "DataLoader": [[1994, "dataloader"]], "Gradcheck mechanics": [[1987, "gradcheck-mechanics"]], "Notations and background information": [[1987, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1987, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1987, "real-to-real-functions"]], "Default real input numerical evaluation": [[1987, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1987, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1987, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1987, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1987, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1987, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1987, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1987, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1987, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1987, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1987, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1987, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1987, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1987, "gradgradcheck-implementation"]], "CPU threading and TorchScript inference": [[1980, "cpu-threading-and-torchscript-inference"]], "Build options": [[1980, "build-options"]], "Runtime API": [[1980, "runtime-api"]], "Tuning the number of threads": [[1980, "tuning-the-number-of-threads"]], "Distributed Data Parallel": [[1982, "distributed-data-parallel"]], "Internal Design": [[1982, "internal-design"]], "Implementation": [[1982, "implementation"], [2013, "implementation"]], "ProcessGroup": [[1982, "processgroup"]], "TorchDynamo DDPOptimizer": [[1982, "id1"]], "Multiprocessing best practices": [[1992, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1992, "cuda-in-multiprocessing"]], "Best practices and tips": [[1992, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1992, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1992, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1992, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1992, "hogwild"]], "CPU in multiprocessing": [[1992, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1992, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1992, "avoid-cpu-oversubscription"]], "torch.onnx": [[1997, "torch-onnx"]], "TorchScript-based ONNX Exporter": [[1997, "torchscript-based-onnx-exporter"], [2000, "torchscript-based-onnx-exporter"]], "Contributing / Developing": [[1997, "contributing-developing"]], "torch.monitor": [[1966, "torch-monitor"]], "Windows FAQ": [[1996, "windows-faq"]], "Building from source": [[1996, "building-from-source"]], "Include optional components": [[1996, "include-optional-components"]], "Speeding CUDA build for Windows": [[1996, "speeding-cuda-build-for-windows"]], "One key install script": [[1996, "one-key-install-script"]], "Extension": [[1996, "extension"]], "CFFI Extension": [[1996, "cffi-extension"]], "Cpp Extension": [[1996, "cpp-extension"]], "Installation": [[1996, "installation"]], "Package not found in win-32 channel.": [[1996, "package-not-found-in-win-32-channel"]], "Import error": [[1996, "import-error"]], "Usage (multiprocessing)": [[1996, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1996, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1996, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1996, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1996, "cuda-ipc-operations"]], "Named Tensors": [[1970, "named-tensors"]], "Creating named tensors": [[1970, "creating-named-tensors"]], "Named dimensions": [[1970, "named-dimensions"]], "Name propagation semantics": [[1970, "name-propagation-semantics"]], "match semantics": [[1970, "match-semantics"]], "Basic name inference rules": [[1970, "basic-name-inference-rules"]], "Explicit alignment by names": [[1970, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1970, "manipulating-dimensions"]], "Autograd support": [[1970, "autograd-support"]], "Currently supported operations and subsystems": [[1970, "currently-supported-operations-and-subsystems"]], "Operators": [[1970, "operators"]], "Subsystems": [[1970, "subsystems"]], "Named tensor API reference": [[1970, "named-tensor-api-reference"]], "Extending torch.func with autograd.Function": [[1984, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1984, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1984, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1984, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1984, "limitations-and-gotchas"]], "torch.vmap() Support": [[1984, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1984, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1984, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1984, "torch-func-jvp-support"]], "torch.mps": [[1967, "module-torch.mps"]], "MPS Profiler": [[1967, "mps-profiler"]], "MPS Event": [[1967, "mps-event"]], "Terminology": [[1955, "terminology"]], "Type System": [[1955, "id1"]], "TorchScript Types": [[1955, "torchscript-types"]], "Meta Types": [[1955, "meta-types"]], "Any Type": [[1955, "any-type"]], "Operators Supported for Any Type": [[1955, "operators-supported-for-any-type"]], "Design Notes": [[1955, "design-notes"], [2011, "design-notes"]], "Primitive Types": [[1955, "primitive-types"]], "Structural Types": [[1955, "structural-types"]], "Nominal Types": [[1955, "nominal-types"]], "Built-in Class": [[1955, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1955, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1955, "custom-class"]], "Enum Type": [[1955, "enum-type"]], "TorchScript Module Class": [[1955, "torchscript-module-class"]], "Module Instance Class": [[1955, "module-instance-class"]], "Type Annotation": [[1955, "type-annotation"]], "When to Annotate Types": [[1955, "when-to-annotate-types"]], "Annotate Function Signature": [[1955, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1955, "annotate-variables-and-data-attributes"]], "Local Variables": [[1955, "local-variables"]], "Instance Data Attributes": [[1955, "instance-data-attributes"]], "Type Annotation APIs": [[1955, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1955, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1955, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1955, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1955, "arithmetic-conversions"]], "Atoms": [[1955, "atoms"]], "Identifiers": [[1955, "identifiers"]], "Parenthesized Forms": [[1955, "parenthesized-forms"]], "List and Dictionary Displays": [[1955, "list-and-dictionary-displays"]], "Primaries": [[1955, "primaries"]], "Attribute References": [[1955, "attribute-references"]], "Subscriptions": [[1955, "subscriptions"]], "Slicings": [[1955, "slicings"]], "Calls": [[1955, "calls"]], "Power Operator": [[1955, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1955, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1955, "binary-arithmetic-operations"]], "Shifting Operations": [[1955, "shifting-operations"]], "Binary Bitwise Operations": [[1955, "binary-bitwise-operations"]], "Comparisons": [[1955, "comparisons"], [2030, "comparisons"]], "Value Comparisons": [[1955, "value-comparisons"]], "Membership Test Operations": [[1955, "membership-test-operations"]], "Identity Comparisons": [[1955, "identity-comparisons"]], "Boolean Operations": [[1955, "boolean-operations"]], "Conditional Expressions": [[1955, "conditional-expressions"]], "Expression Lists": [[1955, "expression-lists"]], "Simple Statements": [[1955, "simple-statements"]], "Expression Statements": [[1955, "expression-statements"]], "Assignment Statements": [[1955, "assignment-statements"]], "Augmented Assignment Statements": [[1955, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1955, "annotated-assignment-statements"]], "The raise Statement": [[1955, "the-raise-statement"]], "The assert Statement": [[1955, "the-assert-statement"]], "The return Statement": [[1955, "the-return-statement"]], "The del Statement": [[1955, "the-del-statement"]], "The pass Statement": [[1955, "the-pass-statement"]], "The print Statement": [[1955, "the-print-statement"]], "The break Statement": [[1955, "the-break-statement"]], "The continue Statement:": [[1955, "the-continue-statement"]], "Compound Statements": [[1955, "compound-statements"]], "The if Statement": [[1955, "the-if-statement"]], "Basic if/else Statement": [[1955, "basic-if-else-statement"]], "Ternary if/else Statement": [[1955, "ternary-if-else-statement"]], "The while Statement": [[1955, "the-while-statement"]], "The for-in Statement": [[1955, "the-for-in-statement"]], "The with Statement": [[1955, "the-with-statement"]], "The tuple Statement": [[1955, "the-tuple-statement"]], "The getattr Statement": [[1955, "the-getattr-statement"]], "The hasattr Statement": [[1955, "the-hasattr-statement"]], "The zip Statement": [[1955, "the-zip-statement"]], "The enumerate Statement": [[1955, "the-enumerate-statement"]], "Python Values": [[1955, "python-values"]], "Resolution Rules": [[1955, "resolution-rules"]], "Python Built-in Functions Support": [[1955, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1955, "id5"]], "Python Built-in Values Support": [[1955, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1955, "id6"]], "torch.* APIs": [[1955, "torch-apis"]], "Remote Procedure Calls": [[1955, "remote-procedure-calls"]], "Asynchronous Execution": [[1955, "asynchronous-execution"]], "Type Annotations": [[1955, "type-annotations"]], "Meta Programming": [[1955, "meta-programming"]], "Type Refinement": [[1955, "type-refinement"]], "Meta device": [[1963, "meta-device"]], "Idioms for working with meta tensors": [[1963, "idioms-for-working-with-meta-tensors"]], "Python Language Reference Coverage": [[1956, "python-language-reference-coverage"]], "CUDA Automatic Mixed Precision examples": [[1977, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1977, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1977, "working-with-unscaled-gradients"]], "Gradient clipping": [[1977, "gradient-clipping"]], "Working with Scaled Gradients": [[1977, "working-with-scaled-gradients"]], "Gradient accumulation": [[1977, "gradient-accumulation"]], "Gradient penalty": [[1977, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1977, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1977, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1977, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1977, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1977, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1977, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1977, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1977, "functions-that-need-a-particular-dtype"]], "torch.hub": [[1950, "torch-hub"]], "Publishing models": [[1950, "publishing-models"]], "How to implement an entrypoint?": [[1950, "how-to-implement-an-entrypoint"]], "Important Notice": [[1950, "important-notice"]], "Loading models from Hub": [[1950, "loading-models-from-hub"]], "Running a loaded model:": [[1950, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1950, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1950, "caching-logic"]], "Known limitations:": [[1950, "known-limitations"]], "Broadcasting semantics": [[1979, "broadcasting-semantics"]], "General semantics": [[1979, "general-semantics"]], "In-place semantics": [[1979, "in-place-semantics"]], "Backwards compatibility": [[1979, "backwards-compatibility"]], "Serialization semantics": [[1995, "serialization-semantics"]], "Table of Contents": [[1995, "table-of-contents"]], "Saving and loading tensors": [[1995, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1995, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1995, "saving-and-loading-torch-nn-modules"]], "Serialized file format for torch.save": [[1995, "serialized-file-format-for-torch-save"]], "Serializing torch.nn.Modules and loading them in C++": [[1995, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1995, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1995, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1995, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1995, "utility-functions"], [2009, "utility-functions"]], "Autograd mechanics": [[1978, "autograd-mechanics"]], "How autograd encodes the history": [[1978, "how-autograd-encodes-the-history"]], "Saved tensors": [[1978, "saved-tensors"]], "Gradients for non-differentiable functions": [[1978, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1978, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [2023, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1978, "setting-requires-grad"]], "Grad Modes": [[1978, "grad-modes"]], "Default Mode (Grad Mode)": [[1978, "default-mode-grad-mode"]], "No-grad Mode": [[1978, "no-grad-mode"]], "Inference Mode": [[1978, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1978, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1978, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1978, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1978, "multithreaded-autograd"]], "Concurrency on CPU": [[1978, "concurrency-on-cpu"]], "Non-determinism": [[1978, "non-determinism"]], "Graph retaining": [[1978, "graph-retaining"]], "Thread Safety on Autograd Node": [[1978, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1978, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1978, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1978, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1978, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1978, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1978, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1978, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1978, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1978, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1978, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1978, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1978, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1978, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1978, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1978, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1978, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.nested": [[1971, "module-torch.nested"]], "Construction": [[1971, "construction"], [2015, "construction"]], "size": [[1971, "size"]], "unbind": [[1971, "unbind"]], "Nested tensor constructor and conversion functions": [[1971, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1971, "supported-operations"], [2015, "supported-operations"]], "torch.nn.init": [[1976, "torch-nn-init"]], "FSDP Notes": [[1986, "fsdp-notes"]], "FSDP Prefetch Nuances": [[1986, "fsdp-prefetch-nuances"]], "Communication payload size": [[1986, "communication-payload-size"]], "FSDP buffers sizes": [[1986, "fsdp-buffers-sizes"]], "torch.cuda.memory_allocated": [[1050, "torch-cuda-memory-allocated"]], "torch.cuda.temperature": [[1074, "torch-cuda-temperature"]], "torch.cuda.memory_reserved": [[1052, "torch-cuda-memory-reserved"]], "torch.empty_like": [[1099, "torch-empty-like"]], "torch.cuda.reset_max_memory_cached": [[1062, "torch-cuda-reset-max-memory-cached"]], "torch.diagflat": [[1086, "torch-diagflat"]], "torch.cuda.set_device": [[1066, "torch-cuda-set-device"]], "torch.cumsum": [[1079, "torch-cumsum"]], "torch.digamma": [[1090, "torch-digamma"]], "torch.cuda.set_per_process_memory_fraction": [[1067, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.memory_summary": [[1055, "torch-cuda-memory-summary"]], "torch.det": [[1083, "torch-det"]], "torch.cuda.utilization": [[1075, "torch-cuda-utilization"]], "torch.cuda.set_rng_state": [[1068, "torch-cuda-set-rng-state"]], "torch.cummin": [[1077, "torch-cummin"]], "torch.divide": [[1093, "torch-divide"]], "torch.dot": [[1094, "torch-dot"]], "torch.diag": [[1084, "torch-diag"]], "torch.cuda.reset_peak_memory_stats": [[1063, "torch-cuda-reset-peak-memory-stats"]], "torch.dstack": [[1096, "torch-dstack"]], "torch.cuda.reset_max_memory_allocated": [[1061, "torch-cuda-reset-max-memory-allocated"]], "torch.dsplit": [[1095, "torch-dsplit"]], "torch.cuda.memory_snapshot": [[1053, "torch-cuda-memory-snapshot"]], "torch.diagonal": [[1087, "torch-diagonal"]], "torch.cumprod": [[1078, "torch-cumprod"]], "torch.cummax": [[1076, "torch-cummax"]], "torch.cuda.power_draw": [[1060, "torch-cuda-power-draw"]], "torch.cuda.memory_stats": [[1054, "torch-cuda-memory-stats"]], "torch.cuda.seed": [[1064, "torch-cuda-seed"]], "torch.cuda.seed_all": [[1065, "torch-cuda-seed-all"]], "torch.cuda.set_rng_state_all": [[1069, "torch-cuda-set-rng-state-all"]], "torch.diagonal_scatter": [[1088, "torch-diagonal-scatter"]], "torch.div": [[1092, "torch-div"]], "torch.einsum": [[1097, "torch-einsum"]], "torch.cumulative_trapezoid": [[1080, "torch-cumulative-trapezoid"]], "torch.cuda.nvtx.mark": [[1057, "torch-cuda-nvtx-mark"]], "torch.cuda.memory_cached": [[1051, "torch-cuda-memory-cached"]], "torch.cuda.stream": [[1072, "torch-cuda-stream"]], "torch.empty": [[1098, "torch-empty"]], "torch.cuda.set_stream": [[1070, "torch-cuda-set-stream"]], "torch.diag_embed": [[1085, "torch-diag-embed"]], "torch.cuda.nvtx.range_push": [[1059, "torch-cuda-nvtx-range-push"]], "torch.deg2rad": [[1081, "torch-deg2rad"]], "torch.cuda.nvtx.range_pop": [[1058, "torch-cuda-nvtx-range-pop"]], "torch.dist": [[1091, "torch-dist"]], "torch.cuda.set_sync_debug_mode": [[1071, "torch-cuda-set-sync-debug-mode"]], "torch.cuda.memory_usage": [[1056, "torch-cuda-memory-usage"]], "torch.dequantize": [[1082, "torch-dequantize"]], "torch.diff": [[1089, "torch-diff"]], "torch.cuda.synchronize": [[1073, "torch-cuda-synchronize"]], "torch.cuda.comm.reduce_add": [[1013, "torch-cuda-comm-reduce-add"]], "StreamContext": [[1004, "streamcontext"], [989, "streamcontext"]], "torch.cuda.jiterator._create_jit_fn": [[1040, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.comm.gather": [[1012, "torch-cuda-comm-gather"]], "torch.cuda.default_stream": [[1018, "torch-cuda-default-stream"]], "torch.cuda.max_memory_cached": [[1047, "torch-cuda-max-memory-cached"]], "Stream": [[1003, "stream"], [988, "stream"]], "torch.cuda.current_device": [[1016, "torch-cuda-current-device"]], "torch.cuda.caching_allocator_alloc": [[1005, "torch-cuda-caching-allocator-alloc"]], "torch.cuda.max_memory_allocated": [[1046, "torch-cuda-max-memory-allocated"]], "torch.cuda.current_stream": [[1017, "torch-cuda-current-stream"]], "torch.cuda.comm.broadcast_coalesced": [[1011, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.device_count": [[1020, "torch-cuda-device-count"]], "torch.cuda.get_gencode_flags": [[1028, "torch-cuda-get-gencode-flags"]], "torch.cuda.init": [[1034, "torch-cuda-init"]], "torch.cuda.make_graphed_callables": [[1043, "torch-cuda-make-graphed-callables"]], "torch.cuda.get_rng_state_all": [[1030, "torch-cuda-get-rng-state-all"]], "torch.cuda.mem_get_info": [[1049, "torch-cuda-mem-get-info"]], "torch.cuda.get_device_properties": [[1027, "torch-cuda-get-device-properties"]], "torch.cuda.can_device_access_peer": [[1007, "torch-cuda-can-device-access-peer"]], "torch.cuda.get_arch_list": [[1024, "torch-cuda-get-arch-list"]], "torch.cuda.get_device_capability": [[1025, "torch-cuda-get-device-capability"]], "torch.cuda.graph_pool_handle": [[1033, "torch-cuda-graph-pool-handle"]], "torch.cuda.is_initialized": [[1039, "torch-cuda-is-initialized"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1041, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.caching_allocator_delete": [[1006, "torch-cuda-caching-allocator-delete"]], "torch.cuda.comm.scatter": [[1014, "torch-cuda-comm-scatter"]], "torch.cuda.empty_cache": [[1022, "torch-cuda-empty-cache"]], "torch.cuda.OutOfMemoryError": [[1002, "torch-cuda-outofmemoryerror"]], "graph": [[1032, "graph"]], "ExternalStream": [[1001, "externalstream"]], "torch.cuda.is_current_stream_capturing": [[1038, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.ipc_collect": [[1036, "torch-cuda-ipc-collect"]], "torch.cuda.current_blas_handle": [[1015, "torch-cuda-current-blas-handle"]], "torch.cuda.get_sync_debug_mode": [[1031, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.list_gpu_processes": [[1042, "torch-cuda-list-gpu-processes"]], "torch.cuda.is_available": [[1037, "torch-cuda-is-available"]], "torch.cuda.get_device_name": [[1026, "torch-cuda-get-device-name"]], "torch.cuda.manual_seed_all": [[1045, "torch-cuda-manual-seed-all"]], "torch.cuda.clock_rate": [[1009, "torch-cuda-clock-rate"]], "torch.cuda.comm.broadcast": [[1010, "torch-cuda-comm-broadcast"]], "torch.cuda.initial_seed": [[1035, "torch-cuda-initial-seed"]], "torch.cuda.max_memory_reserved": [[1048, "torch-cuda-max-memory-reserved"]], "torch.cuda.manual_seed": [[1044, "torch-cuda-manual-seed"]], "torch.cuda.get_rng_state": [[1029, "torch-cuda-get-rng-state"]], "torch.cuda.get_allocator_backend": [[1023, "torch-cuda-get-allocator-backend"]], "torch.cuda.change_current_allocator": [[1008, "torch-cuda-change-current-allocator"]], "torch.cos": [[984, "torch-cos"]], "torch.compiler.cudagraph_mark_step_begin": [[972, "torch-compiler-cudagraph-mark-step-begin"]], "torch.chunk": [[961, "torch-chunk"]], "torch.cat": [[954, "torch-cat"]], "torch.chain_matmul": [[957, "torch-chain-matmul"]], "torch.combinations": [[966, "torch-combinations"]], "torch.ceil": [[956, "torch-ceil"]], "torch.count_nonzero": [[986, "torch-count-nonzero"]], "torch.compiler.disable": [[973, "torch-compiler-disable"], [2036, "torch-compiler-disable"]], "torch.compiler.compile": [[971, "torch-compiler-compile"]], "torch.can_cast": [[952, "torch-can-cast"]], "torch.compiler.list_backends": [[974, "torch-compiler-list-backends"]], "torch.broadcast_to": [[950, "torch-broadcast-to"]], "torch.cosh": [[985, "torch-cosh"]], "torch.cpu.stream": [[995, "torch-cpu-stream"]], "torch.bucketize": [[951, "torch-bucketize"]], "torch.complex": [[976, "torch-complex"]], "torch.clip": [[963, "torch-clip"]], "torch.cov": [[987, "torch-cov"]], "torch.clone": [[964, "torch-clone"]], "torch.cpu.is_available": [[993, "torch-cpu-is-available"]], "torch.cpu.synchronize": [[996, "torch-cpu-synchronize"]], "torch.cholesky_inverse": [[959, "torch-cholesky-inverse"]], "torch.cross": [[997, "torch-cross"]], "torch.cpu.device_count": [[992, "torch-cpu-device-count"]], "torch.cdist": [[955, "torch-cdist"]], "torch.cpu.current_stream": [[991, "torch-cpu-current-stream"]], "torch.compiler.reset": [[975, "torch-compiler-reset"]], "torch.cpu.set_device": [[994, "torch-cpu-set-device"]], "torch.clamp": [[962, "torch-clamp"]], "torch.cpu.current_device": [[990, "torch-cpu-current-device"]], "torch.conj": [[980, "torch-conj"]], "torch.concatenate": [[978, "torch-concatenate"]], "torch.cartesian_prod": [[953, "torch-cartesian-prod"]], "torch.compiler.allow_in_graph": [[969, "torch-compiler-allow-in-graph"], [2036, "torch-compiler-allow-in-graph"]], "torch.corrcoef": [[983, "torch-corrcoef"]], "torch.cholesky": [[958, "torch-cholesky"]], "torch.compiler.assume_constant_result": [[970, "torch-compiler-assume-constant-result"]], "torch.cholesky_solve": [[960, "torch-cholesky-solve"]], "torch.compile": [[967, "torch-compile"]], "torch.compiled_with_cxx11_abi": [[968, "torch-compiled-with-cxx11-abi"]], "CUDAPluggableAllocator": [[999, "cudapluggableallocator"]], "torch.column_stack": [[965, "torch-column-stack"]], "torch.conj_physical": [[981, "torch-conj-physical"]], "CUDAGraph": [[998, "cudagraph"]], "torch.copysign": [[982, "torch-copysign"]], "torch.concat": [[977, "torch-concat"]], "torch.autograd.profiler.profile.total_average": [[929, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.graph.Node.register_prehook": [[920, "torch-autograd-graph-node-register-prehook"]], "inference_mode": [[910, "inference-mode"]], "NestedIOFunction": [[901, "nestediofunction"]], "torch.autograd.functional.hessian": [[903, "torch-autograd-functional-hessian"]], "set_multithreading_enabled": [[912, "set-multithreading-enabled"]], "torch.autograd.graph.Node.metadata": [[916, "torch-autograd-graph-node-metadata"]], "torch.autograd.functional.vjp": [[908, "torch-autograd-functional-vjp"]], "torch.autograd.profiler.profile.export_chrome_trace": [[926, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.bernoulli": [[937, "torch-bernoulli"]], "torch.autograd.functional.hvp": [[904, "torch-autograd-functional-hvp"]], "torch.bitwise_right_shift": [[943, "torch-bitwise-right-shift"]], "torch.autograd.functional.vhp": [[907, "torch-autograd-functional-vhp"]], "torch.autograd.grad": [[909, "torch-autograd-grad"]], "InplaceFunction": [[900, "inplacefunction"]], "torch.broadcast_tensors": [[949, "torch-broadcast-tensors"]], "EnforceUnique": [[922, "enforceunique"]], "torch.autograd.graph.Node.name": [[917, "torch-autograd-graph-node-name"]], "MemRecordsAcc": [[933, "memrecordsacc"]], "torch.autograd.profiler.profile.key_averages": [[927, "torch-autograd-profiler-profile-key-averages"]], "StringTable": [[934, "stringtable"]], "torch.baddbmm": [[935, "torch-baddbmm"]], "torch.autograd.gradcheck.gradcheck": [[914, "torch-autograd-gradcheck-gradcheck"]], "Interval": [[931, "interval"]], "torch.bincount": [[938, "torch-bincount"]], "torch.bitwise_xor": [[944, "torch-bitwise-xor"]], "torch.autograd.graph.Node.register_hook": [[919, "torch-autograd-graph-node-register-hook"]], "torch.block_diag": [[946, "torch-block-diag"]], "torch.bmm": [[947, "torch-bmm"]], "torch.autograd.functional.jvp": [[906, "torch-autograd-functional-jvp"]], "torch.autograd.function.once_differentiable": [[902, "torch-autograd-function-once-differentiable"]], "torch.autograd.profiler.load_nvprof": [[924, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.profiler.parse_nvprof_trace": [[925, "torch-autograd-profiler-parse-nvprof-trace"]], "torch.autograd.gradcheck.GradcheckError": [[913, "torch-autograd-gradcheck-gradcheckerror"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[928, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.bitwise_or": [[942, "torch-bitwise-or"]], "torch.autograd.gradcheck.gradgradcheck": [[915, "torch-autograd-gradcheck-gradgradcheck"]], "torch.autograd.graph.Node.next_functions": [[918, "torch-autograd-graph-node-next-functions"]], "KinetoStepTracker": [[923, "kinetosteptracker"]], "torch.bartlett_window": [[936, "torch-bartlett-window"]], "torch.bitwise_left_shift": [[940, "torch-bitwise-left-shift"]], "torch.blackman_window": [[945, "torch-blackman-window"]], "torch.bitwise_not": [[941, "torch-bitwise-not"]], "record_function": [[930, "record-function"]], "Kernel": [[932, "kernel"]], "set_grad_enabled": [[911, "set-grad-enabled"]], "torch.broadcast_shapes": [[948, "torch-broadcast-shapes"]], "torch.bitwise_and": [[939, "torch-bitwise-and"]], "torch.autograd.graph.increment_version": [[921, "torch-autograd-graph-increment-version"]], "torch.autograd.functional.jacobian": [[905, "torch-autograd-functional-jacobian"]], "torch.arccos": [[861, "torch-arccos"]], "torch.arccosh": [[862, "torch-arccosh"]], "get_default_qat_qconfig_mapping": [[850, "get-default-qat-qconfig-mapping"]], "prepare_qat_fx": [[857, "prepare-qat-fx"]], "torch.atleast_3d": [[883, "torch-atleast-3d"]], "torch.arctan": [[865, "torch-arctan"]], "torch.autograd.Function.vmap": [[887, "torch-autograd-function-vmap"]], "BackwardCFunction": [[895, "backwardcfunction"]], "prepare_fx": [[856, "prepare-fx"]], "quantize_qat": [[858, "quantize-qat"]], "torch.autograd.forward_ad.exit_dual_level": [[892, "torch-autograd-forward-ad-exit-dual-level"]], "torch.argmax": [[869, "torch-argmax"]], "convert_fx": [[854, "convert-fx"]], "quantize_dynamic": [[853, "quantize-dynamic"]], "dual_level": [[890, "dual-level"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[897, "torch-autograd-function-functionctx-mark-non-differentiable"]], "fuse_fx": [[855, "fuse-fx"]], "torch.arctanh": [[867, "torch-arctanh"]], "torch.argmin": [[870, "torch-argmin"]], "torch.atan": [[878, "torch-atan"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[898, "torch-autograd-function-functionctx-save-for-backward"]], "UnpackedDualTensor": [[889, "unpackeddualtensor"]], "torch.autograd.Function.jvp": [[886, "torch-autograd-function-jvp"]], "torch.arcsinh": [[864, "torch-arcsinh"]], "torch.autograd.backward": [[888, "torch-autograd-backward"]], "torch.autograd.forward_ad.unpack_dual": [[894, "torch-autograd-forward-ad-unpack-dual"]], "torch.as_tensor": [[874, "torch-as-tensor"]], "torch.are_deterministic_algorithms_enabled": [[868, "torch-are-deterministic-algorithms-enabled"]], "torch.asarray": [[875, "torch-asarray"]], "torch.argwhere": [[872, "torch-argwhere"]], "torch.atan2": [[879, "torch-atan2"]], "torch.autograd.Function.forward": [[885, "torch-autograd-function-forward"]], "torch.autograd.forward_ad.make_dual": [[893, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.forward_ad.enter_dual_level": [[891, "torch-autograd-forward-ad-enter-dual-level"]], "torch.arcsin": [[863, "torch-arcsin"]], "torch.atanh": [[880, "torch-atanh"]], "torch.autograd.Function.backward": [[884, "torch-autograd-function-backward"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[899, "torch-autograd-function-functionctx-set-materialize-grads"]], "quantize": [[852, "quantize"]], "torch.asinh": [[877, "torch-asinh"]], "swap_module": [[859, "swap-module"]], "torch.atleast_2d": [[882, "torch-atleast-2d"]], "torch.arange": [[860, "torch-arange"]], "torch.as_strided": [[873, "torch-as-strided"]], "torch.atleast_1d": [[881, "torch-atleast-1d"]], "get_default_qconfig_mapping": [[851, "get-default-qconfig-mapping"]], "torch.arctan2": [[866, "torch-arctan2"]], "torch.asin": [[876, "torch-asin"]], "torch.argsort": [[871, "torch-argsort"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[896, "torch-autograd-function-functionctx-mark-dirty"]], "ConvertCustomConfig": [[810, "convertcustomconfig"]], "default_placeholder_observer": [[829, "default-placeholder-observer"]], "per_channel_dynamic_qconfig": [[848, "per-channel-dynamic-qconfig"]], "default_debug_qconfig": [[838, "default-debug-qconfig"]], "QConfigMapping": [[849, "qconfigmapping"]], "default_per_channel_qconfig": [[840, "default-per-channel-qconfig"]], "RecordingObserver": [[822, "recordingobserver"]], "float16_dynamic_qconfig": [[845, "float16-dynamic-qconfig"]], "default_histogram_observer": [[826, "default-histogram-observer"]], "prepare_qat": [[834, "prepare-qat"]], "float_qparams_weight_only_qconfig": [[847, "float-qparams-weight-only-qconfig"]], "PerChannelMinMaxObserver": [[820, "perchannelminmaxobserver"]], "default_weight_fake_quant": [[804, "default-weight-fake-quant"]], "NoopObserver": [[818, "noopobserver"]], "disable_fake_quant": [[805, "disable-fake-quant"]], "ObserverBase": [[819, "observerbase"]], "load_observer_state_dict": [[832, "load-observer-state-dict"]], "default_qconfig": [[843, "default-qconfig"]], "float16_static_qconfig": [[846, "float16-static-qconfig"]], "PrepareCustomConfig": [[812, "preparecustomconfig"]], "get_observer_state_dict": [[831, "get-observer-state-dict"]], "disable_observer": [[806, "disable-observer"]], "default_activation_only_qconfig": [[837, "default-activation-only-qconfig"]], "StandaloneModuleConfigEntry": [[813, "standalonemoduleconfigentry"]], "MinMaxObserver": [[815, "minmaxobserver"]], "default_dynamic_quant_observer": [[824, "default-dynamic-quant-observer"]], "default_histogram_fake_quant": [[802, "default-histogram-fake-quant"]], "HistogramObserver": [[814, "histogramobserver"]], "propagate_qconfig": [[835, "propagate-qconfig"]], "default_qat_qconfig": [[841, "default-qat-qconfig"]], "MovingAveragePerChannelMinMaxObserver": [[817, "movingaverageperchannelminmaxobserver"]], "default_fused_wt_fake_quant": [[801, "default-fused-wt-fake-quant"]], "QConfig": [[836, "qconfig"], [2006, "qconfig"]], "enable_observer": [[808, "enable-observer"]], "default_float_qparams_observer": [[825, "default-float-qparams-observer"]], "default_observer": [[827, "default-observer"]], "default_per_channel_weight_fake_quant": [[803, "default-per-channel-weight-fake-quant"]], "PlaceholderObserver": [[821, "placeholderobserver"]], "default_dynamic_qconfig": [[839, "default-dynamic-qconfig"]], "enable_fake_quant": [[807, "enable-fake-quant"]], "FuseCustomConfig": [[811, "fusecustomconfig"]], "default_fused_per_channel_wt_fake_quant": [[800, "default-fused-per-channel-wt-fake-quant"]], "MovingAverageMinMaxObserver": [[816, "movingaverageminmaxobserver"]], "default_debug_observer": [[823, "default-debug-observer"]], "default_per_channel_weight_observer": [[828, "default-per-channel-weight-observer"]], "default_qat_qconfig_v2": [[842, "default-qat-qconfig-v2"]], "default_weight_only_qconfig": [[844, "default-weight-only-qconfig"]], "fuse_modules": [[809, "fuse-modules"]], "prepare": [[833, "prepare"]], "default_weight_observer": [[830, "default-weight-observer"]], "ObservationType": [[791, "observationtype"]], "hardswish": [[772, "hardswish"]], "max_pool1d": [[777, "max-pool1d"]], "linear": [[776, "linear"]], "threshold": [[779, "threshold"]], "BackendConfig": [[787, "backendconfig"]], "adaptive_avg_pool2d": [[761, "adaptive-avg-pool2d"]], "DTypeWithConstraints": [[790, "dtypewithconstraints"]], "interpolate": [[774, "interpolate"]], "QuantWrapper": [[785, "quantwrapper"]], "max_pool2d": [[778, "max-pool2d"]], "upsample_nearest": [[782, "upsample-nearest"]], "DTypeConfig": [[789, "dtypeconfig"]], "hardsigmoid": [[771, "hardsigmoid"]], "add_quant_dequant": [[786, "add-quant-dequant"]], "celu": [[765, "celu"]], "conv2d": [[768, "conv2d"]], "leaky_relu": [[775, "leaky-relu"]], "FusedMovingAvgObsFakeQuantize": [[797, "fusedmovingavgobsfakequantize"]], "FakeQuantize": [[794, "fakequantize"]], "default_fused_act_fake_quant": [[799, "default-fused-act-fake-quant"]], "avg_pool3d": [[764, "avg-pool3d"]], "DeQuantStub": [[783, "dequantstub"]], "convert": [[792, "convert"]], "FixedQParamsFakeQuantize": [[796, "fixedqparamsfakequantize"]], "elu": [[770, "elu"]], "upsample": [[780, "upsample"]], "BackendPatternConfig": [[788, "backendpatternconfig"]], "conv3d": [[769, "conv3d"]], "hardtanh": [[773, "hardtanh"]], "QFunctional": [[752, "qfunctional"]], "FakeQuantizeBase": [[795, "fakequantizebase"]], "clamp": [[766, "clamp"]], "default_fake_quant": [[798, "default-fake-quant"]], "QuantStub": [[784, "quantstub"]], "upsample_bilinear": [[781, "upsample-bilinear"]], "adaptive_avg_pool3d": [[762, "adaptive-avg-pool3d"]], "default_eval_fn": [[793, "default-eval-fn"]], "conv1d": [[767, "conv1d"]], "avg_pool2d": [[763, "avg-pool2d"]], "Multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[40, "starting-multiple-workers"]], "Process Context": [[40, "process-context"]], "Quickstart": [[41, "quickstart"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Examples": [[12, "examples"], [37, "examples"], [2031, "examples"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "torch::deploy has been moved to pytorch/multipy": [[23, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[30, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "Dataset Types": [[21, "dataset-types"]], "Map-style datasets": [[21, "map-style-datasets"]], "Iterable-style datasets": [[21, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[21, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[21, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[21, "automatic-batching-default"]], "Disable automatic batching": [[21, "disable-automatic-batching"]], "Working with collate_fn": [[21, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[21, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[21, "single-process-data-loading-default"]], "Multi-process data loading": [[21, "multi-process-data-loading"]], "Platform-specific behaviors": [[21, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[21, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[21, "memory-pinning"]], "Distributed communication package - torch.distributed": [[25, "distributed-communication-package-torch-distributed"]], "Backends": [[25, "backends"], [2011, "backends"]], "Backends that come with PyTorch": [[25, "backends-that-come-with-pytorch"]], "Which backend to use?": [[25, "which-backend-to-use"]], "Common environment variables": [[25, "common-environment-variables"]], "Choosing the network interface to use": [[25, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[25, "other-nccl-environment-variables"]], "Basics": [[25, "basics"], [2011, "basics"]], "Initialization": [[25, "initialization"]], "TCP initialization": [[25, "tcp-initialization"]], "Shared file-system initialization": [[25, "shared-file-system-initialization"]], "Environment variable initialization": [[25, "environment-variable-initialization"]], "Post-Initialization": [[25, "post-initialization"]], "Distributed Key-Value Store": [[25, "distributed-key-value-store"]], "Groups": [[25, "groups"]], "DeviceMesh": [[25, "devicemesh"]], "Point-to-point communication": [[25, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[25, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[25, "collective-functions"]], "Profiling Collective Communication": [[25, "profiling-collective-communication"]], "Multi-GPU collective functions": [[25, "multi-gpu-collective-functions"]], "Third-party backends": [[25, "third-party-backends"]], "Launch utility": [[25, "launch-utility"]], "Spawn utility": [[25, "spawn-utility"]], "Debugging torch.distributed applications": [[25, "debugging-torch-distributed-applications"]], "Python Breakpoint": [[25, "python-breakpoint"]], "Monitored Barrier": [[25, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[25, "torch-distributed-debug"]], "Logging": [[25, "logging"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[27, "distributed-checkpoint-torch-distributed-checkpoint"]], "TorchElastic Kubernetes": [[38, "torchelastic-kubernetes"]], "Rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[42, "registry"]], "Handler": [[42, "handler"]], "Exceptions": [[42, "exceptions"]], "Implementations": [[42, "implementations"], [33, "implementations"]], "Dynamic Rendezvous": [[42, "dynamic-rendezvous"]], "C10d Backend": [[42, "c10d-backend"]], "Etcd Backend": [[42, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[42, "etcd-rendezvous-legacy"]], "Etcd Store": [[42, "etcd-store"]], "Etcd Server": [[42, "etcd-server"]], "Torch Distributed Elastic": [[28, "torch-distributed-elastic"]], "Get Started": [[28, "get-started"]], "Usage": [[28, null], [18, "usage"], [43, "usage"]], "Documentation": [[28, "documentation"]], "API": [[28, null]], "Advanced": [[28, null]], "Plugins": [[28, null]], "Expiration Timers": [[44, "module-torch.distributed.elastic.timer"]], "Client Methods": [[44, "client-methods"]], "Server/Client Implementations": [[44, "server-client-implementations"]], "Writing a custom timer server/client": [[44, "writing-a-custom-timer-server-client"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.export": [[46, "torch-export"]], "Existing frameworks": [[46, "existing-frameworks"]], "Exporting a PyTorch Model": [[46, "exporting-a-pytorch-model"]], "An Example": [[46, "an-example"]], "Expressing Dynamism": [[46, "expressing-dynamism"]], "Serialization": [[46, "serialization"], [11, "serialization"], [2023, "serialization"]], "Specialization": [[46, "specialization"]], "Input shapes": [[46, "input-shapes"]], "Non-tensor inputs": [[46, "non-tensor-inputs"]], "Limitations of torch.export": [[46, "limitations-of-torch-export"]], "Graph Breaks": [[46, "graph-breaks"], [2045, "graph-breaks"], [2035, "graph-breaks"]], "Data/Shape-Dependent Control Flow": [[46, "data-shape-dependent-control-flow"]], "Missing Meta Kernels for Operators": [[46, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[46, null]], "Deep Dive for PyTorch Developers": [[46, null], [2026, null]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "FullyShardedDataParallel": [[49, "module-torch.distributed.fsdp"]], "torch.fft": [[48, "torch-fft"]], "Fast Fourier Transforms": [[48, "fast-fourier-transforms"]], "Helper Functions": [[48, "helper-functions"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [2037, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [2003, "tutorials"], [2011, "tutorials"], [2004, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torch.cpu": [[16, "module-torch.cpu"]], "Streams and events": [[16, "streams-and-events"], [17, "streams-and-events"]], "torch.cuda": [[17, "module-torch.cuda"]], "Random Number Generator": [[17, "random-number-generator"]], "Communication collectives": [[17, "communication-collectives"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Events": [[36, "module-torch.distributed.elastic.events"]], "API Methods": [[36, "api-methods"]], "Event Objects": [[36, "event-objects"]], "torch.utils.dlpack": [[32, "torch-utils-dlpack"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Customization": [[34, "customization"]], "Launcher": [[34, "launcher"]], "Rendezvous Handler": [[34, "rendezvous-handler"]], "Metric Handler": [[34, "metric-handler"]], "Events Handler": [[34, "events-handler"]], "Distributed Optimizers": [[29, "distributed-optimizers"]], "Generic Join Context Manager": [[26, "generic-join-context-manager"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [2038, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Error Propagation": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[35, "methods-and-classes"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Elastic Agent": [[33, "module-torch.distributed.elastic.agent"]], "Server": [[33, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[33, "concepts"]], "Extending the Agent": [[33, "extending-the-agent"]], "Watchdog in the Agent": [[33, "watchdog-in-the-agent"]], "torch.export IR Specification": [[47, "torch-export-ir-specification"]], "Assumptions": [[47, "assumptions"], [2013, "assumptions"]], "What is Export IR": [[47, "what-is-export-ir"]], "ExportedProgram": [[47, "exportedprogram"]], "Graph": [[47, "graph"]], "Node": [[47, "node"]], "call_function": [[47, "call-function"]], "Metadata": [[47, "metadata"]], "placeholder": [[47, "placeholder"]], "output": [[47, "output"]], "get_attr": [[47, "get-attr"]], "SymInt": [[47, "symint"]], "FakeTensor": [[47, "faketensor"]], "Pytree-able Types": [[47, "pytree-able-types"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Train script": [[45, "train-script"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "torch.__config__": [[13, "module-torch.__config__"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "torchrun (Elastic Launch)": [[43, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[43, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[43, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[43, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[43, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[43, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[43, "note-on-rendezvous-backend"]], "Definitions": [[43, "definitions"]], "Environment Variables": [[43, "environment-variables"]], "Deployment": [[43, "deployment"]], "Failure Modes": [[43, "failure-modes"]], "Membership Changes": [[43, "membership-changes"]], "Important Notices": [[43, "important-notices"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Custom Function utilities": [[1, "custom-function-utilities"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Debugging and anomaly detection": [[1, "debugging-and-anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Autograd": [[11, "autograd"]], "Probability distributions - torch.distributions": [[31, "module-torch.distributions"]], "Score function": [[31, "score-function"]], "Pathwise derivative": [[31, "pathwise-derivative"]], "Distribution": [[31, "distribution"]], "ExponentialFamily": [[31, "exponentialfamily"]], "Bernoulli": [[31, "bernoulli"]], "Beta": [[31, "beta"]], "Binomial": [[31, "binomial"]], "Categorical": [[31, "categorical"]], "Cauchy": [[31, "cauchy"]], "Chi2": [[31, "chi2"]], "ContinuousBernoulli": [[31, "continuousbernoulli"]], "Dirichlet": [[31, "dirichlet"]], "Exponential": [[31, "exponential"]], "FisherSnedecor": [[31, "fishersnedecor"]], "Gamma": [[31, "gamma"]], "Geometric": [[31, "geometric"]], "Gumbel": [[31, "gumbel"]], "HalfCauchy": [[31, "halfcauchy"]], "HalfNormal": [[31, "halfnormal"]], "Independent": [[31, "independent"]], "InverseGamma": [[31, "inversegamma"]], "Kumaraswamy": [[31, "kumaraswamy"]], "LKJCholesky": [[31, "lkjcholesky"]], "Laplace": [[31, "laplace"]], "LogNormal": [[31, "lognormal"]], "LowRankMultivariateNormal": [[31, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[31, "mixturesamefamily"]], "Multinomial": [[31, "multinomial"]], "MultivariateNormal": [[31, "multivariatenormal"]], "NegativeBinomial": [[31, "negativebinomial"]], "Normal": [[31, "normal"]], "OneHotCategorical": [[31, "onehotcategorical"]], "Pareto": [[31, "pareto"]], "Poisson": [[31, "poisson"]], "RelaxedBernoulli": [[31, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[31, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[31, "relaxedonehotcategorical"]], "StudentT": [[31, "studentt"]], "TransformedDistribution": [[31, "transformeddistribution"]], "Uniform": [[31, "uniform"]], "VonMises": [[31, "vonmises"]], "Weibull": [[31, "weibull"]], "Wishart": [[31, "wishart"]], "KL Divergence": [[31, "module-torch.distributions.kl"]], "Transforms": [[31, "module-torch.distributions.transforms"]], "Constraint Registry": [[31, "module-torch.distributions.constraint_registry"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Metrics": [[39, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[39, "metric-handlers"]], "Methods": [[39, "methods"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "DDP Communication Hooks": [[22, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[22, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[22, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[22, "default-communication-hooks"]], "PowerSGD Communication Hook": [[22, "powersgd-communication-hook"]], "PowerSGD State": [[22, "powersgd-state"]], "PowerSGD Hooks": [[22, "powersgd-hooks"]], "Debugging Communication Hooks": [[22, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[22, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[22, "acknowledgements"], [2004, "acknowledgements"]], "ConvReLU3d": [[714, "convrelu3d"], [705, "convrelu3d"], [722, "convrelu3d"]], "BNReLU2d": [[718, "bnrelu2d"], [695, "bnrelu2d"]], "ConvBn1d": [[707, "convbn1d"], [697, "convbn1d"]], "ConvReLU1d": [[703, "convrelu1d"], [720, "convrelu1d"]], "ConvBnReLU3d": [[702, "convbnrelu3d"], [712, "convbnrelu3d"]], "ConvReLU2d": [[704, "convrelu2d"], [713, "convrelu2d"], [721, "convrelu2d"]], "update_bn_stats": [[717, "update-bn-stats"]], "ConvBnReLU2d": [[701, "convbnrelu2d"], [711, "convbnrelu2d"]], "freeze_bn_stats": [[716, "freeze-bn-stats"]], "FXFloatFunctional": [[742, "fxfloatfunctional"]], "BNReLU3d": [[719, "bnrelu3d"], [696, "bnrelu3d"]], "LinearReLU": [[723, "linearrelu"], [706, "linearrelu"], [724, "linearrelu"], [715, "linearrelu"]], "ConvBnReLU1d": [[710, "convbnrelu1d"], [700, "convbnrelu1d"]], "ConvBn2d": [[708, "convbn2d"], [698, "convbn2d"]], "ConvBn3d": [[709, "convbn3d"], [699, "convbn3d"]], "FloatFunctional": [[743, "floatfunctional"]], "torch._foreach_reciprocal_": [[659, "torch-foreach-reciprocal"]], "torch.addcdiv": [[682, "torch-addcdiv"]], "torch.aminmax": [[692, "torch-aminmax"]], "torch._logging.set_logs": [[675, "torch-logging-set-logs"]], "torch.addbmm": [[681, "torch-addbmm"]], "torch.allclose": [[689, "torch-allclose"]], "torch.amax": [[690, "torch-amax"]], "torch._foreach_sigmoid_": [[663, "torch-foreach-sigmoid"]], "torch.addr": [[686, "torch-addr"]], "torch.add": [[680, "torch-add"]], "torch.amin": [[691, "torch-amin"]], "torch._foreach_sin_": [[665, "torch-foreach-sin"]], "torch._foreach_neg_": [[657, "torch-foreach-neg"]], "torch._foreach_reciprocal": [[658, "torch-foreach-reciprocal"]], "torch.abs": [[676, "torch-abs"]], "torch.all": [[688, "torch-all"]], "torch._foreach_zero_": [[674, "torch-foreach-zero"]], "torch._foreach_sinh_": [[667, "torch-foreach-sinh"]], "torch.absolute": [[677, "torch-absolute"]], "torch._foreach_sin": [[664, "torch-foreach-sin"]], "torch.addcmul": [[683, "torch-addcmul"]], "torch._foreach_log10_": [[650, "torch-foreach-log10"]], "torch._foreach_log_": [[655, "torch-foreach-log"]], "torch.acosh": [[679, "torch-acosh"]], "torch.addmm": [[684, "torch-addmm"]], "torch.addmv": [[685, "torch-addmv"]], "torch._foreach_trunc": [[672, "torch-foreach-trunc"]], "torch._foreach_trunc_": [[673, "torch-foreach-trunc"]], "torch._foreach_neg": [[656, "torch-foreach-neg"]], "torch._foreach_tan": [[670, "torch-foreach-tan"]], "torch._foreach_log2": [[653, "torch-foreach-log2"]], "torch._foreach_sqrt": [[668, "torch-foreach-sqrt"]], "torch.adjoint": [[687, "torch-adjoint"]], "torch.any": [[694, "torch-any"]], "torch._foreach_log2_": [[654, "torch-foreach-log2"]], "torch._foreach_tan_": [[671, "torch-foreach-tan"]], "torch._foreach_round_": [[661, "torch-foreach-round"]], "torch._foreach_sinh": [[666, "torch-foreach-sinh"]], "torch._foreach_sqrt_": [[669, "torch-foreach-sqrt"]], "torch._foreach_round": [[660, "torch-foreach-round"]], "torch._foreach_log1p": [[651, "torch-foreach-log1p"]], "torch.acos": [[678, "torch-acos"]], "torch.angle": [[693, "torch-angle"]], "torch._foreach_sigmoid": [[662, "torch-foreach-sigmoid"]], "torch._foreach_log1p_": [[652, "torch-foreach-log1p"]], "torch.utils": [[2049, "module-torch.utils"]], "Quantization API Reference": [[2009, "quantization-api-reference"], [2006, "quantization-api-reference"]], "torch.ao.quantization": [[2009, "torch-ao-quantization"]], "Top level APIs": [[2009, "top-level-apis"]], "Preparing model for quantization": [[2009, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[2009, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[2009, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[2009, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[2009, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[2009, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[2009, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[2009, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[2009, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[2009, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[2009, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[2009, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[2009, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[2009, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[2009, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2009, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[2009, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2009, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[2009, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[2009, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[2009, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[2009, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[2009, "quantized-dtypes-and-quantization-schemes"]], "torch.compiler API reference": [[2028, "torch-compiler-api-reference"]], "CUDAGraph Trees": [[2030, "cudagraph-trees"]], "CUDAGraph Background": [[2030, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[2030, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[2030, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[2030, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[2030, "cudagraph-trees-integration"]], "Limitations": [[2030, "limitations"], [2000, "limitations"], [2035, "limitations"], [2036, "limitations"]], "torch.overrides": [[2046, "module-torch.overrides"]], "PyTorch 2.0 Troubleshooting": [[2045, "pytorch-2-0-troubleshooting"]], "Title": [[2045, "id1"]], "Diagnosing Runtime Errors": [[2045, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[2045, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[2045, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[2045, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[2045, "minifying-backend-compiler-errors"]], "Performance Profiling": [[2045, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[2045, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[2045, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[2045, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[2045, "excessive-recompilation"]], "Accuracy Debugging": [[2045, "accuracy-debugging"]], "torch.ao.ns._numeric_suite_fx": [[2025, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[2025, "torch-ao-ns-fx-utils"]], "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models": [[2027, "aotinductor-ahead-of-time-compilation-for-torch-export-ed-models"]], "Model Compilation": [[2027, "model-compilation"]], "Inference in C++": [[2027, "inference-in-c"]], "Fake tensor": [[2034, "fake-tensor"]], "Related work": [[2034, "related-work"]], "Overall architecture": [[2034, "overall-architecture"], [2033, "overall-architecture"]], "API: the important bits": [[2034, "api-the-important-bits"]], "Details": [[2034, "details"]], "About the tensor subclass": [[2034, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[2034, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[2034, "how-does-the-converter-work"]], "Performance characteristics": [[2034, "performance-characteristics"]], "Fake tensor of fake tensor?": [[2034, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[2034, "interaction-with-dynamic-shapes"]], "Other resources": [[2034, "other-resources"]], "torch.compiler": [[2026, "torch-compiler"]], "Getting Started for PyTorch Users": [[2026, null]], "HowTo for PyTorch Backend Vendors": [[2026, null]], "Tensor Views": [[2019, "tensor-views"]], "Distributed Autograd Design": [[2012, "distributed-autograd-design"]], "Background": [[2012, "background"], [2013, "background"]], "Autograd recording during the forward pass": [[2012, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[2012, "distributed-autograd-context"]], "Distributed Backward Pass": [[2012, "distributed-backward-pass"]], "Computing dependencies": [[2012, "computing-dependencies"]], "FAST mode algorithm": [[2012, "fast-mode-algorithm"]], "SMART mode algorithm": [[2012, "smart-mode-algorithm"]], "Distributed Optimizer": [[2012, "distributed-optimizer"], [2011, "distributed-optimizer"]], "Simple end to end example": [[2012, "simple-end-to-end-example"]], "torch.random": [[2010, "module-torch.random"]], "torch.package": [[2003, "torch-package"]], "Packaging your first model": [[2003, "packaging-your-first-model"]], "How do I\u2026": [[2003, "how-do-i"]], "See what is inside a package?": [[2003, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[2003, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[2003, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[2003, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[2003, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[2003, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[2003, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[2003, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[2003, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[2003, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[2003, "re-export-an-imported-object"]], "Package a TorchScript module?": [[2003, "package-a-torchscript-module"]], "Explanation": [[2003, "explanation"]], "torch.package Format Overview": [[2003, "torch-package-format-overview"]], "Framework files": [[2003, "framework-files"]], "User files": [[2003, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[2003, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[2003, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[2003, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[2003, "dependency-management"]], "intern": [[2003, "intern"]], "extern": [[2003, "extern"]], "mock": [[2003, "mock"]], "Refactoring": [[2003, "refactoring"]], "Patterns": [[2003, "patterns"]], "torch.package sharp edges": [[2003, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[2003, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[2003, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[2003, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[2003, "mangling"]], "Quantization Accuracy Debugging": [[2007, "quantization-accuracy-debugging"], [2006, "quantization-accuracy-debugging"]], "Data insensitive error": [[2007, "data-insensitive-error"]], "General tips": [[2007, "general-tips"]], "Int8 quantization tips": [[2007, "int8-quantization-tips"]], "Data sensitive error": [[2007, "data-sensitive-error"]], "Implementation error": [[2007, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[2007, "numerical-debugging-tooling-prototype"]], "PyTorch 2.0 NNModule Support": [[2041, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[2041, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[2041, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[2041, "state-dict-hooks"]], "Using a pretrained model": [[2037, "using-a-pretrained-model"]], "Next Steps": [[2037, "next-steps"]], "PyTorch 2.0 Performance Dashboard": [[2042, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[2042, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[2042, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[2042, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[2042, "how-can-i-run-any-performance-test-locally"]], "Custom Backends": [[2031, "custom-backends"]], "Registering Custom Backends": [[2031, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[2031, "custom-backends-after-aotautograd"]], "Debugging Backend": [[2031, "debugging-backend"]], "Speedy Backend": [[2031, "speedy-backend"]], "Composable Backends": [[2031, "composable-backends"]], "Quantization Backend Configuration": [[2008, "quantization-backend-configuration"], [2006, "quantization-backend-configuration"]], "Default values for native configurations": [[2008, "default-values-for-native-configurations"]], "Type Info": [[2048, "type-info"]], "torch.finfo": [[2048, "torch-finfo"]], "torch.iinfo": [[2048, "torch-iinfo"]], "torch.sparse": [[2015, "torch-sparse"]], "Why and when to use sparsity": [[2015, "why-and-when-to-use-sparsity"]], "Functionality overview": [[2015, "functionality-overview"]], "Operator overview": [[2015, "operator-overview"]], "Sparse Semi-Structured Tensors": [[2015, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[2015, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[2015, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[2015, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[2015, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[2015, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[2015, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[2015, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[2015, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[2015, "sparse-csr-tensor"]], "Construction of CSR tensors": [[2015, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[2015, "csr-tensor-operations"]], "Sparse CSC Tensor": [[2015, "sparse-csc-tensor"]], "Construction of CSC tensors": [[2015, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[2015, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[2015, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[2015, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[2015, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[2015, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[2015, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[2015, "linear-algebra-operations"]], "Tensor methods and sparse": [[2015, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[2015, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[2015, "other-functions"]], "Unary functions": [[2015, "unary-functions"]], "torch.profiler": [[2005, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[2005, "intel-instrumentation-and-tracing-technology-apis"]], "Distributed RPC Framework": [[2011, "distributed-rpc-framework"]], "RPC": [[2011, "rpc"]], "TensorPipe Backend": [[2011, "tensorpipe-backend"]], "RRef": [[2011, "rref"]], "More Information about RRef": [[2011, null]], "RemoteModule": [[2011, "remotemodule"]], "Distributed Autograd Framework": [[2011, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[2011, null]], "torch.testing": [[2022, "module-torch.testing"]], "Example: AlexNet from PyTorch to ONNX": [[2000, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[2000, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[2000, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[2000, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[2000, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[2000, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[2000, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[2000, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[2000, "reads-gets"]], "Writes / Sets": [[2000, "writes-sets"]], "Adding support for operators": [[2000, "adding-support-for-operators"]], "ONNX exporter internals": [[2000, "onnx-exporter-internals"]], "ATen operators": [[2000, "aten-operators"]], "List of supported operators": [[2000, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[2000, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[2000, "torch-autograd-functions"]], "Static Symbolic Method": [[2000, "static-symbolic-method"]], "Inline Autograd Function": [[2000, "inline-autograd-function"]], "Custom operators": [[2000, "custom-operators"]], "ONNX-script functions": [[2000, "onnx-script-functions"]], "C++ Operators": [[2000, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[2000, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[2000, "classes"]], "torch.utils.tensorboard": [[2020, "module-torch.utils.tensorboard"]], "ONNX supported TorchScript operators": [[2001, "onnx-supported-torchscript-operators"]], "Supported operators": [[2001, "supported-operators"]], "ONNX support for TorchScript operators": [[2001, "id1"]], "Unsupported operators": [[2001, "unsupported-operators"], [2001, "id2"]], "torch.ao.ns._numeric_suite": [[2024, "torch-ao-ns-numeric-suite"]], "torch.Storage": [[2017, "torch-storage"]], "Understanding CUDA Memory Usage": [[2047, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[2047, "generating-a-snapshot"]], "Using the visualizer": [[2047, "using-the-visualizer"]], "Active Memory Timeline": [[2047, "active-memory-timeline"]], "Allocator State History": [[2047, "allocator-state-history"]], "Snapshot API Reference": [[2047, "snapshot-api-reference"]], "Dynamic shapes": [[2033, "dynamic-shapes"]], "Abridged public API": [[2033, "abridged-public-api"]], "The Guard Model": [[2033, "the-guard-model"]], "Abridged internal API": [[2033, "abridged-internal-api"]], "DimDynamic policy": [[2033, "dimdynamic-policy"]], "Unbacked SymInts": [[2033, "unbacked-symints"]], "Quantization": [[2006, "module-torch.ao.quantization"]], "Introduction to Quantization": [[2006, "introduction-to-quantization"]], "Quantization API Summary": [[2006, "quantization-api-summary"]], "Eager Mode Quantization": [[2006, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[2006, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[2006, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[2006, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[2006, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintaince mode) FX Graph Mode Quantization": [[2006, "prototype-maintaince-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[2006, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[2006, "quantization-stack"]], "Quantized Model": [[2006, "quantized-model"]], "Quantized Tensor": [[2006, "quantized-tensor"]], "Quantize and Dequantize": [[2006, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[2006, "quantized-operators-modules"]], "Quantized Engine": [[2006, "quantized-engine"]], "Quantization Flow": [[2006, "quantization-flow"]], "Observer and FakeQuantize": [[2006, "observer-and-fakequantize"]], "General Quantization Flow": [[2006, "general-quantization-flow"]], "Quantization Support Matrix": [[2006, "quantization-support-matrix"]], "Quantization Mode Support": [[2006, "quantization-mode-support"]], "Quantization Flow Support": [[2006, "quantization-flow-support"]], "Backend/Hardware Support": [[2006, "backend-hardware-support"]], "Note for native CPU backends": [[2006, "note-for-native-cpu-backends"]], "Operator Support": [[2006, "operator-support"]], "Quantization Customizations": [[2006, "quantization-customizations"]], "Quantization Custom Module API": [[2006, "quantization-custom-module-api"]], "Best Practices": [[2006, "best-practices"]], "Common Errors": [[2006, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[2006, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[2006, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[2006, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[2006, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.optim": [[2002, "module-torch.optim"]], "How to use an optimizer": [[2002, "how-to-use-an-optimizer"]], "Constructing it": [[2002, "constructing-it"]], "Per-parameter options": [[2002, "per-parameter-options"]], "Taking an optimization step": [[2002, "taking-an-optimization-step"]], "optimizer.step()": [[2002, "optimizer-step"]], "optimizer.step(closure)": [[2002, "optimizer-step-closure"]], "Base class": [[2002, "base-class"]], "Algorithms": [[2002, "algorithms"]], "How to adjust learning rate": [[2002, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[2002, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[2002, "constructing-averaged-models"]], "Custom averaging strategies": [[2002, "custom-averaging-strategies"]], "SWA learning rate schedules": [[2002, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[2002, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[2002, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[2002, "putting-it-all-together-ema"]], "torch.Tensor": [[2021, "torch-tensor"]], "Data types": [[2021, "data-types"]], "Initializing and basic operations": [[2021, "initializing-and-basic-operations"]], "Tensor class reference": [[2021, "tensor-class-reference"]], "IRs": [[2040, "irs"]], "Core Aten IR": [[2040, "core-aten-ir"]], "Prims IR": [[2040, "prims-ir"]], "torch.signal": [[2014, "module-torch.signal"]], "torch.signal.windows": [[2014, "module-torch.signal.windows"]], "Tensor Attributes": [[2018, "tensor-attributes"]], "torch.dtype": [[2018, "torch-dtype"]], "torch.device": [[2018, "torch-device"]], "torch.layout": [[2018, "torch-layout"]], "torch.memory_format": [[2018, "torch-memory-format"]], "Remote Reference Protocol": [[2013, "remote-reference-protocol"]], "RRef Lifetime": [[2013, "rref-lifetime"]], "Design Reasoning": [[2013, "design-reasoning"]], "Protocol Scenarios": [[2013, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[2013, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[2013, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[2013, "owner-share-rref-with-user"]], "User Share RRef with User": [[2013, "user-share-rref-with-user"]], "Writing Graph Transformations on ATen IR": [[2044, "writing-graph-transformations-on-aten-ir"]], "Passes": [[2044, "passes"]], "One-to-One Pass": [[2044, "one-to-one-pass"]], "One-to-X Pass": [[2044, "one-to-x-pass"]], "One-to-None Pass": [[2044, "one-to-none-pass"]], "Utilizing Local Information": [[2044, "utilizing-local-information"]], "Subgraph Rewriter": [[2044, "subgraph-rewriter"]], "Pass Manager": [[2044, "pass-manager"]], "Partitioner": [[2044, "partitioner"]], "Subgraph Matcher": [[2044, "subgraph-matcher"]], "Capability Based Partitioner": [[2044, "capability-based-partitioner"]], "TorchDynamo Deep Dive": [[2032, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[2032, "torchdynamo-internals"]], "What is a guard?": [[2032, "what-is-a-guard"]], "What is Dynamo doing?": [[2032, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[2032, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "torch.special": [[2016, "torch-special"]], "Does torch.compile support training?": [[2035, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[2035, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[2035, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[2035, "why-is-my-code-crashing"]], "Why is compilation slow?": [[2035, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[2035, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[2035, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[2035, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[2035, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[2035, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[2035, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[2035, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[2035, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[2035, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[2035, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[2035, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[2035, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[2035, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[2035, "which-numpy-features-does-torch-compile-support"]], "Can I compile NumPy code using torch.compile?": [[2035, "can-i-compile-numpy-code-using-torch-compile"]], "Can I execute NumPy code on CUDA and compute gradients via torch.compile?": [[2035, "can-i-execute-numpy-code-on-cuda-and-compute-gradients-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[2035, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[2035, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[2035, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[2035, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[2035, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[2035, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "Profiling to understand torch.compile performance": [[2043, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[2043, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[2043, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[2043, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[2043, "understanding-compilation-time"]], "Finding graph breaks": [[2043, "finding-graph-breaks"]], "Launch overhead": [[2043, "launch-overhead"]], "TorchDynamo APIs for fine-grained tracing": [[2036, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[2036, "id1"]], "torch._dynamo.disallow_in_graph": [[2036, "torch-dynamo-disallow-in-graph"]], "Pipeline Parallelism": [[2004, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[2004, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[2004, "pipelined-execution"]], "Pipe APIs in PyTorch": [[2004, "pipe-apis-in-pytorch"]], "Skip connections": [[2004, "skip-connections"]], "Best Practices for Backends": [[2029, "best-practices-for-backends"]], "x86 CPU": [[2029, "x86-cpu"]], "TorchInductor GPU Profiling": [[2039, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[2039, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[2039, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[2039, "benchmark-individual-triton-kernel"]], "torch": [[2023, "module-torch"]], "Tensors": [[2023, "tensors"]], "Creation Ops": [[2023, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[2023, "indexing-slicing-joining-mutating-ops"]], "Generators": [[2023, "generators"]], "Random sampling": [[2023, "random-sampling"]], "In-place random sampling": [[2023, "in-place-random-sampling"]], "Quasi-random sampling": [[2023, "quasi-random-sampling"]], "Parallelism": [[2023, "parallelism"]], "Math operations": [[2023, "math-operations"]], "Pointwise Ops": [[2023, "pointwise-ops"]], "Reduction Ops": [[2023, "reduction-ops"]], "Comparison Ops": [[2023, "comparison-ops"]], "Spectral Ops": [[2023, "spectral-ops"]], "Other Operations": [[2023, "other-operations"]], "BLAS and LAPACK Operations": [[2023, "blas-and-lapack-operations"]], "Foreach Operations": [[2023, "foreach-operations"]], "Symbolic Numbers": [[2023, "symbolic-numbers"]], "Export Path": [[2023, "export-path"]], "Control Flow": [[2023, "control-flow"]], "Optimizations": [[2023, "optimizations"]], "Operator Tags": [[2023, "operator-tags"]], "Guards Overview": [[2038, "guards-overview"]], "Caching and Guards Overview": [[2038, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[2038, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[2038, "instructiontranslator"]], "Making Guards": [[2038, "making-guards"]], "torch.Tensor.xlogy": [[616, "torch-tensor-xlogy"]], "torch._foreach_abs": [[620, "torch-foreach-abs"]], "torch.Tensor.xlogy_": [[617, "torch-tensor-xlogy"]], "torch._foreach_frac": [[644, "torch-foreach-frac"]], "torch.Tensor.vdot": [[611, "torch-tensor-vdot"]], "torch._foreach_ceil": [[628, "torch-foreach-ceil"]], "torch._foreach_lgamma": [[646, "torch-foreach-lgamma"]], "torch.Tensor.vsplit": [[614, "torch-tensor-vsplit"]], "torch.Tensor.where": [[615, "torch-tensor-where"]], "torch._foreach_erf": [[634, "torch-foreach-erf"]], "torch._foreach_erfc_": [[637, "torch-foreach-erfc"]], "torch._foreach_atan_": [[627, "torch-foreach-atan"]], "torch._foreach_floor_": [[643, "torch-foreach-floor"]], "torch._foreach_erf_": [[635, "torch-foreach-erf"]], "torch._foreach_log": [[648, "torch-foreach-log"]], "torch._foreach_expm1_": [[641, "torch-foreach-expm1"]], "torch.Tensor.view": [[612, "torch-tensor-view"]], "torch.Tensor.unflatten": [[601, "torch-tensor-unflatten"]], "torch._foreach_exp": [[638, "torch-foreach-exp"]], "torch.Tensor.zero_": [[618, "torch-tensor-zero"]], "torch._foreach_expm1": [[640, "torch-foreach-expm1"]], "torch.Tensor.unique_consecutive": [[605, "torch-tensor-unique-consecutive"]], "torch._foreach_cos_": [[631, "torch-foreach-cos"]], "torch.Tensor.unfold": [[602, "torch-tensor-unfold"]], "torch.Tensor.var": [[610, "torch-tensor-var"]], "torch._assert": [[619, "torch-assert"]], "torch.Tensor.untyped_storage": [[608, "torch-tensor-untyped-storage"]], "torch.Tensor.unbind": [[600, "torch-tensor-unbind"]], "torch.Tensor.view_as": [[613, "torch-tensor-view-as"]], "torch.Tensor.uniform_": [[603, "torch-tensor-uniform"]], "torch._foreach_asin": [[624, "torch-foreach-asin"]], "torch._foreach_log10": [[649, "torch-foreach-log10"]], "torch.Tensor.unsqueeze_": [[607, "torch-tensor-unsqueeze"]], "torch._foreach_erfc": [[636, "torch-foreach-erfc"]], "torch._foreach_cos": [[630, "torch-foreach-cos"]], "torch.Tensor.values": [[609, "torch-tensor-values"]], "torch._foreach_cosh": [[632, "torch-foreach-cosh"]], "torch._foreach_asin_": [[625, "torch-foreach-asin"]], "torch._foreach_ceil_": [[629, "torch-foreach-ceil"]], "torch.Tensor.unsqueeze": [[606, "torch-tensor-unsqueeze"]], "torch._foreach_cosh_": [[633, "torch-foreach-cosh"]], "torch._foreach_acos": [[622, "torch-foreach-acos"]], "torch.Tensor.unique": [[604, "torch-tensor-unique"]], "torch._foreach_frac_": [[645, "torch-foreach-frac"]], "torch._foreach_lgamma_": [[647, "torch-foreach-lgamma"]], "torch._foreach_floor": [[642, "torch-foreach-floor"]], "torch._foreach_exp_": [[639, "torch-foreach-exp"]], "torch._foreach_acos_": [[623, "torch-foreach-acos"]], "torch._foreach_atan": [[626, "torch-foreach-atan"]], "torch._foreach_abs_": [[621, "torch-foreach-abs"]], "torch.Tensor.take_along_dim": [[568, "torch-tensor-take-along-dim"]], "torch.Tensor.t_": [[566, "torch-tensor-t"]], "torch.Tensor.transpose_": [[588, "torch-tensor-transpose"]], "torch.Tensor.triu_": [[593, "torch-tensor-triu"]], "torch.Tensor.storage_type": [[554, "torch-tensor-storage-type"]], "torch.Tensor.t": [[565, "torch-tensor-t"]], "torch.Tensor.to_sparse_csr": [[583, "torch-tensor-to-sparse-csr"]], "torch.Tensor.subtract_": [[559, "torch-tensor-subtract"]], "torch.Tensor.stride": [[555, "torch-tensor-stride"]], "torch.Tensor.type": [[598, "torch-tensor-type"]], "torch.Tensor.to_sparse_csc": [[582, "torch-tensor-to-sparse-csc"]], "torch.Tensor.trunc": [[596, "torch-tensor-trunc"]], "torch.Tensor.sub_": [[557, "torch-tensor-sub"]], "torch.Tensor.sub": [[556, "torch-tensor-sub"]], "torch.Tensor.tril_": [[591, "torch-tensor-tril"]], "torch.Tensor.tanh_": [[572, "torch-tensor-tanh"]], "torch.Tensor.sum": [[560, "torch-tensor-sum"]], "torch.Tensor.tensor_split": [[573, "torch-tensor-tensor-split"]], "torch.Tensor.storage_offset": [[553, "torch-tensor-storage-offset"]], "torch.Tensor.to_sparse_bsr": [[580, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.subtract": [[558, "torch-tensor-subtract"]], "torch.Tensor.tan": [[569, "torch-tensor-tan"]], "torch.Tensor.trunc_": [[597, "torch-tensor-trunc"]], "torch.Tensor.swapaxes": [[563, "torch-tensor-swapaxes"]], "torch.Tensor.tile": [[574, "torch-tensor-tile"]], "torch.Tensor.to_dense": [[576, "torch-tensor-to-dense"]], "torch.Tensor.svd": [[562, "torch-tensor-svd"]], "torch.Tensor.type_as": [[599, "torch-tensor-type-as"]], "torch.Tensor.sum_to_size": [[561, "torch-tensor-sum-to-size"]], "torch.Tensor.to_mkldnn": [[577, "torch-tensor-to-mkldnn"]], "torch.Tensor.topk": [[585, "torch-tensor-topk"]], "torch.Tensor.trace": [[586, "torch-tensor-trace"]], "torch.Tensor.triangular_solve": [[589, "torch-tensor-triangular-solve"]], "torch.Tensor.std": [[550, "torch-tensor-std"]], "torch.Tensor.tanh": [[571, "torch-tensor-tanh"]], "torch.Tensor.swapdims": [[564, "torch-tensor-swapdims"]], "torch.Tensor.to_sparse": [[578, "torch-tensor-to-sparse"]], "torch.Tensor.tril": [[590, "torch-tensor-tril"]], "torch.Tensor.storage": [[552, "torch-tensor-storage"]], "torch.Tensor.tan_": [[570, "torch-tensor-tan"]], "torch.Tensor.triu": [[592, "torch-tensor-triu"]], "torch.Tensor.true_divide_": [[595, "torch-tensor-true-divide"]], "torch.Tensor.transpose": [[587, "torch-tensor-transpose"]], "torch.Tensor.to_sparse_bsc": [[579, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.stft": [[551, "torch-tensor-stft"]], "torch.Tensor.to": [[575, "torch-tensor-to"]], "torch.Tensor.true_divide": [[594, "torch-tensor-true-divide"]], "torch.Tensor.take": [[567, "torch-tensor-take"]], "torch.Tensor.tolist": [[584, "torch-tensor-tolist"]], "torch.Tensor.to_sparse_coo": [[581, "torch-tensor-to-sparse-coo"]], "torch.Tensor.scatter_reduce": [[511, "torch-tensor-scatter-reduce"]], "torch.Tensor.smm": [[535, "torch-tensor-smm"]], "torch.Tensor.sinc": [[528, "torch-tensor-sinc"]], "torch.Tensor.sparse_dim": [[538, "torch-tensor-sparse-dim"]], "torch.Tensor.signbit": [[525, "torch-tensor-signbit"]], "torch.Tensor.sqrt_": [[544, "torch-tensor-sqrt"]], "torch.Tensor.sinh": [[530, "torch-tensor-sinh"]], "torch.Tensor.rsqrt_": [[506, "torch-tensor-rsqrt"]], "torch.Tensor.sinh_": [[531, "torch-tensor-sinh"]], "torch.Tensor.scatter_add_": [[510, "torch-tensor-scatter-add"]], "torch.Tensor.sparse_resize_and_clear_": [[541, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.round": [[502, "torch-tensor-round"]], "torch.Tensor.round_": [[503, "torch-tensor-round"]], "torch.Tensor.sgn_": [[517, "torch-tensor-sgn"]], "torch.Tensor.sign": [[523, "torch-tensor-sign"]], "torch.Tensor.sin": [[526, "torch-tensor-sin"]], "torch.Tensor.share_memory_": [[519, "torch-tensor-share-memory"]], "torch.Tensor.select_scatter": [[514, "torch-tensor-select-scatter"]], "torch.Tensor.sort": [[537, "torch-tensor-sort"]], "torch.Tensor.square": [[545, "torch-tensor-square"]], "torch.Tensor.select": [[513, "torch-tensor-select"]], "torch.Tensor.sigmoid": [[521, "torch-tensor-sigmoid"]], "torch.Tensor.squeeze_": [[548, "torch-tensor-squeeze"]], "torch.Tensor.shape": [[518, "torch-tensor-shape"]], "torch.Tensor.sgn": [[516, "torch-tensor-sgn"]], "torch.Tensor.scatter_add": [[509, "torch-tensor-scatter-add"]], "torch.Tensor.sigmoid_": [[522, "torch-tensor-sigmoid"]], "torch.Tensor.roll": [[500, "torch-tensor-roll"]], "torch.Tensor.rsqrt": [[505, "torch-tensor-rsqrt"]], "torch.Tensor.sin_": [[527, "torch-tensor-sin"]], "torch.Tensor.softmax": [[536, "torch-tensor-softmax"]], "torch.Tensor.sparse_mask": [[539, "torch-tensor-sparse-mask"]], "torch.Tensor.split": [[542, "torch-tensor-split"]], "torch.Tensor.square_": [[546, "torch-tensor-square"]], "torch.Tensor.set_": [[515, "torch-tensor-set"]], "torch.Tensor.short": [[520, "torch-tensor-short"]], "torch.Tensor.slice_scatter": [[533, "torch-tensor-slice-scatter"]], "torch.Tensor.scatter_": [[508, "torch-tensor-scatter"]], "torch.Tensor.scatter": [[507, "torch-tensor-scatter"]], "torch.Tensor.slogdet": [[534, "torch-tensor-slogdet"]], "torch.Tensor.sqrt": [[543, "torch-tensor-sqrt"]], "torch.Tensor.scatter_reduce_": [[512, "torch-tensor-scatter-reduce"]], "torch.Tensor.sign_": [[524, "torch-tensor-sign"]], "torch.Tensor.row_indices": [[504, "torch-tensor-row-indices"]], "torch.Tensor.sparse_resize_": [[540, "torch-tensor-sparse-resize"]], "torch.Tensor.sspaddmm": [[549, "torch-tensor-sspaddmm"]], "torch.Tensor.size": [[532, "torch-tensor-size"]], "torch.Tensor.rot90": [[501, "torch-tensor-rot90"]], "torch.Tensor.squeeze": [[547, "torch-tensor-squeeze"]], "torch.Tensor.sinc_": [[529, "torch-tensor-sinc"]], "torch.Tensor.renorm_": [[487, "torch-tensor-renorm"]], "torch.Tensor.remainder_": [[485, "torch-tensor-remainder"]], "torch.Tensor.polygamma": [[460, "torch-tensor-polygamma"]], "torch.Tensor.q_per_channel_scales": [[468, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.reciprocal": [[479, "torch-tensor-reciprocal"]], "torch.Tensor.repeat": [[488, "torch-tensor-repeat"]], "torch.Tensor.retain_grad": [[498, "torch-tensor-retain-grad"]], "torch.Tensor.retains_grad": [[499, "torch-tensor-retains-grad"]], "torch.Tensor.prod": [[465, "torch-tensor-prod"]], "torch.Tensor.q_per_channel_axis": [[467, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.resolve_conj": [[496, "torch-tensor-resolve-conj"]], "torch.Tensor.permute": [[457, "torch-tensor-permute"]], "torch.Tensor.quantile": [[474, "torch-tensor-quantile"]], "torch.Tensor.pin_memory": [[458, "torch-tensor-pin-memory"]], "torch.Tensor.positive": [[462, "torch-tensor-positive"]], "torch.Tensor.pow_": [[464, "torch-tensor-pow"]], "torch.Tensor.resize_as_": [[495, "torch-tensor-resize-as"]], "torch.Tensor.reshape": [[492, "torch-tensor-reshape"]], "torch.Tensor.orgqr": [[454, "torch-tensor-orgqr"]], "torch.Tensor.requires_grad_": [[491, "torch-tensor-requires-grad"]], "torch.Tensor.qscheme": [[473, "torch-tensor-qscheme"]], "torch.Tensor.outer": [[456, "torch-tensor-outer"]], "torch.Tensor.put_": [[466, "torch-tensor-put"]], "torch.Tensor.q_zero_point": [[471, "torch-tensor-q-zero-point"]], "torch.Tensor.renorm": [[486, "torch-tensor-renorm"]], "torch.Tensor.random_": [[476, "torch-tensor-random"]], "torch.Tensor.rad2deg": [[475, "torch-tensor-rad2deg"]], "torch.Tensor.pinverse": [[459, "torch-tensor-pinverse"]], "torch.Tensor.resize_": [[494, "torch-tensor-resize"]], "torch.Tensor.remainder": [[484, "torch-tensor-remainder"]], "torch.Tensor.polygamma_": [[461, "torch-tensor-polygamma"]], "torch.Tensor.resolve_neg": [[497, "torch-tensor-resolve-neg"]], "torch.Tensor.repeat_interleave": [[489, "torch-tensor-repeat-interleave"]], "torch.Tensor.q_scale": [[470, "torch-tensor-q-scale"]], "torch.Tensor.pow": [[463, "torch-tensor-pow"]], "torch.Tensor.ravel": [[477, "torch-tensor-ravel"]], "torch.Tensor.q_per_channel_zero_points": [[469, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.numel": [[452, "torch-tensor-numel"]], "torch.Tensor.not_equal_": [[451, "torch-tensor-not-equal"]], "torch.Tensor.qr": [[472, "torch-tensor-qr"]], "torch.Tensor.not_equal": [[450, "torch-tensor-not-equal"]], "torch.Tensor.requires_grad": [[490, "torch-tensor-requires-grad"]], "torch.Tensor.reshape_as": [[493, "torch-tensor-reshape-as"]], "torch.Tensor.ormqr": [[455, "torch-tensor-ormqr"]], "torch.Tensor.register_hook": [[482, "torch-tensor-register-hook"]], "torch.Tensor.real": [[478, "torch-tensor-real"]], "torch.Tensor.reciprocal_": [[480, "torch-tensor-reciprocal"]], "torch.Tensor.register_post_accumulate_grad_hook": [[483, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.record_stream": [[481, "torch-tensor-record-stream"]], "torch.Tensor.numpy": [[453, "torch-tensor-numpy"]], "torch.Tensor.multiply": [[417, "torch-tensor-multiply"]], "torch.Tensor.mode": [[410, "torch-tensor-mode"]], "torch.Tensor.negative": [[437, "torch-tensor-negative"]], "torch.Tensor.neg": [[435, "torch-tensor-neg"]], "torch.Tensor.nbytes": [[430, "torch-tensor-nbytes"]], "torch.Tensor.nelement": [[439, "torch-tensor-nelement"]], "torch.Tensor.negative_": [[438, "torch-tensor-negative"]], "torch.Tensor.nextafter": [[445, "torch-tensor-nextafter"]], "torch.Tensor.median": [[406, "torch-tensor-median"]], "torch.Tensor.new_ones": [[442, "torch-tensor-new-ones"]], "torch.Tensor.neg_": [[436, "torch-tensor-neg"]], "torch.Tensor.mvlgamma": [[420, "torch-tensor-mvlgamma"]], "torch.Tensor.new_full": [[441, "torch-tensor-new-full"]], "torch.Tensor.ne": [[433, "torch-tensor-ne"]], "torch.Tensor.mul": [[414, "torch-tensor-mul"]], "torch.Tensor.mean": [[405, "torch-tensor-mean"]], "torch.Tensor.minimum": [[408, "torch-tensor-minimum"]], "torch.Tensor.nanmedian": [[425, "torch-tensor-nanmedian"]], "torch.Tensor.mv": [[419, "torch-tensor-mv"]], "torch.Tensor.ne_": [[434, "torch-tensor-ne"]], "torch.Tensor.ndim": [[431, "torch-tensor-ndim"]], "torch.Tensor.narrow": [[428, "torch-tensor-narrow"]], "torch.Tensor.nanmean": [[424, "torch-tensor-nanmean"]], "torch.Tensor.matrix_exp": [[401, "torch-tensor-matrix-exp"]], "torch.Tensor.multiply_": [[418, "torch-tensor-multiply"]], "torch.Tensor.movedim": [[412, "torch-tensor-movedim"]], "torch.Tensor.nextafter_": [[446, "torch-tensor-nextafter"]], "torch.Tensor.new_zeros": [[444, "torch-tensor-new-zeros"]], "torch.Tensor.mvlgamma_": [[421, "torch-tensor-mvlgamma"]], "torch.Tensor.ndimension": [[432, "torch-tensor-ndimension"]], "torch.Tensor.matmul": [[400, "torch-tensor-matmul"]], "torch.Tensor.mm": [[409, "torch-tensor-mm"]], "torch.Tensor.narrow_copy": [[429, "torch-tensor-narrow-copy"]], "torch.Tensor.nan_to_num": [[422, "torch-tensor-nan-to-num"]], "torch.Tensor.msort": [[413, "torch-tensor-msort"]], "torch.Tensor.matrix_power": [[402, "torch-tensor-matrix-power"]], "torch.Tensor.new_empty": [[440, "torch-tensor-new-empty"]], "torch.Tensor.norm": [[448, "torch-tensor-norm"]], "torch.Tensor.new_tensor": [[443, "torch-tensor-new-tensor"]], "torch.Tensor.moveaxis": [[411, "torch-tensor-moveaxis"]], "torch.Tensor.nansum": [[427, "torch-tensor-nansum"]], "torch.Tensor.max": [[403, "torch-tensor-max"]], "torch.Tensor.maximum": [[404, "torch-tensor-maximum"]], "torch.Tensor.mul_": [[415, "torch-tensor-mul"]], "torch.Tensor.multinomial": [[416, "torch-tensor-multinomial"]], "torch.Tensor.nonzero": [[447, "torch-tensor-nonzero"]], "torch.Tensor.normal_": [[449, "torch-tensor-normal"]], "torch.Tensor.nan_to_num_": [[423, "torch-tensor-nan-to-num"]], "torch.Tensor.nanquantile": [[426, "torch-tensor-nanquantile"]], "torch.Tensor.min": [[407, "torch-tensor-min"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.amp.grad_scaler"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cpu.amp.grad_scaler"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mha"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.nnpack"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [21, "module-torch.utils.data"], [21, "module-torch.utils.data.datapipes"], [21, "module-torch.utils.data.datapipes.dataframe"], [21, "module-torch.utils.data.datapipes.iter"], [21, "module-torch.utils.data.datapipes.map"], [21, "module-torch.utils.data.datapipes.utils"], [24, "module-torch.utils.deterministic"], [25, "module-torch.distributed"], [25, "module-torch.distributed.algorithms"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [25, "module-torch.distributed.algorithms.join"], [25, "module-torch.distributed.algorithms.model_averaging"], [25, "module-torch.distributed.algorithms.model_averaging.averagers"], [25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [25, "module-torch.distributed.algorithms.model_averaging.utils"], [25, "module-torch.distributed.argparse_util"], [25, "module-torch.distributed.c10d_logger"], [25, "module-torch.distributed.checkpoint.api"], [25, "module-torch.distributed.checkpoint.default_planner"], [25, "module-torch.distributed.checkpoint.filesystem"], [25, "module-torch.distributed.checkpoint.metadata"], [25, "module-torch.distributed.checkpoint.optimizer"], [25, "module-torch.distributed.checkpoint.planner"], [25, "module-torch.distributed.checkpoint.planner_helpers"], [25, "module-torch.distributed.checkpoint.resharding"], [25, "module-torch.distributed.checkpoint.state_dict"], [25, "module-torch.distributed.checkpoint.state_dict_loader"], [25, "module-torch.distributed.checkpoint.state_dict_saver"], [25, "module-torch.distributed.checkpoint.stateful"], [25, "module-torch.distributed.checkpoint.storage"], [25, "module-torch.distributed.checkpoint.utils"], [25, "module-torch.distributed.collective_utils"], [25, "module-torch.distributed.constants"], [25, "module-torch.distributed.device_mesh"], [25, "module-torch.distributed.distributed_c10d"], [25, "module-torch.distributed.elastic"], [25, "module-torch.distributed.elastic.agent.server.api"], [25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [25, "module-torch.distributed.elastic.events.api"], [25, "module-torch.distributed.elastic.events.handlers"], [25, "module-torch.distributed.elastic.metrics.api"], [25, "module-torch.distributed.elastic.multiprocessing.api"], [25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [25, "module-torch.distributed.elastic.multiprocessing.redirects"], [25, "module-torch.distributed.elastic.multiprocessing.tail_log"], [25, "module-torch.distributed.elastic.rendezvous.api"], [25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.etcd_server"], [25, "module-torch.distributed.elastic.rendezvous.etcd_store"], [25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.utils"], [25, "module-torch.distributed.elastic.timer.api"], [25, "module-torch.distributed.elastic.timer.file_based_local_timer"], [25, "module-torch.distributed.elastic.timer.local_timer"], [25, "module-torch.distributed.elastic.utils"], [25, "module-torch.distributed.elastic.utils.api"], [25, "module-torch.distributed.elastic.utils.data"], [25, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [25, "module-torch.distributed.elastic.utils.distributed"], [25, "module-torch.distributed.elastic.utils.log_level"], [25, "module-torch.distributed.elastic.utils.logging"], [25, "module-torch.distributed.elastic.utils.store"], [25, "module-torch.distributed.fsdp.api"], [25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [25, "module-torch.distributed.fsdp.sharded_grad_scaler"], [25, "module-torch.distributed.fsdp.wrap"], [25, "module-torch.distributed.launch"], [25, "module-torch.distributed.launcher"], [25, "module-torch.distributed.launcher.api"], [25, "module-torch.distributed.logging_handlers"], [25, "module-torch.distributed.nn"], [25, "module-torch.distributed.nn.api"], [25, "module-torch.distributed.nn.api.remote_module"], [25, "module-torch.distributed.nn.functional"], [25, "module-torch.distributed.nn.jit"], [25, "module-torch.distributed.nn.jit.instantiator"], [25, "module-torch.distributed.nn.jit.templates"], [25, "module-torch.distributed.nn.jit.templates.remote_module_template"], [25, "module-torch.distributed.optim.apply_optimizer_in_backward"], [25, "module-torch.distributed.optim.functional_adadelta"], [25, "module-torch.distributed.optim.functional_adagrad"], [25, "module-torch.distributed.optim.functional_adam"], [25, "module-torch.distributed.optim.functional_adamax"], [25, "module-torch.distributed.optim.functional_adamw"], [25, "module-torch.distributed.optim.functional_rmsprop"], [25, "module-torch.distributed.optim.functional_rprop"], [25, "module-torch.distributed.optim.functional_sgd"], [25, "module-torch.distributed.optim.named_optimizer"], [25, "module-torch.distributed.optim.optimizer"], [25, "module-torch.distributed.optim.post_localSGD_optimizer"], [25, "module-torch.distributed.optim.utils"], [25, "module-torch.distributed.optim.zero_redundancy_optimizer"], [25, "module-torch.distributed.pipeline"], [25, "module-torch.distributed.pipeline.sync"], [25, "module-torch.distributed.pipeline.sync.batchnorm"], [25, "module-torch.distributed.pipeline.sync.checkpoint"], [25, "module-torch.distributed.pipeline.sync.copy"], [25, "module-torch.distributed.pipeline.sync.dependency"], [25, "module-torch.distributed.pipeline.sync.microbatch"], [25, "module-torch.distributed.pipeline.sync.phony"], [25, "module-torch.distributed.pipeline.sync.pipe"], [25, "module-torch.distributed.pipeline.sync.pipeline"], [25, "module-torch.distributed.pipeline.sync.skip"], [25, "module-torch.distributed.pipeline.sync.skip.layout"], [25, "module-torch.distributed.pipeline.sync.skip.namespace"], [25, "module-torch.distributed.pipeline.sync.skip.portal"], [25, "module-torch.distributed.pipeline.sync.skip.skippable"], [25, "module-torch.distributed.pipeline.sync.skip.tracker"], [25, "module-torch.distributed.pipeline.sync.stream"], [25, "module-torch.distributed.pipeline.sync.utils"], [25, "module-torch.distributed.pipeline.sync.worker"], [25, "module-torch.distributed.remote_device"], [25, "module-torch.distributed.rendezvous"], [25, "module-torch.distributed.rpc.api"], [25, "module-torch.distributed.rpc.backend_registry"], [25, "module-torch.distributed.rpc.constants"], [25, "module-torch.distributed.rpc.functions"], [25, "module-torch.distributed.rpc.internal"], [25, "module-torch.distributed.rpc.options"], [25, "module-torch.distributed.rpc.rref_proxy"], [25, "module-torch.distributed.rpc.server_process_global_profiler"], [25, "module-torch.distributed.tensor"], [25, "module-torch.distributed.tensor.parallel.api"], [25, "module-torch.distributed.tensor.parallel.ddp"], [25, "module-torch.distributed.tensor.parallel.fsdp"], [25, "module-torch.distributed.tensor.parallel.input_reshard"], [25, "module-torch.distributed.tensor.parallel.style"], [25, "module-torch.distributed.utils"], [27, "module-torch.distributed.checkpoint"], [29, "module-torch.distributed.optim"], [30, "module-torch.distributed.tensor.parallel"], [31, "module-torch.distributions"], [31, "module-torch.distributions.bernoulli"], [31, "module-torch.distributions.beta"], [31, "module-torch.distributions.binomial"], [31, "module-torch.distributions.categorical"], [31, "module-torch.distributions.cauchy"], [31, "module-torch.distributions.chi2"], [31, "module-torch.distributions.constraint_registry"], [31, "module-torch.distributions.constraints"], [31, "module-torch.distributions.continuous_bernoulli"], [31, "module-torch.distributions.dirichlet"], [31, "module-torch.distributions.distribution"], [31, "module-torch.distributions.exp_family"], [31, "module-torch.distributions.exponential"], [31, "module-torch.distributions.fishersnedecor"], [31, "module-torch.distributions.gamma"], [31, "module-torch.distributions.geometric"], [31, "module-torch.distributions.gumbel"], [31, "module-torch.distributions.half_cauchy"], [31, "module-torch.distributions.half_normal"], [31, "module-torch.distributions.independent"], [31, "module-torch.distributions.inverse_gamma"], [31, "module-torch.distributions.kl"], [31, "module-torch.distributions.kumaraswamy"], [31, "module-torch.distributions.laplace"], [31, "module-torch.distributions.lkj_cholesky"], [31, "module-torch.distributions.log_normal"], [31, "module-torch.distributions.logistic_normal"], [31, "module-torch.distributions.lowrank_multivariate_normal"], [31, "module-torch.distributions.mixture_same_family"], [31, "module-torch.distributions.multinomial"], [31, "module-torch.distributions.multivariate_normal"], [31, "module-torch.distributions.negative_binomial"], [31, "module-torch.distributions.normal"], [31, "module-torch.distributions.one_hot_categorical"], [31, "module-torch.distributions.pareto"], [31, "module-torch.distributions.poisson"], [31, "module-torch.distributions.relaxed_bernoulli"], [31, "module-torch.distributions.relaxed_categorical"], [31, "module-torch.distributions.studentT"], [31, "module-torch.distributions.transformed_distribution"], [31, "module-torch.distributions.transforms"], [31, "module-torch.distributions.uniform"], [31, "module-torch.distributions.utils"], [31, "module-torch.distributions.von_mises"], [31, "module-torch.distributions.weibull"], [31, "module-torch.distributions.wishart"], [33, "module-torch.distributed.elastic.agent"], [33, "module-torch.distributed.elastic.agent.server"], [35, "module-torch.distributed.elastic.multiprocessing.errors"], [36, "module-torch.distributed.elastic.events"], [39, "module-torch.distributed.elastic.metrics"], [40, "module-torch.distributed.elastic.multiprocessing"], [42, "module-torch.distributed.elastic.rendezvous"], [42, "module-torch.distributed.elastic.rendezvous.registry"], [43, "module-torch.distributed.run"], [44, "module-torch.distributed.elastic.timer"], [46, "module-torch.export"], [46, "module-torch.export.custom_obj"], [46, "module-torch.export.dynamic_shapes"], [46, "module-torch.export.exported_program"], [46, "module-torch.export.graph_signature"], [46, "module-torch.export.unflatten"], [46, "module-torch.export.wrapper"], [48, "module-torch.fft"], [49, "module-torch.distributed.fsdp"], [51, "module-torch.func"], [56, "module-torch.__future__"], [57, "module-torch.futures"], [58, "module-torch.fx"], [58, "module-torch.fx.annotate"], [58, "module-torch.fx.config"], [58, "module-torch.fx.experimental"], [58, "module-torch.fx.experimental.accelerator_partitioner"], [58, "module-torch.fx.experimental.const_fold"], [58, "module-torch.fx.experimental.debug"], [58, "module-torch.fx.experimental.graph_gradual_typechecker"], [58, "module-torch.fx.experimental.merge_matmul"], [58, "module-torch.fx.experimental.meta_tracer"], [58, "module-torch.fx.experimental.migrate_gradual_types"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [58, "module-torch.fx.experimental.migrate_gradual_types.operation"], [58, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [58, "module-torch.fx.experimental.migrate_gradual_types.util"], [58, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [58, "module-torch.fx.experimental.normalize"], [58, "module-torch.fx.experimental.optimization"], [58, "module-torch.fx.experimental.partitioner_utils"], [58, "module-torch.fx.experimental.proxy_tensor"], [58, "module-torch.fx.experimental.recording"], [58, "module-torch.fx.experimental.refinement_types"], [58, "module-torch.fx.experimental.rewriter"], [58, "module-torch.fx.experimental.schema_type_annotation"], [58, "module-torch.fx.experimental.sym_node"], [58, "module-torch.fx.experimental.unification"], [58, "module-torch.fx.experimental.unification.core"], [58, "module-torch.fx.experimental.unification.dispatch"], [58, "module-torch.fx.experimental.unification.match"], [58, "module-torch.fx.experimental.unification.more"], [58, "module-torch.fx.experimental.unification.multipledispatch"], [58, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [58, "module-torch.fx.experimental.unification.multipledispatch.core"], [58, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [58, "module-torch.fx.experimental.unification.multipledispatch.utils"], [58, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [58, "module-torch.fx.experimental.unification.unification_tools"], [58, "module-torch.fx.experimental.unification.utils"], [58, "module-torch.fx.experimental.unification.variable"], [58, "module-torch.fx.experimental.unify_refinements"], [58, "module-torch.fx.experimental.validator"], [58, "module-torch.fx.graph"], [58, "module-torch.fx.graph_module"], [58, "module-torch.fx.immutable_collections"], [58, "module-torch.fx.interpreter"], [58, "module-torch.fx.node"], [58, "module-torch.fx.operator_schemas"], [58, "module-torch.fx.passes"], [58, "module-torch.fx.passes.annotate_getitem_nodes"], [58, "module-torch.fx.passes.backends"], [58, "module-torch.fx.passes.backends.cudagraphs"], [58, "module-torch.fx.passes.dialect"], [58, "module-torch.fx.passes.dialect.common"], [58, "module-torch.fx.passes.dialect.common.cse_pass"], [58, "module-torch.fx.passes.fake_tensor_prop"], [58, "module-torch.fx.passes.graph_drawer"], [58, "module-torch.fx.passes.graph_manipulation"], [58, "module-torch.fx.passes.infra"], [58, "module-torch.fx.passes.infra.partitioner"], [58, "module-torch.fx.passes.infra.pass_base"], [58, "module-torch.fx.passes.infra.pass_manager"], [58, "module-torch.fx.passes.net_min_base"], [58, "module-torch.fx.passes.operator_support"], [58, "module-torch.fx.passes.param_fetch"], [58, "module-torch.fx.passes.pass_manager"], [58, "module-torch.fx.passes.reinplace"], [58, "module-torch.fx.passes.shape_prop"], [58, "module-torch.fx.passes.split_module"], [58, "module-torch.fx.passes.split_utils"], [58, "module-torch.fx.passes.splitter_base"], [58, "module-torch.fx.passes.tests"], [58, "module-torch.fx.passes.tests.test_pass_manager"], [58, "module-torch.fx.passes.tools_common"], [58, "module-torch.fx.passes.utils"], [58, "module-torch.fx.passes.utils.common"], [58, "module-torch.fx.passes.utils.fuser_utils"], [58, "module-torch.fx.passes.utils.matcher_utils"], [58, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [58, "module-torch.fx.passes.utils.source_matcher_utils"], [58, "module-torch.fx.proxy"], [58, "module-torch.fx.subgraph_rewriter"], [58, "module-torch.fx.tensor_type"], [58, "module-torch.fx.traceback"], [59, "module-torch.fx.experimental.symbolic_shapes"], [1950, "module-torch.hub"], [1952, "module-torch.jit"], [1952, "module-torch.jit.annotations"], [1952, "module-torch.jit.frontend"], [1952, "module-torch.jit.generate_bytecode"], [1952, "module-torch.jit.mobile"], [1952, "module-torch.jit.quantized"], [1953, "module-torch.jit.supported_ops"], [1957, "module-torch.jit.unsupported_tensor_ops"], [1958, "module-torch.utils.jit"], [1959, "module-torch.library"], [1960, "module-torch.linalg"], [1961, "module-torch._logging"], [1962, "module-torch.masked"], [1962, "module-torch.masked.maskedtensor"], [1962, "module-torch.masked.maskedtensor.binary"], [1962, "module-torch.masked.maskedtensor.core"], [1962, "module-torch.masked.maskedtensor.creation"], [1962, "module-torch.masked.maskedtensor.passthrough"], [1962, "module-torch.masked.maskedtensor.reductions"], [1962, "module-torch.masked.maskedtensor.unary"], [1965, "module-torch.utils.model_zoo"], [1966, "module-torch.monitor"], [1967, "module-torch.mps"], [1967, "module-torch.mps.event"], [1967, "module-torch.mps.profiler"], [1968, "module-torch.multiprocessing"], [1968, "module-torch.multiprocessing.pool"], [1968, "module-torch.multiprocessing.queue"], [1968, "module-torch.multiprocessing.reductions"], [1968, "module-torch.multiprocessing.spawn"], [1971, "module-torch.nested"], [1972, "module-torch.nn"], [1972, "module-torch.nn.backends"], [1972, "module-torch.nn.backends.thnn"], [1972, "module-torch.nn.common_types"], [1972, "module-torch.nn.cpp"], [1972, "module-torch.nn.functional"], [1972, "module-torch.nn.grad"], [1972, "module-torch.nn.init"], [1972, "module-torch.nn.modules"], [1972, "module-torch.nn.modules.activation"], [1972, "module-torch.nn.modules.adaptive"], [1972, "module-torch.nn.modules.batchnorm"], [1972, "module-torch.nn.modules.channelshuffle"], [1972, "module-torch.nn.modules.container"], [1972, "module-torch.nn.modules.conv"], [1972, "module-torch.nn.modules.distance"], [1972, "module-torch.nn.modules.dropout"], [1972, "module-torch.nn.modules.flatten"], [1972, "module-torch.nn.modules.fold"], [1972, "module-torch.nn.modules.instancenorm"], [1972, "module-torch.nn.modules.lazy"], [1972, "module-torch.nn.modules.linear"], [1972, "module-torch.nn.modules.loss"], [1972, "module-torch.nn.modules.module"], [1972, "module-torch.nn.modules.normalization"], [1972, "module-torch.nn.modules.padding"], [1972, "module-torch.nn.modules.pixelshuffle"], [1972, "module-torch.nn.modules.pooling"], [1972, "module-torch.nn.modules.rnn"], [1972, "module-torch.nn.modules.sparse"], [1972, "module-torch.nn.modules.transformer"], [1972, "module-torch.nn.modules.upsampling"], [1972, "module-torch.nn.modules.utils"], [1972, "module-torch.nn.parallel"], [1972, "module-torch.nn.parallel.comm"], [1972, "module-torch.nn.parallel.data_parallel"], [1972, "module-torch.nn.parallel.distributed"], [1972, "module-torch.nn.parallel.parallel_apply"], [1972, "module-torch.nn.parallel.replicate"], [1972, "module-torch.nn.parallel.scatter_gather"], [1972, "module-torch.nn.parameter"], [1972, "module-torch.nn.utils"], [1972, "module-torch.nn.utils.clip_grad"], [1972, "module-torch.nn.utils.convert_parameters"], [1972, "module-torch.nn.utils.fusion"], [1972, "module-torch.nn.utils.init"], [1972, "module-torch.nn.utils.memory_format"], [1972, "module-torch.nn.utils.parametrizations"], [1972, "module-torch.nn.utils.parametrize"], [1972, "module-torch.nn.utils.prune"], [1972, "module-torch.nn.utils.rnn"], [1972, "module-torch.nn.utils.spectral_norm"], [1972, "module-torch.nn.utils.stateless"], [1972, "module-torch.nn.utils.weight_norm"], [1973, "module-torch.nn.attention"], [1974, "module-torch.nn.attention.bias"], [1997, "module-torch.onnx.errors"], [1997, "module-torch.onnx.operators"], [1997, "module-torch.onnx.symbolic_caffe2"], [1997, "module-torch.onnx.symbolic_helper"], [1997, "module-torch.onnx.symbolic_opset10"], [1997, "module-torch.onnx.symbolic_opset11"], [1997, "module-torch.onnx.symbolic_opset12"], [1997, "module-torch.onnx.symbolic_opset13"], [1997, "module-torch.onnx.symbolic_opset14"], [1997, "module-torch.onnx.symbolic_opset15"], [1997, "module-torch.onnx.symbolic_opset16"], [1997, "module-torch.onnx.symbolic_opset17"], [1997, "module-torch.onnx.symbolic_opset18"], [1997, "module-torch.onnx.symbolic_opset7"], [1997, "module-torch.onnx.symbolic_opset8"], [1997, "module-torch.onnx.symbolic_opset9"], [1997, "module-torch.onnx.utils"], [1997, "module-torch.onnx.verification"], [2000, "module-torch.onnx"], [2002, "module-torch.optim"], [2002, "module-torch.optim.adadelta"], [2002, "module-torch.optim.adagrad"], [2002, "module-torch.optim.adam"], [2002, "module-torch.optim.adamax"], [2002, "module-torch.optim.adamw"], [2002, "module-torch.optim.asgd"], [2002, "module-torch.optim.lbfgs"], [2002, "module-torch.optim.lr_scheduler"], [2002, "module-torch.optim.nadam"], [2002, "module-torch.optim.optimizer"], [2002, "module-torch.optim.radam"], [2002, "module-torch.optim.rmsprop"], [2002, "module-torch.optim.rprop"], [2002, "module-torch.optim.sgd"], [2002, "module-torch.optim.sparse_adam"], [2002, "module-torch.optim.swa_utils"], [2003, "module-torch.package"], [2003, "module-torch.package.analyze"], [2003, "module-torch.package.analyze.find_first_use_of_broken_modules"], [2003, "module-torch.package.analyze.is_from_package"], [2003, "module-torch.package.analyze.trace_dependencies"], [2003, "module-torch.package.file_structure_representation"], [2003, "module-torch.package.find_file_dependencies"], [2003, "module-torch.package.glob_group"], [2003, "module-torch.package.importer"], [2003, "module-torch.package.package_exporter"], [2003, "module-torch.package.package_importer"], [2005, "module-torch.profiler"], [2005, "module-torch.profiler.itt"], [2005, "module-torch.profiler.profiler"], [2005, "module-torch.profiler.python_tracer"], [2006, "module-torch.ao"], [2006, "module-torch.ao.nn"], [2006, "module-torch.ao.nn.intrinsic.modules.fused"], [2006, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [2006, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [2006, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [2006, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2006, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [2006, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [2006, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [2006, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [2006, "module-torch.ao.nn.qat.dynamic.modules.linear"], [2006, "module-torch.ao.nn.qat.modules.conv"], [2006, "module-torch.ao.nn.qat.modules.embedding_ops"], [2006, "module-torch.ao.nn.qat.modules.linear"], [2006, "module-torch.ao.nn.quantizable"], [2006, "module-torch.ao.nn.quantizable.modules"], [2006, "module-torch.ao.nn.quantizable.modules.activation"], [2006, "module-torch.ao.nn.quantizable.modules.rnn"], [2006, "module-torch.ao.nn.quantized"], [2006, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [2006, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [2006, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [2006, "module-torch.ao.nn.quantized.modules.activation"], [2006, "module-torch.ao.nn.quantized.modules.batchnorm"], [2006, "module-torch.ao.nn.quantized.modules.conv"], [2006, "module-torch.ao.nn.quantized.modules.dropout"], [2006, "module-torch.ao.nn.quantized.modules.embedding_ops"], [2006, "module-torch.ao.nn.quantized.modules.functional_modules"], [2006, "module-torch.ao.nn.quantized.modules.linear"], [2006, "module-torch.ao.nn.quantized.modules.normalization"], [2006, "module-torch.ao.nn.quantized.modules.rnn"], [2006, "module-torch.ao.nn.quantized.modules.utils"], [2006, "module-torch.ao.nn.quantized.reference"], [2006, "module-torch.ao.nn.quantized.reference.modules"], [2006, "module-torch.ao.nn.quantized.reference.modules.conv"], [2006, "module-torch.ao.nn.quantized.reference.modules.linear"], [2006, "module-torch.ao.nn.quantized.reference.modules.rnn"], [2006, "module-torch.ao.nn.quantized.reference.modules.sparse"], [2006, "module-torch.ao.nn.quantized.reference.modules.utils"], [2006, "module-torch.ao.nn.sparse"], [2006, "module-torch.ao.nn.sparse.quantized"], [2006, "module-torch.ao.nn.sparse.quantized.dynamic"], [2006, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [2006, "module-torch.ao.nn.sparse.quantized.linear"], [2006, "module-torch.ao.nn.sparse.quantized.utils"], [2006, "module-torch.ao.ns"], [2006, "module-torch.ao.ns.fx"], [2006, "module-torch.ao.ns.fx.graph_matcher"], [2006, "module-torch.ao.ns.fx.graph_passes"], [2006, "module-torch.ao.ns.fx.mappings"], [2006, "module-torch.ao.ns.fx.n_shadows_utils"], [2006, "module-torch.ao.ns.fx.ns_types"], [2006, "module-torch.ao.ns.fx.pattern_utils"], [2006, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [2006, "module-torch.ao.ns.fx.utils"], [2006, "module-torch.ao.ns.fx.weight_utils"], [2006, "module-torch.ao.pruning"], [2006, "module-torch.ao.pruning.scheduler"], [2006, "module-torch.ao.pruning.scheduler.base_scheduler"], [2006, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [2006, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [2006, "module-torch.ao.pruning.sparsifier"], [2006, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [2006, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [2006, "module-torch.ao.pruning.sparsifier.utils"], [2006, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [2006, "module-torch.ao.quantization"], [2006, "module-torch.ao.quantization.backend_config"], [2006, "module-torch.ao.quantization.backend_config.backend_config"], [2006, "module-torch.ao.quantization.backend_config.executorch"], [2006, "module-torch.ao.quantization.backend_config.fbgemm"], [2006, "module-torch.ao.quantization.backend_config.native"], [2006, "module-torch.ao.quantization.backend_config.observation_type"], [2006, "module-torch.ao.quantization.backend_config.onednn"], [2006, "module-torch.ao.quantization.backend_config.qnnpack"], [2006, "module-torch.ao.quantization.backend_config.tensorrt"], [2006, "module-torch.ao.quantization.backend_config.utils"], [2006, "module-torch.ao.quantization.backend_config.x86"], [2006, "module-torch.ao.quantization.fake_quantize"], [2006, "module-torch.ao.quantization.fuse_modules"], [2006, "module-torch.ao.quantization.fuser_method_mappings"], [2006, "module-torch.ao.quantization.fx"], [2006, "module-torch.ao.quantization.fx.convert"], [2006, "module-torch.ao.quantization.fx.custom_config"], [2006, "module-torch.ao.quantization.fx.fuse"], [2006, "module-torch.ao.quantization.fx.fuse_handler"], [2006, "module-torch.ao.quantization.fx.graph_module"], [2006, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [2006, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [2006, "module-torch.ao.quantization.fx.lstm_utils"], [2006, "module-torch.ao.quantization.fx.match_utils"], [2006, "module-torch.ao.quantization.fx.pattern_utils"], [2006, "module-torch.ao.quantization.fx.prepare"], [2006, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [2006, "module-torch.ao.quantization.fx.quantize_handler"], [2006, "module-torch.ao.quantization.fx.tracer"], [2006, "module-torch.ao.quantization.fx.utils"], [2006, "module-torch.ao.quantization.observer"], [2006, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [2006, "module-torch.ao.quantization.pt2e.eval_utils"], [2006, "module-torch.ao.quantization.pt2e.graph_utils"], [2006, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [2006, "module-torch.ao.quantization.pt2e.prepare"], [2006, "module-torch.ao.quantization.pt2e.qat_utils"], [2006, "module-torch.ao.quantization.pt2e.representation.rewrite"], [2006, "module-torch.ao.quantization.pt2e.utils"], [2006, "module-torch.ao.quantization.qconfig"], [2006, "module-torch.ao.quantization.qconfig_mapping"], [2006, "module-torch.ao.quantization.quant_type"], [2006, "module-torch.ao.quantization.quantization_mappings"], [2006, "module-torch.ao.quantization.quantize"], [2006, "module-torch.ao.quantization.quantize_fx"], [2006, "module-torch.ao.quantization.quantize_jit"], [2006, "module-torch.ao.quantization.quantize_pt2e"], [2006, "module-torch.ao.quantization.quantizer.composable_quantizer"], [2006, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [2006, "module-torch.ao.quantization.quantizer.quantizer"], [2006, "module-torch.ao.quantization.quantizer.utils"], [2006, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [2006, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [2006, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [2006, "module-torch.ao.quantization.stubs"], [2006, "module-torch.ao.quantization.utils"], [2006, "module-torch.nn.intrinsic.modules.fused"], [2006, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [2006, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [2006, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [2006, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2006, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [2006, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [2006, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [2006, "module-torch.nn.qat.dynamic.modules.linear"], [2006, "module-torch.nn.qat.modules.conv"], [2006, "module-torch.nn.qat.modules.embedding_ops"], [2006, "module-torch.nn.qat.modules.linear"], [2006, "module-torch.nn.quantizable.modules.activation"], [2006, "module-torch.nn.quantizable.modules.rnn"], [2006, "module-torch.nn.quantized.dynamic.modules.conv"], [2006, "module-torch.nn.quantized.dynamic.modules.linear"], [2006, "module-torch.nn.quantized.dynamic.modules.rnn"], [2006, "module-torch.nn.quantized.functional"], [2006, "module-torch.nn.quantized.modules.activation"], [2006, "module-torch.nn.quantized.modules.batchnorm"], [2006, "module-torch.nn.quantized.modules.conv"], [2006, "module-torch.nn.quantized.modules.dropout"], [2006, "module-torch.nn.quantized.modules.embedding_ops"], [2006, "module-torch.nn.quantized.modules.functional_modules"], [2006, "module-torch.nn.quantized.modules.linear"], [2006, "module-torch.nn.quantized.modules.normalization"], [2006, "module-torch.nn.quantized.modules.rnn"], [2006, "module-torch.nn.quantized.modules.utils"], [2006, "module-torch.quantization.fake_quantize"], [2006, "module-torch.quantization.fuse_modules"], [2006, "module-torch.quantization.fuser_method_mappings"], [2006, "module-torch.quantization.fx.convert"], [2006, "module-torch.quantization.fx.fuse"], [2006, "module-torch.quantization.fx.fusion_patterns"], [2006, "module-torch.quantization.fx.graph_module"], [2006, "module-torch.quantization.fx.match_utils"], [2006, "module-torch.quantization.fx.pattern_utils"], [2006, "module-torch.quantization.fx.prepare"], [2006, "module-torch.quantization.fx.quantization_patterns"], [2006, "module-torch.quantization.fx.quantization_types"], [2006, "module-torch.quantization.fx.utils"], [2006, "module-torch.quantization.observer"], [2006, "module-torch.quantization.qconfig"], [2006, "module-torch.quantization.quant_type"], [2006, "module-torch.quantization.quantization_mappings"], [2006, "module-torch.quantization.quantize"], [2006, "module-torch.quantization.quantize_fx"], [2006, "module-torch.quantization.quantize_jit"], [2006, "module-torch.quantization.stubs"], [2006, "module-torch.quantization.utils"], [2009, "module-torch.ao.nn.intrinsic"], [2009, "module-torch.ao.nn.intrinsic.modules"], [2009, "module-torch.ao.nn.intrinsic.qat"], [2009, "module-torch.ao.nn.intrinsic.qat.modules"], [2009, "module-torch.ao.nn.intrinsic.quantized"], [2009, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [2009, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [2009, "module-torch.ao.nn.intrinsic.quantized.modules"], [2009, "module-torch.ao.nn.qat"], [2009, "module-torch.ao.nn.qat.dynamic"], [2009, "module-torch.ao.nn.qat.dynamic.modules"], [2009, "module-torch.ao.nn.qat.modules"], [2009, "module-torch.ao.nn.quantized.dynamic"], [2009, "module-torch.ao.nn.quantized.dynamic.modules"], [2009, "module-torch.ao.nn.quantized.functional"], [2009, "module-torch.ao.nn.quantized.modules"], [2009, "module-torch.ao.quantization.pt2e"], [2009, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"], [2009, "module-torch.ao.quantization.pt2e.representation"], [2009, "module-torch.ao.quantization.quantizer"], [2009, "module-torch.nn.intrinsic"], [2009, "module-torch.nn.intrinsic.modules"], [2009, "module-torch.nn.intrinsic.qat"], [2009, "module-torch.nn.intrinsic.qat.modules"], [2009, "module-torch.nn.intrinsic.quantized"], [2009, "module-torch.nn.intrinsic.quantized.dynamic"], [2009, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [2009, "module-torch.nn.intrinsic.quantized.modules"], [2009, "module-torch.nn.qat"], [2009, "module-torch.nn.qat.dynamic"], [2009, "module-torch.nn.qat.dynamic.modules"], [2009, "module-torch.nn.qat.modules"], [2009, "module-torch.nn.quantizable"], [2009, "module-torch.nn.quantizable.modules"], [2009, "module-torch.nn.quantized"], [2009, "module-torch.nn.quantized.dynamic"], [2009, "module-torch.nn.quantized.dynamic.modules"], [2009, "module-torch.nn.quantized.modules"], [2009, "module-torch.quantization"], [2009, "module-torch.quantization.fx"], [2010, "module-torch.random"], [2011, "module-torch.distributed.autograd"], [2011, "module-torch.distributed.rpc"], [2014, "module-torch.signal"], [2014, "module-torch.signal.windows"], [2015, "module-torch.sparse"], [2016, "module-torch.special"], [2020, "module-torch.utils.tensorboard"], [2022, "module-torch.testing"], [2023, "module-torch"], [2023, "module-torch.contrib"], [2023, "module-torch.functional"], [2023, "module-torch.quasirandom"], [2023, "module-torch.return_types"], [2023, "module-torch.serialization"], [2023, "module-torch.signal.windows.windows"], [2023, "module-torch.sparse.semi_structured"], [2023, "module-torch.storage"], [2023, "module-torch.torch_version"], [2023, "module-torch.types"], [2023, "module-torch.utils.backcompat"], [2023, "module-torch.utils.hipify"], [2023, "module-torch.utils.model_dump"], [2023, "module-torch.utils.viz"], [2023, "module-torch.version"], [2024, "module-torch.ao.ns._numeric_suite"], [2025, "module-torch.ao.ns._numeric_suite_fx"], [2028, "module-torch.compiler"], [2046, "module-torch.overrides"], [2049, "module-torch.utils"], [2049, "module-torch.utils.backend_registration"], [2049, "module-torch.utils.benchmark.examples.blas_compare_setup"], [2049, "module-torch.utils.benchmark.examples.compare"], [2049, "module-torch.utils.benchmark.examples.fuzzer"], [2049, "module-torch.utils.benchmark.examples.op_benchmark"], [2049, "module-torch.utils.benchmark.examples.simple_timeit"], [2049, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [2049, "module-torch.utils.benchmark.op_fuzzers.binary"], [2049, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [2049, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [2049, "module-torch.utils.benchmark.op_fuzzers.spectral"], [2049, "module-torch.utils.benchmark.op_fuzzers.unary"], [2049, "module-torch.utils.benchmark.utils.common"], [2049, "module-torch.utils.benchmark.utils.compare"], [2049, "module-torch.utils.benchmark.utils.compile"], [2049, "module-torch.utils.benchmark.utils.cpp_jit"], [2049, "module-torch.utils.benchmark.utils.fuzzer"], [2049, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [2049, "module-torch.utils.benchmark.utils.timer"], [2049, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [2049, "module-torch.utils.bundled_inputs"], [2049, "module-torch.utils.checkpoint"], [2049, "module-torch.utils.collect_env"], [2049, "module-torch.utils.cpp_backtrace"], [2049, "module-torch.utils.cpp_extension"], [2049, "module-torch.utils.data.backward_compatibility"], [2049, "module-torch.utils.data.dataloader"], [2049, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [2049, "module-torch.utils.data.datapipes.dataframe.dataframes"], [2049, "module-torch.utils.data.datapipes.dataframe.datapipes"], [2049, "module-torch.utils.data.datapipes.dataframe.structures"], [2049, "module-torch.utils.data.datapipes.datapipe"], [2049, "module-torch.utils.data.datapipes.gen_pyi"], [2049, "module-torch.utils.data.datapipes.iter.callable"], [2049, "module-torch.utils.data.datapipes.iter.combinatorics"], [2049, "module-torch.utils.data.datapipes.iter.combining"], [2049, "module-torch.utils.data.datapipes.iter.filelister"], [2049, "module-torch.utils.data.datapipes.iter.fileopener"], [2049, "module-torch.utils.data.datapipes.iter.grouping"], [2049, "module-torch.utils.data.datapipes.iter.routeddecoder"], [2049, "module-torch.utils.data.datapipes.iter.selecting"], [2049, "module-torch.utils.data.datapipes.iter.sharding"], [2049, "module-torch.utils.data.datapipes.iter.streamreader"], [2049, "module-torch.utils.data.datapipes.iter.utils"], [2049, "module-torch.utils.data.datapipes.map.callable"], [2049, "module-torch.utils.data.datapipes.map.combinatorics"], [2049, "module-torch.utils.data.datapipes.map.combining"], [2049, "module-torch.utils.data.datapipes.map.grouping"], [2049, "module-torch.utils.data.datapipes.map.utils"], [2049, "module-torch.utils.data.datapipes.utils.common"], [2049, "module-torch.utils.data.datapipes.utils.decoder"], [2049, "module-torch.utils.data.datapipes.utils.snapshot"], [2049, "module-torch.utils.data.dataset"], [2049, "module-torch.utils.data.distributed"], [2049, "module-torch.utils.data.graph"], [2049, "module-torch.utils.data.graph_settings"], [2049, "module-torch.utils.data.sampler"], [2049, "module-torch.utils.dlpack"], [2049, "module-torch.utils.file_baton"], [2049, "module-torch.utils.flop_counter"], [2049, "module-torch.utils.hipify.constants"], [2049, "module-torch.utils.hipify.cuda_to_hip_mappings"], [2049, "module-torch.utils.hipify.hipify_python"], [2049, "module-torch.utils.hipify.version"], [2049, "module-torch.utils.hooks"], [2049, "module-torch.utils.jit.log_extract"], [2049, "module-torch.utils.mkldnn"], [2049, "module-torch.utils.mobile_optimizer"], [2049, "module-torch.utils.show_pickle"], [2049, "module-torch.utils.tensorboard.summary"], [2049, "module-torch.utils.tensorboard.writer"], [2049, "module-torch.utils.throughput_benchmark"], [2049, "module-torch.utils.weak"], [2050, "module-torch.xpu"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.amp.grad_scaler": [[0, "module-torch.amp.grad_scaler"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cpu.amp.grad_scaler": [[0, "module-torch.cpu.amp.grad_scaler"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpaparams (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPAParams"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "can_use_efficient_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_efficient_attention"]], "can_use_flash_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_flash_attention"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.flags"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.get_fastpath_enabled"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "set_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.set_fastpath_enabled"]], "set_flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.set_flags"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[21, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[21, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[21, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[21, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[21, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[21, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[21, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[21, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[21, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[21, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[21, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[21, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[21, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[21, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[21, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[21, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[21, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[21, "torch.utils.data.random_split"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[21, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[21, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[21, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[21, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[21, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[22, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[24, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[25, "torch.distributed.Backend"]], "devicemesh (class in torch.distributed.device_mesh)": [[25, "torch.distributed.device_mesh.DeviceMesh"]], "distbackenderror (class in torch.distributed)": [[25, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[25, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[25, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[25, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[25, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[25, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[25, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[25, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[25, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[25, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[25, "torch.distributed.TCPStore"]], "work (class in torch.distributed)": [[25, "torch.distributed.Work"]], "add() (in module torch.distributed.store)": [[25, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[25, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[25, "torch.distributed.all_gather_into_tensor"]], "all_gather_object() (in module torch.distributed)": [[25, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[25, "torch.distributed.all_reduce"]], "all_to_all() (in module torch.distributed)": [[25, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[25, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[25, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[25, "torch.distributed.batch_isend_irecv"]], "breakpoint() (in module torch.distributed)": [[25, "torch.distributed.breakpoint"]], "broadcast() (in module torch.distributed)": [[25, "torch.distributed.broadcast"]], "broadcast_object_list() (in module torch.distributed)": [[25, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[25, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[25, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[25, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[25, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[25, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[25, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[25, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[25, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[25, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[25, "torch.distributed.get_world_size"]], "init_device_mesh() (in module torch.distributed.device_mesh)": [[25, "torch.distributed.device_mesh.init_device_mesh"]], "init_process_group() (in module torch.distributed)": [[25, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[25, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[25, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[25, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[25, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[25, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[25, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[25, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[25, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[25, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[25, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[25, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[25, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[25, "torch.distributed.reduce"]], "reduce_op (class in torch.distributed)": [[25, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter"]], "reduce_scatter_tensor() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[25, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[25, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[25, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[25, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[25, "module-torch.distributed"]], "torch.distributed.algorithms": [[25, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[25, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[25, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[25, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[25, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[25, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[25, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[25, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[25, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[25, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[25, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[25, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[25, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[25, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[25, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[25, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[25, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[25, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.stateful": [[25, "module-torch.distributed.checkpoint.stateful"]], "torch.distributed.checkpoint.storage": [[25, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[25, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[25, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[25, "module-torch.distributed.constants"]], "torch.distributed.device_mesh": [[25, "module-torch.distributed.device_mesh"]], "torch.distributed.distributed_c10d": [[25, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[25, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[25, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[25, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[25, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[25, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[25, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[25, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[25, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[25, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[25, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[25, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[25, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[25, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[25, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[25, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[25, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[25, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[25, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[25, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[25, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[25, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[25, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[25, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[25, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[25, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[25, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[25, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[25, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[25, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[25, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[25, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[25, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[25, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[25, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[25, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[25, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[25, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[25, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[25, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[25, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[25, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[25, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[25, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[25, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[25, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[25, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[25, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[25, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[25, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[25, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[25, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[25, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[25, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[25, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[25, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[25, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[25, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[25, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[25, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[25, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[25, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[25, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[25, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[25, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[25, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[25, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[25, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[25, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[25, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[25, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[25, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[25, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[25, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[25, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[25, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[25, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[25, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[25, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[25, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[25, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[25, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[25, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[25, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[25, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[25, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[25, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.style": [[25, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[25, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[25, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[26, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[26, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "stateful (class in torch.distributed.checkpoint.stateful)": [[27, "torch.distributed.checkpoint.stateful.Stateful"]], "storagereader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint.planner)": [[27, "torch.distributed.checkpoint.planner.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_model_state_dict"]], "get_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_optimizer_state_dict"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.load"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.load_state_dict"]], "load_state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[27, "torch.distributed.checkpoint.stateful.Stateful.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "reset() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.reset"]], "reset() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.reset"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.save"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.save_state_dict"]], "set_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_model_state_dict"]], "set_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_optimizer_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[27, "torch.distributed.checkpoint.stateful.Stateful.state_dict"]], "tensor_storage_size() (torch.distributed.checkpoint.planner.writeitem method)": [[27, "torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size"]], "torch.distributed.checkpoint": [[27, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_device (torch.distributed.optim.zeroredundancyoptimizer property)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_device"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "join_process_group (torch.distributed.optim.zeroredundancyoptimizer property)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[29, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[29, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.ColwiseParallel"]], "preparemoduleinput (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.PrepareModuleInput"]], "preparemoduleoutput (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.RowwiseParallel"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[30, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[31, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[31, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[31, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[31, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[31, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[31, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[31, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[31, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[31, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[31, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[31, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[31, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[31, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[31, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[31, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[31, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[31, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.IndependentTransform"]], "inversegamma (class in torch.distributions.inverse_gamma)": [[31, "torch.distributions.inverse_gamma.InverseGamma"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[31, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[31, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[31, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[31, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[31, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[31, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[31, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[31, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[31, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[31, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[31, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[31, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[31, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[31, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[31, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[31, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.concentration"]], "concentration0 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[31, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[31, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.inverse_gamma.inversegamma method)": [[31, "torch.distributions.inverse_gamma.InverseGamma.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[31, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.inverse_gamma.inversegamma method)": [[31, "torch.distributions.inverse_gamma.InverseGamma.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "rate (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.rate"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[31, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[31, "module-torch.distributions"]], "torch.distributions.bernoulli": [[31, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[31, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[31, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[31, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[31, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[31, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[31, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[31, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[31, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[31, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[31, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[31, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[31, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[31, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[31, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[31, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[31, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[31, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[31, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[31, "module-torch.distributions.independent"]], "torch.distributions.inverse_gamma": [[31, "module-torch.distributions.inverse_gamma"]], "torch.distributions.kl": [[31, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[31, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[31, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[31, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[31, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[31, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[31, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[31, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[31, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[31, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[31, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[31, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[31, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[31, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[31, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[31, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[31, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[31, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[31, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[31, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[31, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[31, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[31, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[31, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[31, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[33, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[33, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[33, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[33, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[33, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[36, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[39, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[40, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[42, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvousgracefulexiterror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousGracefulExitError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[42, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[43, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[44, "module-torch.distributed.elastic.timer"]], "constraint (class in torch.export)": [[46, "torch.export.Constraint"]], "customobjargument (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.CustomObjArgument"]], "dim() (in module torch.export.dynamic_shapes)": [[46, "torch.export.dynamic_shapes.Dim"]], "exportbackwardsignature (class in torch.export)": [[46, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[46, "torch.export.ExportGraphSignature"]], "exportgraphsignature (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[46, "torch.export.ExportedProgram"]], "flatargsadapter (class in torch.export.unflatten)": [[46, "torch.export.unflatten.FlatArgsAdapter"]], "inputkind (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.InputKind"]], "inputspec (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.InputSpec"]], "interpretermodule (class in torch.export.unflatten)": [[46, "torch.export.unflatten.InterpreterModule"]], "modulecallentry (class in torch.export)": [[46, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[46, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.OutputKind"]], "outputspec (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.OutputSpec"]], "wrappermodule (class in torch.export.wrapper)": [[46, "torch.export.wrapper.WrapperModule"]], "adapt() (torch.export.unflatten.flatargsadapter method)": [[46, "torch.export.unflatten.FlatArgsAdapter.adapt"]], "buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[46, "torch.export.dims"]], "dynamic_dim() (in module torch.export.dynamic_shapes)": [[46, "torch.export.dynamic_shapes.dynamic_dim"]], "export() (in module torch.export)": [[46, "torch.export.export"]], "forward() (torch.export.wrapper.wrappermodule method)": [[46, "torch.export.wrapper.WrapperModule.forward"]], "get_replace_hook() (torch.export.graph_signature.exportgraphsignature method)": [[46, "torch.export.graph_signature.ExportGraphSignature.get_replace_hook"]], "load() (in module torch.export)": [[46, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[46, "torch.export.register_dataclass"]], "replace_all_uses() (torch.export.graph_signature.exportgraphsignature method)": [[46, "torch.export.graph_signature.ExportGraphSignature.replace_all_uses"]], "save() (in module torch.export)": [[46, "torch.export.save"]], "torch.export": [[46, "module-torch.export"]], "torch.export.custom_obj": [[46, "module-torch.export.custom_obj"]], "torch.export.dynamic_shapes": [[46, "module-torch.export.dynamic_shapes"]], "torch.export.exported_program": [[46, "module-torch.export.exported_program"]], "torch.export.graph_signature": [[46, "module-torch.export.graph_signature"]], "torch.export.unflatten": [[46, "module-torch.export.unflatten"]], "torch.export.wrapper": [[46, "module-torch.export.wrapper"]], "unflatten() (in module torch.export.unflatten)": [[46, "torch.export.unflatten.unflatten"]], "torch.fft": [[48, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "check_is_root() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.check_is_root"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[49, "module-torch.distributed.fsdp"]], "torch.func": [[51, "module-torch.func"]], "get_overwrite_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.get_overwrite_module_params_on_conversion"]], "get_swap_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.get_swap_module_params_on_conversion"]], "set_overwrite_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.set_overwrite_module_params_on_conversion"]], "set_swap_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.set_swap_module_params_on_conversion"]], "torch.__future__": [[56, "module-torch.__future__"]], "future (class in torch.futures)": [[57, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[57, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[57, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[57, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[57, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[57, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[57, "torch.futures.Future.then"]], "torch.futures": [[57, "module-torch.futures"]], "value() (torch.futures.future method)": [[57, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[57, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[57, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[58, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[58, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[58, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[58, "torch.fx.Node"]], "proxy (class in torch.fx)": [[58, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[58, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[58, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[58, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[58, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[58, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[58, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[58, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[58, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[58, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[58, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[58, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[58, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[58, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[58, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[58, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[58, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[58, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[58, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[58, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[58, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[58, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[58, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[58, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[58, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[58, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[58, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[58, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[58, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[58, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[58, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[58, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[58, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[58, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[58, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[58, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[58, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[58, "module-torch.fx"]], "torch.fx.annotate": [[58, "module-torch.fx.annotate"]], "torch.fx.config": [[58, "module-torch.fx.config"]], "torch.fx.experimental": [[58, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[58, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[58, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[58, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[58, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[58, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[58, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[58, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[58, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[58, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[58, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[58, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[58, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[58, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[58, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[58, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[58, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[58, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[58, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[58, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[58, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.unification": [[58, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[58, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[58, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[58, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[58, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[58, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[58, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[58, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[58, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[58, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[58, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[58, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[58, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[58, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[58, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[58, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[58, "module-torch.fx.graph"]], "torch.fx.graph_module": [[58, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[58, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[58, "module-torch.fx.interpreter"]], "torch.fx.node": [[58, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[58, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[58, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[58, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[58, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[58, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[58, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[58, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[58, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[58, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[58, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[58, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[58, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[58, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[58, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[58, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[58, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[58, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[58, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[58, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[58, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.shape_prop": [[58, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[58, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[58, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[58, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[58, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[58, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[58, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[58, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[58, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[58, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[58, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[58, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[58, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[58, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[58, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[58, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[58, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[58, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[58, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[58, "torch.fx.wrap"]], "torch.fx.experimental.symbolic_shapes": [[59, "module-torch.fx.experimental.symbolic_shapes"]], "generator (class in torch)": [[84, "torch.Generator"]], "device (torch.generator attribute)": [[84, "torch.Generator.device"]], "get_state() (torch.generator method)": [[84, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[84, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[84, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[84, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[84, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[85, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[86, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[87, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[88, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[89, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[90, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[91, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[92, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[93, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[94, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[95, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[96, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[97, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[98, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[99, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[100, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[101, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[102, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[103, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[104, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[105, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[106, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[107, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[108, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[109, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[110, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[111, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[112, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[113, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[114, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[115, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[116, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[117, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[118, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[119, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[120, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[121, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[122, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[123, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[124, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[125, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[126, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[127, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[128, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[129, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[130, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[131, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[132, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[133, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[134, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[135, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[136, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[137, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[138, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[139, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[140, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[141, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[142, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[143, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[144, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[145, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[146, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[147, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[148, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[149, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[150, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[151, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[152, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[153, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[154, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[155, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[156, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[157, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[159, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[160, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[161, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[163, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[165, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[166, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[167, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[168, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[169, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[170, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[171, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[172, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[173, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[174, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[175, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[176, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[177, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[178, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[179, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[180, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[181, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[182, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[183, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[184, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[185, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[186, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[187, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[188, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[189, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[190, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[191, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[192, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[193, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[194, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[195, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[196, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[197, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[198, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[199, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[200, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[201, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[202, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[203, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[204, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[205, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[206, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[207, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[208, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[209, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[210, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[211, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[212, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[213, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[214, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[215, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[216, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[217, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[218, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[219, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[220, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[221, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[222, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[223, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[224, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[225, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[226, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[227, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[228, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[229, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[230, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[231, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[232, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[233, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[234, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[235, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[236, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[237, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[238, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[239, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[240, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[241, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[242, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[243, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[244, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[245, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[246, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[247, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[248, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[249, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[250, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[251, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[252, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[253, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[254, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[255, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[256, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[257, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[258, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[259, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[260, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[261, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[262, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[263, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[264, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[265, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[266, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[267, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[268, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[269, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[270, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[271, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[272, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[273, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[274, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[275, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[276, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[277, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[278, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[279, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[280, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[281, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[282, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[283, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[284, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[285, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[286, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[287, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[288, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[289, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[290, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[291, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[292, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[293, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[294, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[295, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[296, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[297, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[298, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[299, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[300, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[301, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[302, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[303, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[304, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[305, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[306, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[307, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[308, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[309, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[310, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[311, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[312, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[313, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[314, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[315, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[316, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[317, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[318, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[319, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[320, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[321, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[322, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[323, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[324, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[325, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[326, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[327, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[328, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[329, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[330, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[331, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[332, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[333, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[334, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[335, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[336, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[337, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[338, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[339, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[340, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[341, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[342, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[343, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[344, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[345, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[346, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[347, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[348, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[349, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[350, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[351, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[352, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[353, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[354, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[355, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[356, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[357, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[358, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[359, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[360, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[361, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[362, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[363, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[364, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[365, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[366, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[367, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[368, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[369, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[370, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[371, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[372, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[373, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[374, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[375, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[376, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[377, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[378, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[379, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[380, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[381, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[382, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[383, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[384, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[385, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[386, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[387, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[388, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[389, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[390, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[391, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[392, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[393, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[394, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[395, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[396, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[397, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[398, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[399, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[400, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[401, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[402, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[403, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[404, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[405, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[406, "torch.Tensor.median"]], "min() (torch.tensor method)": [[407, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[408, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[409, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[410, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[411, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[412, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[413, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[414, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[415, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[416, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[417, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[418, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[419, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[420, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[421, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[422, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[423, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[424, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[425, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[426, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[427, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[428, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[429, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[430, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[431, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[432, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[433, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[434, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[435, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[436, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[437, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[438, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[439, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[440, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[441, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[442, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[443, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[444, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[445, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[446, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[447, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[448, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[449, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[450, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[451, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[452, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[453, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[454, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[455, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[456, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[457, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[458, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[459, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[460, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[461, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[462, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[463, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[464, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[465, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[466, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[467, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[468, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[469, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[470, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[471, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[472, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[473, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[474, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[475, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[476, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[477, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[478, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[479, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[480, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[481, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[482, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[483, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[484, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[485, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[486, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[487, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[488, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[489, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[490, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[491, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[492, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[493, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[494, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[495, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[496, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[497, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[498, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[499, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[500, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[501, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[502, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[503, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[504, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[505, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[506, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[507, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[508, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[509, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[510, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[511, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[512, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[513, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[514, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[515, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[516, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[517, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[518, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[519, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[520, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[521, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[522, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[523, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[524, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[525, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[526, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[527, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[528, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[529, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[530, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[531, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[532, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[533, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[534, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[535, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[536, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[537, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[538, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[539, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[540, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[541, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[542, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[543, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[544, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[545, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[546, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[547, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[548, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[549, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[550, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[551, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[552, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[553, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[554, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[555, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[556, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[557, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[558, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[559, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[560, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[561, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[562, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[563, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[564, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[565, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[566, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[567, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[568, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[569, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[570, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[571, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[572, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[573, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[574, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[575, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[576, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[577, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[578, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[579, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[580, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[584, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[585, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[586, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[587, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[588, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[589, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[590, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[591, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[592, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[593, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[594, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[595, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[596, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[597, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[598, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[599, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[600, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[601, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[602, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[603, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[604, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[605, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[606, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[607, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[608, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[609, "torch.Tensor.values"]], "var() (torch.tensor method)": [[610, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[611, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[612, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[613, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[614, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[615, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[616, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[617, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[618, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[619, "torch._assert"]], "_foreach_abs() (in module torch)": [[620, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[621, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[622, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[623, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[624, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[625, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[626, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[627, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[628, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[629, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[630, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[631, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[632, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[633, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[634, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[635, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[636, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[637, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[638, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[639, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[640, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[641, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[642, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[643, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[644, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[645, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[646, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[647, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[648, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[649, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[650, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[651, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[652, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[653, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[654, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[655, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[656, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[657, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[658, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[659, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[660, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[661, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[662, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[663, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[664, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[665, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[666, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[667, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[668, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[669, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[670, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[671, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[672, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[673, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[674, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[675, "torch._logging.set_logs"]], "abs() (in module torch)": [[676, "torch.abs"]], "absolute() (in module torch)": [[677, "torch.absolute"]], "acos() (in module torch)": [[678, "torch.acos"]], "acosh() (in module torch)": [[679, "torch.acosh"]], "add() (in module torch)": [[680, "torch.add"]], "addbmm() (in module torch)": [[681, "torch.addbmm"]], "addcdiv() (in module torch)": [[682, "torch.addcdiv"]], "addcmul() (in module torch)": [[683, "torch.addcmul"]], "addmm() (in module torch)": [[684, "torch.addmm"]], "addmv() (in module torch)": [[685, "torch.addmv"]], "addr() (in module torch)": [[686, "torch.addr"]], "adjoint() (in module torch)": [[687, "torch.adjoint"]], "all() (in module torch)": [[688, "torch.all"]], "allclose() (in module torch)": [[689, "torch.allclose"]], "amax() (in module torch)": [[690, "torch.amax"]], "amin() (in module torch)": [[691, "torch.amin"]], "aminmax() (in module torch)": [[692, "torch.aminmax"]], "angle() (in module torch)": [[693, "torch.angle"]], "any() (in module torch)": [[694, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[718, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[724, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[725, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[726, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[727, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[727, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[728, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[729, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[730, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[730, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[730, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[733, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[734, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[735, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[740, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[741, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[751, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[751, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[755, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[759, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[759, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[783, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[784, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[785, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[786, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[787, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[787, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[787, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[787, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[787, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[787, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[787, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[788, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[789, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[789, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[791, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[791, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[791, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[792, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[793, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "extra_repr() (torch.ao.quantization.fake_quantize.fixedqparamsfakequantize method)": [[796, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[809, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[810, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[810, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[810, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[810, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[810, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[811, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[811, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[813, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[815, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[815, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[815, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[819, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[819, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[820, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[833, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[834, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[835, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[849, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[850, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[851, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[852, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[853, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[854, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[855, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[857, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[858, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[859, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[860, "torch.arange"]], "arccos() (in module torch)": [[861, "torch.arccos"]], "arccosh() (in module torch)": [[862, "torch.arccosh"]], "arcsin() (in module torch)": [[863, "torch.arcsin"]], "arcsinh() (in module torch)": [[864, "torch.arcsinh"]], "arctan() (in module torch)": [[865, "torch.arctan"]], "arctan2() (in module torch)": [[866, "torch.arctan2"]], "arctanh() (in module torch)": [[867, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[868, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[869, "torch.argmax"]], "argmin() (in module torch)": [[870, "torch.argmin"]], "argsort() (in module torch)": [[871, "torch.argsort"]], "argwhere() (in module torch)": [[872, "torch.argwhere"]], "as_strided() (in module torch)": [[873, "torch.as_strided"]], "as_tensor() (in module torch)": [[874, "torch.as_tensor"]], "asarray() (in module torch)": [[875, "torch.asarray"]], "asin() (in module torch)": [[876, "torch.asin"]], "asinh() (in module torch)": [[877, "torch.asinh"]], "atan() (in module torch)": [[878, "torch.atan"]], "atan2() (in module torch)": [[879, "torch.atan2"]], "atanh() (in module torch)": [[880, "torch.atanh"]], "atleast_1d() (in module torch)": [[881, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[882, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[883, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[884, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[885, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[886, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[887, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[888, "torch.autograd.backward"]], "unpackeddualtensor (class in torch.autograd.forward_ad)": [[889, "torch.autograd.forward_ad.UnpackedDualTensor"]], "count() (torch.autograd.forward_ad.unpackeddualtensor method)": [[889, "torch.autograd.forward_ad.UnpackedDualTensor.count"]], "index() (torch.autograd.forward_ad.unpackeddualtensor method)": [[889, "torch.autograd.forward_ad.UnpackedDualTensor.index"]], "primal (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[889, "torch.autograd.forward_ad.UnpackedDualTensor.primal"]], "tangent (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[889, "torch.autograd.forward_ad.UnpackedDualTensor.tangent"]], "dual_level (class in torch.autograd.forward_ad)": [[890, "torch.autograd.forward_ad.dual_level"]], "enter_dual_level() (in module torch.autograd.forward_ad)": [[891, "torch.autograd.forward_ad.enter_dual_level"]], "exit_dual_level() (in module torch.autograd.forward_ad)": [[892, "torch.autograd.forward_ad.exit_dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[893, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[894, "torch.autograd.forward_ad.unpack_dual"]], "backwardcfunction (class in torch.autograd.function)": [[895, "torch.autograd.function.BackwardCFunction"]], "apply() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.apply"]], "apply_jvp() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.apply_jvp"]], "mark_dirty() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.backwardcfunction method)": [[895, "torch.autograd.function.BackwardCFunction.set_materialize_grads"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[896, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[897, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[898, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[899, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "inplacefunction (class in torch.autograd.function)": [[900, "torch.autograd.function.InplaceFunction"]], "backward() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.backward"]], "forward() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.forward"]], "jvp() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.jvp"]], "mark_dirty() (torch.autograd.function.inplacefunction method)": [[900, "torch.autograd.function.InplaceFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.inplacefunction method)": [[900, "torch.autograd.function.InplaceFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.inplacefunction method)": [[900, "torch.autograd.function.InplaceFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.inplacefunction method)": [[900, "torch.autograd.function.InplaceFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.inplacefunction method)": [[900, "torch.autograd.function.InplaceFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.setup_context"]], "vjp() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.vjp"]], "vmap() (torch.autograd.function.inplacefunction static method)": [[900, "torch.autograd.function.InplaceFunction.vmap"]], "nestediofunction (class in torch.autograd.function)": [[901, "torch.autograd.function.NestedIOFunction"]], "backward() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.backward"]], "backward_extended() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.backward_extended"]], "forward() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.forward"]], "forward_extended() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.forward_extended"]], "jvp() (torch.autograd.function.nestediofunction static method)": [[901, "torch.autograd.function.NestedIOFunction.jvp"]], "mark_dirty() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.save_for_forward"]], "saved_tensors (torch.autograd.function.nestediofunction property)": [[901, "torch.autograd.function.NestedIOFunction.saved_tensors"]], "set_materialize_grads() (torch.autograd.function.nestediofunction method)": [[901, "torch.autograd.function.NestedIOFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.nestediofunction static method)": [[901, "torch.autograd.function.NestedIOFunction.setup_context"]], "vjp() (torch.autograd.function.nestediofunction static method)": [[901, "torch.autograd.function.NestedIOFunction.vjp"]], "vmap() (torch.autograd.function.nestediofunction static method)": [[901, "torch.autograd.function.NestedIOFunction.vmap"]], "once_differentiable() (in module torch.autograd.function)": [[902, "torch.autograd.function.once_differentiable"]], "hessian() (in module torch.autograd.functional)": [[903, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[904, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[905, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[906, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[907, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[908, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[909, "torch.autograd.grad"]], "clone() (torch.autograd.grad_mode.inference_mode method)": [[910, "torch.autograd.grad_mode.inference_mode.clone"]], "inference_mode (class in torch.autograd.grad_mode)": [[910, "torch.autograd.grad_mode.inference_mode"]], "clone() (torch.autograd.grad_mode.set_grad_enabled method)": [[911, "torch.autograd.grad_mode.set_grad_enabled.clone"]], "set_grad_enabled (class in torch.autograd.grad_mode)": [[911, "torch.autograd.grad_mode.set_grad_enabled"]], "clone() (torch.autograd.grad_mode.set_multithreading_enabled method)": [[912, "torch.autograd.grad_mode.set_multithreading_enabled.clone"]], "set_multithreading_enabled (class in torch.autograd.grad_mode)": [[912, "torch.autograd.grad_mode.set_multithreading_enabled"]], "gradcheckerror": [[913, "torch.autograd.gradcheck.GradcheckError"]], "gradcheck() (in module torch.autograd.gradcheck)": [[914, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[915, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[916, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[917, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[918, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[919, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[920, "torch.autograd.graph.Node.register_prehook"]], "increment_version() (in module torch.autograd.graph)": [[921, "torch.autograd.graph.increment_version"]], "enforceunique (class in torch.autograd.profiler)": [[922, "torch.autograd.profiler.EnforceUnique"]], "see() (torch.autograd.profiler.enforceunique method)": [[922, "torch.autograd.profiler.EnforceUnique.see"]], "kinetosteptracker (class in torch.autograd.profiler)": [[923, "torch.autograd.profiler.KinetoStepTracker"]], "current_step() (torch.autograd.profiler.kinetosteptracker class method)": [[923, "torch.autograd.profiler.KinetoStepTracker.current_step"]], "erase_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[923, "torch.autograd.profiler.KinetoStepTracker.erase_step_count"]], "increment_step() (torch.autograd.profiler.kinetosteptracker class method)": [[923, "torch.autograd.profiler.KinetoStepTracker.increment_step"]], "init_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[923, "torch.autograd.profiler.KinetoStepTracker.init_step_count"]], "load_nvprof() (in module torch.autograd.profiler)": [[924, "torch.autograd.profiler.load_nvprof"]], "parse_nvprof_trace() (in module torch.autograd.profiler)": [[925, "torch.autograd.profiler.parse_nvprof_trace"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[926, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[927, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[928, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[929, "torch.autograd.profiler.profile.total_average"]], "record_function (class in torch.autograd.profiler)": [[930, "torch.autograd.profiler.record_function"]], "interval (class in torch.autograd.profiler_util)": [[931, "torch.autograd.profiler_util.Interval"]], "elapsed_us() (torch.autograd.profiler_util.interval method)": [[931, "torch.autograd.profiler_util.Interval.elapsed_us"]], "kernel (class in torch.autograd.profiler_util)": [[932, "torch.autograd.profiler_util.Kernel"]], "count() (torch.autograd.profiler_util.kernel method)": [[932, "torch.autograd.profiler_util.Kernel.count"]], "device (torch.autograd.profiler_util.kernel attribute)": [[932, "torch.autograd.profiler_util.Kernel.device"]], "duration (torch.autograd.profiler_util.kernel attribute)": [[932, "torch.autograd.profiler_util.Kernel.duration"]], "index() (torch.autograd.profiler_util.kernel method)": [[932, "torch.autograd.profiler_util.Kernel.index"]], "name (torch.autograd.profiler_util.kernel attribute)": [[932, "torch.autograd.profiler_util.Kernel.name"]], "memrecordsacc (class in torch.autograd.profiler_util)": [[933, "torch.autograd.profiler_util.MemRecordsAcc"]], "in_interval() (torch.autograd.profiler_util.memrecordsacc method)": [[933, "torch.autograd.profiler_util.MemRecordsAcc.in_interval"]], "stringtable (class in torch.autograd.profiler_util)": [[934, "torch.autograd.profiler_util.StringTable"]], "clear() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.clear"]], "copy() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.copy"]], "default_factory (torch.autograd.profiler_util.stringtable attribute)": [[934, "torch.autograd.profiler_util.StringTable.default_factory"]], "fromkeys() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.fromkeys"]], "get() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.get"]], "items() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.items"]], "keys() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.keys"]], "pop() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.pop"]], "popitem() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.popitem"]], "setdefault() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.setdefault"]], "update() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.update"]], "values() (torch.autograd.profiler_util.stringtable method)": [[934, "torch.autograd.profiler_util.StringTable.values"]], "baddbmm() (in module torch)": [[935, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[936, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[937, "torch.bernoulli"]], "bincount() (in module torch)": [[938, "torch.bincount"]], "bitwise_and() (in module torch)": [[939, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[940, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[941, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[942, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[943, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[944, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[945, "torch.blackman_window"]], "block_diag() (in module torch)": [[946, "torch.block_diag"]], "bmm() (in module torch)": [[947, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[948, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[949, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[950, "torch.broadcast_to"]], "bucketize() (in module torch)": [[951, "torch.bucketize"]], "can_cast() (in module torch)": [[952, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[953, "torch.cartesian_prod"]], "cat() (in module torch)": [[954, "torch.cat"]], "cdist() (in module torch)": [[955, "torch.cdist"]], "ceil() (in module torch)": [[956, "torch.ceil"]], "chain_matmul() (in module torch)": [[957, "torch.chain_matmul"]], "cholesky() (in module torch)": [[958, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[959, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[960, "torch.cholesky_solve"]], "chunk() (in module torch)": [[961, "torch.chunk"]], "clamp() (in module torch)": [[962, "torch.clamp"]], "clip() (in module torch)": [[963, "torch.clip"]], "clone() (in module torch)": [[964, "torch.clone"]], "column_stack() (in module torch)": [[965, "torch.column_stack"]], "combinations() (in module torch)": [[966, "torch.combinations"]], "compile() (in module torch)": [[967, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[968, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[969, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[970, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[971, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[972, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[973, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[974, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[975, "torch.compiler.reset"]], "complex() (in module torch)": [[976, "torch.complex"]], "concat() (in module torch)": [[977, "torch.concat"]], "concatenate() (in module torch)": [[978, "torch.concatenate"]], "cond() (in module torch)": [[979, "torch.cond"]], "conj() (in module torch)": [[980, "torch.conj"]], "conj_physical() (in module torch)": [[981, "torch.conj_physical"]], "copysign() (in module torch)": [[982, "torch.copysign"]], "corrcoef() (in module torch)": [[983, "torch.corrcoef"]], "cos() (in module torch)": [[984, "torch.cos"]], "cosh() (in module torch)": [[985, "torch.cosh"]], "count_nonzero() (in module torch)": [[986, "torch.count_nonzero"]], "cov() (in module torch)": [[987, "torch.cov"]], "stream (class in torch.cpu)": [[988, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[989, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[990, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[991, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[992, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[993, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[994, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[995, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[996, "torch.cpu.synchronize"]], "cross() (in module torch)": [[997, "torch.cross"]], "cudagraph (class in torch.cuda)": [[998, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[998, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[999, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[1000, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[1000, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[1000, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[1000, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[1000, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[1000, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[1000, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[1000, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[1001, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[1001, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[1001, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[1001, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[1001, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[1001, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[1002, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1003, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1003, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1003, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1003, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1003, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1003, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1004, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1005, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1006, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1007, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1008, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1009, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1010, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1011, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1012, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1013, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1014, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1015, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1016, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1017, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1018, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1019, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1020, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1021, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1022, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1023, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1024, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1025, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1026, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1027, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1028, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1029, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1030, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1031, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1032, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1033, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1034, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1035, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1036, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1037, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1038, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1039, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1040, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1041, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1042, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1043, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1044, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1045, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1046, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1047, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1048, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1049, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1050, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1051, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1052, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1053, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1054, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1055, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1056, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1057, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1058, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1059, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1060, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1061, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1062, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1063, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1064, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1065, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1066, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1067, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1068, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1069, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1070, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1071, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1072, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1073, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1074, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1075, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1076, "torch.cummax"]], "cummin() (in module torch)": [[1077, "torch.cummin"]], "cumprod() (in module torch)": [[1078, "torch.cumprod"]], "cumsum() (in module torch)": [[1079, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1080, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1081, "torch.deg2rad"]], "dequantize() (in module torch)": [[1082, "torch.dequantize"]], "det() (in module torch)": [[1083, "torch.det"]], "diag() (in module torch)": [[1084, "torch.diag"]], "diag_embed() (in module torch)": [[1085, "torch.diag_embed"]], "diagflat() (in module torch)": [[1086, "torch.diagflat"]], "diagonal() (in module torch)": [[1087, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1088, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1089, "torch.diff"]], "digamma() (in module torch)": [[1090, "torch.digamma"]], "dist() (in module torch)": [[1091, "torch.dist"]], "div() (in module torch)": [[1092, "torch.div"]], "divide() (in module torch)": [[1093, "torch.divide"]], "dot() (in module torch)": [[1094, "torch.dot"]], "dsplit() (in module torch)": [[1095, "torch.dsplit"]], "dstack() (in module torch)": [[1096, "torch.dstack"]], "einsum() (in module torch)": [[1097, "torch.einsum"]], "empty() (in module torch)": [[1098, "torch.empty"]], "empty_like() (in module torch)": [[1099, "torch.empty_like"]], "empty_strided() (in module torch)": [[1100, "torch.empty_strided"]], "enable_grad (class in torch)": [[1101, "torch.enable_grad"]], "eq() (in module torch)": [[1102, "torch.eq"]], "equal() (in module torch)": [[1103, "torch.equal"]], "erf() (in module torch)": [[1104, "torch.erf"]], "erfc() (in module torch)": [[1105, "torch.erfc"]], "erfinv() (in module torch)": [[1106, "torch.erfinv"]], "exp() (in module torch)": [[1107, "torch.exp"]], "exp2() (in module torch)": [[1108, "torch.exp2"]], "expm1() (in module torch)": [[1109, "torch.expm1"]], "eye() (in module torch)": [[1110, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1111, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1112, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1113, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1114, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1115, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1116, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1117, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1118, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1119, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1120, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1121, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1122, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1123, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1124, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1125, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1126, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1127, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1128, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1129, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1130, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1131, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1132, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1133, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1134, "torch.fft.rfftn"]], "fix() (in module torch)": [[1135, "torch.fix"]], "flatten() (in module torch)": [[1136, "torch.flatten"]], "flip() (in module torch)": [[1137, "torch.flip"]], "fliplr() (in module torch)": [[1138, "torch.fliplr"]], "flipud() (in module torch)": [[1139, "torch.flipud"]], "float_power() (in module torch)": [[1140, "torch.float_power"]], "floor() (in module torch)": [[1141, "torch.floor"]], "floor_divide() (in module torch)": [[1142, "torch.floor_divide"]], "fmax() (in module torch)": [[1143, "torch.fmax"]], "fmin() (in module torch)": [[1144, "torch.fmin"]], "fmod() (in module torch)": [[1145, "torch.fmod"]], "frac() (in module torch)": [[1146, "torch.frac"]], "frexp() (in module torch)": [[1147, "torch.frexp"]], "from_dlpack() (in module torch)": [[1148, "torch.from_dlpack"]], "from_file() (in module torch)": [[1149, "torch.from_file"]], "from_numpy() (in module torch)": [[1150, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1151, "torch.frombuffer"]], "full() (in module torch)": [[1152, "torch.full"]], "full_like() (in module torch)": [[1153, "torch.full_like"]], "functional_call() (in module torch.func)": [[1154, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1155, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1156, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1157, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1158, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1159, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1160, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1161, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1162, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1163, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1164, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1165, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1166, "torch.func.vmap"]], "dimconstraints (class in torch.fx.experimental.symbolic_shapes)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints"]], "add() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.add"]], "add_equality() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality"]], "forced_specializations() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations"]], "prettify_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results"]], "remove_redundant_dynamic_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results"]], "rewrite_with_congruences() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences"]], "solve() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1167, "torch.fx.experimental.symbolic_shapes.DimConstraints.solve"]], "dimdynamic (class in torch.fx.experimental.symbolic_shapes)": [[1168, "torch.fx.experimental.symbolic_shapes.DimDynamic"]], "equalityconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1169, "torch.fx.experimental.symbolic_shapes.EqualityConstraint"]], "relaxedunspecconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1170, "torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint"]], "shapeenv (class in torch.fx.experimental.symbolic_shapes)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv"]], "bind_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols"]], "check_equal() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal"]], "cleanup() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup"]], "create_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol"]], "create_symbolic_sizes_strides_storage_offset() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset"]], "create_symboolnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode"]], "create_symintnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode"]], "create_unbacked_symbool() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool"]], "create_unbacked_symfloat() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat"]], "create_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint"]], "create_unspecified_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol"]], "create_unspecified_symint_and_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol"]], "defer_runtime_assert() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert"]], "evaluate_expr() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_expr"]], "evaluate_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression"]], "evaluate_guards_for_args() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args"]], "format_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards"]], "freeze() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze"]], "get_nontrivial_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards"]], "get_shape_groups() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_shape_groups"]], "is_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint"]], "produce_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards"]], "produce_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression"]], "replace() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.replace"]], "simplify() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify"]], "size_hint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint"]], "suppress_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1171, "torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards"]], "statefulsymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1172, "torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext"]], "statelesssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1173, "torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext"]], "strictminmaxconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1174, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint"]], "render() (torch.fx.experimental.symbolic_shapes.strictminmaxconstraint method)": [[1174, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render"]], "subclasssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1175, "torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext"]], "symboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1176, "torch.fx.experimental.symbolic_shapes.SymbolicContext"]], "canonicalize_bool_expr() (in module torch.fx.experimental.symbolic_shapes)": [[1177, "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr"]], "constrain_range() (in module torch.fx.experimental.symbolic_shapes)": [[1178, "torch.fx.experimental.symbolic_shapes.constrain_range"]], "constrain_unify() (in module torch.fx.experimental.symbolic_shapes)": [[1179, "torch.fx.experimental.symbolic_shapes.constrain_unify"]], "definitely_false() (in module torch.fx.experimental.symbolic_shapes)": [[1180, "torch.fx.experimental.symbolic_shapes.definitely_false"]], "definitely_true() (in module torch.fx.experimental.symbolic_shapes)": [[1181, "torch.fx.experimental.symbolic_shapes.definitely_true"]], "guard_size_oblivious() (in module torch.fx.experimental.symbolic_shapes)": [[1182, "torch.fx.experimental.symbolic_shapes.guard_size_oblivious"]], "has_free_symbols() (in module torch.fx.experimental.symbolic_shapes)": [[1183, "torch.fx.experimental.symbolic_shapes.has_free_symbols"]], "hint_int() (in module torch.fx.experimental.symbolic_shapes)": [[1184, "torch.fx.experimental.symbolic_shapes.hint_int"]], "is_concrete_bool() (in module torch.fx.experimental.symbolic_shapes)": [[1185, "torch.fx.experimental.symbolic_shapes.is_concrete_bool"]], "is_concrete_int() (in module torch.fx.experimental.symbolic_shapes)": [[1186, "torch.fx.experimental.symbolic_shapes.is_concrete_int"]], "parallel_and() (in module torch.fx.experimental.symbolic_shapes)": [[1187, "torch.fx.experimental.symbolic_shapes.parallel_and"]], "parallel_or() (in module torch.fx.experimental.symbolic_shapes)": [[1188, "torch.fx.experimental.symbolic_shapes.parallel_or"]], "statically_known_true() (in module torch.fx.experimental.symbolic_shapes)": [[1189, "torch.fx.experimental.symbolic_shapes.statically_known_true"]], "sym_eq() (in module torch.fx.experimental.symbolic_shapes)": [[1190, "torch.fx.experimental.symbolic_shapes.sym_eq"]], "gather() (in module torch)": [[1191, "torch.gather"]], "gcd() (in module torch)": [[1192, "torch.gcd"]], "ge() (in module torch)": [[1193, "torch.ge"]], "geqrf() (in module torch)": [[1194, "torch.geqrf"]], "ger() (in module torch)": [[1195, "torch.ger"]], "get_default_device() (in module torch)": [[1196, "torch.get_default_device"]], "get_default_dtype() (in module torch)": [[1197, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1198, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1199, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1200, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1201, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1202, "torch.get_rng_state"]], "gradient() (in module torch)": [[1203, "torch.gradient"]], "greater() (in module torch)": [[1204, "torch.greater"]], "greater_equal() (in module torch)": [[1205, "torch.greater_equal"]], "gt() (in module torch)": [[1206, "torch.gt"]], "hamming_window() (in module torch)": [[1207, "torch.hamming_window"]], "hann_window() (in module torch)": [[1208, "torch.hann_window"]], "heaviside() (in module torch)": [[1209, "torch.heaviside"]], "histc() (in module torch)": [[1210, "torch.histc"]], "histogram() (in module torch)": [[1211, "torch.histogram"]], "histogramdd() (in module torch)": [[1212, "torch.histogramdd"]], "hsplit() (in module torch)": [[1213, "torch.hsplit"]], "hspmm() (in module torch)": [[1214, "torch.hspmm"]], "hstack() (in module torch)": [[1215, "torch.hstack"]], "hypot() (in module torch)": [[1216, "torch.hypot"]], "i0() (in module torch)": [[1217, "torch.i0"]], "igamma() (in module torch)": [[1218, "torch.igamma"]], "igammac() (in module torch)": [[1219, "torch.igammac"]], "imag() (in module torch)": [[1220, "torch.imag"]], "index_add() (in module torch)": [[1221, "torch.index_add"]], "index_copy() (in module torch)": [[1222, "torch.index_copy"]], "index_reduce() (in module torch)": [[1223, "torch.index_reduce"]], "index_select() (in module torch)": [[1224, "torch.index_select"]], "initial_seed() (in module torch)": [[1225, "torch.initial_seed"]], "inner() (in module torch)": [[1226, "torch.inner"]], "inverse() (in module torch)": [[1227, "torch.inverse"]], "is_complex() (in module torch)": [[1228, "torch.is_complex"]], "is_conj() (in module torch)": [[1229, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1230, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1231, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1232, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1233, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1234, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1235, "torch.is_storage"]], "is_tensor() (in module torch)": [[1236, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1237, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1238, "torch.isclose"]], "isfinite() (in module torch)": [[1239, "torch.isfinite"]], "isin() (in module torch)": [[1240, "torch.isin"]], "isinf() (in module torch)": [[1241, "torch.isinf"]], "isnan() (in module torch)": [[1242, "torch.isnan"]], "isneginf() (in module torch)": [[1243, "torch.isneginf"]], "isposinf() (in module torch)": [[1244, "torch.isposinf"]], "isreal() (in module torch)": [[1245, "torch.isreal"]], "istft() (in module torch)": [[1246, "torch.istft"]], "attribute (class in torch.jit)": [[1247, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1247, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1247, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1247, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1247, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1248, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1248, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1248, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1248, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1249, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1249, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1249, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1249, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1249, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1249, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1250, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1251, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1252, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1253, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1254, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1255, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1256, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1257, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1258, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1259, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1260, "torch.jit.save"]], "script() (in module torch.jit)": [[1261, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1262, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1263, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1264, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1265, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1266, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1267, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1268, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1269, "torch.kaiser_window"]], "kron() (in module torch)": [[1270, "torch.kron"]], "kthvalue() (in module torch)": [[1271, "torch.kthvalue"]], "lcm() (in module torch)": [[1272, "torch.lcm"]], "ldexp() (in module torch)": [[1273, "torch.ldexp"]], "le() (in module torch)": [[1274, "torch.le"]], "lerp() (in module torch)": [[1275, "torch.lerp"]], "less() (in module torch)": [[1276, "torch.less"]], "less_equal() (in module torch)": [[1277, "torch.less_equal"]], "lgamma() (in module torch)": [[1278, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1279, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1280, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1281, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1282, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1283, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1284, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1285, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1286, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1287, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1288, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1289, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1290, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1291, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1292, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1293, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1294, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1295, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1296, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1297, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1298, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1299, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1300, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1301, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1302, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1303, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1304, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1305, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1306, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1307, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1308, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1309, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1310, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1311, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1312, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1313, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1314, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1315, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1316, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1317, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1318, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1319, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1320, "torch.linspace"]], "load() (in module torch)": [[1321, "torch.load"]], "lobpcg() (in module torch)": [[1322, "torch.lobpcg"]], "log() (in module torch)": [[1323, "torch.log"]], "log10() (in module torch)": [[1324, "torch.log10"]], "log1p() (in module torch)": [[1325, "torch.log1p"]], "log2() (in module torch)": [[1326, "torch.log2"]], "logaddexp() (in module torch)": [[1327, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1328, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1329, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1330, "torch.logdet"]], "logical_and() (in module torch)": [[1331, "torch.logical_and"]], "logical_not() (in module torch)": [[1332, "torch.logical_not"]], "logical_or() (in module torch)": [[1333, "torch.logical_or"]], "logical_xor() (in module torch)": [[1334, "torch.logical_xor"]], "logit() (in module torch)": [[1335, "torch.logit"]], "logspace() (in module torch)": [[1336, "torch.logspace"]], "logsumexp() (in module torch)": [[1337, "torch.logsumexp"]], "lt() (in module torch)": [[1338, "torch.lt"]], "lu() (in module torch)": [[1339, "torch.lu"]], "lu_solve() (in module torch)": [[1340, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1341, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1342, "torch.manual_seed"]], "masked_select() (in module torch)": [[1343, "torch.masked_select"]], "matmul() (in module torch)": [[1344, "torch.matmul"]], "matrix_exp() (in module torch)": [[1345, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1346, "torch.matrix_power"]], "max() (in module torch)": [[1347, "torch.max"]], "maximum() (in module torch)": [[1348, "torch.maximum"]], "mean() (in module torch)": [[1349, "torch.mean"]], "median() (in module torch)": [[1350, "torch.median"]], "meshgrid() (in module torch)": [[1351, "torch.meshgrid"]], "min() (in module torch)": [[1352, "torch.min"]], "minimum() (in module torch)": [[1353, "torch.minimum"]], "mm() (in module torch)": [[1354, "torch.mm"]], "mode() (in module torch)": [[1355, "torch.mode"]], "moveaxis() (in module torch)": [[1356, "torch.moveaxis"]], "movedim() (in module torch)": [[1357, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1358, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1359, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1360, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1361, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1361, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1361, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1361, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1361, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1361, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1362, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1363, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1364, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1365, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1366, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1367, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1368, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1369, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1370, "torch.mps.synchronize"]], "msort() (in module torch)": [[1371, "torch.msort"]], "mul() (in module torch)": [[1372, "torch.mul"]], "multinomial() (in module torch)": [[1373, "torch.multinomial"]], "multiply() (in module torch)": [[1374, "torch.multiply"]], "mv() (in module torch)": [[1375, "torch.mv"]], "mvlgamma() (in module torch)": [[1376, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1377, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1378, "torch.nanmean"]], "nanmedian() (in module torch)": [[1379, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1380, "torch.nanquantile"]], "nansum() (in module torch)": [[1381, "torch.nansum"]], "narrow() (in module torch)": [[1382, "torch.narrow"]], "narrow_copy() (in module torch)": [[1383, "torch.narrow_copy"]], "ne() (in module torch)": [[1384, "torch.ne"]], "neg() (in module torch)": [[1385, "torch.neg"]], "negative() (in module torch)": [[1386, "torch.negative"]], "nextafter() (in module torch)": [[1387, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1388, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1389, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1390, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1391, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1391, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1391, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1392, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1393, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1394, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1395, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1396, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1397, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1398, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1399, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1400, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1401, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1402, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1403, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1404, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1405, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1406, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1407, "torch.nn.ChannelShuffle"]], "circularpad1d (class in torch.nn)": [[1408, "torch.nn.CircularPad1d"]], "circularpad2d (class in torch.nn)": [[1409, "torch.nn.CircularPad2d"]], "circularpad3d (class in torch.nn)": [[1410, "torch.nn.CircularPad3d"]], "constantpad1d (class in torch.nn)": [[1411, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1412, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1413, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1414, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1415, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1416, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1417, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1418, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1419, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1420, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1421, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1422, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1423, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1424, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1425, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1426, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1427, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1428, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1429, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1429, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1430, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1430, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1430, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1431, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1432, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1433, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1434, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1435, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1436, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1437, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1438, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1439, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1440, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1441, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1442, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1443, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1444, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1445, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1446, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1447, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1448, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1449, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1450, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1451, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1452, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1453, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1454, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1455, "torch.nn.LPPool2d"]], "lppool3d (class in torch.nn)": [[1456, "torch.nn.LPPool3d"]], "lstm (class in torch.nn)": [[1457, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1458, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1459, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1460, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1460, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1461, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1461, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1462, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1462, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1463, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1463, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1464, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1464, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1465, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1465, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1466, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1466, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1467, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1467, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1468, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1468, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1469, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1469, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1470, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1470, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1471, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1471, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1472, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1472, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1473, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1474, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1475, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1476, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1477, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1478, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1479, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1480, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1481, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1482, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1483, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1484, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1485, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1486, "torch.nn.Mish"]], "module (class in torch.nn)": [[1487, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1487, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1487, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1487, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1487, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1487, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1487, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1487, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1487, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1487, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1487, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1487, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1487, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1487, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1487, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1487, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1487, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1487, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1487, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1487, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1487, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1487, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1487, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1487, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1487, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1487, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1487, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1487, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1487, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1487, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1487, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1487, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1487, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1487, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1487, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1487, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1487, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1487, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1487, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1487, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1487, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1488, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1488, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1489, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1489, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1489, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1489, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1490, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1491, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1492, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1493, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1493, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1493, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1494, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1495, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1496, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1497, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1497, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1498, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1498, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1498, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1499, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1500, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1501, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1502, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1503, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1503, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1504, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1505, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1506, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1507, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1508, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1509, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1510, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1511, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1512, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1513, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1514, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1515, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1515, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1516, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1517, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1518, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1519, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1520, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1521, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1522, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1523, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1524, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1525, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1526, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1526, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1527, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1528, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1529, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1530, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1530, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1530, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1531, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1531, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1532, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1532, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1533, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1533, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1534, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1534, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1535, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1536, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1537, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1538, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1539, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1540, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1541, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1542, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1543, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1544, "torch.nn.ZeroPad3d"]], "sdpbackend (class in torch.nn.attention)": [[1545, "torch.nn.attention.SDPBackend"]], "name (torch.nn.attention.sdpbackend property)": [[1545, "torch.nn.attention.SDPBackend.name"]], "causalbias (class in torch.nn.attention.bias)": [[1546, "torch.nn.attention.bias.CausalBias"]], "causalvariant (class in torch.nn.attention.bias)": [[1547, "torch.nn.attention.bias.CausalVariant"]], "causal_lower_right() (in module torch.nn.attention.bias)": [[1548, "torch.nn.attention.bias.causal_lower_right"]], "causal_upper_left() (in module torch.nn.attention.bias)": [[1549, "torch.nn.attention.bias.causal_upper_left"]], "sdpa_kernel() (in module torch.nn.attention)": [[1550, "torch.nn.attention.sdpa_kernel"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1556, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1557, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1558, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1559, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1560, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1561, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1562, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1563, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1564, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1565, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1566, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1567, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1568, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1569, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1570, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1571, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1572, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1573, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1574, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1575, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1576, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1577, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1578, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1579, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1580, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1581, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1582, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1583, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1584, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1585, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1586, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1587, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1588, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1589, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1590, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1591, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1592, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1593, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1594, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1595, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1596, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1597, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1598, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1599, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1600, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1601, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1602, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1603, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1604, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1605, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1606, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1607, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1608, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1609, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1610, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1611, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1612, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1613, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1614, "torch.nn.functional.lp_pool2d"]], "lp_pool3d() (in module torch.nn.functional)": [[1615, "torch.nn.functional.lp_pool3d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1616, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1617, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1618, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1619, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1620, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1621, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1622, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1623, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1624, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1625, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1626, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1627, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1628, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1629, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1630, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1631, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1632, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1633, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1634, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1635, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1636, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1637, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1638, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1639, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1640, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1641, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1642, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1643, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1644, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1645, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1646, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1647, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1648, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1649, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1650, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1651, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1652, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1653, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1654, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1655, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1656, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1657, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1658, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1659, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1660, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1661, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1662, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1663, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1664, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1665, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1665, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1665, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1666, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1667, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1668, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1669, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1670, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1671, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1672, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1673, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1674, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1674, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1674, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1674, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1674, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1675, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1676, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1677, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1677, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1678, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1679, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1680, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1681, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "convert_conv3d_weight_memory_format() (in module torch.nn.utils)": [[1682, "torch.nn.utils.convert_conv3d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1683, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1684, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1685, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1686, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1687, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1688, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1689, "torch.nn.utils.parametrizations.spectral_norm"]], "weight_norm() (in module torch.nn.utils.parametrizations)": [[1690, "torch.nn.utils.parametrizations.weight_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1691, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1691, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1692, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1693, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1694, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1695, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1696, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1696, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1696, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1696, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1696, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1696, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1697, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1697, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1697, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1697, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1697, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1698, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1698, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1698, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1698, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1698, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1699, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1699, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1699, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1699, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1699, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1700, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1700, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1700, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1700, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1700, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1700, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1701, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1701, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1701, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1701, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1701, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1701, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1701, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1702, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1702, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1702, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1702, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1702, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1702, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1703, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1703, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1703, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1703, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1703, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1704, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1705, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1706, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1707, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1708, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1709, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1710, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1711, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1712, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1713, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1714, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1715, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1715, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1715, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1715, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1715, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1715, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1715, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1715, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1715, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1715, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1716, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1717, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1718, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1719, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1720, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1721, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1722, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1723, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1724, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1725, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1726, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1727, "torch.no_grad"]], "nonzero() (in module torch)": [[1728, "torch.nonzero"]], "norm() (in module torch)": [[1729, "torch.norm"]], "normal() (in module torch)": [[1730, "torch.normal"]], "not_equal() (in module torch)": [[1731, "torch.not_equal"]], "numel() (in module torch)": [[1732, "torch.numel"]], "ones() (in module torch)": [[1733, "torch.ones"]], "ones_like() (in module torch)": [[1734, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1735, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1735, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1735, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1735, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1735, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1735, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1735, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1735, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1736, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1736, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1737, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1738, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1738, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1739, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1739, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1740, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1740, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1741, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1741, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1741, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1741, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1741, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1741, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1741, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1742, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1742, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1743, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1743, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1744, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1744, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1745, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1745, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1746, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1747, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1748, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1749, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1750, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1751, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1751, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1752, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1752, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1753, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1753, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1754, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1754, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1755, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1755, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1756, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1756, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1756, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1756, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1756, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1757, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1757, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1757, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1757, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1757, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1758, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1758, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1758, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1758, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1758, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1760, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1760, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1760, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1760, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1761, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1761, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1761, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1761, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1761, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1762, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1762, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1762, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1762, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1762, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1763, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1763, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1763, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1763, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1763, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1764, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1764, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1764, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1764, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1764, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1765, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1765, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1765, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1765, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1765, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1766, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1766, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1766, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1766, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1766, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1767, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1767, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1767, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1767, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1767, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1768, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1768, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1768, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1769, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1769, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1769, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1769, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1769, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1770, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1770, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1770, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1770, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1770, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1771, "torch.orgqr"]], "ormqr() (in module torch)": [[1772, "torch.ormqr"]], "outer() (in module torch)": [[1773, "torch.outer"]], "pca_lowrank() (in module torch)": [[1774, "torch.pca_lowrank"]], "permute() (in module torch)": [[1775, "torch.permute"]], "pinverse() (in module torch)": [[1776, "torch.pinverse"]], "poisson() (in module torch)": [[1777, "torch.poisson"]], "polar() (in module torch)": [[1778, "torch.polar"]], "polygamma() (in module torch)": [[1779, "torch.polygamma"]], "positive() (in module torch)": [[1780, "torch.positive"]], "pow() (in module torch)": [[1781, "torch.pow"]], "prod() (in module torch)": [[1782, "torch.prod"]], "promote_types() (in module torch)": [[1783, "torch.promote_types"]], "qr() (in module torch)": [[1784, "torch.qr"]], "quantile() (in module torch)": [[1785, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1786, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1787, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1788, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1789, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1790, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1791, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1791, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1791, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1791, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1791, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1792, "torch.rad2deg"]], "rand() (in module torch)": [[1793, "torch.rand"]], "rand_like() (in module torch)": [[1794, "torch.rand_like"]], "randint() (in module torch)": [[1795, "torch.randint"]], "randint_like() (in module torch)": [[1796, "torch.randint_like"]], "randn() (in module torch)": [[1797, "torch.randn"]], "randn_like() (in module torch)": [[1798, "torch.randn_like"]], "randperm() (in module torch)": [[1799, "torch.randperm"]], "range() (in module torch)": [[1800, "torch.range"]], "ravel() (in module torch)": [[1801, "torch.ravel"]], "real() (in module torch)": [[1802, "torch.real"]], "reciprocal() (in module torch)": [[1803, "torch.reciprocal"]], "remainder() (in module torch)": [[1804, "torch.remainder"]], "renorm() (in module torch)": [[1805, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1806, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1807, "torch.reshape"]], "resolve_conj() (in module torch)": [[1808, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1809, "torch.resolve_neg"]], "result_type() (in module torch)": [[1810, "torch.result_type"]], "roll() (in module torch)": [[1811, "torch.roll"]], "rot90() (in module torch)": [[1812, "torch.rot90"]], "round() (in module torch)": [[1813, "torch.round"]], "row_stack() (in module torch)": [[1814, "torch.row_stack"]], "rsqrt() (in module torch)": [[1815, "torch.rsqrt"]], "save() (in module torch)": [[1816, "torch.save"]], "scatter() (in module torch)": [[1817, "torch.scatter"]], "scatter_add() (in module torch)": [[1818, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1819, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1820, "torch.searchsorted"]], "seed() (in module torch)": [[1821, "torch.seed"]], "select() (in module torch)": [[1822, "torch.select"]], "select_scatter() (in module torch)": [[1823, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1824, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1825, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1826, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1827, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1828, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1829, "torch.set_flush_denormal"]], "set_num_interop_threads() (in module torch)": [[1830, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1831, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1832, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1833, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1834, "torch.set_warn_always"]], "sgn() (in module torch)": [[1835, "torch.sgn"]], "sigmoid() (in module torch)": [[1836, "torch.sigmoid"]], "sign() (in module torch)": [[1837, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1838, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1839, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1840, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1841, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1842, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1843, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1844, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1845, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1846, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1847, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1848, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1849, "torch.signbit"]], "sin() (in module torch)": [[1850, "torch.sin"]], "sinc() (in module torch)": [[1851, "torch.sinc"]], "sinh() (in module torch)": [[1852, "torch.sinh"]], "slice_scatter() (in module torch)": [[1853, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1854, "torch.slogdet"]], "smm() (in module torch)": [[1855, "torch.smm"]], "softmax() (in module torch)": [[1856, "torch.softmax"]], "sort() (in module torch)": [[1857, "torch.sort"]], "addmm() (in module torch.sparse)": [[1858, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1859, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1860, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1860, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1860, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1860, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1861, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1862, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1863, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1864, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1865, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1866, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1867, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1868, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1869, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1870, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1871, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1872, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1873, "torch.split"]], "sqrt() (in module torch)": [[1874, "torch.sqrt"]], "square() (in module torch)": [[1875, "torch.square"]], "squeeze() (in module torch)": [[1876, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1877, "torch.sspaddmm"]], "stack() (in module torch)": [[1878, "torch.stack"]], "std() (in module torch)": [[1879, "torch.std"]], "std_mean() (in module torch)": [[1880, "torch.std_mean"]], "stft() (in module torch)": [[1881, "torch.stft"]], "sub() (in module torch)": [[1882, "torch.sub"]], "subtract() (in module torch)": [[1883, "torch.subtract"]], "sum() (in module torch)": [[1884, "torch.sum"]], "svd() (in module torch)": [[1885, "torch.svd"]], "svd_lowrank() (in module torch)": [[1886, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1887, "torch.swapaxes"]], "swapdims() (in module torch)": [[1888, "torch.swapdims"]], "sym_float() (in module torch)": [[1889, "torch.sym_float"]], "sym_int() (in module torch)": [[1890, "torch.sym_int"]], "sym_ite() (in module torch)": [[1891, "torch.sym_ite"]], "sym_max() (in module torch)": [[1892, "torch.sym_max"]], "sym_min() (in module torch)": [[1893, "torch.sym_min"]], "sym_not() (in module torch)": [[1894, "torch.sym_not"]], "t() (in module torch)": [[1895, "torch.t"]], "take() (in module torch)": [[1896, "torch.take"]], "take_along_dim() (in module torch)": [[1897, "torch.take_along_dim"]], "tan() (in module torch)": [[1898, "torch.tan"]], "tanh() (in module torch)": [[1899, "torch.tanh"]], "tensor() (in module torch)": [[1900, "torch.tensor"]], "tensor_split() (in module torch)": [[1901, "torch.tensor_split"]], "tensordot() (in module torch)": [[1902, "torch.tensordot"]], "tile() (in module torch)": [[1903, "torch.tile"]], "topk() (in module torch)": [[1904, "torch.topk"]], "trace() (in module torch)": [[1905, "torch.trace"]], "transpose() (in module torch)": [[1906, "torch.transpose"]], "trapezoid() (in module torch)": [[1907, "torch.trapezoid"]], "trapz() (in module torch)": [[1908, "torch.trapz"]], "triangular_solve() (in module torch)": [[1909, "torch.triangular_solve"]], "tril() (in module torch)": [[1910, "torch.tril"]], "tril_indices() (in module torch)": [[1911, "torch.tril_indices"]], "triu() (in module torch)": [[1912, "torch.triu"]], "triu_indices() (in module torch)": [[1913, "torch.triu_indices"]], "true_divide() (in module torch)": [[1914, "torch.true_divide"]], "trunc() (in module torch)": [[1915, "torch.trunc"]], "unbind() (in module torch)": [[1916, "torch.unbind"]], "unflatten() (in module torch)": [[1917, "torch.unflatten"]], "unique() (in module torch)": [[1918, "torch.unique"]], "unique_consecutive() (in module torch)": [[1919, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1920, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1921, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1922, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1923, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1924, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1925, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1926, "torch.utils.set_module"]], "swap_tensors() (in module torch.utils)": [[1927, "torch.utils.swap_tensors"]], "vander() (in module torch)": [[1928, "torch.vander"]], "var() (in module torch)": [[1929, "torch.var"]], "var_mean() (in module torch)": [[1930, "torch.var_mean"]], "vdot() (in module torch)": [[1931, "torch.vdot"]], "view_as_complex() (in module torch)": [[1932, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1933, "torch.view_as_real"]], "vmap() (in module torch)": [[1934, "torch.vmap"]], "vsplit() (in module torch)": [[1935, "torch.vsplit"]], "vstack() (in module torch)": [[1936, "torch.vstack"]], "where() (in module torch)": [[1937, "torch.where"]], "xlogy() (in module torch)": [[1938, "torch.xlogy"]], "current_device() (in module torch.xpu)": [[1939, "torch.xpu.current_device"]], "device (class in torch.xpu)": [[1940, "torch.xpu.device"]], "device_count() (in module torch.xpu)": [[1941, "torch.xpu.device_count"]], "device_of (class in torch.xpu)": [[1942, "torch.xpu.device_of"]], "get_device_capability() (in module torch.xpu)": [[1943, "torch.xpu.get_device_capability"]], "get_device_name() (in module torch.xpu)": [[1944, "torch.xpu.get_device_name"]], "get_device_properties() (in module torch.xpu)": [[1945, "torch.xpu.get_device_properties"]], "is_available() (in module torch.xpu)": [[1946, "torch.xpu.is_available"]], "set_device() (in module torch.xpu)": [[1947, "torch.xpu.set_device"]], "zeros() (in module torch)": [[1948, "torch.zeros"]], "zeros_like() (in module torch)": [[1949, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1950, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1950, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1950, "torch.hub.help"]], "list() (in module torch.hub)": [[1950, "torch.hub.list"]], "load() (in module torch.hub)": [[1950, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1950, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1950, "torch.hub.set_dir"]], "torch.hub": [[1950, "module-torch.hub"]], "pytorch_jit": [[1952, "envvar-PYTORCH_JIT"]], "environment variable": [[1952, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1952, "torch.jit.export"]], "torch.jit": [[1952, "module-torch.jit"]], "torch.jit.annotations": [[1952, "module-torch.jit.annotations"]], "torch.jit.frontend": [[1952, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[1952, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[1952, "module-torch.jit.mobile"]], "torch.jit.quantized": [[1952, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[1953, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1954, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1954, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1957, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1958, "module-torch.utils.jit"]], "library (class in torch.library)": [[1959, "torch.library.Library"]], "define() (in module torch.library)": [[1959, "torch.library.define"]], "define() (torch.library.library method)": [[1959, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1959, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[1959, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[1959, "torch.library.impl"]], "impl() (torch.library.library method)": [[1959, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[1959, "torch.library.impl_abstract"]], "torch.library": [[1959, "module-torch.library"]], "torch.linalg": [[1960, "module-torch.linalg"]], "torch._logging": [[1961, "module-torch._logging"]], "torch.masked": [[1962, "module-torch.masked"]], "torch.masked.maskedtensor": [[1962, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[1962, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[1962, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[1962, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[1962, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[1962, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[1962, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1964, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1965, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1965, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1966, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1966, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1966, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1966, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1966, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1966, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1966, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1966, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1966, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1966, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1966, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1966, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1966, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1966, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1966, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1966, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1966, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1966, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1966, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1966, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1966, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1967, "module-torch.mps"]], "torch.mps.event": [[1967, "module-torch.mps.event"]], "torch.mps.profiler": [[1967, "module-torch.mps.profiler"]], "spawncontext (class in torch.multiprocessing)": [[1968, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1968, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1968, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1968, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1968, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[1968, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[1968, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[1968, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[1968, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[1968, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[1968, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[1970, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1970, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1970, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1970, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1970, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1970, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1971, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1971, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1971, "torch.nested.to_padded_tensor"]], "torch.nested": [[1971, "module-torch.nested"]], "torch.nn": [[1972, "module-torch.nn"]], "torch.nn.backends": [[1972, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[1972, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[1972, "module-torch.nn.common_types"]], "torch.nn.cpp": [[1972, "module-torch.nn.cpp"]], "torch.nn.functional": [[1972, "module-torch.nn.functional"]], "torch.nn.grad": [[1972, "module-torch.nn.grad"]], "torch.nn.init": [[1972, "module-torch.nn.init"]], "torch.nn.modules": [[1972, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[1972, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[1972, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[1972, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[1972, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[1972, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[1972, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[1972, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[1972, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[1972, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[1972, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[1972, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[1972, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[1972, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[1972, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[1972, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[1972, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[1972, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[1972, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[1972, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[1972, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[1972, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[1972, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[1972, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[1972, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[1972, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[1972, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.data_parallel": [[1972, "module-torch.nn.parallel.data_parallel"]], "torch.nn.parallel.distributed": [[1972, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[1972, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[1972, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[1972, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[1972, "module-torch.nn.parameter"]], "torch.nn.utils": [[1972, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[1972, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[1972, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[1972, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[1972, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[1972, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[1972, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[1972, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[1972, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[1972, "module-torch.nn.utils.rnn"]], "torch.nn.utils.spectral_norm": [[1972, "module-torch.nn.utils.spectral_norm"]], "torch.nn.utils.stateless": [[1972, "module-torch.nn.utils.stateless"]], "torch.nn.utils.weight_norm": [[1972, "module-torch.nn.utils.weight_norm"]], "torch.nn.attention": [[1973, "module-torch.nn.attention"]], "torch.nn.attention.bias": [[1974, "module-torch.nn.attention.bias"]], "calculate_gain() (in module torch.nn.init)": [[1976, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1976, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1976, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1976, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1976, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1976, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1976, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1976, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1976, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1976, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1976, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1976, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1976, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1976, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1976, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1995, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1995, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1995, "torch.serialization.set_default_load_endianness"]], "torch.onnx.errors": [[1997, "module-torch.onnx.errors"]], "torch.onnx.operators": [[1997, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[1997, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[1997, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[1997, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[1997, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[1997, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[1997, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[1997, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[1997, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[1997, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[1997, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[1997, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset7": [[1997, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[1997, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[1997, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[1997, "module-torch.onnx.utils"]], "torch.onnx.verification": [[1997, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[1998, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1998, "torch.onnx.ExportOptions"]], "invalidexportoptionserror (class in torch.onnx)": [[1998, "torch.onnx.InvalidExportOptionsError"]], "onnxprogram (class in torch.onnx)": [[1998, "torch.onnx.ONNXProgram"]], "onnxprogramserializer (class in torch.onnx)": [[1998, "torch.onnx.ONNXProgramSerializer"]], "onnxruntimeoptions (class in torch.onnx)": [[1998, "torch.onnx.ONNXRuntimeOptions"]], "onnxexportererror (class in torch.onnx)": [[1998, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1998, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.onnxprogram method)": [[1998, "torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.onnxprogram method)": [[1998, "torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.onnxprogram property)": [[1998, "torch.onnx.ONNXProgram.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[1998, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1998, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.onnxprogram property)": [[1998, "torch.onnx.ONNXProgram.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1998, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1998, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.onnxprogram property)": [[1998, "torch.onnx.ONNXProgram.model_proto"]], "model_signature (torch.onnx.onnxprogram property)": [[1998, "torch.onnx.ONNXProgram.model_signature"]], "opset_version (torch.onnx.onnxregistry property)": [[1998, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1998, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.onnxprogram method)": [[1998, "torch.onnx.ONNXProgram.save"]], "save_diagnostics() (torch.onnx.onnxprogram method)": [[1998, "torch.onnx.ONNXProgram.save_diagnostics"]], "serialize() (torch.onnx.onnxprogramserializer method)": [[1998, "torch.onnx.ONNXProgramSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[1999, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[2000, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[2000, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[2000, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[2000, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[2000, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[2000, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[2000, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[2000, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[2000, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[2000, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[2002, "torch.optim.Optimizer"]], "torch.optim": [[2002, "module-torch.optim"]], "torch.optim.adadelta": [[2002, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[2002, "module-torch.optim.adagrad"]], "torch.optim.adam": [[2002, "module-torch.optim.adam"]], "torch.optim.adamax": [[2002, "module-torch.optim.adamax"]], "torch.optim.adamw": [[2002, "module-torch.optim.adamw"]], "torch.optim.asgd": [[2002, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[2002, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[2002, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[2002, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[2002, "module-torch.optim.optimizer"]], "torch.optim.radam": [[2002, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[2002, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[2002, "module-torch.optim.rprop"]], "torch.optim.sgd": [[2002, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[2002, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[2002, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[2003, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[2003, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[2003, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[2003, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[2003, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[2003, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[2003, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[2003, "torch.package.PackageExporter.save_text"]], "torch.package": [[2003, "module-torch.package"]], "torch.package.analyze": [[2003, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[2003, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[2003, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[2003, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[2003, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[2003, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[2003, "module-torch.package.glob_group"]], "torch.package.importer": [[2003, "module-torch.package.importer"]], "torch.package.package_exporter": [[2003, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[2003, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[2004, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[2004, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[2004, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2004, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[2004, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2004, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[2005, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[2005, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[2005, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[2005, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[2005, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[2005, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[2005, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[2005, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[2005, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[2005, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[2005, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[2005, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[2005, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[2005, "module-torch.profiler"]], "torch.profiler.itt": [[2005, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[2005, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[2005, "module-torch.profiler.python_tracer"]], "torch.ao": [[2006, "module-torch.ao"]], "torch.ao.nn": [[2006, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[2006, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[2006, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[2006, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[2006, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2006, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[2006, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[2006, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[2006, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[2006, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[2006, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[2006, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[2006, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[2006, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[2006, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[2006, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[2006, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[2006, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[2006, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[2006, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[2006, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[2006, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[2006, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[2006, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[2006, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[2006, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[2006, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[2006, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[2006, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[2006, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[2006, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[2006, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[2006, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[2006, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[2006, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[2006, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[2006, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[2006, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[2006, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[2006, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[2006, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[2006, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[2006, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[2006, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[2006, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[2006, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[2006, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[2006, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[2006, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[2006, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[2006, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[2006, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[2006, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[2006, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[2006, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[2006, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[2006, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[2006, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[2006, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[2006, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[2006, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2006, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[2006, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[2006, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[2006, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[2006, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[2006, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[2006, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[2006, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[2006, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[2006, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[2006, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[2006, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[2006, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[2006, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[2006, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[2006, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[2006, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[2006, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[2006, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[2006, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[2006, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[2006, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[2006, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[2006, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[2006, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[2006, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[2006, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[2006, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[2006, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[2006, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[2006, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[2006, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[2006, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[2006, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[2006, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[2006, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[2006, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[2006, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.eval_utils": [[2006, "module-torch.ao.quantization.pt2e.eval_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[2006, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[2006, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[2006, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[2006, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[2006, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[2006, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[2006, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[2006, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[2006, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[2006, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize": [[2006, "module-torch.ao.quantization.quantize"]], "torch.ao.quantization.quantize_fx": [[2006, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[2006, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[2006, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[2006, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[2006, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[2006, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[2006, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[2006, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[2006, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[2006, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[2006, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[2006, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[2006, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[2006, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[2006, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[2006, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2006, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[2006, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[2006, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[2006, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[2006, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[2006, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[2006, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[2006, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[2006, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[2006, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[2006, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[2006, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[2006, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[2006, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[2006, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[2006, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[2006, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[2006, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[2006, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[2006, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[2006, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[2006, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[2006, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[2006, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[2006, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[2006, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[2006, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[2006, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[2006, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[2006, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[2006, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[2006, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[2006, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[2006, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[2006, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[2006, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[2006, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[2006, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[2006, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[2006, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[2006, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[2006, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[2006, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[2006, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[2006, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[2006, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[2009, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[2009, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[2009, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[2009, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[2009, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2009, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2009, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[2009, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[2009, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2009, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[2009, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[2009, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[2009, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[2009, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[2009, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[2009, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[2009, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.generate_numeric_debug_handle": [[2009, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"]], "torch.ao.quantization.pt2e.representation": [[2009, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[2009, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[2009, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[2009, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[2009, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[2009, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[2009, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[2009, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2009, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[2009, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[2009, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[2009, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[2009, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[2009, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[2009, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[2009, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[2009, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[2009, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[2009, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[2009, "module-torch.nn.quantized.modules"]], "torch.quantization": [[2009, "module-torch.quantization"]], "torch.quantization.fx": [[2009, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[2010, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[2010, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[2010, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[2010, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[2010, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[2010, "torch.random.set_rng_state"]], "torch.random": [[2010, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[2011, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[2011, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[2011, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[2011, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[2011, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[2011, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[2011, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[2011, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[2011, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2011, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[2011, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[2011, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[2011, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2011, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[2011, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2011, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[2011, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[2011, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[2011, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[2011, "module-torch.distributed.rpc"]], "torch.signal": [[2014, "module-torch.signal"]], "torch.signal.windows": [[2014, "module-torch.signal.windows"]], "torch.sparse": [[2015, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[2016, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[2016, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[2016, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[2016, "torch.special.digamma"]], "entr() (in module torch.special)": [[2016, "torch.special.entr"]], "erf() (in module torch.special)": [[2016, "torch.special.erf"]], "erfc() (in module torch.special)": [[2016, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[2016, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[2016, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[2016, "torch.special.exp2"]], "expit() (in module torch.special)": [[2016, "torch.special.expit"]], "expm1() (in module torch.special)": [[2016, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[2016, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[2016, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[2016, "torch.special.gammaln"]], "i0() (in module torch.special)": [[2016, "torch.special.i0"]], "i0e() (in module torch.special)": [[2016, "torch.special.i0e"]], "i1() (in module torch.special)": [[2016, "torch.special.i1"]], "i1e() (in module torch.special)": [[2016, "torch.special.i1e"]], "log1p() (in module torch.special)": [[2016, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[2016, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[2016, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[2016, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[2016, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[2016, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[2016, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[2016, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[2016, "torch.special.polygamma"]], "psi() (in module torch.special)": [[2016, "torch.special.psi"]], "round() (in module torch.special)": [[2016, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[2016, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[2016, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[2016, "torch.special.sinc"]], "softmax() (in module torch.special)": [[2016, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[2016, "torch.special.spherical_bessel_j0"]], "torch.special": [[2016, "module-torch.special"]], "xlog1py() (in module torch.special)": [[2016, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[2016, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[2016, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[2017, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[2017, "torch.BoolStorage"]], "bytestorage (class in torch)": [[2017, "torch.ByteStorage"]], "charstorage (class in torch)": [[2017, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[2017, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[2017, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[2017, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[2017, "torch.FloatStorage"]], "halfstorage (class in torch)": [[2017, "torch.HalfStorage"]], "intstorage (class in torch)": [[2017, "torch.IntStorage"]], "longstorage (class in torch)": [[2017, "torch.LongStorage"]], "qint32storage (class in torch)": [[2017, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[2017, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[2017, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[2017, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[2017, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[2017, "torch.ShortStorage"]], "typedstorage (class in torch)": [[2017, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[2017, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[2017, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[2017, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[2017, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[2017, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[2017, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[2017, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[2017, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[2017, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[2017, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[2017, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[2017, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[2017, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[2017, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[2017, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[2017, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[2017, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[2017, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[2017, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[2017, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[2017, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[2017, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[2017, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[2017, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[2017, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[2017, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[2017, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[2017, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[2017, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[2017, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[2017, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[2017, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[2017, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[2017, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[2017, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[2017, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[2017, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[2017, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[2017, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e4m3fnuz() (torch.typedstorage method)": [[2017, "torch.TypedStorage.float8_e4m3fnuz"]], "float8_e4m3fnuz() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.float8_e4m3fnuz"]], "float8_e5m2() (torch.typedstorage method)": [[2017, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.float8_e5m2"]], "float8_e5m2fnuz() (torch.typedstorage method)": [[2017, "torch.TypedStorage.float8_e5m2fnuz"]], "float8_e5m2fnuz() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.float8_e5m2fnuz"]], "from_buffer() (torch.typedstorage class method)": [[2017, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[2017, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[2017, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[2017, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[2017, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[2017, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[2017, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[2017, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[2017, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[2017, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[2017, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[2017, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[2017, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[2017, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[2017, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[2017, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[2017, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[2017, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[2017, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[2017, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[2017, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.pin_memory"]], "resizable() (torch.typedstorage method)": [[2017, "torch.TypedStorage.resizable"]], "resizable() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.resizable"]], "resize_() (torch.typedstorage method)": [[2017, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[2017, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[2017, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[2017, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[2017, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[2017, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[2017, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[2017, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[2018, "torch.device"]], "dtype (class in torch)": [[2018, "torch.dtype"]], "layout (class in torch)": [[2018, "torch.layout"]], "memory_format (class in torch)": [[2018, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[2020, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[2020, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[2021, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[2021, "torch.Tensor.T"]], "tensor (class in torch)": [[2021, "torch.Tensor"]], "mh (torch.tensor attribute)": [[2021, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[2021, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[2022, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[2022, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[2022, "torch.testing.make_tensor"]], "torch.testing": [[2022, "module-torch.testing"]], "symbool (class in torch)": [[2023, "torch.SymBool"]], "symfloat (class in torch)": [[2023, "torch.SymFloat"]], "symint (class in torch)": [[2023, "torch.SymInt"]], "tag (class in torch)": [[2023, "torch.Tag"]], "default_generator (torch.torch attribute)": [[2023, "torch.torch.default_generator"]], "is_integer() (torch.symfloat method)": [[2023, "torch.SymFloat.is_integer"]], "name (torch.tag property)": [[2023, "torch.Tag.name"]], "torch": [[2023, "module-torch"]], "torch.contrib": [[2023, "module-torch.contrib"]], "torch.functional": [[2023, "module-torch.functional"]], "torch.quasirandom": [[2023, "module-torch.quasirandom"]], "torch.return_types": [[2023, "module-torch.return_types"]], "torch.serialization": [[2023, "module-torch.serialization"]], "torch.signal.windows.windows": [[2023, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[2023, "module-torch.sparse.semi_structured"]], "torch.storage": [[2023, "module-torch.storage"]], "torch.torch_version": [[2023, "module-torch.torch_version"]], "torch.types": [[2023, "module-torch.types"]], "torch.utils.backcompat": [[2023, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[2023, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[2023, "module-torch.utils.model_dump"]], "torch.utils.viz": [[2023, "module-torch.utils.viz"]], "torch.version": [[2023, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[2024, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[2024, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[2024, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2024, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[2024, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[2024, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[2025, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[2025, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[2025, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[2025, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[2025, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[2025, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2025, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[2025, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[2028, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[2046, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[2046, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[2046, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[2046, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[2046, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[2046, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[2046, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[2046, "torch.overrides.resolve_name"]], "torch.overrides": [[2046, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[2046, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[2047, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[2047, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[2047, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[2048, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[2048, "torch.torch.iinfo"]], "torch.utils": [[2049, "module-torch.utils"]], "torch.utils.backend_registration": [[2049, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[2049, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[2049, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[2049, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[2049, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[2049, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[2049, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[2049, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[2049, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[2049, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[2049, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[2049, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[2049, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[2049, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[2049, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[2049, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[2049, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[2049, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[2049, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[2049, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[2049, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[2049, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[2049, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[2049, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[2049, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[2049, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[2049, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[2049, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[2049, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[2049, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[2049, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[2049, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[2049, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[2049, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[2049, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[2049, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[2049, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[2049, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[2049, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[2049, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[2049, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[2049, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[2049, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[2049, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[2049, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[2049, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[2049, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[2049, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[2049, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[2049, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[2049, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[2049, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[2049, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[2049, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[2049, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[2049, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[2049, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[2049, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[2049, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[2049, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[2049, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[2049, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[2049, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[2049, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[2049, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[2049, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[2049, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[2049, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[2049, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[2049, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[2049, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[2049, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[2049, "module-torch.utils.weak"]], "torch.xpu": [[2050, "module-torch.xpu"]]}})